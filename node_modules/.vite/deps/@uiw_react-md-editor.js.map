{
  "version": 3,
  "sources": ["../../parse-numeric-range/index.js", "../../boolbase/index.js", "../../@babel/runtime/helpers/esm/extends.js", "../../@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js", "../../@uiw/react-md-editor/esm/Editor.js", "../../@uiw/react-markdown-preview/esm/index.js", "../../hast-util-to-string/lib/index.js", "../../unist-util-filter/lib/index.js", "../../refractor/lang/clike.js", "../../refractor/lang/c.js", "../../refractor/lang/cpp.js", "../../refractor/lang/arduino.js", "../../refractor/lang/bash.js", "../../refractor/lang/csharp.js", "../../refractor/lang/markup.js", "../../refractor/lang/css.js", "../../refractor/lang/diff.js", "../../refractor/lang/go.js", "../../refractor/lang/ini.js", "../../refractor/lang/java.js", "../../refractor/lang/regex.js", "../../refractor/lang/javascript.js", "../../refractor/lang/json.js", "../../refractor/lang/kotlin.js", "../../refractor/lang/less.js", "../../refractor/lang/lua.js", "../../refractor/lang/makefile.js", "../../refractor/lang/yaml.js", "../../refractor/lang/markdown.js", "../../refractor/lang/objectivec.js", "../../refractor/lang/perl.js", "../../refractor/lang/markup-templating.js", "../../refractor/lang/php.js", "../../refractor/lang/python.js", "../../refractor/lang/r.js", "../../refractor/lang/ruby.js", "../../refractor/lang/rust.js", "../../refractor/lang/sass.js", "../../refractor/lang/scss.js", "../../refractor/lang/sql.js", "../../refractor/lang/swift.js", "../../refractor/lang/typescript.js", "../../refractor/lang/basic.js", "../../refractor/lang/vbnet.js", "../../refractor/node_modules/hast-util-parse-selector/lib/index.js", "../../refractor/node_modules/hastscript/lib/core.js", "../../refractor/node_modules/hastscript/lib/html.js", "../../refractor/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js", "../../refractor/node_modules/hastscript/lib/svg.js", "../../character-entities-legacy/index.js", "../../character-reference-invalid/index.js", "../../is-decimal/index.js", "../../is-hexadecimal/index.js", "../../is-alphabetical/index.js", "../../is-alphanumerical/index.js", "../../parse-entities/lib/index.js", "../../refractor/lib/prism-core.js", "../../refractor/lib/core.js", "../../refractor/lib/common.js", "../../refractor/lang/abap.js", "../../refractor/lang/abnf.js", "../../refractor/lang/actionscript.js", "../../refractor/lang/ada.js", "../../refractor/lang/agda.js", "../../refractor/lang/al.js", "../../refractor/lang/antlr4.js", "../../refractor/lang/apacheconf.js", "../../refractor/lang/apex.js", "../../refractor/lang/apl.js", "../../refractor/lang/applescript.js", "../../refractor/lang/aql.js", "../../refractor/lang/arff.js", "../../refractor/lang/armasm.js", "../../refractor/lang/arturo.js", "../../refractor/lang/asciidoc.js", "../../refractor/lang/aspnet.js", "../../refractor/lang/asm6502.js", "../../refractor/lang/asmatmel.js", "../../refractor/lang/autohotkey.js", "../../refractor/lang/autoit.js", "../../refractor/lang/avisynth.js", "../../refractor/lang/avro-idl.js", "../../refractor/lang/awk.js", "../../refractor/lang/batch.js", "../../refractor/lang/bbcode.js", "../../refractor/lang/bbj.js", "../../refractor/lang/bicep.js", "../../refractor/lang/birb.js", "../../refractor/lang/bison.js", "../../refractor/lang/bnf.js", "../../refractor/lang/bqn.js", "../../refractor/lang/brainfuck.js", "../../refractor/lang/brightscript.js", "../../refractor/lang/bro.js", "../../refractor/lang/bsl.js", "../../refractor/lang/cfscript.js", "../../refractor/lang/chaiscript.js", "../../refractor/lang/cil.js", "../../refractor/lang/cilkc.js", "../../refractor/lang/cilkcpp.js", "../../refractor/lang/clojure.js", "../../refractor/lang/cmake.js", "../../refractor/lang/cobol.js", "../../refractor/lang/coffeescript.js", "../../refractor/lang/concurnas.js", "../../refractor/lang/csp.js", "../../refractor/lang/cooklang.js", "../../refractor/lang/coq.js", "../../refractor/lang/crystal.js", "../../refractor/lang/css-extras.js", "../../refractor/lang/csv.js", "../../refractor/lang/cue.js", "../../refractor/lang/cypher.js", "../../refractor/lang/d.js", "../../refractor/lang/dart.js", "../../refractor/lang/dataweave.js", "../../refractor/lang/dax.js", "../../refractor/lang/dhall.js", "../../refractor/lang/django.js", "../../refractor/lang/dns-zone-file.js", "../../refractor/lang/docker.js", "../../refractor/lang/dot.js", "../../refractor/lang/ebnf.js", "../../refractor/lang/editorconfig.js", "../../refractor/lang/eiffel.js", "../../refractor/lang/ejs.js", "../../refractor/lang/elixir.js", "../../refractor/lang/elm.js", "../../refractor/lang/etlua.js", "../../refractor/lang/erb.js", "../../refractor/lang/erlang.js", "../../refractor/lang/excel-formula.js", "../../refractor/lang/fsharp.js", "../../refractor/lang/factor.js", "../../refractor/lang/false.js", "../../refractor/lang/firestore-security-rules.js", "../../refractor/lang/flow.js", "../../refractor/lang/fortran.js", "../../refractor/lang/ftl.js", "../../refractor/lang/gml.js", "../../refractor/lang/gap.js", "../../refractor/lang/gcode.js", "../../refractor/lang/gdscript.js", "../../refractor/lang/gedcom.js", "../../refractor/lang/gettext.js", "../../refractor/lang/gherkin.js", "../../refractor/lang/git.js", "../../refractor/lang/glsl.js", "../../refractor/lang/gn.js", "../../refractor/lang/linker-script.js", "../../refractor/lang/go-module.js", "../../refractor/lang/gradle.js", "../../refractor/lang/graphql.js", "../../refractor/lang/groovy.js", "../../refractor/lang/textile.js", "../../refractor/lang/haml.js", "../../refractor/lang/handlebars.js", "../../refractor/lang/haskell.js", "../../refractor/lang/haxe.js", "../../refractor/lang/hcl.js", "../../refractor/lang/hlsl.js", "../../refractor/lang/hoon.js", "../../refractor/lang/hpkp.js", "../../refractor/lang/hsts.js", "../../refractor/lang/uri.js", "../../refractor/lang/http.js", "../../refractor/lang/ichigojam.js", "../../refractor/lang/icon.js", "../../refractor/lang/icu-message-format.js", "../../refractor/lang/idris.js", "../../refractor/lang/ignore.js", "../../refractor/lang/inform7.js", "../../refractor/lang/io.js", "../../refractor/lang/j.js", "../../refractor/lang/javadoclike.js", "../../refractor/lang/scala.js", "../../refractor/lang/javadoc.js", "../../refractor/lang/javastacktrace.js", "../../refractor/lang/jexl.js", "../../refractor/lang/jolie.js", "../../refractor/lang/jq.js", "../../refractor/lang/js-templates.js", "../../refractor/lang/jsdoc.js", "../../refractor/lang/n4js.js", "../../refractor/lang/js-extras.js", "../../refractor/lang/json5.js", "../../refractor/lang/jsonp.js", "../../refractor/lang/jsstacktrace.js", "../../refractor/lang/julia.js", "../../refractor/lang/keepalived.js", "../../refractor/lang/keyman.js", "../../refractor/lang/kumir.js", "../../refractor/lang/kusto.js", "../../refractor/lang/latex.js", "../../refractor/lang/latte.js", "../../refractor/lang/scheme.js", "../../refractor/lang/lilypond.js", "../../refractor/lang/liquid.js", "../../refractor/lang/lisp.js", "../../refractor/lang/livescript.js", "../../refractor/lang/llvm.js", "../../refractor/lang/log.js", "../../refractor/lang/lolcode.js", "../../refractor/lang/magma.js", "../../refractor/lang/mata.js", "../../refractor/lang/matlab.js", "../../refractor/lang/maxscript.js", "../../refractor/lang/mel.js", "../../refractor/lang/mermaid.js", "../../refractor/lang/metafont.js", "../../refractor/lang/mizar.js", "../../refractor/lang/mongodb.js", "../../refractor/lang/monkey.js", "../../refractor/lang/moonscript.js", "../../refractor/lang/n1ql.js", "../../refractor/lang/nand2tetris-hdl.js", "../../refractor/lang/naniscript.js", "../../refractor/lang/nasm.js", "../../refractor/lang/neon.js", "../../refractor/lang/nevod.js", "../../refractor/lang/nginx.js", "../../refractor/lang/nim.js", "../../refractor/lang/nix.js", "../../refractor/lang/nsis.js", "../../refractor/lang/ocaml.js", "../../refractor/lang/odin.js", "../../refractor/lang/opencl.js", "../../refractor/lang/openqasm.js", "../../refractor/lang/oz.js", "../../refractor/lang/parigp.js", "../../refractor/lang/parser.js", "../../refractor/lang/pascal.js", "../../refractor/lang/pascaligo.js", "../../refractor/lang/psl.js", "../../refractor/lang/pcaxis.js", "../../refractor/lang/peoplecode.js", "../../refractor/lang/phpdoc.js", "../../refractor/lang/php-extras.js", "../../refractor/lang/plant-uml.js", "../../refractor/lang/plsql.js", "../../refractor/lang/powerquery.js", "../../refractor/lang/powershell.js", "../../refractor/lang/processing.js", "../../refractor/lang/prolog.js", "../../refractor/lang/promql.js", "../../refractor/lang/properties.js", "../../refractor/lang/protobuf.js", "../../refractor/lang/stylus.js", "../../refractor/lang/twig.js", "../../refractor/lang/pug.js", "../../refractor/lang/puppet.js", "../../refractor/lang/pure.js", "../../refractor/lang/purebasic.js", "../../refractor/lang/purescript.js", "../../refractor/lang/qsharp.js", "../../refractor/lang/q.js", "../../refractor/lang/qml.js", "../../refractor/lang/qore.js", "../../refractor/lang/racket.js", "../../refractor/lang/cshtml.js", "../../refractor/lang/jsx.js", "../../refractor/lang/tsx.js", "../../refractor/lang/reason.js", "../../refractor/lang/rego.js", "../../refractor/lang/renpy.js", "../../refractor/lang/rescript.js", "../../refractor/lang/rest.js", "../../refractor/lang/rip.js", "../../refractor/lang/roboconf.js", "../../refractor/lang/robotframework.js", "../../refractor/lang/sas.js", "../../refractor/lang/shell-session.js", "../../refractor/lang/smali.js", "../../refractor/lang/smalltalk.js", "../../refractor/lang/smarty.js", "../../refractor/lang/sml.js", "../../refractor/lang/solidity.js", "../../refractor/lang/solution-file.js", "../../refractor/lang/soy.js", "../../refractor/lang/turtle.js", "../../refractor/lang/sparql.js", "../../refractor/lang/splunk-spl.js", "../../refractor/lang/sqf.js", "../../refractor/lang/squirrel.js", "../../refractor/lang/stan.js", "../../refractor/lang/stata.js", "../../refractor/lang/iecst.js", "../../refractor/lang/supercollider.js", "../../refractor/lang/systemd.js", "../../refractor/lang/t4-templating.js", "../../refractor/lang/t4-cs.js", "../../refractor/lang/t4-vb.js", "../../refractor/lang/tap.js", "../../refractor/lang/tcl.js", "../../refractor/lang/tt2.js", "../../refractor/lang/toml.js", "../../refractor/lang/tremor.js", "../../refractor/lang/typoscript.js", "../../refractor/lang/unrealscript.js", "../../refractor/lang/uorazor.js", "../../refractor/lang/v.js", "../../refractor/lang/vala.js", "../../refractor/lang/velocity.js", "../../refractor/lang/verilog.js", "../../refractor/lang/vhdl.js", "../../refractor/lang/vim.js", "../../refractor/lang/visual-basic.js", "../../refractor/lang/warpscript.js", "../../refractor/lang/wasm.js", "../../refractor/lang/web-idl.js", "../../refractor/lang/wgsl.js", "../../refractor/lang/wiki.js", "../../refractor/lang/wolfram.js", "../../refractor/lang/wren.js", "../../refractor/lang/xeora.js", "../../refractor/lang/xml-doc.js", "../../refractor/lang/xojo.js", "../../refractor/lang/xquery.js", "../../refractor/lang/yang.js", "../../refractor/lang/zig.js", "../../refractor/lib/all.js", "../../rehype-prism-plus/src/generator.js", "../../rehype-prism-plus/src/common.js", "../../rehype-prism-plus/src/all.js", "../../css-selector-parser/dist/mjs/indexes.js", "../../css-selector-parser/dist/mjs/pseudo-signatures.js", "../../css-selector-parser/dist/mjs/syntax-definitions.js", "../../css-selector-parser/dist/mjs/utils.js", "../../css-selector-parser/dist/mjs/parser.js", "../../css-selector-parser/dist/mjs/ast.js", "../../hast-util-select/lib/parse.js", "../../direction/index.js", "../../hast-util-select/lib/enter-state.js", "../../hast-util-select/lib/attribute.js", "../../hast-util-select/lib/class-name.js", "../../hast-util-select/lib/id.js", "../../hast-util-select/lib/name.js", "../../bcp-47-match/index.js", "../../hast-util-has-property/lib/index.js", "../../nth-check/lib/esm/parse.ts", "../../nth-check/lib/esm/compile.ts", "../../nth-check/lib/esm/index.ts", "../../hast-util-select/lib/pseudo.js", "../../hast-util-select/lib/test.js", "../../hast-util-select/lib/walk.js", "../../hast-util-select/lib/index.js", "../../rehype-rewrite/src/index.ts", "../../rehype-attr/src/utils.ts", "../../rehype-attr/src/index.ts", "../../hast-util-parse-selector/lib/index.js", "../../hastscript/lib/create-h.js", "../../hastscript/lib/svg-case-sensitive-tag-names.js", "../../hastscript/lib/index.js", "../../vfile-location/lib/index.js", "../../web-namespaces/index.js", "../../hast-util-from-parse5/lib/index.js", "../../hast-util-to-parse5/lib/index.js", "../../html-void-elements/index.js", "../../parse5/dist/common/unicode.js", "../../parse5/dist/common/error-codes.js", "../../parse5/dist/tokenizer/preprocessor.js", "../../parse5/dist/common/token.js", "../../entities/lib/esm/generated/generated/decode-data-html.ts", "../../entities/lib/esm/generated/generated/decode-data-xml.ts", "../../entities/lib/esm/decode_codepoint.ts", "../../entities/lib/esm/decode.ts", "../../parse5/dist/common/html.js", "../../parse5/dist/tokenizer/index.js", "../../parse5/dist/parser/open-element-stack.js", "../../parse5/dist/parser/formatting-element-list.js", "../../parse5/dist/tree-adapters/default.js", "../../parse5/dist/common/doctype.js", "../../parse5/dist/common/foreign-content.js", "../../parse5/dist/parser/index.js", "../../entities/lib/esm/escape.ts", "../../parse5/dist/serializer/index.js", "../../parse5/dist/index.js", "../../hast-util-raw/lib/index.js", "../../rehype-raw/lib/index.js", "../../@uiw/react-markdown-preview/esm/preview.js", "../../remark-github-blockquote-alert/src/index.ts", "../../@uiw/copy-to-clipboard/dist/copy-to-clipboard.esm.js", "../../@uiw/react-markdown-preview/esm/plugins/useCopied.js", "../../@uiw/react-markdown-preview/esm/plugins/reservedMeta.js", "../../@uiw/react-markdown-preview/esm/plugins/retrieveMeta.js", "../../github-slugger/regex.js", "../../github-slugger/index.js", "../../hast-util-heading-rank/lib/index.js", "../../rehype-slug/lib/index.js", "../../hast-util-is-element/lib/index.js", "../../rehype-autolink-headings/lib/index.js", "../../rehype-ignore/src/index.ts", "../../@uiw/react-markdown-preview/esm/nodes/octiconLink.js", "../../@uiw/react-markdown-preview/esm/nodes/copy.js", "../../@uiw/react-markdown-preview/esm/rehypePlugins.js", "../../@uiw/react-md-editor/esm/components/TextArea/index.js", "../../@uiw/react-md-editor/esm/Context.js", "../../@uiw/react-md-editor/esm/components/TextArea/shortcuts.js", "../../@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js", "../../@uiw/react-md-editor/esm/components/TextArea/Markdown.js", "../../hast-util-from-html/lib/errors.js", "../../hast-util-from-html/lib/index.js", "../../rehype-parse/lib/index.js", "../../stringify-entities/lib/core.js", "../../stringify-entities/lib/util/to-hexadecimal.js", "../../stringify-entities/lib/util/to-decimal.js", "../../character-entities-html4/index.js", "../../stringify-entities/lib/constant/dangerous.js", "../../stringify-entities/lib/util/to-named.js", "../../stringify-entities/lib/util/format-smart.js", "../../stringify-entities/lib/index.js", "../../hast-util-to-html/lib/handle/comment.js", "../../hast-util-to-html/lib/handle/doctype.js", "../../hast-util-to-html/lib/omission/util/siblings.js", "../../hast-util-to-html/lib/omission/omission.js", "../../hast-util-to-html/lib/omission/closing.js", "../../hast-util-to-html/lib/omission/opening.js", "../../hast-util-to-html/lib/handle/element.js", "../../hast-util-to-html/lib/handle/text.js", "../../hast-util-to-html/lib/handle/raw.js", "../../hast-util-to-html/lib/handle/root.js", "../../hast-util-to-html/lib/handle/index.js", "../../hast-util-to-html/lib/index.js", "../../rehype-stringify/lib/index.js", "../../rehype/index.js", "../../@uiw/react-md-editor/esm/components/TextArea/Textarea.js", "../../@uiw/react-md-editor/esm/commands/index.js", "../../@uiw/react-md-editor/esm/utils/InsertTextAtPosition.js", "../../@uiw/react-md-editor/esm/commands/bold.js", "../../@uiw/react-md-editor/esm/utils/markdownUtils.js", "../../@uiw/react-md-editor/esm/commands/code.js", "../../@uiw/react-md-editor/esm/commands/comment.js", "../../@uiw/react-md-editor/esm/commands/divider.js", "../../@uiw/react-md-editor/esm/commands/fullscreen.js", "../../@babel/runtime/helpers/esm/objectDestructuringEmpty.js", "../../@uiw/react-md-editor/esm/commands/group.js", "../../@uiw/react-md-editor/esm/commands/hr.js", "../../@uiw/react-md-editor/esm/commands/image.js", "../../@uiw/react-md-editor/esm/commands/italic.js", "../../@uiw/react-md-editor/esm/commands/link.js", "../../@uiw/react-md-editor/esm/commands/list.js", "../../@uiw/react-md-editor/esm/commands/preview.js", "../../@uiw/react-md-editor/esm/commands/quote.js", "../../@uiw/react-md-editor/esm/commands/strikeThrough.js", "../../@uiw/react-md-editor/esm/commands/title.js", "../../@uiw/react-md-editor/esm/commands/title1.js", "../../@uiw/react-md-editor/esm/commands/title2.js", "../../@uiw/react-md-editor/esm/commands/title3.js", "../../@uiw/react-md-editor/esm/commands/title4.js", "../../@uiw/react-md-editor/esm/commands/title5.js", "../../@uiw/react-md-editor/esm/commands/title6.js", "../../@uiw/react-md-editor/esm/commands/table.js", "../../@uiw/react-md-editor/esm/commands/issue.js", "../../@uiw/react-md-editor/esm/commands/help.js", "../../@uiw/react-md-editor/esm/components/TextArea/handleKeyDown.js", "../../@uiw/react-md-editor/esm/components/Toolbar/index.js", "../../@uiw/react-md-editor/esm/components/Toolbar/Child.js", "../../@uiw/react-md-editor/esm/components/DragBar/index.js", "../../@uiw/react-md-editor/esm/index.js"],
  "sourcesContent": ["/**\r\n * @param {string} string    The string to parse\r\n * @returns {Array<number>}  Returns an energetic array.\r\n */\r\nfunction parsePart(string) {\r\n  let res = [];\r\n  let m;\r\n\r\n  for (let str of string.split(\",\").map((str) => str.trim())) {\r\n    // just a number\r\n    if (/^-?\\d+$/.test(str)) {\r\n      res.push(parseInt(str, 10));\r\n    } else if (\r\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\r\n    ) {\r\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\r\n      let [_, lhs, sep, rhs] = m;\r\n\r\n      if (lhs && rhs) {\r\n        lhs = parseInt(lhs);\r\n        rhs = parseInt(rhs);\r\n        const incr = lhs < rhs ? 1 : -1;\r\n\r\n        // Make it inclusive by moving the right 'stop-point' away by one.\r\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\r\n\r\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nexports.default = parsePart;\r\nmodule.exports = parsePart;\r\n", "module.exports = {\r\n\ttrueFunc: function trueFunc(){\r\n\t\treturn true;\r\n\t},\r\n\tfalseFunc: function falseFunc(){\r\n\t\treturn false;\r\n\t}\r\n};", "function _extends() {\r\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\r\n    for (var e = 1; e < arguments.length; e++) {\r\n      var t = arguments[e];\r\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\r\n    }\r\n    return n;\r\n  }, _extends.apply(null, arguments);\r\n}\r\nexport { _extends as default };", "function _objectWithoutPropertiesLoose(r, e) {\r\n  if (null == r) return {};\r\n  var t = {};\r\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\r\n    if (e.includes(n)) continue;\r\n    t[n] = r[n];\r\n  }\r\n  return t;\r\n}\r\nexport { _objectWithoutPropertiesLoose as default };", "import _extends from \"@babel/runtime/helpers/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"prefixCls\", \"className\", \"value\", \"commands\", \"commandsFilter\", \"direction\", \"extraCommands\", \"height\", \"enableScroll\", \"visibleDragbar\", \"highlightEnable\", \"preview\", \"fullscreen\", \"overflow\", \"previewOptions\", \"textareaProps\", \"maxHeight\", \"minHeight\", \"autoFocus\", \"tabSize\", \"defaultTabEnable\", \"onChange\", \"onStatistics\", \"onHeightChange\", \"hideToolbar\", \"toolbarBottom\", \"components\", \"renderTextarea\"];\r\nimport React, { useEffect, useReducer, useMemo, useRef, useImperativeHandle } from 'react';\r\nimport MarkdownPreview from '@uiw/react-markdown-preview';\r\nimport TextArea from './components/TextArea';\r\nimport { ToolbarVisibility } from './components/Toolbar';\r\nimport DragBar from './components/DragBar';\r\nimport { getCommands, getExtraCommands, TextAreaCommandOrchestrator } from './commands';\r\nimport { reducer, EditorContext } from './Context';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nfunction setGroupPopFalse(data) {\r\n  if (data === void 0) {\r\n    data = {};\r\n  }\r\n  Object.keys(data).forEach(keyname => {\r\n    data[keyname] = false;\r\n  });\r\n  return data;\r\n}\r\nvar InternalMDEditor = /*#__PURE__*/React.forwardRef((props, ref) => {\r\n  var _ref = props || {},\r\n    {\r\n      prefixCls = 'w-md-editor',\r\n      className,\r\n      value: propsValue,\r\n      commands = getCommands(),\r\n      commandsFilter,\r\n      direction,\r\n      extraCommands = getExtraCommands(),\r\n      height = 200,\r\n      enableScroll = true,\r\n      visibleDragbar = typeof props.visiableDragbar === 'boolean' ? props.visiableDragbar : true,\r\n      highlightEnable = true,\r\n      preview: previewType = 'live',\r\n      fullscreen = false,\r\n      overflow = true,\r\n      previewOptions = {},\r\n      textareaProps,\r\n      maxHeight = 1200,\r\n      minHeight = 100,\r\n      autoFocus,\r\n      tabSize = 2,\r\n      defaultTabEnable = false,\r\n      onChange,\r\n      onStatistics,\r\n      onHeightChange,\r\n      hideToolbar,\r\n      toolbarBottom = false,\r\n      components,\r\n      renderTextarea\r\n    } = _ref,\r\n    other = _objectWithoutPropertiesLoose(_ref, _excluded);\r\n  var cmds = commands.map(item => commandsFilter ? commandsFilter(item, false) : item).filter(Boolean);\r\n  var extraCmds = extraCommands.map(item => commandsFilter ? commandsFilter(item, true) : item).filter(Boolean);\r\n  var [state, dispatch] = useReducer(reducer, {\r\n    markdown: propsValue,\r\n    preview: previewType,\r\n    components,\r\n    height,\r\n    minHeight,\r\n    highlightEnable,\r\n    tabSize,\r\n    defaultTabEnable,\r\n    scrollTop: 0,\r\n    scrollTopPreview: 0,\r\n    commands: cmds,\r\n    extraCommands: extraCmds,\r\n    fullscreen,\r\n    barPopup: {}\r\n  });\r\n  var container = useRef(null);\r\n  var previewRef = useRef(null);\r\n  var enableScrollRef = useRef(enableScroll);\r\n  useImperativeHandle(ref, () => _extends({}, state, {\r\n    container: container.current,\r\n    dispatch\r\n  }));\r\n  useMemo(() => enableScrollRef.current = enableScroll, [enableScroll]);\r\n  useEffect(() => {\r\n    var stateInit = {};\r\n    if (container.current) {\r\n      stateInit.container = container.current || undefined;\r\n    }\r\n    stateInit.markdown = propsValue || '';\r\n    stateInit.barPopup = {};\r\n    if (dispatch) {\r\n      dispatch(_extends({}, state, stateInit));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  var cls = [className, 'wmde-markdown-var', direction ? prefixCls + \"-\" + direction : null, prefixCls, state.preview ? prefixCls + \"-show-\" + state.preview : null, state.fullscreen ? prefixCls + \"-fullscreen\" : null].filter(Boolean).join(' ').trim();\r\n  useMemo(() => propsValue !== state.markdown && dispatch({\r\n    markdown: propsValue || ''\r\n  }), [propsValue, state.markdown]);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useMemo(() => previewType !== state.preview && dispatch({\r\n    preview: previewType\r\n  }), [previewType]);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useMemo(() => tabSize !== state.tabSize && dispatch({\r\n    tabSize\r\n  }), [tabSize]);\r\n  useMemo(() => highlightEnable !== state.highlightEnable && dispatch({\r\n    highlightEnable\r\n  }),\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  [highlightEnable]);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useMemo(() => autoFocus !== state.autoFocus && dispatch({\r\n    autoFocus: autoFocus\r\n  }), [autoFocus]);\r\n  useMemo(() => fullscreen !== state.fullscreen && dispatch({\r\n    fullscreen: fullscreen\r\n  }),\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  [fullscreen]);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useMemo(() => height !== state.height && dispatch({\r\n    height: height\r\n  }), [height]);\r\n  useMemo(() => height !== state.height && onHeightChange && onHeightChange(state.height, height, state), [height, onHeightChange, state]);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useMemo(() => commands !== state.commands && dispatch({\r\n    commands: cmds\r\n  }), [props.commands]);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useMemo(() => extraCommands !== state.extraCommands && dispatch({\r\n    extraCommands: extraCmds\r\n  }), [props.extraCommands]);\r\n  var textareaDomRef = useRef();\r\n  var active = useRef('preview');\r\n  var initScroll = useRef(false);\r\n  useMemo(() => {\r\n    textareaDomRef.current = state.textareaWarp;\r\n    if (state.textareaWarp) {\r\n      state.textareaWarp.addEventListener('mouseover', () => {\r\n        active.current = 'text';\r\n      });\r\n      state.textareaWarp.addEventListener('mouseleave', () => {\r\n        active.current = 'preview';\r\n      });\r\n    }\r\n  }, [state.textareaWarp]);\r\n  var handleScroll = (e, type) => {\r\n    if (!enableScrollRef.current) return;\r\n    var textareaDom = textareaDomRef.current;\r\n    var previewDom = previewRef.current ? previewRef.current : undefined;\r\n    if (!initScroll.current) {\r\n      active.current = type;\r\n      initScroll.current = true;\r\n    }\r\n    if (textareaDom && previewDom) {\r\n      var scale = (textareaDom.scrollHeight - textareaDom.offsetHeight) / (previewDom.scrollHeight - previewDom.offsetHeight);\r\n      if (e.target === textareaDom && active.current === 'text') {\r\n        previewDom.scrollTop = textareaDom.scrollTop / scale;\r\n      }\r\n      if (e.target === previewDom && active.current === 'preview') {\r\n        textareaDom.scrollTop = previewDom.scrollTop * scale;\r\n      }\r\n      var scrollTop = 0;\r\n      if (active.current === 'text') {\r\n        scrollTop = textareaDom.scrollTop || 0;\r\n      } else if (active.current === 'preview') {\r\n        scrollTop = previewDom.scrollTop || 0;\r\n      }\r\n      dispatch({\r\n        scrollTop\r\n      });\r\n    }\r\n  };\r\n  var previewClassName = prefixCls + \"-preview \" + (previewOptions.className || '');\r\n  var handlePreviewScroll = e => handleScroll(e, 'preview');\r\n  var mdPreview = useMemo(() => /*#__PURE__*/_jsx(\"div\", {\r\n    ref: previewRef,\r\n    className: previewClassName,\r\n    children: /*#__PURE__*/_jsx(MarkdownPreview, _extends({}, previewOptions, {\r\n      onScroll: handlePreviewScroll,\r\n      source: state.markdown || ''\r\n    }))\r\n  }), [previewClassName, previewOptions, state.markdown]);\r\n  var preview = (components == null ? void 0 : components.preview) && (components == null ? void 0 : components.preview(state.markdown || '', state, dispatch));\r\n  if (preview && /*#__PURE__*/React.isValidElement(preview)) {\r\n    mdPreview = /*#__PURE__*/_jsx(\"div\", {\r\n      className: previewClassName,\r\n      ref: previewRef,\r\n      onScroll: handlePreviewScroll,\r\n      children: preview\r\n    });\r\n  }\r\n  var containerStyle = _extends({}, other.style, {\r\n    height: state.height || '100%'\r\n  });\r\n  var containerClick = () => dispatch({\r\n    barPopup: _extends({}, setGroupPopFalse(state.barPopup))\r\n  });\r\n  var dragBarChange = newHeight => dispatch({\r\n    height: newHeight\r\n  });\r\n  var changeHandle = evn => {\r\n    onChange && onChange(evn.target.value, evn, state);\r\n    if (textareaProps && textareaProps.onChange) {\r\n      textareaProps.onChange(evn);\r\n    }\r\n    if (state.textarea && state.textarea instanceof HTMLTextAreaElement && onStatistics) {\r\n      var obj = new TextAreaCommandOrchestrator(state.textarea);\r\n      var objState = obj.getState() || {};\r\n      onStatistics(_extends({}, objState, {\r\n        lineCount: evn.target.value.split('\\n').length,\r\n        length: evn.target.value.length\r\n      }));\r\n    }\r\n  };\r\n  return /*#__PURE__*/_jsx(EditorContext.Provider, {\r\n    value: _extends({}, state, {\r\n      dispatch\r\n    }),\r\n    children: /*#__PURE__*/_jsxs(\"div\", _extends({\r\n      ref: container,\r\n      className: cls\r\n    }, other, {\r\n      onClick: containerClick,\r\n      style: containerStyle,\r\n      children: [/*#__PURE__*/_jsx(ToolbarVisibility, {\r\n        hideToolbar: hideToolbar,\r\n        toolbarBottom: toolbarBottom,\r\n        prefixCls: prefixCls,\r\n        overflow: overflow,\r\n        placement: \"top\"\r\n      }), /*#__PURE__*/_jsxs(\"div\", {\r\n        className: prefixCls + \"-content\",\r\n        children: [/(edit|live)/.test(state.preview || '') && /*#__PURE__*/_jsx(TextArea, _extends({\r\n          className: prefixCls + \"-input\",\r\n          prefixCls: prefixCls,\r\n          autoFocus: autoFocus\r\n        }, textareaProps, {\r\n          onChange: changeHandle,\r\n          renderTextarea: (components == null ? void 0 : components.textarea) || renderTextarea,\r\n          onScroll: e => handleScroll(e, 'text')\r\n        })), /(live|preview)/.test(state.preview || '') && mdPreview]\r\n      }), visibleDragbar && !state.fullscreen && /*#__PURE__*/_jsx(DragBar, {\r\n        prefixCls: prefixCls,\r\n        height: state.height,\r\n        maxHeight: maxHeight,\r\n        minHeight: minHeight,\r\n        onChange: dragBarChange\r\n      }), /*#__PURE__*/_jsx(ToolbarVisibility, {\r\n        hideToolbar: hideToolbar,\r\n        toolbarBottom: toolbarBottom,\r\n        prefixCls: prefixCls,\r\n        overflow: overflow,\r\n        placement: \"bottom\"\r\n      })]\r\n    }))\r\n  });\r\n});\r\nvar Editor = InternalMDEditor;\r\nEditor.Markdown = MarkdownPreview;\r\nexport default Editor;", "import _extends from \"@babel/runtime/helpers/extends\";\r\nimport React from 'react';\r\nimport rehypePrism from 'rehype-prism-plus';\r\nimport rehypeRewrite from 'rehype-rewrite';\r\nimport rehypeAttrs from 'rehype-attr';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport MarkdownPreview from './preview';\r\nimport { reservedMeta } from './plugins/reservedMeta';\r\nimport { retrieveMeta } from './plugins/retrieveMeta';\r\nimport { rehypeRewriteHandle, defaultRehypePlugins } from './rehypePlugins';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport * from './Props';\r\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\r\n  var _props$disableCopy;\r\n  var rehypePlugins = [reservedMeta, rehypeRaw, retrieveMeta, ...defaultRehypePlugins, [rehypeRewrite, {\r\n    rewrite: rehypeRewriteHandle((_props$disableCopy = props.disableCopy) != null ? _props$disableCopy : false, props.rehypeRewrite)\r\n  }], [rehypeAttrs, {\r\n    properties: 'attr'\r\n  }], ...(props.rehypePlugins || []), [rehypePrism, {\r\n    ignoreMissing: true\r\n  }]];\r\n  return /*#__PURE__*/_jsx(MarkdownPreview, _extends({}, props, {\r\n    rehypePlugins: rehypePlugins,\r\n    ref: ref\r\n  }));\r\n});", "/**\r\n * @import {Nodes, Parents} from 'hast'\r\n */\r\n\r\n/**\r\n * Get the plain-text value of a hast node.\r\n *\r\n * @param {Nodes} node\r\n *   Node to serialize.\r\n * @returns {string}\r\n *   Serialized node.\r\n */\r\nexport function toString(node) {\r\n  // “The concatenation of data of all the Text node descendants of the context\r\n  // object, in tree order.”\r\n  if ('children' in node) {\r\n    return all(node)\r\n  }\r\n\r\n  // “Context object’s data.”\r\n  return 'value' in node ? node.value : ''\r\n}\r\n\r\n/**\r\n * @param {Nodes} node\r\n *   Node.\r\n * @returns {string}\r\n *   Serialized node.\r\n */\r\nfunction one(node) {\r\n  if (node.type === 'text') {\r\n    return node.value\r\n  }\r\n\r\n  return 'children' in node ? all(node) : ''\r\n}\r\n\r\n/**\r\n * @param {Parents} node\r\n *   Node.\r\n * @returns {string}\r\n *   Serialized node.\r\n */\r\nfunction all(node) {\r\n  let index = -1\r\n  /** @type {Array<string>} */\r\n  const result = []\r\n\r\n  while (++index < node.children.length) {\r\n    result[index] = one(node.children[index])\r\n  }\r\n\r\n  return result.join('')\r\n}\r\n", "/**\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Parent} Parent\r\n *\r\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\r\n *   Test from `unist-util-is`.\r\n *\r\n *   Note: we have remove and add `undefined`, because otherwise when generating\r\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\r\n *   which doesn’t work when publishing on npm.\r\n */\r\n\r\n/**\r\n * @typedef Options\r\n *   Configuration (optional).\r\n * @property {boolean | null | undefined} [cascade=true]\r\n *   Whether to drop parent nodes if they had children, but all their children\r\n *   were filtered out (default: `true`).\r\n */\r\n\r\nimport {convert} from 'unist-util-is'\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * Create a new `tree` of copies of all nodes that pass `test`.\r\n *\r\n * The tree is walked in *preorder* (NLR), visiting the node itself, then its\r\n * head, etc.\r\n *\r\n * @template {Node} Tree\r\n * @template {Test} Check\r\n *\r\n * @overload\r\n * @param {Tree} tree\r\n * @param {Options | null | undefined} options\r\n * @param {Check} test\r\n * @returns {import('./complex-types.js').Matches<Tree, Check>}\r\n *\r\n * @overload\r\n * @param {Tree} tree\r\n * @param {Check} test\r\n * @returns {import('./complex-types.js').Matches<Tree, Check>}\r\n *\r\n * @overload\r\n * @param {Tree} tree\r\n * @param {null | undefined} [options]\r\n * @returns {Tree}\r\n *\r\n * @param {Node} tree\r\n *   Tree to filter.\r\n * @param {Options | Test} [options]\r\n *   Configuration (optional).\r\n * @param {Test} [test]\r\n *   `unist-util-is` compatible test.\r\n * @returns {Node | undefined}\r\n *   New filtered tree.\r\n *\r\n *   `undefined` is returned if `tree` itself didn’t pass the test, or is\r\n *   cascaded away.\r\n */\r\nexport function filter(tree, options, test) {\r\n  const is = convert(test || options)\r\n  const cascadeRaw =\r\n    options && typeof options === 'object' && 'cascade' in options\r\n      ? /** @type {boolean | null | undefined} */ (options.cascade)\r\n      : undefined\r\n  const cascade =\r\n    cascadeRaw === undefined || cascadeRaw === null ? true : cascadeRaw\r\n\r\n  return preorder(tree)\r\n\r\n  /**\r\n   * @param {Node} node\r\n   *   Current node.\r\n   * @param {number | undefined} [index]\r\n   *   Index of `node` in `parent`.\r\n   * @param {Parent | undefined} [parentNode]\r\n   *   Parent node.\r\n   * @returns {Node | undefined}\r\n   *   Shallow copy of `node`.\r\n   */\r\n  function preorder(node, index, parentNode) {\r\n    /** @type {Array<Node>} */\r\n    const children = []\r\n\r\n    if (!is(node, index, parentNode)) return undefined\r\n\r\n    if (parent(node)) {\r\n      let childIndex = -1\r\n\r\n      while (++childIndex < node.children.length) {\r\n        const result = preorder(node.children[childIndex], childIndex, node)\r\n\r\n        if (result) {\r\n          children.push(result)\r\n        }\r\n      }\r\n\r\n      if (cascade && node.children.length > 0 && children.length === 0) {\r\n        return undefined\r\n      }\r\n    }\r\n\r\n    // Create a shallow clone, using the new children.\r\n    /** @type {typeof node} */\r\n    // @ts-expect-error all the fields will be copied over.\r\n    const next = {}\r\n    /** @type {string} */\r\n    let key\r\n\r\n    for (key in node) {\r\n      if (own.call(node, key)) {\r\n        // @ts-expect-error: Looks like a record.\r\n        next[key] = key === 'children' ? children : node[key]\r\n      }\r\n    }\r\n\r\n    return next\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Node} node\r\n * @returns {node is Parent}\r\n */\r\nfunction parent(node) {\r\n  return 'children' in node && node.children !== undefined\r\n}\r\n", "// @ts-nocheck\r\nclike.displayName = 'clike'\r\nclike.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function clike(Prism) {\r\n  Prism.languages.clike = {\r\n    comment: [\r\n      {\r\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    string: {\r\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true\r\n    },\r\n    'class-name': {\r\n      pattern:\r\n        /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\r\n      lookbehind: true,\r\n      inside: {\r\n        punctuation: /[.\\\\]/\r\n      }\r\n    },\r\n    keyword:\r\n      /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    function: /\\b\\w+(?=\\()/,\r\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\r\n    operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\r\n    punctuation: /[{}[\\];(),.:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nc.displayName = 'c'\r\nc.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function c(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.c = Prism.languages.extend('clike', {\r\n    comment: {\r\n      pattern:\r\n        /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      // https://en.cppreference.com/w/c/language/string_literal\r\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\r\n      greedy: true\r\n    },\r\n    'class-name': {\r\n      pattern:\r\n        /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\r\n      lookbehind: true\r\n    },\r\n    keyword:\r\n      /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\r\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n    number:\r\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\r\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\r\n  })\r\n  Prism.languages.insertBefore('c', 'string', {\r\n    char: {\r\n      // https://en.cppreference.com/w/c/language/character_constant\r\n      pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\r\n      greedy: true\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('c', 'string', {\r\n    macro: {\r\n      // allow for multiline macro definitions\r\n      // spaces after the # character compile fine with gcc\r\n      pattern:\r\n        /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'property',\r\n      inside: {\r\n        string: [\r\n          {\r\n            // highlight the path of the include statement as a string\r\n            pattern: /^(#\\s*include\\s*)<[^>]+>/,\r\n            lookbehind: true\r\n          },\r\n          Prism.languages.c['string']\r\n        ],\r\n        char: Prism.languages.c['char'],\r\n        comment: Prism.languages.c['comment'],\r\n        'macro-name': [\r\n          {\r\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\r\n            lookbehind: true\r\n          },\r\n          {\r\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\r\n            lookbehind: true,\r\n            alias: 'function'\r\n          }\r\n        ],\r\n        // highlight macro directives as keywords\r\n        directive: {\r\n          pattern: /^(#\\s*)[a-z]+/,\r\n          lookbehind: true,\r\n          alias: 'keyword'\r\n        },\r\n        'directive-hash': /^#/,\r\n        punctuation: /##|\\\\(?=[\\r\\n])/,\r\n        expression: {\r\n          pattern: /\\S[\\s\\S]*/,\r\n          inside: Prism.languages.c\r\n        }\r\n      }\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('c', 'function', {\r\n    // highlight predefined macros as constants\r\n    constant:\r\n      /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\r\n  })\r\n  delete Prism.languages.c['boolean']\r\n}\r\n", "// @ts-nocheck\r\nimport refractorC from './c.js'\r\ncpp.displayName = 'cpp'\r\ncpp.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function cpp(Prism) {\r\n  Prism.register(refractorC)\r\n  ;(function (Prism) {\r\n    var keyword =\r\n      /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/\r\n    var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(\r\n      /<keyword>/g,\r\n      function () {\r\n        return keyword.source\r\n      }\r\n    )\r\n    Prism.languages.cpp = Prism.languages.extend('c', {\r\n      'class-name': [\r\n        {\r\n          pattern: RegExp(\r\n            /(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(\r\n              /<keyword>/g,\r\n              function () {\r\n                return keyword.source\r\n              }\r\n            )\r\n          ),\r\n          lookbehind: true\r\n        },\r\n        // This is intended to capture the class name of method implementations like:\r\n        //   void foo::bar() const {}\r\n        // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\r\n        // it starts with an uppercase letter. This approximation should give decent results.\r\n        /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\r\n        // This will capture the class name before destructors like:\r\n        //   Foo::~Foo() {}\r\n        /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\r\n        // This also intends to capture the class name of method implementations but here the class has template\r\n        // parameters, so it can't be a namespace (until C++ adds generic namespaces).\r\n        /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\r\n      ],\r\n      keyword: keyword,\r\n      number: {\r\n        pattern:\r\n          /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\r\n        greedy: true\r\n      },\r\n      operator:\r\n        />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\r\n      boolean: /\\b(?:false|true)\\b/\r\n    })\r\n    Prism.languages.insertBefore('cpp', 'string', {\r\n      module: {\r\n        // https://en.cppreference.com/w/cpp/language/modules\r\n        pattern: RegExp(\r\n          /(\\b(?:import|module)\\s+)/.source +\r\n            '(?:' +\r\n            // header-name\r\n            /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\r\n            '|' +\r\n            // module name or partition or both\r\n            /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(\r\n              /<mod-name>/g,\r\n              function () {\r\n                return modName\r\n              }\r\n            ) +\r\n            ')'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          string: /^[<\"][\\s\\S]+/,\r\n          operator: /:/,\r\n          punctuation: /\\./\r\n        }\r\n      },\r\n      'raw-string': {\r\n        pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\r\n        alias: 'string',\r\n        greedy: true\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('cpp', 'keyword', {\r\n      'generic-function': {\r\n        pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\r\n        inside: {\r\n          function: /^\\w+/,\r\n          generic: {\r\n            pattern: /<[\\s\\S]+/,\r\n            alias: 'class-name',\r\n            inside: Prism.languages.cpp\r\n          }\r\n        }\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('cpp', 'operator', {\r\n      'double-colon': {\r\n        pattern: /::/,\r\n        alias: 'punctuation'\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('cpp', 'class-name', {\r\n      // the base clause is an optional list of parent classes\r\n      // https://en.cppreference.com/w/cpp/language/class\r\n      'base-clause': {\r\n        pattern:\r\n          /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: Prism.languages.extend('cpp', {})\r\n      }\r\n    })\r\n    Prism.languages.insertBefore(\r\n      'inside',\r\n      'double-colon',\r\n      {\r\n        // All untokenized words that are not namespaces should be class names\r\n        'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\r\n      },\r\n      Prism.languages.cpp['base-clause']\r\n    )\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorCpp from './cpp.js'\r\narduino.displayName = 'arduino'\r\narduino.aliases = ['ino']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function arduino(Prism) {\r\n  Prism.register(refractorCpp)\r\n  Prism.languages.arduino = Prism.languages.extend('cpp', {\r\n    keyword:\r\n      /\\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\\b/,\r\n    constant:\r\n      /\\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\\b/,\r\n    builtin:\r\n      /\\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\\b/\r\n  })\r\n  Prism.languages.ino = Prism.languages.arduino\r\n}\r\n", "// @ts-nocheck\r\nbash.displayName = 'bash'\r\nbash.aliases = ['sh', 'shell']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function bash(Prism) {\r\n  ;(function (Prism) {\r\n    // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\r\n    // + LC_ALL, RANDOM, REPLY, SECONDS.\r\n    // + make sure PS1..4 are here as they are not always set,\r\n    // - some useless things.\r\n    var envVars =\r\n      '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b'\r\n    var commandAfterHeredoc = {\r\n      pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\r\n      lookbehind: true,\r\n      alias: 'punctuation',\r\n      // this looks reasonably well in all themes\r\n      inside: null // see below\r\n    }\r\n\r\n    var insideString = {\r\n      bash: commandAfterHeredoc,\r\n      environment: {\r\n        pattern: RegExp('\\\\$' + envVars),\r\n        alias: 'constant'\r\n      },\r\n      variable: [\r\n        // [0]: Arithmetic Environment\r\n        {\r\n          pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\r\n          greedy: true,\r\n          inside: {\r\n            // If there is a $ sign at the beginning highlight $(( and )) as variable\r\n            variable: [\r\n              {\r\n                pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\r\n                lookbehind: true\r\n              },\r\n              /^\\$\\(\\(/\r\n            ],\r\n            number:\r\n              /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\r\n            // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\r\n            operator:\r\n              /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\r\n            // If there is no $ sign at the beginning highlight (( and )) as punctuation\r\n            punctuation: /\\(\\(?|\\)\\)?|,|;/\r\n          }\r\n        },\r\n        // [1]: Command Substitution\r\n        {\r\n          pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\r\n          greedy: true,\r\n          inside: {\r\n            variable: /^\\$\\(|^`|\\)$|`$/\r\n          }\r\n        },\r\n        // [2]: Brace expansion\r\n        {\r\n          pattern: /\\$\\{[^}]+\\}/,\r\n          greedy: true,\r\n          inside: {\r\n            operator: /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\r\n            punctuation: /[\\[\\]]/,\r\n            environment: {\r\n              pattern: RegExp('(\\\\{)' + envVars),\r\n              lookbehind: true,\r\n              alias: 'constant'\r\n            }\r\n          }\r\n        },\r\n        /\\$(?:\\w+|[#?*!@$])/\r\n      ],\r\n      // Escape sequences from echo and printf's manuals, and escaped quotes.\r\n      entity:\r\n        /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\r\n    }\r\n    Prism.languages.bash = {\r\n      shebang: {\r\n        pattern: /^#!\\s*\\/.*/,\r\n        alias: 'important'\r\n      },\r\n      comment: {\r\n        pattern: /(^|[^\"{\\\\$])#.*/,\r\n        lookbehind: true\r\n      },\r\n      'function-name': [\r\n        // a) function foo {\r\n        // b) foo() {\r\n        // c) function foo() {\r\n        // but not “foo {”\r\n        {\r\n          // a) and c)\r\n          pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\r\n          lookbehind: true,\r\n          alias: 'function'\r\n        },\r\n        {\r\n          // b)\r\n          pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\r\n          alias: 'function'\r\n        }\r\n      ],\r\n      // Highlight variable names as variables in for and select beginnings.\r\n      'for-or-select': {\r\n        pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\r\n        alias: 'variable',\r\n        lookbehind: true\r\n      },\r\n      // Highlight variable names as variables in the left-hand part\r\n      // of assignments (“=” and “+=”).\r\n      'assign-left': {\r\n        pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?:\\.\\w+)*(?=\\+?=)/,\r\n        inside: {\r\n          environment: {\r\n            pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\r\n            lookbehind: true,\r\n            alias: 'constant'\r\n          }\r\n        },\r\n        alias: 'variable',\r\n        lookbehind: true\r\n      },\r\n      // Highlight parameter names as variables\r\n      parameter: {\r\n        pattern: /(^|\\s)-{1,2}(?:\\w+:[+-]?)?\\w+(?:\\.\\w+)*(?=[=\\s]|$)/,\r\n        alias: 'variable',\r\n        lookbehind: true\r\n      },\r\n      string: [\r\n        // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\r\n        {\r\n          pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          inside: insideString\r\n        },\r\n        // Here-document with quotes around the tag\r\n        // → No expansion (so no “inside”).\r\n        {\r\n          pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          inside: {\r\n            bash: commandAfterHeredoc\r\n          }\r\n        },\r\n        // “Normal” string\r\n        {\r\n          // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\r\n          pattern:\r\n            /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          inside: insideString\r\n        },\r\n        {\r\n          // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\r\n          pattern: /(^|[^$\\\\])'[^']*'/,\r\n          lookbehind: true,\r\n          greedy: true\r\n        },\r\n        {\r\n          // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\r\n          pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\r\n          greedy: true,\r\n          inside: {\r\n            entity: insideString.entity\r\n          }\r\n        }\r\n      ],\r\n      environment: {\r\n        pattern: RegExp('\\\\$?' + envVars),\r\n        alias: 'constant'\r\n      },\r\n      variable: insideString.variable,\r\n      function: {\r\n        pattern:\r\n          /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\r\n        lookbehind: true\r\n      },\r\n      keyword: {\r\n        pattern:\r\n          /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\r\n        lookbehind: true\r\n      },\r\n      // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\r\n      builtin: {\r\n        pattern:\r\n          /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\r\n        lookbehind: true,\r\n        // Alias added to make those easier to distinguish from strings.\r\n        alias: 'class-name'\r\n      },\r\n      boolean: {\r\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\r\n        lookbehind: true\r\n      },\r\n      'file-descriptor': {\r\n        pattern: /\\B&\\d\\b/,\r\n        alias: 'important'\r\n      },\r\n      operator: {\r\n        // Lots of redirections here, but not just that.\r\n        pattern:\r\n          /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\r\n        inside: {\r\n          'file-descriptor': {\r\n            pattern: /^\\d/,\r\n            alias: 'important'\r\n          }\r\n        }\r\n      },\r\n      punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\r\n      number: {\r\n        pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\r\n        lookbehind: true\r\n      }\r\n    }\r\n    commandAfterHeredoc.inside = Prism.languages.bash\r\n\r\n    /* Patterns in command substitution. */\r\n    var toBeCopied = [\r\n      'comment',\r\n      'function-name',\r\n      'for-or-select',\r\n      'assign-left',\r\n      'parameter',\r\n      'string',\r\n      'environment',\r\n      'function',\r\n      'keyword',\r\n      'builtin',\r\n      'boolean',\r\n      'file-descriptor',\r\n      'operator',\r\n      'punctuation',\r\n      'number'\r\n    ]\r\n    var inside = insideString.variable[1].inside\r\n    for (var i = 0; i < toBeCopied.length; i++) {\r\n      inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]]\r\n    }\r\n    Prism.languages.sh = Prism.languages.bash\r\n    Prism.languages.shell = Prism.languages.bash\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\ncsharp.displayName = 'csharp'\r\ncsharp.aliases = ['cs', 'dotnet']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function csharp(Prism) {\r\n  Prism.register(refractorClike)\r\n  ;(function (Prism) {\r\n    /**\r\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\r\n     *\r\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\r\n     *\r\n     * @param {string} pattern the given pattern.\r\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\r\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\r\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\r\n     */\r\n    function replace(pattern, replacements) {\r\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\r\n        return '(?:' + replacements[+index] + ')'\r\n      })\r\n    }\r\n    /**\r\n     * @param {string} pattern\r\n     * @param {string[]} replacements\r\n     * @param {string} [flags]\r\n     * @returns {RegExp}\r\n     */\r\n    function re(pattern, replacements, flags) {\r\n      return RegExp(replace(pattern, replacements), flags || '')\r\n    }\r\n\r\n    /**\r\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\r\n     *\r\n     * @param {string} pattern\r\n     * @param {number} depthLog2\r\n     * @returns {string}\r\n     */\r\n    function nested(pattern, depthLog2) {\r\n      for (var i = 0; i < depthLog2; i++) {\r\n        pattern = pattern.replace(/<<self>>/g, function () {\r\n          return '(?:' + pattern + ')'\r\n        })\r\n      }\r\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\r\n    }\r\n\r\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\r\n    var keywordKinds = {\r\n      // keywords which represent a return or variable type\r\n      type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\r\n      // keywords which are used to declare a type\r\n      typeDeclaration: 'class enum interface record struct',\r\n      // contextual keywords\r\n      // (\"var\" and \"dynamic\" are missing because they are used like types)\r\n      contextual:\r\n        'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\r\n      // all other keywords\r\n      other:\r\n        'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\r\n    }\r\n\r\n    // keywords\r\n    function keywordsToPattern(words) {\r\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\r\n    }\r\n    var typeDeclarationKeywords = keywordsToPattern(\r\n      keywordKinds.typeDeclaration\r\n    )\r\n    var keywords = RegExp(\r\n      keywordsToPattern(\r\n        keywordKinds.type +\r\n          ' ' +\r\n          keywordKinds.typeDeclaration +\r\n          ' ' +\r\n          keywordKinds.contextual +\r\n          ' ' +\r\n          keywordKinds.other\r\n      )\r\n    )\r\n    var nonTypeKeywords = keywordsToPattern(\r\n      keywordKinds.typeDeclaration +\r\n        ' ' +\r\n        keywordKinds.contextual +\r\n        ' ' +\r\n        keywordKinds.other\r\n    )\r\n    var nonContextualKeywords = keywordsToPattern(\r\n      keywordKinds.type +\r\n        ' ' +\r\n        keywordKinds.typeDeclaration +\r\n        ' ' +\r\n        keywordKinds.other\r\n    )\r\n\r\n    // types\r\n    var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2) // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\r\n    var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2)\r\n    var name = /@?\\b[A-Za-z_]\\w*\\b/.source\r\n    var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic])\r\n    var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\r\n      nonTypeKeywords,\r\n      genericName\r\n    ])\r\n    var array = /\\[\\s*(?:,\\s*)*\\]/.source\r\n    var typeExpressionWithoutTuple = replace(\r\n      /<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source,\r\n      [identifier, array]\r\n    )\r\n    var tupleElement = replace(\r\n      /[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,\r\n      [generic, nestedRound, array]\r\n    )\r\n    var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement])\r\n    var typeExpression = replace(\r\n      /(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source,\r\n      [tuple, identifier, array]\r\n    )\r\n    var typeInside = {\r\n      keyword: keywords,\r\n      punctuation: /[<>()?,.:[\\]]/\r\n    }\r\n\r\n    // strings & characters\r\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\r\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\r\n    var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source // simplified pattern\r\n    var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source\r\n    var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source\r\n    Prism.languages.csharp = Prism.languages.extend('clike', {\r\n      string: [\r\n        {\r\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\r\n          lookbehind: true,\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\r\n          lookbehind: true,\r\n          greedy: true\r\n        }\r\n      ],\r\n      'class-name': [\r\n        {\r\n          // Using static\r\n          // using static System.Math;\r\n          pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [\r\n            identifier\r\n          ]),\r\n          lookbehind: true,\r\n          inside: typeInside\r\n        },\r\n        {\r\n          // Using alias (type)\r\n          // using Project = PC.MyCompany.Project;\r\n          pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\r\n            name,\r\n            typeExpression\r\n          ]),\r\n          lookbehind: true,\r\n          inside: typeInside\r\n        },\r\n        {\r\n          // Using alias (alias)\r\n          // using Project = PC.MyCompany.Project;\r\n          pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\r\n          lookbehind: true\r\n        },\r\n        {\r\n          // Type declarations\r\n          // class Foo<A, B>\r\n          // interface Foo<out A, B>\r\n          pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\r\n            typeDeclarationKeywords,\r\n            genericName\r\n          ]),\r\n          lookbehind: true,\r\n          inside: typeInside\r\n        },\r\n        {\r\n          // Single catch exception declaration\r\n          // catch(Foo)\r\n          // (things like catch(Foo e) is covered by variable declaration)\r\n          pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\r\n          lookbehind: true,\r\n          inside: typeInside\r\n        },\r\n        {\r\n          // Name of the type parameter of generic constraints\r\n          // where Foo : class\r\n          pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\r\n          lookbehind: true\r\n        },\r\n        {\r\n          // Casts and checks via as and is.\r\n          // as Foo<A>, is Bar<B>\r\n          // (things like if(a is Foo b) is covered by variable declaration)\r\n          pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [\r\n            typeExpressionWithoutTuple\r\n          ]),\r\n          lookbehind: true,\r\n          inside: typeInside\r\n        },\r\n        {\r\n          // Variable, field and parameter declaration\r\n          // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\r\n          pattern: re(\r\n            /\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/\r\n              .source,\r\n            [typeExpression, nonContextualKeywords, name]\r\n          ),\r\n          inside: typeInside\r\n        }\r\n      ],\r\n      keyword: keywords,\r\n      // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\r\n      number:\r\n        /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\r\n      operator: />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\r\n      punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\r\n    })\r\n    Prism.languages.insertBefore('csharp', 'number', {\r\n      range: {\r\n        pattern: /\\.\\./,\r\n        alias: 'operator'\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('csharp', 'punctuation', {\r\n      'named-parameter': {\r\n        pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\r\n        lookbehind: true,\r\n        alias: 'punctuation'\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('csharp', 'class-name', {\r\n      namespace: {\r\n        // namespace Foo.Bar {}\r\n        // using Foo.Bar;\r\n        pattern: re(\r\n          /(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source,\r\n          [name]\r\n        ),\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /\\./\r\n        }\r\n      },\r\n      'type-expression': {\r\n        // default(Foo), typeof(Foo<Bar>), sizeof(int)\r\n        pattern: re(\r\n          /(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/\r\n            .source,\r\n          [nestedRound]\r\n        ),\r\n        lookbehind: true,\r\n        alias: 'class-name',\r\n        inside: typeInside\r\n      },\r\n      'return-type': {\r\n        // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\r\n        // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\r\n        // int Foo => 0; int Foo { get; set } = 0;\r\n        pattern: re(\r\n          /<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source,\r\n          [typeExpression, identifier]\r\n        ),\r\n        inside: typeInside,\r\n        alias: 'class-name'\r\n      },\r\n      'constructor-invocation': {\r\n        // new List<Foo<Bar[]>> { }\r\n        pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\r\n        lookbehind: true,\r\n        inside: typeInside,\r\n        alias: 'class-name'\r\n      },\r\n      /*'explicit-implementation': {\r\n// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\r\npattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\r\ninside: classNameInside,\r\nalias: 'class-name'\r\n},*/\r\n      'generic-method': {\r\n        // foo<Bar>()\r\n        pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\r\n        inside: {\r\n          function: re(/^<<0>>/.source, [name]),\r\n          generic: {\r\n            pattern: RegExp(generic),\r\n            alias: 'class-name',\r\n            inside: typeInside\r\n          }\r\n        }\r\n      },\r\n      'type-list': {\r\n        // The list of types inherited or of generic constraints\r\n        // class Foo<F> : Bar, IList<FooBar>\r\n        // where F : Bar, IList<int>\r\n        pattern: re(\r\n          /\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/\r\n            .source,\r\n          [\r\n            typeDeclarationKeywords,\r\n            genericName,\r\n            name,\r\n            typeExpression,\r\n            keywords.source,\r\n            nestedRound,\r\n            /\\bnew\\s*\\(\\s*\\)/.source\r\n          ]\r\n        ),\r\n        lookbehind: true,\r\n        inside: {\r\n          'record-arguments': {\r\n            pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [\r\n              genericName,\r\n              nestedRound\r\n            ]),\r\n            lookbehind: true,\r\n            greedy: true,\r\n            inside: Prism.languages.csharp\r\n          },\r\n          keyword: keywords,\r\n          'class-name': {\r\n            pattern: RegExp(typeExpression),\r\n            greedy: true,\r\n            inside: typeInside\r\n          },\r\n          punctuation: /[,()]/\r\n        }\r\n      },\r\n      preprocessor: {\r\n        pattern: /(^[\\t ]*)#.*/m,\r\n        lookbehind: true,\r\n        alias: 'property',\r\n        inside: {\r\n          // highlight preprocessor directives as keywords\r\n          directive: {\r\n            pattern:\r\n              /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\r\n            lookbehind: true,\r\n            alias: 'keyword'\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    // attributes\r\n    var regularStringOrCharacter = regularString + '|' + character\r\n    var regularStringCharacterOrComment = replace(\r\n      /\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source,\r\n      [regularStringOrCharacter]\r\n    )\r\n    var roundExpression = nested(\r\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\r\n        regularStringCharacterOrComment\r\n      ]),\r\n      2\r\n    )\r\n\r\n    // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\r\n    var attrTarget =\r\n      /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/\r\n        .source\r\n    var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\r\n      identifier,\r\n      roundExpression\r\n    ])\r\n    Prism.languages.insertBefore('csharp', 'class-name', {\r\n      attribute: {\r\n        // Attributes\r\n        // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\r\n        pattern: re(\r\n          /((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/\r\n            .source,\r\n          [attrTarget, attr]\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          target: {\r\n            pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\r\n            alias: 'keyword'\r\n          },\r\n          'attribute-arguments': {\r\n            pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\r\n            inside: Prism.languages.csharp\r\n          },\r\n          'class-name': {\r\n            pattern: RegExp(identifier),\r\n            inside: {\r\n              punctuation: /\\./\r\n            }\r\n          },\r\n          punctuation: /[:,]/\r\n        }\r\n      }\r\n    })\r\n\r\n    // string interpolation\r\n    var formatString = /:[^}\\r\\n]+/.source\r\n    // multi line\r\n    var mInterpolationRound = nested(\r\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\r\n        regularStringCharacterOrComment\r\n      ]),\r\n      2\r\n    )\r\n    var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\r\n      mInterpolationRound,\r\n      formatString\r\n    ])\r\n    // single line\r\n    var sInterpolationRound = nested(\r\n      replace(\r\n        /[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/\r\n          .source,\r\n        [regularStringOrCharacter]\r\n      ),\r\n      2\r\n    )\r\n    var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\r\n      sInterpolationRound,\r\n      formatString\r\n    ])\r\n    function createInterpolationInside(interpolation, interpolationRound) {\r\n      return {\r\n        interpolation: {\r\n          pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\r\n          lookbehind: true,\r\n          inside: {\r\n            'format-string': {\r\n              pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\r\n                interpolationRound,\r\n                formatString\r\n              ]),\r\n              lookbehind: true,\r\n              inside: {\r\n                punctuation: /^:/\r\n              }\r\n            },\r\n            punctuation: /^\\{|\\}$/,\r\n            expression: {\r\n              pattern: /[\\s\\S]+/,\r\n              alias: 'language-csharp',\r\n              inside: Prism.languages.csharp\r\n            }\r\n          }\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    }\r\n    Prism.languages.insertBefore('csharp', 'string', {\r\n      'interpolation-string': [\r\n        {\r\n          pattern: re(\r\n            /(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source,\r\n            [mInterpolation]\r\n          ),\r\n          lookbehind: true,\r\n          greedy: true,\r\n          inside: createInterpolationInside(mInterpolation, mInterpolationRound)\r\n        },\r\n        {\r\n          pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [\r\n            sInterpolation\r\n          ]),\r\n          lookbehind: true,\r\n          greedy: true,\r\n          inside: createInterpolationInside(sInterpolation, sInterpolationRound)\r\n        }\r\n      ],\r\n      char: {\r\n        pattern: RegExp(character),\r\n        greedy: true\r\n      }\r\n    })\r\n    Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nmarkup.displayName = 'markup'\r\nmarkup.aliases = ['atom', 'html', 'mathml', 'rss', 'ssml', 'svg', 'xml']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function markup(Prism) {\r\n  Prism.languages.markup = {\r\n    comment: {\r\n      pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\r\n      greedy: true\r\n    },\r\n    prolog: {\r\n      pattern: /<\\?[\\s\\S]+?\\?>/,\r\n      greedy: true\r\n    },\r\n    doctype: {\r\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\r\n      pattern:\r\n        /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\r\n      greedy: true,\r\n      inside: {\r\n        'internal-subset': {\r\n          pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          inside: null // see below\r\n        },\r\n\r\n        string: {\r\n          pattern: /\"[^\"]*\"|'[^']*'/,\r\n          greedy: true\r\n        },\r\n        punctuation: /^<!|>$|[[\\]]/,\r\n        'doctype-tag': /^DOCTYPE/i,\r\n        name: /[^\\s<>'\"]+/\r\n      }\r\n    },\r\n    cdata: {\r\n      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\r\n      greedy: true\r\n    },\r\n    tag: {\r\n      pattern:\r\n        /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\r\n      greedy: true,\r\n      inside: {\r\n        tag: {\r\n          pattern: /^<\\/?[^\\s>\\/]+/,\r\n          inside: {\r\n            punctuation: /^<\\/?/,\r\n            namespace: /^[^\\s>\\/:]+:/\r\n          }\r\n        },\r\n        'special-attr': [],\r\n        'attr-value': {\r\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\r\n          inside: {\r\n            punctuation: [\r\n              {\r\n                pattern: /^=/,\r\n                alias: 'attr-equals'\r\n              },\r\n              {\r\n                pattern: /^(\\s*)[\"']|[\"']$/,\r\n                lookbehind: true\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        punctuation: /\\/?>/,\r\n        'attr-name': {\r\n          pattern: /[^\\s>\\/]+/,\r\n          inside: {\r\n            namespace: /^[^\\s>\\/:]+:/\r\n          }\r\n        }\r\n      }\r\n    },\r\n    entity: [\r\n      {\r\n        pattern: /&[\\da-z]{1,8};/i,\r\n        alias: 'named-entity'\r\n      },\r\n      /&#x?[\\da-f]{1,8};/i\r\n    ]\r\n  }\r\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\r\n    Prism.languages.markup['entity']\r\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside =\r\n    Prism.languages.markup\r\n\r\n  // Plugin to make entity title show the real entity, idea by Roman Komarov\r\n  Prism.hooks.add('wrap', function (env) {\r\n    if (env.type === 'entity') {\r\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\r\n    }\r\n  })\r\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\r\n    /**\r\n     * Adds an inlined language to markup.\r\n     *\r\n     * An example of an inlined language is CSS with `<style>` tags.\r\n     *\r\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\r\n     * case insensitive.\r\n     * @param {string} lang The language key.\r\n     * @example\r\n     * addInlined('style', 'css');\r\n     */\r\n    value: function addInlined(tagName, lang) {\r\n      var includedCdataInside = {}\r\n      includedCdataInside['language-' + lang] = {\r\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\r\n        lookbehind: true,\r\n        inside: Prism.languages[lang]\r\n      }\r\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\r\n      var inside = {\r\n        'included-cdata': {\r\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\r\n          inside: includedCdataInside\r\n        }\r\n      }\r\n      inside['language-' + lang] = {\r\n        pattern: /[\\s\\S]+/,\r\n        inside: Prism.languages[lang]\r\n      }\r\n      var def = {}\r\n      def[tagName] = {\r\n        pattern: RegExp(\r\n          /(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\r\n            /__/g,\r\n            function () {\r\n              return tagName\r\n            }\r\n          ),\r\n          'i'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: inside\r\n      }\r\n      Prism.languages.insertBefore('markup', 'cdata', def)\r\n    }\r\n  })\r\n  Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\r\n    /**\r\n     * Adds an pattern to highlight languages embedded in HTML attributes.\r\n     *\r\n     * An example of an inlined language is CSS with `style` attributes.\r\n     *\r\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\r\n     * case insensitive.\r\n     * @param {string} lang The language key.\r\n     * @example\r\n     * addAttribute('style', 'css');\r\n     */\r\n    value: function (attrName, lang) {\r\n      Prism.languages.markup.tag.inside['special-attr'].push({\r\n        pattern: RegExp(\r\n          /(^|[\"'\\s])/.source +\r\n            '(?:' +\r\n            attrName +\r\n            ')' +\r\n            /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\r\n          'i'\r\n        ),\r\n        lookbehind: true,\r\n        inside: {\r\n          'attr-name': /^[^\\s=]+/,\r\n          'attr-value': {\r\n            pattern: /=[\\s\\S]+/,\r\n            inside: {\r\n              value: {\r\n                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\r\n                lookbehind: true,\r\n                alias: [lang, 'language-' + lang],\r\n                inside: Prism.languages[lang]\r\n              },\r\n              punctuation: [\r\n                {\r\n                  pattern: /^=/,\r\n                  alias: 'attr-equals'\r\n                },\r\n                /\"|'/\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n  Prism.languages.html = Prism.languages.markup\r\n  Prism.languages.mathml = Prism.languages.markup\r\n  Prism.languages.svg = Prism.languages.markup\r\n  Prism.languages.xml = Prism.languages.extend('markup', {})\r\n  Prism.languages.ssml = Prism.languages.xml\r\n  Prism.languages.atom = Prism.languages.xml\r\n  Prism.languages.rss = Prism.languages.xml\r\n}\r\n", "// @ts-nocheck\r\ncss.displayName = 'css'\r\ncss.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function css(Prism) {\r\n  ;(function (Prism) {\r\n    var string =\r\n      /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/\r\n    Prism.languages.css = {\r\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\r\n      atrule: {\r\n        pattern: RegExp(\r\n          '@[\\\\w-](?:' +\r\n            /[^;{\\s\"']|\\s+(?!\\s)/.source +\r\n            '|' +\r\n            string.source +\r\n            ')*?' +\r\n            /(?:;|(?=\\s*\\{))/.source\r\n        ),\r\n        inside: {\r\n          rule: /^@[\\w-]+/,\r\n          'selector-function-argument': {\r\n            pattern:\r\n              /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\r\n            lookbehind: true,\r\n            alias: 'selector'\r\n          },\r\n          keyword: {\r\n            pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\r\n            lookbehind: true\r\n          }\r\n          // See rest below\r\n        }\r\n      },\r\n\r\n      url: {\r\n        // https://drafts.csswg.org/css-values-3/#urls\r\n        pattern: RegExp(\r\n          '\\\\burl\\\\((?:' +\r\n            string.source +\r\n            '|' +\r\n            /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source +\r\n            ')\\\\)',\r\n          'i'\r\n        ),\r\n        greedy: true,\r\n        inside: {\r\n          function: /^url/i,\r\n          punctuation: /^\\(|\\)$/,\r\n          string: {\r\n            pattern: RegExp('^' + string.source + '$'),\r\n            alias: 'url'\r\n          }\r\n        }\r\n      },\r\n      selector: {\r\n        pattern: RegExp(\r\n          '(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' +\r\n            string.source +\r\n            ')*(?=\\\\s*\\\\{)'\r\n        ),\r\n        lookbehind: true\r\n      },\r\n      string: {\r\n        pattern: string,\r\n        greedy: true\r\n      },\r\n      property: {\r\n        pattern:\r\n          /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\r\n        lookbehind: true\r\n      },\r\n      important: /!important\\b/i,\r\n      function: {\r\n        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\r\n        lookbehind: true\r\n      },\r\n      punctuation: /[(){};:,]/\r\n    }\r\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css\r\n    var markup = Prism.languages.markup\r\n    if (markup) {\r\n      markup.tag.addInlined('style', 'css')\r\n      markup.tag.addAttribute('style', 'css')\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ndiff.displayName = 'diff'\r\ndiff.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function diff(Prism) {\r\n  ;(function (Prism) {\r\n    Prism.languages.diff = {\r\n      coord: [\r\n        // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\r\n        /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\r\n        // Match \"@@ ... @@\" coord lines in unified diff.\r\n        /^@@.*@@$/m,\r\n        // Match coord lines in normal diff (starts with a number).\r\n        /^\\d.*$/m\r\n      ]\r\n\r\n      // deleted, inserted, unchanged, diff\r\n    }\r\n\r\n    /**\r\n     * A map from the name of a block to its line prefix.\r\n     *\r\n     * @type {Object<string, string>}\r\n     */\r\n    var PREFIXES = {\r\n      'deleted-sign': '-',\r\n      'deleted-arrow': '<',\r\n      'inserted-sign': '+',\r\n      'inserted-arrow': '>',\r\n      unchanged: ' ',\r\n      diff: '!'\r\n    }\r\n\r\n    // add a token for each prefix\r\n    Object.keys(PREFIXES).forEach(function (name) {\r\n      var prefix = PREFIXES[name]\r\n      var alias = []\r\n      if (!/^\\w+$/.test(name)) {\r\n        // \"deleted-sign\" -> \"deleted\"\r\n        alias.push(/\\w+/.exec(name)[0])\r\n      }\r\n      if (name === 'diff') {\r\n        alias.push('bold')\r\n      }\r\n      Prism.languages.diff[name] = {\r\n        pattern: RegExp(\r\n          '^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+',\r\n          'm'\r\n        ),\r\n        alias: alias,\r\n        inside: {\r\n          line: {\r\n            pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\r\n            lookbehind: true\r\n          },\r\n          prefix: {\r\n            pattern: /[\\s\\S]/,\r\n            alias: /\\w+/.exec(name)[0]\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    // make prefixes available to Diff plugin\r\n    Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\r\n      value: PREFIXES\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\ngo.displayName = 'go'\r\ngo.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function go(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.go = Prism.languages.extend('clike', {\r\n    string: {\r\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\r\n    boolean: /\\b(?:_|false|iota|nil|true)\\b/,\r\n    number: [\r\n      // binary and octal integers\r\n      /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i,\r\n      // hexadecimal integers and floats\r\n      /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\r\n      // decimal integers and floats\r\n      /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i\r\n    ],\r\n    operator:\r\n      /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\r\n    builtin:\r\n      /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\r\n  })\r\n  Prism.languages.insertBefore('go', 'string', {\r\n    char: {\r\n      pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\r\n      greedy: true\r\n    }\r\n  })\r\n  delete Prism.languages.go['class-name']\r\n}\r\n", "// @ts-nocheck\r\nini.displayName = 'ini'\r\nini.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function ini(Prism) {\r\n  Prism.languages.ini = {\r\n    /**\r\n     * The component mimics the behavior of the Win32 API parser.\r\n     *\r\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\r\n     */\r\n\r\n    comment: {\r\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\r\n      lookbehind: true\r\n    },\r\n    section: {\r\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        'section-name': {\r\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\r\n          lookbehind: true,\r\n          alias: 'selector'\r\n        },\r\n        punctuation: /\\[|\\]/\r\n      }\r\n    },\r\n    key: {\r\n      pattern:\r\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\r\n      lookbehind: true,\r\n      alias: 'attr-name'\r\n    },\r\n    value: {\r\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\r\n      lookbehind: true,\r\n      alias: 'attr-value',\r\n      inside: {\r\n        'inner-value': {\r\n          pattern: /^(\"|').+(?=\\1$)/,\r\n          lookbehind: true\r\n        }\r\n      }\r\n    },\r\n    punctuation: /=/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\njava.displayName = 'java'\r\njava.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function java(Prism) {\r\n  Prism.register(refractorClike)\r\n  ;(function (Prism) {\r\n    var keywords =\r\n      /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/\r\n\r\n    // full package (optional) + parent classes (optional)\r\n    var classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source\r\n\r\n    // based on the java naming conventions\r\n    var className = {\r\n      pattern: RegExp(\r\n        /(^|[^\\w.])/.source +\r\n          classNamePrefix +\r\n          /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source\r\n      ),\r\n      lookbehind: true,\r\n      inside: {\r\n        namespace: {\r\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\r\n          inside: {\r\n            punctuation: /\\./\r\n          }\r\n        },\r\n        punctuation: /\\./\r\n      }\r\n    }\r\n    Prism.languages.java = Prism.languages.extend('clike', {\r\n      string: {\r\n        pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      'class-name': [\r\n        className,\r\n        {\r\n          // variables, parameters, and constructor references\r\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\r\n          pattern: RegExp(\r\n            /(^|[^\\w.])/.source +\r\n              classNamePrefix +\r\n              /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/\r\n                .source\r\n          ),\r\n          lookbehind: true,\r\n          inside: className.inside\r\n        },\r\n        {\r\n          // class names based on keyword\r\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\r\n          pattern: RegExp(\r\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/\r\n              .source +\r\n              classNamePrefix +\r\n              /[A-Z]\\w*\\b/.source\r\n          ),\r\n          lookbehind: true,\r\n          inside: className.inside\r\n        }\r\n      ],\r\n      keyword: keywords,\r\n      function: [\r\n        Prism.languages.clike.function,\r\n        {\r\n          pattern: /(::\\s*)[a-z_]\\w*/,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      number:\r\n        /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\r\n      operator: {\r\n        pattern:\r\n          /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\r\n        lookbehind: true\r\n      },\r\n      constant: /\\b[A-Z][A-Z_\\d]+\\b/\r\n    })\r\n    Prism.languages.insertBefore('java', 'string', {\r\n      'triple-quoted-string': {\r\n        // http://openjdk.java.net/jeps/355#Description\r\n        pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\r\n        greedy: true,\r\n        alias: 'string'\r\n      },\r\n      char: {\r\n        pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\r\n        greedy: true\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('java', 'class-name', {\r\n      annotation: {\r\n        pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\r\n        lookbehind: true,\r\n        alias: 'punctuation'\r\n      },\r\n      generics: {\r\n        pattern:\r\n          /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\r\n        inside: {\r\n          'class-name': className,\r\n          keyword: keywords,\r\n          punctuation: /[<>(),.:]/,\r\n          operator: /[?&|]/\r\n        }\r\n      },\r\n      import: [\r\n        {\r\n          pattern: RegExp(\r\n            /(\\bimport\\s+)/.source +\r\n              classNamePrefix +\r\n              /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source\r\n          ),\r\n          lookbehind: true,\r\n          inside: {\r\n            namespace: className.inside.namespace,\r\n            punctuation: /\\./,\r\n            operator: /\\*/,\r\n            'class-name': /\\w+/\r\n          }\r\n        },\r\n        {\r\n          pattern: RegExp(\r\n            /(\\bimport\\s+static\\s+)/.source +\r\n              classNamePrefix +\r\n              /(?:\\w+|\\*)(?=\\s*;)/.source\r\n          ),\r\n          lookbehind: true,\r\n          alias: 'static',\r\n          inside: {\r\n            namespace: className.inside.namespace,\r\n            static: /\\b\\w+$/,\r\n            punctuation: /\\./,\r\n            operator: /\\*/,\r\n            'class-name': /\\w+/\r\n          }\r\n        }\r\n      ],\r\n      namespace: {\r\n        pattern: RegExp(\r\n          /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(\r\n            /<keyword>/g,\r\n            function () {\r\n              return keywords.source\r\n            }\r\n          )\r\n        ),\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /\\./\r\n        }\r\n      }\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nregex.displayName = 'regex'\r\nregex.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function regex(Prism) {\r\n  ;(function (Prism) {\r\n    var specialEscape = {\r\n      pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\r\n      alias: 'escape'\r\n    }\r\n    var escape =\r\n      /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/\r\n    var charSet = {\r\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\r\n      alias: 'class-name'\r\n    }\r\n    var charSetWithoutDot = {\r\n      pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\r\n      alias: 'class-name'\r\n    }\r\n    var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')'\r\n    var range = RegExp(rangeChar + '-' + rangeChar)\r\n\r\n    // the name of a capturing group\r\n    var groupName = {\r\n      pattern: /(<|')[^<>']+(?=[>']$)/,\r\n      lookbehind: true,\r\n      alias: 'variable'\r\n    }\r\n    Prism.languages.regex = {\r\n      'char-class': {\r\n        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\r\n        lookbehind: true,\r\n        inside: {\r\n          'char-class-negation': {\r\n            pattern: /(^\\[)\\^/,\r\n            lookbehind: true,\r\n            alias: 'operator'\r\n          },\r\n          'char-class-punctuation': {\r\n            pattern: /^\\[|\\]$/,\r\n            alias: 'punctuation'\r\n          },\r\n          range: {\r\n            pattern: range,\r\n            inside: {\r\n              escape: escape,\r\n              'range-punctuation': {\r\n                pattern: /-/,\r\n                alias: 'operator'\r\n              }\r\n            }\r\n          },\r\n          'special-escape': specialEscape,\r\n          'char-set': charSetWithoutDot,\r\n          escape: escape\r\n        }\r\n      },\r\n      'special-escape': specialEscape,\r\n      'char-set': charSet,\r\n      backreference: [\r\n        {\r\n          // a backreference which is not an octal escape\r\n          pattern: /\\\\(?![123][0-7]{2})[1-9]/,\r\n          alias: 'keyword'\r\n        },\r\n        {\r\n          pattern: /\\\\k<[^<>']+>/,\r\n          alias: 'keyword',\r\n          inside: {\r\n            'group-name': groupName\r\n          }\r\n        }\r\n      ],\r\n      anchor: {\r\n        pattern: /[$^]|\\\\[ABbGZz]/,\r\n        alias: 'function'\r\n      },\r\n      escape: escape,\r\n      group: [\r\n        {\r\n          // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\r\n          // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\r\n\r\n          // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\r\n          pattern:\r\n            /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\r\n          alias: 'punctuation',\r\n          inside: {\r\n            'group-name': groupName\r\n          }\r\n        },\r\n        {\r\n          pattern: /\\)/,\r\n          alias: 'punctuation'\r\n        }\r\n      ],\r\n      quantifier: {\r\n        pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\r\n        alias: 'number'\r\n      },\r\n      alternation: {\r\n        pattern: /\\|/,\r\n        alias: 'keyword'\r\n      }\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\njavascript.displayName = 'javascript'\r\njavascript.aliases = ['js']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function javascript(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.javascript = Prism.languages.extend('clike', {\r\n    'class-name': [\r\n      Prism.languages.clike['class-name'],\r\n      {\r\n        pattern:\r\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    keyword: [\r\n      {\r\n        pattern: /((?:^|\\})\\s*)catch\\b/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern:\r\n          /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\r\n    function:\r\n      /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\r\n    number: {\r\n      pattern: RegExp(\r\n        /(^|[^\\w$])/.source +\r\n          '(?:' +\r\n          // constant\r\n          (/NaN|Infinity/.source +\r\n            '|' +\r\n            // binary integer\r\n            /0[bB][01]+(?:_[01]+)*n?/.source +\r\n            '|' +\r\n            // octal integer\r\n            /0[oO][0-7]+(?:_[0-7]+)*n?/.source +\r\n            '|' +\r\n            // hexadecimal integer\r\n            /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\r\n            '|' +\r\n            // decimal bigint\r\n            /\\d+(?:_\\d+)*n/.source +\r\n            '|' +\r\n            // decimal number (integer or float) but no bigint\r\n            /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/\r\n              .source) +\r\n          ')' +\r\n          /(?![\\w$])/.source\r\n      ),\r\n      lookbehind: true\r\n    },\r\n    operator:\r\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\r\n  })\r\n  Prism.languages.javascript['class-name'][0].pattern =\r\n    /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/\r\n  Prism.languages.insertBefore('javascript', 'keyword', {\r\n    regex: {\r\n      pattern: RegExp(\r\n        // lookbehind\r\n        // eslint-disable-next-line regexp/no-dupe-characters-character-class\r\n        /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\r\n          // Regex pattern:\r\n          // There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\r\n          // classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\r\n          // with the only syntax, so we have to define 2 different regex patterns.\r\n          /\\//.source +\r\n          '(?:' +\r\n          /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/\r\n            .source +\r\n          '|' +\r\n          // `v` flag syntax. This supports 3 levels of nested character classes.\r\n          /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/\r\n            .source +\r\n          ')' +\r\n          // lookahead\r\n          /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/\r\n            .source\r\n      ),\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: {\r\n        'regex-source': {\r\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\r\n          lookbehind: true,\r\n          alias: 'language-regex',\r\n          inside: Prism.languages.regex\r\n        },\r\n        'regex-delimiter': /^\\/|\\/$/,\r\n        'regex-flags': /^[a-z]+$/\r\n      }\r\n    },\r\n    // This must be declared before keyword because we use \"function\" inside the look-forward\r\n    'function-variable': {\r\n      pattern:\r\n        /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\r\n      alias: 'function'\r\n    },\r\n    parameter: [\r\n      {\r\n        pattern:\r\n          /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\r\n        lookbehind: true,\r\n        inside: Prism.languages.javascript\r\n      },\r\n      {\r\n        pattern:\r\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\r\n        lookbehind: true,\r\n        inside: Prism.languages.javascript\r\n      },\r\n      {\r\n        pattern:\r\n          /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\r\n        lookbehind: true,\r\n        inside: Prism.languages.javascript\r\n      },\r\n      {\r\n        pattern:\r\n          /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\r\n        lookbehind: true,\r\n        inside: Prism.languages.javascript\r\n      }\r\n    ],\r\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\r\n  })\r\n  Prism.languages.insertBefore('javascript', 'string', {\r\n    hashbang: {\r\n      pattern: /^#!.*/,\r\n      greedy: true,\r\n      alias: 'comment'\r\n    },\r\n    'template-string': {\r\n      pattern:\r\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\r\n      greedy: true,\r\n      inside: {\r\n        'template-punctuation': {\r\n          pattern: /^`|`$/,\r\n          alias: 'string'\r\n        },\r\n        interpolation: {\r\n          pattern:\r\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\r\n          lookbehind: true,\r\n          inside: {\r\n            'interpolation-punctuation': {\r\n              pattern: /^\\$\\{|\\}$/,\r\n              alias: 'punctuation'\r\n            },\r\n            rest: Prism.languages.javascript\r\n          }\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    },\r\n    'string-property': {\r\n      pattern:\r\n        /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'property'\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('javascript', 'operator', {\r\n    'literal-property': {\r\n      pattern:\r\n        /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\r\n      lookbehind: true,\r\n      alias: 'property'\r\n    }\r\n  })\r\n  if (Prism.languages.markup) {\r\n    Prism.languages.markup.tag.addInlined('script', 'javascript')\r\n\r\n    // add attribute support for all DOM events.\r\n    // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\r\n    Prism.languages.markup.tag.addAttribute(\r\n      /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/\r\n        .source,\r\n      'javascript'\r\n    )\r\n  }\r\n  Prism.languages.js = Prism.languages.javascript\r\n}\r\n", "// @ts-nocheck\r\njson.displayName = 'json'\r\njson.aliases = ['webmanifest']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function json(Prism) {\r\n  // https://www.json.org/json-en.html\r\n  Prism.languages.json = {\r\n    property: {\r\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    comment: {\r\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n      greedy: true\r\n    },\r\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\r\n    punctuation: /[{}[\\],]/,\r\n    operator: /:/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    null: {\r\n      pattern: /\\bnull\\b/,\r\n      alias: 'keyword'\r\n    }\r\n  }\r\n  Prism.languages.webmanifest = Prism.languages.json\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nkotlin.displayName = 'kotlin'\r\nkotlin.aliases = ['kt', 'kts']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function kotlin(Prism) {\r\n  Prism.register(refractorClike)\r\n  ;(function (Prism) {\r\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\r\n      keyword: {\r\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\r\n        pattern:\r\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\r\n        lookbehind: true\r\n      },\r\n      function: [\r\n        {\r\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\r\n          lookbehind: true,\r\n          greedy: true\r\n        }\r\n      ],\r\n      number:\r\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\r\n      operator:\r\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\r\n    })\r\n    delete Prism.languages.kotlin['class-name']\r\n    var interpolationInside = {\r\n      'interpolation-punctuation': {\r\n        pattern: /^\\$\\{?|\\}$/,\r\n        alias: 'punctuation'\r\n      },\r\n      expression: {\r\n        pattern: /[\\s\\S]+/,\r\n        inside: Prism.languages.kotlin\r\n      }\r\n    }\r\n    Prism.languages.insertBefore('kotlin', 'string', {\r\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\r\n      'string-literal': [\r\n        {\r\n          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\r\n          alias: 'multiline',\r\n          inside: {\r\n            interpolation: {\r\n              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\r\n              inside: interpolationInside\r\n            },\r\n            string: /[\\s\\S]+/\r\n          }\r\n        },\r\n        {\r\n          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\r\n          alias: 'singleline',\r\n          inside: {\r\n            interpolation: {\r\n              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\r\n              lookbehind: true,\r\n              inside: interpolationInside\r\n            },\r\n            string: /[\\s\\S]+/\r\n          }\r\n        }\r\n      ],\r\n      char: {\r\n        // https://kotlinlang.org/spec/expressions.html#character-literals\r\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\r\n        greedy: true\r\n      }\r\n    })\r\n    delete Prism.languages.kotlin['string']\r\n    Prism.languages.insertBefore('kotlin', 'keyword', {\r\n      annotation: {\r\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\r\n        alias: 'builtin'\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('kotlin', 'function', {\r\n      label: {\r\n        pattern: /\\b\\w+@|@\\w+\\b/,\r\n        alias: 'symbol'\r\n      }\r\n    })\r\n    Prism.languages.kt = Prism.languages.kotlin\r\n    Prism.languages.kts = Prism.languages.kotlin\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorCss from './css.js'\r\nless.displayName = 'less'\r\nless.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function less(Prism) {\r\n  Prism.register(refractorCss)\r\n  /* FIXME :\r\n:extend() is not handled specifically : its highlighting is buggy.\r\nMixin usage must be inside a ruleset to be highlighted.\r\nAt-rules (e.g. import) containing interpolations are buggy.\r\nDetached rulesets are highlighted as at-rules.\r\nA comment before a mixin usage prevents the latter to be properly highlighted.\r\n*/\r\n\r\n  Prism.languages.less = Prism.languages.extend('css', {\r\n    comment: [\r\n      /\\/\\*[\\s\\S]*?\\*\\//,\r\n      {\r\n        pattern: /(^|[^\\\\])\\/\\/.*/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    atrule: {\r\n      pattern:\r\n        /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\r\n      inside: {\r\n        punctuation: /[:()]/\r\n      }\r\n    },\r\n    // selectors and mixins are considered the same\r\n    selector: {\r\n      pattern:\r\n        /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\r\n      inside: {\r\n        // mixin parameters\r\n        variable: /@+[\\w-]+/\r\n      }\r\n    },\r\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\r\n    operator: /[+\\-*\\/]/\r\n  })\r\n  Prism.languages.insertBefore('less', 'property', {\r\n    variable: [\r\n      // Variable declaration (the colon must be consumed!)\r\n      {\r\n        pattern: /@[\\w-]+\\s*:/,\r\n        inside: {\r\n          punctuation: /:/\r\n        }\r\n      },\r\n      // Variable usage\r\n      /@@?[\\w-]+/\r\n    ],\r\n    'mixin-usage': {\r\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\r\n      lookbehind: true,\r\n      alias: 'function'\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nlua.displayName = 'lua'\r\nlua.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function lua(Prism) {\r\n  Prism.languages.lua = {\r\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\r\n    // \\z may be used to skip the following space\r\n    string: {\r\n      pattern:\r\n        /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\r\n      greedy: true\r\n    },\r\n    number:\r\n      /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\r\n    keyword:\r\n      /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\r\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\r\n    operator: [\r\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\r\n      {\r\n        // Match \"..\" but don't break \"...\"\r\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nmakefile.displayName = 'makefile'\r\nmakefile.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function makefile(Prism) {\r\n  Prism.languages.makefile = {\r\n    comment: {\r\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\r\n      lookbehind: true\r\n    },\r\n    string: {\r\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true\r\n    },\r\n    'builtin-target': {\r\n      pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\r\n      alias: 'builtin'\r\n    },\r\n    target: {\r\n      pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\r\n      alias: 'symbol',\r\n      inside: {\r\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\r\n      }\r\n    },\r\n    variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\r\n    // Directives\r\n    keyword:\r\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\r\n    function: {\r\n      pattern:\r\n        /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\r\n      lookbehind: true\r\n    },\r\n    operator: /(?:::|[?:+!])?=|[|@]/,\r\n    punctuation: /[:;(){}]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nyaml.displayName = 'yaml'\r\nyaml.aliases = ['yml']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function yaml(Prism) {\r\n  ;(function (Prism) {\r\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\r\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\r\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/\r\n    // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\r\n    var tag =\r\n      /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/\r\n    // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\r\n    var properties =\r\n      '(?:' +\r\n      tag.source +\r\n      '(?:[ \\t]+' +\r\n      anchorOrAlias.source +\r\n      ')?|' +\r\n      anchorOrAlias.source +\r\n      '(?:[ \\t]+' +\r\n      tag.source +\r\n      ')?)'\r\n    // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\r\n    // This is a simplified version that doesn't support \"#\" and multiline keys\r\n    // All these long scarry character classes are simplified versions of YAML's characters\r\n    var plainKey =\r\n      /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\r\n        /<PLAIN>/g,\r\n        function () {\r\n          return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\r\n            .source\r\n        }\r\n      )\r\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\r\n\r\n    /**\r\n     *\r\n     * @param {string} value\r\n     * @param {string} [flags]\r\n     * @returns {RegExp}\r\n     */\r\n    function createValuePattern(value, flags) {\r\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\r\n      var pattern =\r\n        /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source\r\n          .replace(/<<prop>>/g, function () {\r\n            return properties\r\n          })\r\n          .replace(/<<value>>/g, function () {\r\n            return value\r\n          })\r\n      return RegExp(pattern, flags)\r\n    }\r\n    Prism.languages.yaml = {\r\n      scalar: {\r\n        pattern: RegExp(\r\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\r\n            /<<prop>>/g,\r\n            function () {\r\n              return properties\r\n            }\r\n          )\r\n        ),\r\n        lookbehind: true,\r\n        alias: 'string'\r\n      },\r\n      comment: /#.*/,\r\n      key: {\r\n        pattern: RegExp(\r\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\r\n            .replace(/<<prop>>/g, function () {\r\n              return properties\r\n            })\r\n            .replace(/<<key>>/g, function () {\r\n              return '(?:' + plainKey + '|' + string + ')'\r\n            })\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'atrule'\r\n      },\r\n      directive: {\r\n        pattern: /(^[ \\t]*)%.+/m,\r\n        lookbehind: true,\r\n        alias: 'important'\r\n      },\r\n      datetime: {\r\n        pattern: createValuePattern(\r\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\r\n            .source\r\n        ),\r\n        lookbehind: true,\r\n        alias: 'number'\r\n      },\r\n      boolean: {\r\n        pattern: createValuePattern(/false|true/.source, 'i'),\r\n        lookbehind: true,\r\n        alias: 'important'\r\n      },\r\n      null: {\r\n        pattern: createValuePattern(/null|~/.source, 'i'),\r\n        lookbehind: true,\r\n        alias: 'important'\r\n      },\r\n      string: {\r\n        pattern: createValuePattern(string),\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      number: {\r\n        pattern: createValuePattern(\r\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\r\n            .source,\r\n          'i'\r\n        ),\r\n        lookbehind: true\r\n      },\r\n      tag: tag,\r\n      important: anchorOrAlias,\r\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\r\n    }\r\n    Prism.languages.yml = Prism.languages.yaml\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkup from './markup.js'\r\nmarkdown.displayName = 'markdown'\r\nmarkdown.aliases = ['md']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function markdown(Prism) {\r\n  Prism.register(refractorMarkup)\r\n  ;(function (Prism) {\r\n    // Allow only one line break\r\n    var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source\r\n\r\n    /**\r\n     * This function is intended for the creation of the bold or italic pattern.\r\n     *\r\n     * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\r\n     *\r\n     * _Note:_ Keep in mind that this adds a capturing group.\r\n     *\r\n     * @param {string} pattern\r\n     * @returns {RegExp}\r\n     */\r\n    function createInline(pattern) {\r\n      pattern = pattern.replace(/<inner>/g, function () {\r\n        return inner\r\n      })\r\n      return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')')\r\n    }\r\n    var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/\r\n      .source\r\n    var tableRow =\r\n      /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(\r\n        /__/g,\r\n        function () {\r\n          return tableCell\r\n        }\r\n      )\r\n    var tableLine =\r\n      /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/\r\n        .source\r\n    Prism.languages.markdown = Prism.languages.extend('markup', {})\r\n    Prism.languages.insertBefore('markdown', 'prolog', {\r\n      'front-matter-block': {\r\n        pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          punctuation: /^---|---$/,\r\n          'front-matter': {\r\n            pattern: /\\S+(?:\\s+\\S+)*/,\r\n            alias: ['yaml', 'language-yaml'],\r\n            inside: Prism.languages.yaml\r\n          }\r\n        }\r\n      },\r\n      blockquote: {\r\n        // > ...\r\n        pattern: /^>(?:[\\t ]*>)*/m,\r\n        alias: 'punctuation'\r\n      },\r\n      table: {\r\n        pattern: RegExp(\r\n          '^' + tableRow + tableLine + '(?:' + tableRow + ')*',\r\n          'm'\r\n        ),\r\n        inside: {\r\n          'table-data-rows': {\r\n            pattern: RegExp(\r\n              '^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'\r\n            ),\r\n            lookbehind: true,\r\n            inside: {\r\n              'table-data': {\r\n                pattern: RegExp(tableCell),\r\n                inside: Prism.languages.markdown\r\n              },\r\n              punctuation: /\\|/\r\n            }\r\n          },\r\n          'table-line': {\r\n            pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\r\n            lookbehind: true,\r\n            inside: {\r\n              punctuation: /\\||:?-{3,}:?/\r\n            }\r\n          },\r\n          'table-header-row': {\r\n            pattern: RegExp('^' + tableRow + '$'),\r\n            inside: {\r\n              'table-header': {\r\n                pattern: RegExp(tableCell),\r\n                alias: 'important',\r\n                inside: Prism.languages.markdown\r\n              },\r\n              punctuation: /\\|/\r\n            }\r\n          }\r\n        }\r\n      },\r\n      code: [\r\n        {\r\n          // Prefixed by 4 spaces or 1 tab and preceded by an empty line\r\n          pattern:\r\n            /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\r\n          lookbehind: true,\r\n          alias: 'keyword'\r\n        },\r\n        {\r\n          // ```optional language\r\n          // code block\r\n          // ```\r\n          pattern: /^```[\\s\\S]*?^```$/m,\r\n          greedy: true,\r\n          inside: {\r\n            'code-block': {\r\n              pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\r\n              lookbehind: true\r\n            },\r\n            'code-language': {\r\n              pattern: /^(```).+/,\r\n              lookbehind: true\r\n            },\r\n            punctuation: /```/\r\n          }\r\n        }\r\n      ],\r\n      title: [\r\n        {\r\n          // title 1\r\n          // =======\r\n\r\n          // title 2\r\n          // -------\r\n          pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\r\n          alias: 'important',\r\n          inside: {\r\n            punctuation: /==+$|--+$/\r\n          }\r\n        },\r\n        {\r\n          // # title 1\r\n          // ###### title 6\r\n          pattern: /(^\\s*)#.+/m,\r\n          lookbehind: true,\r\n          alias: 'important',\r\n          inside: {\r\n            punctuation: /^#+|#+$/\r\n          }\r\n        }\r\n      ],\r\n      hr: {\r\n        // ***\r\n        // ---\r\n        // * * *\r\n        // -----------\r\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\r\n        lookbehind: true,\r\n        alias: 'punctuation'\r\n      },\r\n      list: {\r\n        // * item\r\n        // + item\r\n        // - item\r\n        // 1. item\r\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\r\n        lookbehind: true,\r\n        alias: 'punctuation'\r\n      },\r\n      'url-reference': {\r\n        // [id]: http://example.com \"Optional title\"\r\n        // [id]: http://example.com 'Optional title'\r\n        // [id]: http://example.com (Optional title)\r\n        // [id]: <http://example.com> \"Optional title\"\r\n        pattern:\r\n          /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\r\n        inside: {\r\n          variable: {\r\n            pattern: /^(!?\\[)[^\\]]+/,\r\n            lookbehind: true\r\n          },\r\n          string:\r\n            /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\r\n          punctuation: /^[\\[\\]!:]|[<>]/\r\n        },\r\n        alias: 'url'\r\n      },\r\n      bold: {\r\n        // **strong**\r\n        // __strong__\r\n\r\n        // allow one nested instance of italic text using the same delimiter\r\n        pattern: createInline(\r\n          /\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/\r\n            .source\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          content: {\r\n            pattern: /(^..)[\\s\\S]+(?=..$)/,\r\n            lookbehind: true,\r\n            inside: {} // see below\r\n          },\r\n\r\n          punctuation: /\\*\\*|__/\r\n        }\r\n      },\r\n      italic: {\r\n        // *em*\r\n        // _em_\r\n\r\n        // allow one nested instance of bold text using the same delimiter\r\n        pattern: createInline(\r\n          /\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/\r\n            .source\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          content: {\r\n            pattern: /(^.)[\\s\\S]+(?=.$)/,\r\n            lookbehind: true,\r\n            inside: {} // see below\r\n          },\r\n\r\n          punctuation: /[*_]/\r\n        }\r\n      },\r\n      strike: {\r\n        // ~~strike through~~\r\n        // ~strike~\r\n        // eslint-disable-next-line regexp/strict\r\n        pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          content: {\r\n            pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\r\n            lookbehind: true,\r\n            inside: {} // see below\r\n          },\r\n\r\n          punctuation: /~~?/\r\n        }\r\n      },\r\n      'code-snippet': {\r\n        // `code`\r\n        // ``code``\r\n        pattern:\r\n          /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: ['code', 'keyword']\r\n      },\r\n      url: {\r\n        // [example](http://example.com \"Optional title\")\r\n        // [example][id]\r\n        // [example] [id]\r\n        pattern: createInline(\r\n          /!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/\r\n            .source\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          operator: /^!/,\r\n          content: {\r\n            pattern: /(^\\[)[^\\]]+(?=\\])/,\r\n            lookbehind: true,\r\n            inside: {} // see below\r\n          },\r\n\r\n          variable: {\r\n            pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\r\n            lookbehind: true\r\n          },\r\n          url: {\r\n            pattern: /(^\\]\\()[^\\s)]+/,\r\n            lookbehind: true\r\n          },\r\n          string: {\r\n            pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\r\n            lookbehind: true\r\n          }\r\n        }\r\n      }\r\n    })\r\n    ;['url', 'bold', 'italic', 'strike'].forEach(function (token) {\r\n      ;['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (\r\n        inside\r\n      ) {\r\n        if (token !== inside) {\r\n          Prism.languages.markdown[token].inside.content.inside[inside] =\r\n            Prism.languages.markdown[inside]\r\n        }\r\n      })\r\n    })\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      if (env.language !== 'markdown' && env.language !== 'md') {\r\n        return\r\n      }\r\n      function walkTokens(tokens) {\r\n        if (!tokens || typeof tokens === 'string') {\r\n          return\r\n        }\r\n        for (var i = 0, l = tokens.length; i < l; i++) {\r\n          var token = tokens[i]\r\n          if (token.type !== 'code') {\r\n            walkTokens(token.content)\r\n            continue\r\n          }\r\n\r\n          /*\r\n           * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\r\n           * is optional. But the grammar is defined so that there is only one case we have to handle:\r\n           *\r\n           * token.content = [\r\n           *     <span class=\"punctuation\">```</span>,\r\n           *     <span class=\"code-language\">xxxx</span>,\r\n           *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\r\n           *     <span class=\"code-block\">...</span>,\r\n           *     '\\n', // exactly one new lines again\r\n           *     <span class=\"punctuation\">```</span>\r\n           * ];\r\n           */\r\n\r\n          var codeLang = token.content[1]\r\n          var codeBlock = token.content[3]\r\n          if (\r\n            codeLang &&\r\n            codeBlock &&\r\n            codeLang.type === 'code-language' &&\r\n            codeBlock.type === 'code-block' &&\r\n            typeof codeLang.content === 'string'\r\n          ) {\r\n            // this might be a language that Prism does not support\r\n\r\n            // do some replacements to support C++, C#, and F#\r\n            var lang = codeLang.content\r\n              .replace(/\\b#/g, 'sharp')\r\n              .replace(/\\b\\+\\+/g, 'pp')\r\n            // only use the first word\r\n            lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase()\r\n            var alias = 'language-' + lang\r\n\r\n            // add alias\r\n            if (!codeBlock.alias) {\r\n              codeBlock.alias = [alias]\r\n            } else if (typeof codeBlock.alias === 'string') {\r\n              codeBlock.alias = [codeBlock.alias, alias]\r\n            } else {\r\n              codeBlock.alias.push(alias)\r\n            }\r\n          }\r\n        }\r\n      }\r\n      walkTokens(env.tokens)\r\n    })\r\n    Prism.hooks.add('wrap', function (env) {\r\n      if (env.type !== 'code-block') {\r\n        return\r\n      }\r\n      var codeLang = ''\r\n      for (var i = 0, l = env.classes.length; i < l; i++) {\r\n        var cls = env.classes[i]\r\n        var match = /language-(.+)/.exec(cls)\r\n        if (match) {\r\n          codeLang = match[1]\r\n          break\r\n        }\r\n      }\r\n      var grammar = Prism.languages[codeLang]\r\n      if (!grammar) {\r\n        if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\r\n          var id =\r\n            'md-' +\r\n            new Date().valueOf() +\r\n            '-' +\r\n            Math.floor(Math.random() * 1e16)\r\n          env.attributes['id'] = id\r\n          Prism.plugins.autoloader.loadLanguages(codeLang, function () {\r\n            var ele = document.getElementById(id)\r\n            if (ele) {\r\n              ele.innerHTML = Prism.highlight(\r\n                ele.textContent,\r\n                Prism.languages[codeLang],\r\n                codeLang\r\n              )\r\n            }\r\n          })\r\n        }\r\n      } else {\r\n        env.content = Prism.highlight(env.content.value, grammar, codeLang)\r\n      }\r\n    })\r\n    var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi')\r\n\r\n    /**\r\n     * A list of known entity names.\r\n     *\r\n     * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\r\n     *\r\n     * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\r\n     */\r\n    var KNOWN_ENTITY_NAMES = {\r\n      amp: '&',\r\n      lt: '<',\r\n      gt: '>',\r\n      quot: '\"'\r\n    }\r\n\r\n    // IE 11 doesn't support `String.fromCodePoint`\r\n    var fromCodePoint = String.fromCodePoint || String.fromCharCode\r\n\r\n    /**\r\n     * Returns the text content of a given HTML source code string.\r\n     *\r\n     * @param {string} html\r\n     * @returns {string}\r\n     */\r\n    function textContent(html) {\r\n      // remove all tags\r\n      var text = html.replace(tagPattern, '')\r\n\r\n      // decode known entities\r\n      text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\r\n        code = code.toLowerCase()\r\n        if (code[0] === '#') {\r\n          var value\r\n          if (code[1] === 'x') {\r\n            value = parseInt(code.slice(2), 16)\r\n          } else {\r\n            value = Number(code.slice(1))\r\n          }\r\n          return fromCodePoint(value)\r\n        } else {\r\n          var known = KNOWN_ENTITY_NAMES[code]\r\n          if (known) {\r\n            return known\r\n          }\r\n\r\n          // unable to decode\r\n          return m\r\n        }\r\n      })\r\n      return text\r\n    }\r\n    Prism.languages.md = Prism.languages.markdown\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorC from './c.js'\r\nobjectivec.displayName = 'objectivec'\r\nobjectivec.aliases = ['objc']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function objectivec(Prism) {\r\n  Prism.register(refractorC)\r\n  Prism.languages.objectivec = Prism.languages.extend('c', {\r\n    string: {\r\n      pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\r\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\r\n  })\r\n  delete Prism.languages.objectivec['class-name']\r\n  Prism.languages.objc = Prism.languages.objectivec\r\n}\r\n", "// @ts-nocheck\r\nperl.displayName = 'perl'\r\nperl.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function perl(Prism) {\r\n  ;(function (Prism) {\r\n    var brackets =\r\n      /(?:\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}|\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)/\r\n        .source\r\n    Prism.languages.perl = {\r\n      comment: [\r\n        {\r\n          // POD\r\n          pattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\r\n          lookbehind: true,\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern: /(^|[^\\\\$])#.*/,\r\n          lookbehind: true,\r\n          greedy: true\r\n        }\r\n      ],\r\n      // TODO Could be nice to handle Heredoc too.\r\n      string: [\r\n        {\r\n          pattern: RegExp(\r\n            /\\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\\s*/.source +\r\n              '(?:' +\r\n              [\r\n                // q/.../\r\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\r\n                // q a...a\r\n                // eslint-disable-next-line regexp/strict\r\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\r\n                // q(...)\r\n                // q{...}\r\n                // q[...]\r\n                // q<...>\r\n                brackets\r\n              ].join('|') +\r\n              ')'\r\n          ),\r\n          greedy: true\r\n        },\r\n        // \"...\", `...`\r\n        {\r\n          pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\r\n          greedy: true\r\n        },\r\n        // '...'\r\n        // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\r\n        {\r\n          pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\r\n          greedy: true\r\n        }\r\n      ],\r\n      regex: [\r\n        {\r\n          pattern: RegExp(\r\n            /\\b(?:m|qr)(?![a-zA-Z0-9])\\s*/.source +\r\n              '(?:' +\r\n              [\r\n                // m/.../\r\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\r\n                // m a...a\r\n                // eslint-disable-next-line regexp/strict\r\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\r\n                // m(...)\r\n                // m{...}\r\n                // m[...]\r\n                // m<...>\r\n                brackets\r\n              ].join('|') +\r\n              ')' +\r\n              /[msixpodualngc]*/.source\r\n          ),\r\n          greedy: true\r\n        },\r\n        // The lookbehinds prevent -s from breaking\r\n        {\r\n          pattern: RegExp(\r\n            /(^|[^-])\\b(?:s|tr|y)(?![a-zA-Z0-9])\\s*/.source +\r\n              '(?:' +\r\n              [\r\n                // s/.../.../\r\n                // eslint-disable-next-line regexp/strict\r\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/\r\n                  .source,\r\n                // s a...a...a\r\n                // eslint-disable-next-line regexp/strict\r\n                /([a-zA-Z0-9])(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3/\r\n                  .source,\r\n                // s(...)(...)\r\n                // s{...}{...}\r\n                // s[...][...]\r\n                // s<...><...>\r\n                // s(...)[...]\r\n                brackets + /\\s*/.source + brackets\r\n              ].join('|') +\r\n              ')' +\r\n              /[msixpodualngcer]*/.source\r\n          ),\r\n          lookbehind: true,\r\n          greedy: true\r\n        },\r\n        // /.../\r\n        // The look-ahead tries to prevent two divisions on\r\n        // the same line from being highlighted as regex.\r\n        // This does not support multi-line regex.\r\n        {\r\n          pattern:\r\n            /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\\b))/,\r\n          greedy: true\r\n        }\r\n      ],\r\n      // FIXME Not sure about the handling of ::, ', and #\r\n      variable: [\r\n        // ${^POSTMATCH}\r\n        /[&*$@%]\\{\\^[A-Z]+\\}/,\r\n        // $^V\r\n        /[&*$@%]\\^[A-Z_]/,\r\n        // ${...}\r\n        /[&*$@%]#?(?=\\{)/,\r\n        // $foo\r\n        /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/,\r\n        // $1\r\n        /[&*$@%]\\d+/,\r\n        // $_, @_, %!\r\n        // The negative lookahead prevents from breaking the %= operator\r\n        /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\r\n      ],\r\n      filehandle: {\r\n        // <>, <FOO>, _\r\n        pattern: /<(?![<=])\\S*?>|\\b_\\b/,\r\n        alias: 'symbol'\r\n      },\r\n      'v-string': {\r\n        // v1.2, 1.2.3\r\n        pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\r\n        alias: 'string'\r\n      },\r\n      function: {\r\n        pattern: /(\\bsub[ \\t]+)\\w+/,\r\n        lookbehind: true\r\n      },\r\n      keyword:\r\n        /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\r\n      number:\r\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\r\n      operator:\r\n        /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\\b/,\r\n      punctuation: /[{}[\\];(),:]/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkup from './markup.js'\r\nmarkupTemplating.displayName = 'markup-templating'\r\nmarkupTemplating.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function markupTemplating(Prism) {\r\n  Prism.register(refractorMarkup)\r\n  ;(function (Prism) {\r\n    /**\r\n     * Returns the placeholder for the given language id and index.\r\n     *\r\n     * @param {string} language\r\n     * @param {string|number} index\r\n     * @returns {string}\r\n     */\r\n    function getPlaceholder(language, index) {\r\n      return '___' + language.toUpperCase() + index + '___'\r\n    }\r\n    Object.defineProperties((Prism.languages['markup-templating'] = {}), {\r\n      buildPlaceholders: {\r\n        /**\r\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\r\n         *\r\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\r\n         * `true` will be replaced.\r\n         *\r\n         * @param {object} env The environment of the `before-tokenize` hook.\r\n         * @param {string} language The language id.\r\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\r\n         * @param {(match: string) => boolean} [replaceFilter]\r\n         */\r\n        value: function (env, language, placeholderPattern, replaceFilter) {\r\n          if (env.language !== language) {\r\n            return\r\n          }\r\n          var tokenStack = (env.tokenStack = [])\r\n          env.code = env.code.replace(placeholderPattern, function (match) {\r\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\r\n              return match\r\n            }\r\n            var i = tokenStack.length\r\n            var placeholder\r\n\r\n            // Check for existing strings\r\n            while (\r\n              env.code.indexOf((placeholder = getPlaceholder(language, i))) !==\r\n              -1\r\n            ) {\r\n              ++i\r\n            }\r\n\r\n            // Create a sparse array\r\n            tokenStack[i] = match\r\n            return placeholder\r\n          })\r\n\r\n          // Switch the grammar to markup\r\n          env.grammar = Prism.languages.markup\r\n        }\r\n      },\r\n      tokenizePlaceholders: {\r\n        /**\r\n         * Replace placeholders with proper tokens after tokenizing.\r\n         *\r\n         * @param {object} env The environment of the `after-tokenize` hook.\r\n         * @param {string} language The language id.\r\n         */\r\n        value: function (env, language) {\r\n          if (env.language !== language || !env.tokenStack) {\r\n            return\r\n          }\r\n\r\n          // Switch the grammar back\r\n          env.grammar = Prism.languages[language]\r\n          var j = 0\r\n          var keys = Object.keys(env.tokenStack)\r\n          function walkTokens(tokens) {\r\n            for (var i = 0; i < tokens.length; i++) {\r\n              // all placeholders are replaced already\r\n              if (j >= keys.length) {\r\n                break\r\n              }\r\n              var token = tokens[i]\r\n              if (\r\n                typeof token === 'string' ||\r\n                (token.content && typeof token.content === 'string')\r\n              ) {\r\n                var k = keys[j]\r\n                var t = env.tokenStack[k]\r\n                var s = typeof token === 'string' ? token : token.content\r\n                var placeholder = getPlaceholder(language, k)\r\n                var index = s.indexOf(placeholder)\r\n                if (index > -1) {\r\n                  ++j\r\n                  var before = s.substring(0, index)\r\n                  var middle = new Prism.Token(\r\n                    language,\r\n                    Prism.tokenize(t, env.grammar),\r\n                    'language-' + language,\r\n                    t\r\n                  )\r\n                  var after = s.substring(index + placeholder.length)\r\n                  var replacement = []\r\n                  if (before) {\r\n                    replacement.push.apply(replacement, walkTokens([before]))\r\n                  }\r\n                  replacement.push(middle)\r\n                  if (after) {\r\n                    replacement.push.apply(replacement, walkTokens([after]))\r\n                  }\r\n                  if (typeof token === 'string') {\r\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement))\r\n                  } else {\r\n                    token.content = replacement\r\n                  }\r\n                }\r\n              } else if (\r\n                token.content /* && typeof token.content !== 'string' */\r\n              ) {\r\n                walkTokens(token.content)\r\n              }\r\n            }\r\n            return tokens\r\n          }\r\n          walkTokens(env.tokens)\r\n        }\r\n      }\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkupTemplating from './markup-templating.js'\r\nphp.displayName = 'php'\r\nphp.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function php(Prism) {\r\n  Prism.register(refractorMarkupTemplating)\r\n  /**\r\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\r\n   * Modified by Miles Johnson: http://milesj.me\r\n   * Rewritten by Tom Pavelec\r\n   *\r\n   * Supports PHP 5.3 - 8.0\r\n   */\r\n  ;(function (Prism) {\r\n    var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/\r\n    var constant = [\r\n      {\r\n        pattern: /\\b(?:false|true)\\b/i,\r\n        alias: 'boolean'\r\n      },\r\n      {\r\n        pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\r\n        greedy: true,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\r\n        greedy: true,\r\n        lookbehind: true\r\n      },\r\n      /\\b(?:null)\\b/i,\r\n      /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/\r\n    ]\r\n    var number =\r\n      /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\r\n    var operator =\r\n      /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/\r\n    var punctuation = /[{}\\[\\](),:;]/\r\n    Prism.languages.php = {\r\n      delimiter: {\r\n        pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\r\n        alias: 'important'\r\n      },\r\n      comment: comment,\r\n      variable: /\\$+(?:\\w+\\b|(?=\\{))/,\r\n      package: {\r\n        pattern:\r\n          /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /\\\\/\r\n        }\r\n      },\r\n      'class-name-definition': {\r\n        pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\r\n        lookbehind: true,\r\n        alias: 'class-name'\r\n      },\r\n      'function-definition': {\r\n        pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\r\n        lookbehind: true,\r\n        alias: 'function'\r\n      },\r\n      keyword: [\r\n        {\r\n          pattern:\r\n            /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\r\n          alias: 'type-casting',\r\n          greedy: true,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern:\r\n            /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\r\n          alias: 'type-hint',\r\n          greedy: true,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern:\r\n            /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|never|object|self|static|string|void)\\b/i,\r\n          alias: 'return-type',\r\n          greedy: true,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern:\r\n            /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\r\n          alias: 'type-declaration',\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\r\n          alias: 'type-declaration',\r\n          greedy: true,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\r\n          alias: 'static-context',\r\n          greedy: true\r\n        },\r\n        {\r\n          // yield from\r\n          pattern: /(\\byield\\s+)from\\b/i,\r\n          lookbehind: true\r\n        },\r\n        // `class` is always a keyword unlike other keywords\r\n        /\\bclass\\b/i,\r\n        {\r\n          // https://www.php.net/manual/en/reserved.keywords.php\r\n          //\r\n          // keywords cannot be preceded by \"->\"\r\n          // the complex lookbehind means `(?<!(?:->|::)\\s*)`\r\n          pattern:\r\n            /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|never|new|or|parent|print|private|protected|public|readonly|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      'argument-name': {\r\n        pattern: /([(,]\\s*)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\r\n        lookbehind: true\r\n      },\r\n      'class-name': [\r\n        {\r\n          pattern:\r\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\r\n          greedy: true,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\r\n          greedy: true,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\r\n          alias: 'class-name-fully-qualified',\r\n          greedy: true,\r\n          lookbehind: true,\r\n          inside: {\r\n            punctuation: /\\\\/\r\n          }\r\n        },\r\n        {\r\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\r\n          alias: 'class-name-fully-qualified',\r\n          greedy: true,\r\n          inside: {\r\n            punctuation: /\\\\/\r\n          }\r\n        },\r\n        {\r\n          pattern:\r\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\r\n          alias: 'class-name-fully-qualified',\r\n          greedy: true,\r\n          lookbehind: true,\r\n          inside: {\r\n            punctuation: /\\\\/\r\n          }\r\n        },\r\n        {\r\n          pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\r\n          alias: 'type-declaration',\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\r\n          alias: ['class-name-fully-qualified', 'type-declaration'],\r\n          greedy: true,\r\n          inside: {\r\n            punctuation: /\\\\/\r\n          }\r\n        },\r\n        {\r\n          pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\r\n          alias: 'static-context',\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\r\n          alias: ['class-name-fully-qualified', 'static-context'],\r\n          greedy: true,\r\n          inside: {\r\n            punctuation: /\\\\/\r\n          }\r\n        },\r\n        {\r\n          pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\r\n          alias: 'type-hint',\r\n          greedy: true,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\r\n          alias: ['class-name-fully-qualified', 'type-hint'],\r\n          greedy: true,\r\n          lookbehind: true,\r\n          inside: {\r\n            punctuation: /\\\\/\r\n          }\r\n        },\r\n        {\r\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\r\n          alias: 'return-type',\r\n          greedy: true,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\r\n          alias: ['class-name-fully-qualified', 'return-type'],\r\n          greedy: true,\r\n          lookbehind: true,\r\n          inside: {\r\n            punctuation: /\\\\/\r\n          }\r\n        }\r\n      ],\r\n      constant: constant,\r\n      function: {\r\n        pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /\\\\/\r\n        }\r\n      },\r\n      property: {\r\n        pattern: /(->\\s*)\\w+/,\r\n        lookbehind: true\r\n      },\r\n      number: number,\r\n      operator: operator,\r\n      punctuation: punctuation\r\n    }\r\n    var string_interpolation = {\r\n      pattern:\r\n        /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\r\n      lookbehind: true,\r\n      inside: Prism.languages.php\r\n    }\r\n    var string = [\r\n      {\r\n        pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\r\n        alias: 'nowdoc-string',\r\n        greedy: true,\r\n        inside: {\r\n          delimiter: {\r\n            pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\r\n            alias: 'symbol',\r\n            inside: {\r\n              punctuation: /^<<<'?|[';]$/\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        pattern:\r\n          /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\r\n        alias: 'heredoc-string',\r\n        greedy: true,\r\n        inside: {\r\n          delimiter: {\r\n            pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\r\n            alias: 'symbol',\r\n            inside: {\r\n              punctuation: /^<<<\"?|[\";]$/\r\n            }\r\n          },\r\n          interpolation: string_interpolation\r\n        }\r\n      },\r\n      {\r\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\r\n        alias: 'backtick-quoted-string',\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\r\n        alias: 'single-quoted-string',\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\r\n        alias: 'double-quoted-string',\r\n        greedy: true,\r\n        inside: {\r\n          interpolation: string_interpolation\r\n        }\r\n      }\r\n    ]\r\n    Prism.languages.insertBefore('php', 'variable', {\r\n      string: string,\r\n      attribute: {\r\n        pattern:\r\n          /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\r\n        greedy: true,\r\n        inside: {\r\n          'attribute-content': {\r\n            pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\r\n            lookbehind: true,\r\n            // inside can appear subset of php\r\n            inside: {\r\n              comment: comment,\r\n              string: string,\r\n              'attribute-class-name': [\r\n                {\r\n                  pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\r\n                  alias: 'class-name',\r\n                  greedy: true,\r\n                  lookbehind: true\r\n                },\r\n                {\r\n                  pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\r\n                  alias: ['class-name', 'class-name-fully-qualified'],\r\n                  greedy: true,\r\n                  lookbehind: true,\r\n                  inside: {\r\n                    punctuation: /\\\\/\r\n                  }\r\n                }\r\n              ],\r\n              constant: constant,\r\n              number: number,\r\n              operator: operator,\r\n              punctuation: punctuation\r\n            }\r\n          },\r\n          delimiter: {\r\n            pattern: /^#\\[|\\]$/,\r\n            alias: 'punctuation'\r\n          }\r\n        }\r\n      }\r\n    })\r\n    Prism.hooks.add('before-tokenize', function (env) {\r\n      if (!/<\\?/.test(env.code)) {\r\n        return\r\n      }\r\n      var phpPattern =\r\n        /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g\r\n      Prism.languages['markup-templating'].buildPlaceholders(\r\n        env,\r\n        'php',\r\n        phpPattern\r\n      )\r\n    })\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php')\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\npython.displayName = 'python'\r\npython.aliases = ['py']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function python(Prism) {\r\n  Prism.languages.python = {\r\n    comment: {\r\n      pattern: /(^|[^\\\\])#.*/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    'string-interpolation': {\r\n      pattern:\r\n        /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\r\n          pattern:\r\n            /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\r\n          lookbehind: true,\r\n          inside: {\r\n            'format-spec': {\r\n              pattern: /(:)[^:(){}]+(?=\\}$)/,\r\n              lookbehind: true\r\n            },\r\n            'conversion-option': {\r\n              pattern: /![sra](?=[:}]$)/,\r\n              alias: 'punctuation'\r\n            },\r\n            rest: null\r\n          }\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    },\r\n    'triple-quoted-string': {\r\n      pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\r\n      greedy: true,\r\n      alias: 'string'\r\n    },\r\n    string: {\r\n      pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\r\n      greedy: true\r\n    },\r\n    function: {\r\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\r\n      lookbehind: true\r\n    },\r\n    'class-name': {\r\n      pattern: /(\\bclass\\s+)\\w+/i,\r\n      lookbehind: true\r\n    },\r\n    decorator: {\r\n      pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\r\n      lookbehind: true,\r\n      alias: ['annotation', 'punctuation'],\r\n      inside: {\r\n        punctuation: /\\./\r\n      }\r\n    },\r\n    keyword:\r\n      /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\r\n    builtin:\r\n      /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\r\n    boolean: /\\b(?:False|None|True)\\b/,\r\n    number:\r\n      /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\r\n    operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\r\n    punctuation: /[{}[\\];(),.:]/\r\n  }\r\n  Prism.languages.python['string-interpolation'].inside[\r\n    'interpolation'\r\n  ].inside.rest = Prism.languages.python\r\n  Prism.languages.py = Prism.languages.python\r\n}\r\n", "// @ts-nocheck\r\nr.displayName = 'r'\r\nr.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function r(Prism) {\r\n  Prism.languages.r = {\r\n    comment: /#.*/,\r\n    string: {\r\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true\r\n    },\r\n    'percent-operator': {\r\n      // Includes user-defined operators\r\n      // and %%, %*%, %/%, %in%, %o%, %x%\r\n      pattern: /%[^%\\s]*%/,\r\n      alias: 'operator'\r\n    },\r\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\r\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\r\n    number: [\r\n      /\\b(?:Inf|NaN)\\b/,\r\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\r\n    ],\r\n    keyword:\r\n      /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\r\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\r\n    punctuation: /[(){}\\[\\],;]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nruby.displayName = 'ruby'\r\nruby.aliases = ['rb']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function ruby(Prism) {\r\n  Prism.register(refractorClike)\r\n  /**\r\n   * Original by Samuel Flores\r\n   *\r\n   * Adds the following new token classes:\r\n   *     constant, builtin, variable, symbol, regex\r\n   */\r\n  ;(function (Prism) {\r\n    Prism.languages.ruby = Prism.languages.extend('clike', {\r\n      comment: {\r\n        pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\r\n        greedy: true\r\n      },\r\n      'class-name': {\r\n        pattern:\r\n          /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /[.\\\\]/\r\n        }\r\n      },\r\n      keyword:\r\n        /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\r\n      operator:\r\n        /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\r\n      punctuation: /[(){}[\\].,;]/\r\n    })\r\n    Prism.languages.insertBefore('ruby', 'operator', {\r\n      'double-colon': {\r\n        pattern: /::/,\r\n        alias: 'punctuation'\r\n      }\r\n    })\r\n    var interpolation = {\r\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\r\n      lookbehind: true,\r\n      inside: {\r\n        content: {\r\n          pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\r\n          lookbehind: true,\r\n          inside: Prism.languages.ruby\r\n        },\r\n        delimiter: {\r\n          pattern: /^#\\{|\\}$/,\r\n          alias: 'punctuation'\r\n        }\r\n      }\r\n    }\r\n    delete Prism.languages.ruby.function\r\n    var percentExpression =\r\n      '(?:' +\r\n      [\r\n        /([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\r\n        /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,\r\n        /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,\r\n        /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,\r\n        /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source\r\n      ].join('|') +\r\n      ')'\r\n    var symbolName =\r\n      /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/\r\n        .source\r\n    Prism.languages.insertBefore('ruby', 'keyword', {\r\n      'regex-literal': [\r\n        {\r\n          pattern: RegExp(\r\n            /%r/.source + percentExpression + /[egimnosux]{0,6}/.source\r\n          ),\r\n          greedy: true,\r\n          inside: {\r\n            interpolation: interpolation,\r\n            regex: /[\\s\\S]+/\r\n          }\r\n        },\r\n        {\r\n          pattern:\r\n            /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          inside: {\r\n            interpolation: interpolation,\r\n            regex: /[\\s\\S]+/\r\n          }\r\n        }\r\n      ],\r\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\r\n      symbol: [\r\n        {\r\n          pattern: RegExp(/(^|[^:]):/.source + symbolName),\r\n          lookbehind: true,\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern: RegExp(\r\n            /([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source\r\n          ),\r\n          lookbehind: true,\r\n          greedy: true\r\n        }\r\n      ],\r\n      'method-definition': {\r\n        pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\r\n        lookbehind: true,\r\n        inside: {\r\n          function: /\\b\\w+$/,\r\n          keyword: /^self\\b/,\r\n          'class-name': /^\\w+/,\r\n          punctuation: /\\./\r\n        }\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('ruby', 'string', {\r\n      'string-literal': [\r\n        {\r\n          pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\r\n          greedy: true,\r\n          inside: {\r\n            interpolation: interpolation,\r\n            string: /[\\s\\S]+/\r\n          }\r\n        },\r\n        {\r\n          pattern:\r\n            /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\r\n          greedy: true,\r\n          inside: {\r\n            interpolation: interpolation,\r\n            string: /[\\s\\S]+/\r\n          }\r\n        },\r\n        {\r\n          pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\r\n          alias: 'heredoc-string',\r\n          greedy: true,\r\n          inside: {\r\n            delimiter: {\r\n              pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\r\n              inside: {\r\n                symbol: /\\b\\w+/,\r\n                punctuation: /^<<[-~]?/\r\n              }\r\n            },\r\n            interpolation: interpolation,\r\n            string: /[\\s\\S]+/\r\n          }\r\n        },\r\n        {\r\n          pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\r\n          alias: 'heredoc-string',\r\n          greedy: true,\r\n          inside: {\r\n            delimiter: {\r\n              pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\r\n              inside: {\r\n                symbol: /\\b\\w+/,\r\n                punctuation: /^<<[-~]?'|'$/\r\n              }\r\n            },\r\n            string: /[\\s\\S]+/\r\n          }\r\n        }\r\n      ],\r\n      'command-literal': [\r\n        {\r\n          pattern: RegExp(/%x/.source + percentExpression),\r\n          greedy: true,\r\n          inside: {\r\n            interpolation: interpolation,\r\n            command: {\r\n              pattern: /[\\s\\S]+/,\r\n              alias: 'string'\r\n            }\r\n          }\r\n        },\r\n        {\r\n          pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\r\n          greedy: true,\r\n          inside: {\r\n            interpolation: interpolation,\r\n            command: {\r\n              pattern: /[\\s\\S]+/,\r\n              alias: 'string'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    })\r\n    delete Prism.languages.ruby.string\r\n    Prism.languages.insertBefore('ruby', 'number', {\r\n      builtin:\r\n        /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\r\n      constant: /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\r\n    })\r\n    Prism.languages.rb = Prism.languages.ruby\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nrust.displayName = 'rust'\r\nrust.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function rust(Prism) {\r\n  ;(function (Prism) {\r\n    var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source\r\n    for (var i = 0; i < 2; i++) {\r\n      // support 4 levels of nested comments\r\n      multilineComment = multilineComment.replace(/<self>/g, function () {\r\n        return multilineComment\r\n      })\r\n    }\r\n    multilineComment = multilineComment.replace(/<self>/g, function () {\r\n      return /[^\\s\\S]/.source\r\n    })\r\n    Prism.languages.rust = {\r\n      comment: [\r\n        {\r\n          pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\r\n          lookbehind: true,\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\r\n          lookbehind: true,\r\n          greedy: true\r\n        }\r\n      ],\r\n      string: {\r\n        pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\r\n        greedy: true\r\n      },\r\n      char: {\r\n        pattern:\r\n          /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\r\n        greedy: true\r\n      },\r\n      attribute: {\r\n        pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\r\n        greedy: true,\r\n        alias: 'attr-name',\r\n        inside: {\r\n          string: null // see below\r\n        }\r\n      },\r\n\r\n      // Closure params should not be confused with bitwise OR |\r\n      'closure-params': {\r\n        pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          'closure-punctuation': {\r\n            pattern: /^\\||\\|$/,\r\n            alias: 'punctuation'\r\n          },\r\n          rest: null // see below\r\n        }\r\n      },\r\n\r\n      'lifetime-annotation': {\r\n        pattern: /'\\w+/,\r\n        alias: 'symbol'\r\n      },\r\n      'fragment-specifier': {\r\n        pattern: /(\\$\\w+:)[a-z]+/,\r\n        lookbehind: true,\r\n        alias: 'punctuation'\r\n      },\r\n      variable: /\\$\\w+/,\r\n      'function-definition': {\r\n        pattern: /(\\bfn\\s+)\\w+/,\r\n        lookbehind: true,\r\n        alias: 'function'\r\n      },\r\n      'type-definition': {\r\n        pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\r\n        lookbehind: true,\r\n        alias: 'class-name'\r\n      },\r\n      'module-declaration': [\r\n        {\r\n          pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\r\n          lookbehind: true,\r\n          alias: 'namespace'\r\n        },\r\n        {\r\n          pattern:\r\n            /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\r\n          lookbehind: true,\r\n          alias: 'namespace',\r\n          inside: {\r\n            punctuation: /::/\r\n          }\r\n        }\r\n      ],\r\n      keyword: [\r\n        // https://github.com/rust-lang/reference/blob/master/src/keywords.md\r\n        /\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,\r\n        // primitives and str\r\n        // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\r\n        /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/\r\n      ],\r\n      // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\r\n      // and Rust's naming conventions recommend snake_case anyway.\r\n      // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\r\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\r\n      macro: {\r\n        pattern: /\\b\\w+!/,\r\n        alias: 'property'\r\n      },\r\n      constant: /\\b[A-Z_][A-Z_\\d]+\\b/,\r\n      'class-name': /\\b[A-Z]\\w*\\b/,\r\n      namespace: {\r\n        pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\r\n        inside: {\r\n          punctuation: /::/\r\n        }\r\n      },\r\n      // Hex, oct, bin, dec numbers with visual separators and type suffix\r\n      number:\r\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\r\n      operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\r\n    }\r\n    Prism.languages.rust['closure-params'].inside.rest = Prism.languages.rust\r\n    Prism.languages.rust['attribute'].inside['string'] =\r\n      Prism.languages.rust['string']\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorCss from './css.js'\r\nsass.displayName = 'sass'\r\nsass.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function sass(Prism) {\r\n  Prism.register(refractorCss)\r\n  ;(function (Prism) {\r\n    Prism.languages.sass = Prism.languages.extend('css', {\r\n      // Sass comments don't need to be closed, only indented\r\n      comment: {\r\n        pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('sass', 'atrule', {\r\n      // We want to consume the whole line\r\n      'atrule-line': {\r\n        // Includes support for = and + shortcuts\r\n        pattern: /^(?:[ \\t]*)[@+=].+/m,\r\n        greedy: true,\r\n        inside: {\r\n          atrule: /(?:@[\\w-]+|[+=])/\r\n        }\r\n      }\r\n    })\r\n    delete Prism.languages.sass.atrule\r\n    var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\r\n    var operator = [\r\n      /[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/,\r\n      {\r\n        pattern: /(\\s)-(?=\\s)/,\r\n        lookbehind: true\r\n      }\r\n    ]\r\n    Prism.languages.insertBefore('sass', 'property', {\r\n      // We want to consume the whole line\r\n      'variable-line': {\r\n        pattern: /^[ \\t]*\\$.+/m,\r\n        greedy: true,\r\n        inside: {\r\n          punctuation: /:/,\r\n          variable: variable,\r\n          operator: operator\r\n        }\r\n      },\r\n      // We want to consume the whole line\r\n      'property-line': {\r\n        pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\r\n        greedy: true,\r\n        inside: {\r\n          property: [\r\n            /[^:\\s]+(?=\\s*:)/,\r\n            {\r\n              pattern: /(:)[^:\\s]+/,\r\n              lookbehind: true\r\n            }\r\n          ],\r\n          punctuation: /:/,\r\n          variable: variable,\r\n          operator: operator,\r\n          important: Prism.languages.sass.important\r\n        }\r\n      }\r\n    })\r\n    delete Prism.languages.sass.property\r\n    delete Prism.languages.sass.important\r\n\r\n    // Now that whole lines for other patterns are consumed,\r\n    // what's left should be selectors\r\n    Prism.languages.insertBefore('sass', 'punctuation', {\r\n      selector: {\r\n        pattern:\r\n          /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorCss from './css.js'\r\nscss.displayName = 'scss'\r\nscss.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function scss(Prism) {\r\n  Prism.register(refractorCss)\r\n  Prism.languages.scss = Prism.languages.extend('css', {\r\n    comment: {\r\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\r\n      lookbehind: true\r\n    },\r\n    atrule: {\r\n      pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\r\n      inside: {\r\n        rule: /@[\\w-]+/\r\n        // See rest below\r\n      }\r\n    },\r\n\r\n    // url, compassified\r\n    url: /(?:[-a-z]+-)?url(?=\\()/i,\r\n    // CSS selector regex is not appropriate for Sass\r\n    // since there can be lot more things (var, @ directive, nesting..)\r\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\r\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\r\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\r\n    // can \"pass\" as a selector- e.g: proper#{$erty})\r\n    // this one was hard to do, so please be careful if you edit this one :)\r\n    selector: {\r\n      // Initial look-ahead is used to prevent matching of blank selectors\r\n      pattern:\r\n        /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\r\n      inside: {\r\n        parent: {\r\n          pattern: /&/,\r\n          alias: 'important'\r\n        },\r\n        placeholder: /%[-\\w]+/,\r\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\r\n      }\r\n    },\r\n    property: {\r\n      pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\r\n      inside: {\r\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\r\n      }\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('scss', 'atrule', {\r\n    keyword: [\r\n      /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,\r\n      {\r\n        pattern: /( )(?:from|through)(?= )/,\r\n        lookbehind: true\r\n      }\r\n    ]\r\n  })\r\n  Prism.languages.insertBefore('scss', 'important', {\r\n    // var and interpolated vars\r\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\r\n  })\r\n  Prism.languages.insertBefore('scss', 'function', {\r\n    'module-modifier': {\r\n      pattern: /\\b(?:as|hide|show|with)\\b/i,\r\n      alias: 'keyword'\r\n    },\r\n    placeholder: {\r\n      pattern: /%[-\\w]+/,\r\n      alias: 'selector'\r\n    },\r\n    statement: {\r\n      pattern: /\\B!(?:default|optional)\\b/i,\r\n      alias: 'keyword'\r\n    },\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    null: {\r\n      pattern: /\\bnull\\b/,\r\n      alias: 'keyword'\r\n    },\r\n    operator: {\r\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\r\n      lookbehind: true\r\n    }\r\n  })\r\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss\r\n}\r\n", "// @ts-nocheck\r\nsql.displayName = 'sql'\r\nsql.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function sql(Prism) {\r\n  Prism.languages.sql = {\r\n    comment: {\r\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\r\n      lookbehind: true\r\n    },\r\n    variable: [\r\n      {\r\n        pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\r\n        greedy: true\r\n      },\r\n      /@[\\w.$]+/\r\n    ],\r\n    string: {\r\n      pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\r\n      greedy: true,\r\n      lookbehind: true\r\n    },\r\n    identifier: {\r\n      pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\r\n      greedy: true,\r\n      lookbehind: true,\r\n      inside: {\r\n        punctuation: /^`|`$/\r\n      }\r\n    },\r\n    function:\r\n      /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\r\n    // Should we highlight user defined functions too?\r\n    keyword:\r\n      /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\r\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/i,\r\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\r\n    operator:\r\n      /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\r\n    punctuation: /[;[\\]()`,.]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nswift.displayName = 'swift'\r\nswift.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function swift(Prism) {\r\n  Prism.languages.swift = {\r\n    comment: {\r\n      // Nested comments are supported up to 2 levels\r\n      pattern:\r\n        /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    'string-literal': [\r\n      // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html\r\n      {\r\n        pattern: RegExp(\r\n          /(^|[^\"#])/.source +\r\n            '(?:' +\r\n            // single-line string\r\n            /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/\r\n              .source +\r\n            '|' +\r\n            // multi-line string\r\n            /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/\r\n              .source +\r\n            ')' +\r\n            /(?![\"#])/.source\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          interpolation: {\r\n            pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\r\n            lookbehind: true,\r\n            inside: null // see below\r\n          },\r\n\r\n          'interpolation-punctuation': {\r\n            pattern: /^\\)|\\\\\\($/,\r\n            alias: 'punctuation'\r\n          },\r\n          punctuation: /\\\\(?=[\\r\\n])/,\r\n          string: /[\\s\\S]+/\r\n        }\r\n      },\r\n      {\r\n        pattern: RegExp(\r\n          /(^|[^\"#])(#+)/.source +\r\n            '(?:' +\r\n            // single-line string\r\n            /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/\r\n              .source +\r\n            '|' +\r\n            // multi-line string\r\n            /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source +\r\n            ')' +\r\n            '\\\\2'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          interpolation: {\r\n            pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\r\n            lookbehind: true,\r\n            inside: null // see below\r\n          },\r\n\r\n          'interpolation-punctuation': {\r\n            pattern: /^\\)|\\\\#+\\($/,\r\n            alias: 'punctuation'\r\n          },\r\n          string: /[\\s\\S]+/\r\n        }\r\n      }\r\n    ],\r\n    directive: {\r\n      // directives with conditions\r\n      pattern: RegExp(\r\n        /#/.source +\r\n          '(?:' +\r\n          (/(?:elseif|if)\\b/.source +\r\n            '(?:[ \\t]*' +\r\n            // This regex is a little complex. It's equivalent to this:\r\n            //   (?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*<round>)?|<round>)(?:[ \\t]*(?:&&|\\|\\|))?\r\n            // where <round> is a general parentheses expression.\r\n            /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/\r\n              .source +\r\n            ')+') +\r\n          '|' +\r\n          /(?:else|endif)\\b/.source +\r\n          ')'\r\n      ),\r\n      alias: 'property',\r\n      inside: {\r\n        'directive-name': /^#\\w+/,\r\n        boolean: /\\b(?:false|true)\\b/,\r\n        number: /\\b\\d+(?:\\.\\d+)*\\b/,\r\n        operator: /!|&&|\\|\\||[<>]=?/,\r\n        punctuation: /[(),]/\r\n      }\r\n    },\r\n    literal: {\r\n      pattern:\r\n        /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\r\n      alias: 'constant'\r\n    },\r\n    'other-directive': {\r\n      pattern: /#\\w+\\b/,\r\n      alias: 'property'\r\n    },\r\n    attribute: {\r\n      pattern: /@\\w+/,\r\n      alias: 'atrule'\r\n    },\r\n    'function-definition': {\r\n      pattern: /(\\bfunc\\s+)\\w+/,\r\n      lookbehind: true,\r\n      alias: 'function'\r\n    },\r\n    label: {\r\n      // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141\r\n      pattern:\r\n        /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\r\n      lookbehind: true,\r\n      alias: 'important'\r\n    },\r\n    keyword:\r\n      /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    nil: {\r\n      pattern: /\\bnil\\b/,\r\n      alias: 'constant'\r\n    },\r\n    'short-argument': /\\$\\d+\\b/,\r\n    omit: {\r\n      pattern: /\\b_\\b/,\r\n      alias: 'keyword'\r\n    },\r\n    number:\r\n      /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\r\n    // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.\r\n    'class-name': /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\r\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n    constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\r\n    // Operators are generic in Swift. Developers can even create new operators (e.g. +++).\r\n    // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481\r\n    // This regex only supports ASCII operators.\r\n    operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\r\n    punctuation: /[{}[\\]();,.:\\\\]/\r\n  }\r\n  Prism.languages.swift['string-literal'].forEach(function (rule) {\r\n    rule.inside['interpolation'].inside = Prism.languages.swift\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJavascript from './javascript.js'\r\ntypescript.displayName = 'typescript'\r\ntypescript.aliases = ['ts']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function typescript(Prism) {\r\n  Prism.register(refractorJavascript)\r\n  ;(function (Prism) {\r\n    Prism.languages.typescript = Prism.languages.extend('javascript', {\r\n      'class-name': {\r\n        pattern:\r\n          /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: null // see below\r\n      },\r\n\r\n      builtin:\r\n        /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\r\n    })\r\n\r\n    // The keywords TypeScript adds to JavaScript\r\n    Prism.languages.typescript.keyword.push(\r\n      /\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\r\n      // keywords that have to be followed by an identifier\r\n      /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\r\n      // This is for `import type *, {}`\r\n      /\\btype\\b(?=\\s*(?:[\\{*]|$))/\r\n    )\r\n\r\n    // doesn't work with TS because TS is too complex\r\n    delete Prism.languages.typescript['parameter']\r\n    delete Prism.languages.typescript['literal-property']\r\n\r\n    // a version of typescript specifically for highlighting types\r\n    var typeInside = Prism.languages.extend('typescript', {})\r\n    delete typeInside['class-name']\r\n    Prism.languages.typescript['class-name'].inside = typeInside\r\n    Prism.languages.insertBefore('typescript', 'function', {\r\n      decorator: {\r\n        pattern: /@[$\\w\\xA0-\\uFFFF]+/,\r\n        inside: {\r\n          at: {\r\n            pattern: /^@/,\r\n            alias: 'operator'\r\n          },\r\n          function: /^[\\s\\S]+/\r\n        }\r\n      },\r\n      'generic-function': {\r\n        // e.g. foo<T extends \"bar\" | \"baz\">( ...\r\n        pattern:\r\n          /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\r\n        greedy: true,\r\n        inside: {\r\n          function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\r\n          generic: {\r\n            pattern: /<[\\s\\S]+/,\r\n            // everything after the first <\r\n            alias: 'class-name',\r\n            inside: typeInside\r\n          }\r\n        }\r\n      }\r\n    })\r\n    Prism.languages.ts = Prism.languages.typescript\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nbasic.displayName = 'basic'\r\nbasic.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function basic(Prism) {\r\n  Prism.languages.basic = {\r\n    comment: {\r\n      pattern: /(?:!|REM\\b).+/i,\r\n      inside: {\r\n        keyword: /^REM/i\r\n      }\r\n    },\r\n    string: {\r\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\r\n      greedy: true\r\n    },\r\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\r\n    keyword:\r\n      /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\r\n    function:\r\n      /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\r\n    operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\r\n    punctuation: /[,;:()]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorBasic from './basic.js'\r\nvbnet.displayName = 'vbnet'\r\nvbnet.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function vbnet(Prism) {\r\n  Prism.register(refractorBasic)\r\n  Prism.languages.vbnet = Prism.languages.extend('basic', {\r\n    comment: [\r\n      {\r\n        pattern: /(?:!|REM\\b).+/i,\r\n        inside: {\r\n          keyword: /^REM/i\r\n        }\r\n      },\r\n      {\r\n        pattern: /(^|[^\\\\:])'.*/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    string: {\r\n      pattern: /(^|[^\"])\"(?:\"\"|[^\"])*\"(?!\")/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\r\n    punctuation: /[,;:(){}]/\r\n  })\r\n}\r\n", "/**\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('hast').Element} Element\r\n */\r\n\r\nconst search = /[#.]/g\r\n\r\n/**\r\n * Create a hast element from a simple CSS selector.\r\n *\r\n * @template {string} Selector\r\n *   Type of selector.\r\n * @template {string} [DefaultTagName='div']\r\n *   Type of default tag name.\r\n * @param {Selector | null | undefined} [selector]\r\n *   Simple CSS selector.\r\n *\r\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\r\n *   Multiple classes are allowed.\r\n *   Uses the last ID if multiple IDs are found.\r\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\r\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\r\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\r\n *   Built element.\r\n */\r\nexport function parseSelector(selector, defaultTagName) {\r\n  const value = selector || ''\r\n  /** @type {Properties} */\r\n  const props = {}\r\n  let start = 0\r\n  /** @type {string | undefined} */\r\n  let previous\r\n  /** @type {string | undefined} */\r\n  let tagName\r\n\r\n  while (start < value.length) {\r\n    search.lastIndex = start\r\n    const match = search.exec(value)\r\n    const subvalue = value.slice(start, match ? match.index : value.length)\r\n\r\n    if (subvalue) {\r\n      if (!previous) {\r\n        tagName = subvalue\r\n      } else if (previous === '#') {\r\n        props.id = subvalue\r\n      } else if (Array.isArray(props.className)) {\r\n        props.className.push(subvalue)\r\n      } else {\r\n        props.className = [subvalue]\r\n      }\r\n\r\n      start += subvalue.length\r\n    }\r\n\r\n    if (match) {\r\n      previous = match[0]\r\n      start++\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: 'element',\r\n    // @ts-expect-error: fine.\r\n    tagName: tagName || defaultTagName || 'div',\r\n    properties: props,\r\n    children: []\r\n  }\r\n}\r\n", "/**\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').Content} Content\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('property-information').Info} Info\r\n * @typedef {import('property-information').Schema} Schema\r\n */\r\n\r\n/**\r\n * @typedef {Content | Root} Node\r\n *   Any concrete `hast` node.\r\n * @typedef {Root | Element} HResult\r\n *   Result from a `h` (or `s`) call.\r\n *\r\n * @typedef {string | number} HStyleValue\r\n *   Value for a CSS style field.\r\n * @typedef {Record<string, HStyleValue>} HStyle\r\n *   Supported value of a `style` prop.\r\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\r\n *   Primitive property value.\r\n * @typedef {Array<string | number>} HArrayValue\r\n *   List of property values for space- or comma separated values (such as `className`).\r\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\r\n *   Primitive value or list value.\r\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\r\n *   Acceptable value for element properties.\r\n *\r\n * @typedef {string | number | null | undefined} HPrimitiveChild\r\n *   Primitive children, either ignored (nullish), or turned into text nodes.\r\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\r\n *   List of children.\r\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\r\n *   Acceptable child value.\r\n */\r\n\r\nimport {find, normalize} from 'property-information'\r\nimport {parseSelector} from 'hast-util-parse-selector'\r\nimport {parse as spaces} from 'space-separated-tokens'\r\nimport {parse as commas} from 'comma-separated-tokens'\r\n\r\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * @param {Schema} schema\r\n * @param {string} defaultTagName\r\n * @param {Array<string>} [caseSensitive]\r\n */\r\nexport function core(schema, defaultTagName, caseSensitive) {\r\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\r\n\r\n  const h =\r\n    /**\r\n     * @type {{\r\n     *   (): Root\r\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\r\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\r\n     *   (selector: string, ...children: Array<HChild>): Element\r\n     * }}\r\n     */\r\n    (\r\n      /**\r\n       * Hyperscript compatible DSL for creating virtual hast trees.\r\n       *\r\n       * @param {string | null} [selector]\r\n       * @param {HProperties | HChild} [properties]\r\n       * @param {Array<HChild>} children\r\n       * @returns {HResult}\r\n       */\r\n      function (selector, properties, ...children) {\r\n        let index = -1\r\n        /** @type {HResult} */\r\n        let node\r\n\r\n        if (selector === undefined || selector === null) {\r\n          node = {type: 'root', children: []}\r\n          // @ts-expect-error Properties are not supported for roots.\r\n          children.unshift(properties)\r\n        } else {\r\n          node = parseSelector(selector, defaultTagName)\r\n          // Normalize the name.\r\n          node.tagName = node.tagName.toLowerCase()\r\n          if (adjust && own.call(adjust, node.tagName)) {\r\n            node.tagName = adjust[node.tagName]\r\n          }\r\n\r\n          // Handle props.\r\n          if (isProperties(properties, node.tagName)) {\r\n            /** @type {string} */\r\n            let key\r\n\r\n            for (key in properties) {\r\n              if (own.call(properties, key)) {\r\n                // @ts-expect-error `node.properties` is set.\r\n                addProperty(schema, node.properties, key, properties[key])\r\n              }\r\n            }\r\n          } else {\r\n            children.unshift(properties)\r\n          }\r\n        }\r\n\r\n        // Handle children.\r\n        while (++index < children.length) {\r\n          addChild(node.children, children[index])\r\n        }\r\n\r\n        if (node.type === 'element' && node.tagName === 'template') {\r\n          node.content = {type: 'root', children: node.children}\r\n          node.children = []\r\n        }\r\n\r\n        return node\r\n      }\r\n    )\r\n\r\n  return h\r\n}\r\n\r\n/**\r\n * @param {HProperties | HChild} value\r\n * @param {string} name\r\n * @returns {value is HProperties}\r\n */\r\nfunction isProperties(value, name) {\r\n  if (\r\n    value === null ||\r\n    value === undefined ||\r\n    typeof value !== 'object' ||\r\n    Array.isArray(value)\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\r\n    return true\r\n  }\r\n\r\n  if ('children' in value && Array.isArray(value.children)) {\r\n    return false\r\n  }\r\n\r\n  if (name === 'button') {\r\n    return buttonTypes.has(value.type.toLowerCase())\r\n  }\r\n\r\n  return !('value' in value)\r\n}\r\n\r\n/**\r\n * @param {Schema} schema\r\n * @param {Properties} properties\r\n * @param {string} key\r\n * @param {HStyle | HPropertyValue} value\r\n * @returns {void}\r\n */\r\nfunction addProperty(schema, properties, key, value) {\r\n  const info = find(schema, key)\r\n  let index = -1\r\n  /** @type {HPropertyValue} */\r\n  let result\r\n\r\n  // Ignore nullish and NaN values.\r\n  if (value === undefined || value === null) return\r\n\r\n  if (typeof value === 'number') {\r\n    // Ignore NaN.\r\n    if (Number.isNaN(value)) return\r\n\r\n    result = value\r\n  }\r\n  // Booleans.\r\n  else if (typeof value === 'boolean') {\r\n    result = value\r\n  }\r\n  // Handle list values.\r\n  else if (typeof value === 'string') {\r\n    if (info.spaceSeparated) {\r\n      result = spaces(value)\r\n    } else if (info.commaSeparated) {\r\n      result = commas(value)\r\n    } else if (info.commaOrSpaceSeparated) {\r\n      result = spaces(commas(value).join(' '))\r\n    } else {\r\n      result = parsePrimitive(info, info.property, value)\r\n    }\r\n  } else if (Array.isArray(value)) {\r\n    result = value.concat()\r\n  } else {\r\n    result = info.property === 'style' ? style(value) : String(value)\r\n  }\r\n\r\n  if (Array.isArray(result)) {\r\n    /** @type {Array<string | number>} */\r\n    const finalResult = []\r\n\r\n    while (++index < result.length) {\r\n      // @ts-expect-error Assume no booleans in array.\r\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\r\n    }\r\n\r\n    result = finalResult\r\n  }\r\n\r\n  // Class names (which can be added both on the `selector` and here).\r\n  if (info.property === 'className' && Array.isArray(properties.className)) {\r\n    // @ts-expect-error Assume no booleans in `className`.\r\n    result = properties.className.concat(result)\r\n  }\r\n\r\n  properties[info.property] = result\r\n}\r\n\r\n/**\r\n * @param {Array<Content>} nodes\r\n * @param {HChild} value\r\n * @returns {void}\r\n */\r\nfunction addChild(nodes, value) {\r\n  let index = -1\r\n\r\n  if (value === undefined || value === null) {\r\n    // Empty.\r\n  } else if (typeof value === 'string' || typeof value === 'number') {\r\n    nodes.push({type: 'text', value: String(value)})\r\n  } else if (Array.isArray(value)) {\r\n    while (++index < value.length) {\r\n      addChild(nodes, value[index])\r\n    }\r\n  } else if (typeof value === 'object' && 'type' in value) {\r\n    if (value.type === 'root') {\r\n      addChild(nodes, value.children)\r\n    } else {\r\n      nodes.push(value)\r\n    }\r\n  } else {\r\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a single primitives.\r\n *\r\n * @param {Info} info\r\n * @param {string} name\r\n * @param {HPrimitiveValue} value\r\n * @returns {HPrimitiveValue}\r\n */\r\nfunction parsePrimitive(info, name, value) {\r\n  if (typeof value === 'string') {\r\n    if (info.number && value && !Number.isNaN(Number(value))) {\r\n      return Number(value)\r\n    }\r\n\r\n    if (\r\n      (info.boolean || info.overloadedBoolean) &&\r\n      (value === '' || normalize(value) === normalize(name))\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return value\r\n}\r\n\r\n/**\r\n * Serialize a `style` object as a string.\r\n *\r\n * @param {HStyle} value\r\n *   Style object.\r\n * @returns {string}\r\n *   CSS string.\r\n */\r\nfunction style(value) {\r\n  /** @type {Array<string>} */\r\n  const result = []\r\n  /** @type {string} */\r\n  let key\r\n\r\n  for (key in value) {\r\n    if (own.call(value, key)) {\r\n      result.push([key, value[key]].join(': '))\r\n    }\r\n  }\r\n\r\n  return result.join('; ')\r\n}\r\n\r\n/**\r\n * Create a map to adjust casing.\r\n *\r\n * @param {Array<string>} values\r\n *   List of properly cased keys.\r\n * @returns {Record<string, string>}\r\n *   Map of lowercase keys to uppercase keys.\r\n */\r\nfunction createAdjustMap(values) {\r\n  /** @type {Record<string, string>} */\r\n  const result = {}\r\n  let index = -1\r\n\r\n  while (++index < values.length) {\r\n    result[values[index].toLowerCase()] = values[index]\r\n  }\r\n\r\n  return result\r\n}\r\n", "/**\r\n * @typedef {import('./core.js').HChild} Child\r\n *   Acceptable child value.\r\n * @typedef {import('./core.js').HProperties} Properties\r\n *   Acceptable value for element properties.\r\n * @typedef {import('./core.js').HResult} Result\r\n *   Result from a `h` (or `s`) call.\r\n *\r\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\r\n */\r\n\r\nimport {html} from 'property-information'\r\nimport {core} from './core.js'\r\n\r\nexport const h = core(html, 'div')\r\n", "export const svgCaseSensitiveTagNames = [\r\n  'altGlyph',\r\n  'altGlyphDef',\r\n  'altGlyphItem',\r\n  'animateColor',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'clipPath',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'foreignObject',\r\n  'glyphRef',\r\n  'linearGradient',\r\n  'radialGradient',\r\n  'solidColor',\r\n  'textArea',\r\n  'textPath'\r\n]\r\n", "/**\r\n * @typedef {import('./core.js').HChild} Child\r\n *   Acceptable child value.\r\n * @typedef {import('./core.js').HProperties} Properties\r\n *   Acceptable value for element properties.\r\n * @typedef {import('./core.js').HResult} Result\r\n *   Result from a `h` (or `s`) call.\r\n *\r\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\r\n */\r\n\r\nimport {svg} from 'property-information'\r\nimport {core} from './core.js'\r\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\r\n\r\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\r\n", "/**\r\n * List of legacy HTML named character references that don’t need a trailing semicolon.\r\n *\r\n * @type {Array<string>}\r\n */\r\nexport const characterEntitiesLegacy = [\r\n  'AElig',\r\n  'AMP',\r\n  'Aacute',\r\n  'Acirc',\r\n  'Agrave',\r\n  'Aring',\r\n  'Atilde',\r\n  'Auml',\r\n  'COPY',\r\n  'Ccedil',\r\n  'ETH',\r\n  'Eacute',\r\n  'Ecirc',\r\n  'Egrave',\r\n  'Euml',\r\n  'GT',\r\n  'Iacute',\r\n  'Icirc',\r\n  'Igrave',\r\n  'Iuml',\r\n  'LT',\r\n  'Ntilde',\r\n  'Oacute',\r\n  'Ocirc',\r\n  'Ograve',\r\n  'Oslash',\r\n  'Otilde',\r\n  'Ouml',\r\n  'QUOT',\r\n  'REG',\r\n  'THORN',\r\n  'Uacute',\r\n  'Ucirc',\r\n  'Ugrave',\r\n  'Uuml',\r\n  'Yacute',\r\n  'aacute',\r\n  'acirc',\r\n  'acute',\r\n  'aelig',\r\n  'agrave',\r\n  'amp',\r\n  'aring',\r\n  'atilde',\r\n  'auml',\r\n  'brvbar',\r\n  'ccedil',\r\n  'cedil',\r\n  'cent',\r\n  'copy',\r\n  'curren',\r\n  'deg',\r\n  'divide',\r\n  'eacute',\r\n  'ecirc',\r\n  'egrave',\r\n  'eth',\r\n  'euml',\r\n  'frac12',\r\n  'frac14',\r\n  'frac34',\r\n  'gt',\r\n  'iacute',\r\n  'icirc',\r\n  'iexcl',\r\n  'igrave',\r\n  'iquest',\r\n  'iuml',\r\n  'laquo',\r\n  'lt',\r\n  'macr',\r\n  'micro',\r\n  'middot',\r\n  'nbsp',\r\n  'not',\r\n  'ntilde',\r\n  'oacute',\r\n  'ocirc',\r\n  'ograve',\r\n  'ordf',\r\n  'ordm',\r\n  'oslash',\r\n  'otilde',\r\n  'ouml',\r\n  'para',\r\n  'plusmn',\r\n  'pound',\r\n  'quot',\r\n  'raquo',\r\n  'reg',\r\n  'sect',\r\n  'shy',\r\n  'sup1',\r\n  'sup2',\r\n  'sup3',\r\n  'szlig',\r\n  'thorn',\r\n  'times',\r\n  'uacute',\r\n  'ucirc',\r\n  'ugrave',\r\n  'uml',\r\n  'uuml',\r\n  'yacute',\r\n  'yen',\r\n  'yuml'\r\n]\r\n", "/**\r\n * Map of invalid numeric character references to their replacements, according to HTML.\r\n *\r\n * @type {Record<number, string>}\r\n */\r\nexport const characterReferenceInvalid = {\r\n  0: '�',\r\n  128: '€',\r\n  130: '‚',\r\n  131: 'ƒ',\r\n  132: '„',\r\n  133: '…',\r\n  134: '†',\r\n  135: '‡',\r\n  136: 'ˆ',\r\n  137: '‰',\r\n  138: 'Š',\r\n  139: '‹',\r\n  140: 'Œ',\r\n  142: 'Ž',\r\n  145: '‘',\r\n  146: '’',\r\n  147: '“',\r\n  148: '”',\r\n  149: '•',\r\n  150: '–',\r\n  151: '—',\r\n  152: '˜',\r\n  153: '™',\r\n  154: 'š',\r\n  155: '›',\r\n  156: 'œ',\r\n  158: 'ž',\r\n  159: 'Ÿ'\r\n}\r\n", "/**\r\n * Check if the given character code, or the character code at the first\r\n * character, is decimal.\r\n *\r\n * @param {string|number} character\r\n * @returns {boolean} Whether `character` is a decimal\r\n */\r\nexport function isDecimal(character) {\r\n  const code =\r\n    typeof character === 'string' ? character.charCodeAt(0) : character\r\n\r\n  return code >= 48 && code <= 57 /* 0-9 */\r\n}\r\n", "/**\r\n * Check if the given character code, or the character code at the first\r\n * character, is hexadecimal.\r\n *\r\n * @param {string|number} character\r\n * @returns {boolean} Whether `character` is hexadecimal\r\n */\r\nexport function isHexadecimal(character) {\r\n  const code =\r\n    typeof character === 'string' ? character.charCodeAt(0) : character\r\n\r\n  return (\r\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\r\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\r\n    (code >= 48 /* A */ && code <= 57) /* Z */\r\n  )\r\n}\r\n", "/**\r\n * Check if the given character code, or the character code at the first\r\n * character, is alphabetical.\r\n *\r\n * @param {string|number} character\r\n * @returns {boolean} Whether `character` is alphabetical.\r\n */\r\nexport function isAlphabetical(character) {\r\n  const code =\r\n    typeof character === 'string' ? character.charCodeAt(0) : character\r\n\r\n  return (\r\n    (code >= 97 && code <= 122) /* a-z */ ||\r\n    (code >= 65 && code <= 90) /* A-Z */\r\n  )\r\n}\r\n", "import {isAlphabetical} from 'is-alphabetical'\r\nimport {isDecimal} from 'is-decimal'\r\n\r\n/**\r\n * Check if the given character code, or the character code at the first\r\n * character, is alphanumerical.\r\n *\r\n * @param {string|number} character\r\n * @returns {boolean} Whether `character` is alphanumerical.\r\n */\r\nexport function isAlphanumerical(character) {\r\n  return isAlphabetical(character) || isDecimal(character)\r\n}\r\n", "/**\r\n * @typedef {import('unist').Point} Point\r\n * @typedef {import('unist').Position} Position\r\n */\r\n\r\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\r\nimport {characterReferenceInvalid} from 'character-reference-invalid'\r\nimport {isDecimal} from 'is-decimal'\r\nimport {isHexadecimal} from 'is-hexadecimal'\r\nimport {isAlphanumerical} from 'is-alphanumerical'\r\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\r\n\r\nconst fromCharCode = String.fromCharCode\r\n\r\n// Warning messages.\r\nconst messages = [\r\n  '',\r\n  /* 1: Non terminated (named) */\r\n  'Named character references must be terminated by a semicolon',\r\n  /* 2: Non terminated (numeric) */\r\n  'Numeric character references must be terminated by a semicolon',\r\n  /* 3: Empty (named) */\r\n  'Named character references cannot be empty',\r\n  /* 4: Empty (numeric) */\r\n  'Numeric character references cannot be empty',\r\n  /* 5: Unknown (named) */\r\n  'Named character references must be known',\r\n  /* 6: Disallowed (numeric) */\r\n  'Numeric character references cannot be disallowed',\r\n  /* 7: Prohibited (numeric) */\r\n  'Numeric character references cannot be outside the permissible Unicode range'\r\n]\r\n\r\n/**\r\n * Parse HTML character references.\r\n *\r\n * @param {string} value\r\n * @param {import('../index.js').Options} [options={}]\r\n */\r\nexport function parseEntities(value, options = {}) {\r\n  const additional =\r\n    typeof options.additional === 'string'\r\n      ? options.additional.charCodeAt(0)\r\n      : options.additional\r\n  /** @type {Array<string>} */\r\n  const result = []\r\n  let index = 0\r\n  let lines = -1\r\n  let queue = ''\r\n  /** @type {Point|undefined} */\r\n  let point\r\n  /** @type {Array<number>|undefined} */\r\n  let indent\r\n\r\n  if (options.position) {\r\n    if ('start' in options.position || 'indent' in options.position) {\r\n      // @ts-expect-error: points don’t have indent.\r\n      indent = options.position.indent\r\n      // @ts-expect-error: points don’t have indent.\r\n      point = options.position.start\r\n    } else {\r\n      point = options.position\r\n    }\r\n  }\r\n\r\n  let line = (point ? point.line : 0) || 1\r\n  let column = (point ? point.column : 0) || 1\r\n\r\n  // Cache the current point.\r\n  let previous = now()\r\n  /** @type {number|undefined} */\r\n  let character\r\n\r\n  // Ensure the algorithm walks over the first character (inclusive).\r\n  index--\r\n\r\n  while (++index <= value.length) {\r\n    // If the previous character was a newline.\r\n    if (character === 10 /* `\\n` */) {\r\n      column = (indent ? indent[lines] : 0) || 1\r\n    }\r\n\r\n    character = value.charCodeAt(index)\r\n\r\n    if (character === 38 /* `&` */) {\r\n      const following = value.charCodeAt(index + 1)\r\n\r\n      // The behavior depends on the identity of the next character.\r\n      if (\r\n        following === 9 /* `\\t` */ ||\r\n        following === 10 /* `\\n` */ ||\r\n        following === 12 /* `\\f` */ ||\r\n        following === 32 /* ` ` */ ||\r\n        following === 38 /* `&` */ ||\r\n        following === 60 /* `<` */ ||\r\n        Number.isNaN(following) ||\r\n        (additional && following === additional)\r\n      ) {\r\n        // Not a character reference.\r\n        // No characters are consumed, and nothing is returned.\r\n        // This is not an error, either.\r\n        queue += fromCharCode(character)\r\n        column++\r\n        continue\r\n      }\r\n\r\n      const start = index + 1\r\n      let begin = start\r\n      let end = start\r\n      /** @type {string} */\r\n      let type\r\n\r\n      if (following === 35 /* `#` */) {\r\n        // Numerical reference.\r\n        end = ++begin\r\n\r\n        // The behavior further depends on the next character.\r\n        const following = value.charCodeAt(end)\r\n\r\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\r\n          // ASCII hexadecimal digits.\r\n          type = 'hexadecimal'\r\n          end = ++begin\r\n        } else {\r\n          // ASCII decimal digits.\r\n          type = 'decimal'\r\n        }\r\n      } else {\r\n        // Named reference.\r\n        type = 'named'\r\n      }\r\n\r\n      let characterReferenceCharacters = ''\r\n      let characterReference = ''\r\n      let characters = ''\r\n      // Each type of character reference accepts different characters.\r\n      // This test is used to detect whether a reference has ended (as the semicolon\r\n      // is not strictly needed).\r\n      const test =\r\n        type === 'named'\r\n          ? isAlphanumerical\r\n          : type === 'decimal'\r\n          ? isDecimal\r\n          : isHexadecimal\r\n\r\n      end--\r\n\r\n      while (++end <= value.length) {\r\n        const following = value.charCodeAt(end)\r\n\r\n        if (!test(following)) {\r\n          break\r\n        }\r\n\r\n        characters += fromCharCode(following)\r\n\r\n        // Check if we can match a legacy named reference.\r\n        // If so, we cache that as the last viable named reference.\r\n        // This ensures we do not need to walk backwards later.\r\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\r\n          characterReferenceCharacters = characters\r\n          // @ts-expect-error: always able to decode.\r\n          characterReference = decodeNamedCharacterReference(characters)\r\n        }\r\n      }\r\n\r\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\r\n\r\n      if (terminated) {\r\n        end++\r\n\r\n        const namedReference =\r\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\r\n\r\n        if (namedReference) {\r\n          characterReferenceCharacters = characters\r\n          characterReference = namedReference\r\n        }\r\n      }\r\n\r\n      let diff = 1 + end - start\r\n      let reference = ''\r\n\r\n      if (!terminated && options.nonTerminated === false) {\r\n        // Empty.\r\n      } else if (!characters) {\r\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\r\n        // ampersand followed by an octothorp).\r\n        if (type !== 'named') {\r\n          warning(4 /* Empty (numeric) */, diff)\r\n        }\r\n      } else if (type === 'named') {\r\n        // An ampersand followed by anything unknown, and not terminated, is\r\n        // invalid.\r\n        if (terminated && !characterReference) {\r\n          warning(5 /* Unknown (named) */, 1)\r\n        } else {\r\n          // If there’s something after an named reference which is not known,\r\n          // cap the reference.\r\n          if (characterReferenceCharacters !== characters) {\r\n            end = begin + characterReferenceCharacters.length\r\n            diff = 1 + end - begin\r\n            terminated = false\r\n          }\r\n\r\n          // If the reference is not terminated, warn.\r\n          if (!terminated) {\r\n            const reason = characterReferenceCharacters\r\n              ? 1 /* Non terminated (named) */\r\n              : 3 /* Empty (named) */\r\n\r\n            if (options.attribute) {\r\n              const following = value.charCodeAt(end)\r\n\r\n              if (following === 61 /* `=` */) {\r\n                warning(reason, diff)\r\n                characterReference = ''\r\n              } else if (isAlphanumerical(following)) {\r\n                characterReference = ''\r\n              } else {\r\n                warning(reason, diff)\r\n              }\r\n            } else {\r\n              warning(reason, diff)\r\n            }\r\n          }\r\n        }\r\n\r\n        reference = characterReference\r\n      } else {\r\n        if (!terminated) {\r\n          // All nonterminated numeric references are not rendered, and emit a\r\n          // warning.\r\n          warning(2 /* Non terminated (numeric) */, diff)\r\n        }\r\n\r\n        // When terminated and numerical, parse as either hexadecimal or\r\n        // decimal.\r\n        let referenceCode = Number.parseInt(\r\n          characters,\r\n          type === 'hexadecimal' ? 16 : 10\r\n        )\r\n\r\n        // Emit a warning when the parsed number is prohibited, and replace with\r\n        // replacement character.\r\n        if (prohibited(referenceCode)) {\r\n          warning(7 /* Prohibited (numeric) */, diff)\r\n          reference = fromCharCode(65533 /* `�` */)\r\n        } else if (referenceCode in characterReferenceInvalid) {\r\n          // Emit a warning when the parsed number is disallowed, and replace by\r\n          // an alternative.\r\n          warning(6 /* Disallowed (numeric) */, diff)\r\n          reference = characterReferenceInvalid[referenceCode]\r\n        } else {\r\n          // Parse the number.\r\n          let output = ''\r\n\r\n          // Emit a warning when the parsed number should not be used.\r\n          if (disallowed(referenceCode)) {\r\n            warning(6 /* Disallowed (numeric) */, diff)\r\n          }\r\n\r\n          // Serialize the number.\r\n          if (referenceCode > 0xffff) {\r\n            referenceCode -= 0x10000\r\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\r\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\r\n          }\r\n\r\n          reference = output + fromCharCode(referenceCode)\r\n        }\r\n      }\r\n\r\n      // Found it!\r\n      // First eat the queued characters as normal text, then eat a reference.\r\n      if (reference) {\r\n        flush()\r\n\r\n        previous = now()\r\n        index = end - 1\r\n        column += end - start + 1\r\n        result.push(reference)\r\n        const next = now()\r\n        next.offset++\r\n\r\n        if (options.reference) {\r\n          options.reference.call(\r\n            options.referenceContext,\r\n            reference,\r\n            {start: previous, end: next},\r\n            value.slice(start - 1, end)\r\n          )\r\n        }\r\n\r\n        previous = next\r\n      } else {\r\n        // If we could not find a reference, queue the checked characters (as\r\n        // normal characters), and move the pointer to their end.\r\n        // This is possible because we can be certain neither newlines nor\r\n        // ampersands are included.\r\n        characters = value.slice(start - 1, end)\r\n        queue += characters\r\n        column += characters.length\r\n        index = end - 1\r\n      }\r\n    } else {\r\n      // Handle anything other than an ampersand, including newlines and EOF.\r\n      if (character === 10 /* `\\n` */) {\r\n        line++\r\n        lines++\r\n        column = 0\r\n      }\r\n\r\n      if (Number.isNaN(character)) {\r\n        flush()\r\n      } else {\r\n        queue += fromCharCode(character)\r\n        column++\r\n      }\r\n    }\r\n  }\r\n\r\n  // Return the reduced nodes.\r\n  return result.join('')\r\n\r\n  // Get current position.\r\n  function now() {\r\n    return {\r\n      line,\r\n      column,\r\n      offset: index + ((point ? point.offset : 0) || 0)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the warning.\r\n   *\r\n   * @param {1|2|3|4|5|6|7} code\r\n   * @param {number} offset\r\n   */\r\n  function warning(code, offset) {\r\n    /** @type {ReturnType<now>} */\r\n    let position\r\n\r\n    if (options.warning) {\r\n      position = now()\r\n      position.column += offset\r\n      position.offset += offset\r\n\r\n      options.warning.call(\r\n        options.warningContext,\r\n        messages[code],\r\n        position,\r\n        code\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Flush `queue` (normal text).\r\n   * Macro invoked before each reference and at the end of `value`.\r\n   * Does nothing when `queue` is empty.\r\n   */\r\n  function flush() {\r\n    if (queue) {\r\n      result.push(queue)\r\n\r\n      if (options.text) {\r\n        options.text.call(options.textContext, queue, {\r\n          start: previous,\r\n          end: now()\r\n        })\r\n      }\r\n\r\n      queue = ''\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Check if `character` is outside the permissible unicode range.\r\n *\r\n * @param {number} code\r\n * @returns {boolean}\r\n */\r\nfunction prohibited(code) {\r\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\r\n}\r\n\r\n/**\r\n * Check if `character` is disallowed.\r\n *\r\n * @param {number} code\r\n * @returns {boolean}\r\n */\r\nfunction disallowed(code) {\r\n  return (\r\n    (code >= 0x0001 && code <= 0x0008) ||\r\n    code === 0x000b ||\r\n    (code >= 0x000d && code <= 0x001f) ||\r\n    (code >= 0x007f && code <= 0x009f) ||\r\n    (code >= 0xfdd0 && code <= 0xfdef) ||\r\n    (code & 0xffff) === 0xffff ||\r\n    (code & 0xffff) === 0xfffe\r\n  )\r\n}\r\n", "// @ts-nocheck\r\n\r\n// This is a slimmed down version of `prism-core.js`, to remove globals,\r\n// document, workers, `util.encode`, `Token.stringify`\r\n\r\n// Private helper vars\r\nvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i\r\nvar uniqueId = 0\r\n\r\n// The grammar object for plaintext\r\nvar plainTextGrammar = {}\r\n\r\nvar _ = {\r\n  /**\r\n   * A namespace for utility methods.\r\n   *\r\n   * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\r\n   * change or disappear at any time.\r\n   *\r\n   * @namespace\r\n   * @memberof Prism\r\n   */\r\n  util: {\r\n    /**\r\n     * Returns the name of the type of the given value.\r\n     *\r\n     * @param {any} o\r\n     * @returns {string}\r\n     * @example\r\n     * type(null)      === 'Null'\r\n     * type(undefined) === 'Undefined'\r\n     * type(123)       === 'Number'\r\n     * type('foo')     === 'String'\r\n     * type(true)      === 'Boolean'\r\n     * type([1, 2])    === 'Array'\r\n     * type({})        === 'Object'\r\n     * type(String)    === 'Function'\r\n     * type(/abc+/)    === 'RegExp'\r\n     */\r\n    type: function (o) {\r\n      return Object.prototype.toString.call(o).slice(8, -1)\r\n    },\r\n\r\n    /**\r\n     * Returns a unique number for the given object. Later calls will still return the same number.\r\n     *\r\n     * @param {Object} obj\r\n     * @returns {number}\r\n     */\r\n    objId: function (obj) {\r\n      if (!obj['__id']) {\r\n        Object.defineProperty(obj, '__id', {value: ++uniqueId})\r\n      }\r\n      return obj['__id']\r\n    },\r\n\r\n    /**\r\n     * Creates a deep clone of the given object.\r\n     *\r\n     * The main intended use of this function is to clone language definitions.\r\n     *\r\n     * @param {T} o\r\n     * @param {Record<number, any>} [visited]\r\n     * @returns {T}\r\n     * @template T\r\n     */\r\n    clone: function deepClone(o, visited) {\r\n      visited = visited || {}\r\n\r\n      var clone\r\n      var id\r\n      switch (_.util.type(o)) {\r\n        case 'Object':\r\n          id = _.util.objId(o)\r\n          if (visited[id]) {\r\n            return visited[id]\r\n          }\r\n          clone = /** @type {Record<string, any>} */ ({})\r\n          visited[id] = clone\r\n\r\n          for (var key in o) {\r\n            if (o.hasOwnProperty(key)) {\r\n              clone[key] = deepClone(o[key], visited)\r\n            }\r\n          }\r\n\r\n          return /** @type {any} */ (clone)\r\n\r\n        case 'Array':\r\n          id = _.util.objId(o)\r\n          if (visited[id]) {\r\n            return visited[id]\r\n          }\r\n          clone = []\r\n          visited[id] = clone\r\n\r\n          o.forEach(function (v, i) {\r\n            clone[i] = deepClone(v, visited)\r\n          })\r\n\r\n          return /** @type {any} */ (clone)\r\n\r\n        default:\r\n          return o\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\r\n   *\r\n   * @namespace\r\n   * @memberof Prism\r\n   * @public\r\n   */\r\n  languages: {\r\n    /**\r\n     * The grammar for plain, unformatted text.\r\n     */\r\n    plain: plainTextGrammar,\r\n    plaintext: plainTextGrammar,\r\n    text: plainTextGrammar,\r\n    txt: plainTextGrammar,\r\n\r\n    /**\r\n     * Creates a deep copy of the language with the given id and appends the given tokens.\r\n     *\r\n     * If a token in `redef` also appears in the copied language, then the existing token in the copied language\r\n     * will be overwritten at its original position.\r\n     *\r\n     * ## Best practices\r\n     *\r\n     * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\r\n     * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\r\n     * understand the language definition because, normally, the order of tokens matters in Prism grammars.\r\n     *\r\n     * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\r\n     * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\r\n     *\r\n     * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\r\n     * @param {Grammar} redef The new tokens to append.\r\n     * @returns {Grammar} The new language created.\r\n     * @public\r\n     * @example\r\n     * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\r\n     *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\r\n     *     // at its original position\r\n     *     'comment': { ... },\r\n     *     // CSS doesn't have a 'color' token, so this token will be appended\r\n     *     'color': /\\b(?:red|green|blue)\\b/\r\n     * });\r\n     */\r\n    extend: function (id, redef) {\r\n      var lang = _.util.clone(_.languages[id])\r\n\r\n      for (var key in redef) {\r\n        lang[key] = redef[key]\r\n      }\r\n\r\n      return lang\r\n    },\r\n\r\n    /**\r\n     * Inserts tokens _before_ another token in a language definition or any other grammar.\r\n     *\r\n     * ## Usage\r\n     *\r\n     * This helper method makes it easy to modify existing languages. For example, the CSS language definition\r\n     * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\r\n     * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\r\n     * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\r\n     * this:\r\n     *\r\n     * ```js\r\n     * Prism.languages.markup.style = {\r\n     *     // token\r\n     * };\r\n     * ```\r\n     *\r\n     * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\r\n     * before existing tokens. For the CSS example above, you would use it like this:\r\n     *\r\n     * ```js\r\n     * Prism.languages.insertBefore('markup', 'cdata', {\r\n     *     'style': {\r\n     *         // token\r\n     *     }\r\n     * });\r\n     * ```\r\n     *\r\n     * ## Special cases\r\n     *\r\n     * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\r\n     * will be ignored.\r\n     *\r\n     * This behavior can be used to insert tokens after `before`:\r\n     *\r\n     * ```js\r\n     * Prism.languages.insertBefore('markup', 'comment', {\r\n     *     'comment': Prism.languages.markup.comment,\r\n     *     // tokens after 'comment'\r\n     * });\r\n     * ```\r\n     *\r\n     * ## Limitations\r\n     *\r\n     * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\r\n     * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\r\n     * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\r\n     * deleting properties which is necessary to insert at arbitrary positions.\r\n     *\r\n     * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\r\n     * Instead, it will create a new object and replace all references to the target object with the new one. This\r\n     * can be done without temporarily deleting properties, so the iteration order is well-defined.\r\n     *\r\n     * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\r\n     * you hold the target object in a variable, then the value of the variable will not change.\r\n     *\r\n     * ```js\r\n     * var oldMarkup = Prism.languages.markup;\r\n     * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\r\n     *\r\n     * assert(oldMarkup !== Prism.languages.markup);\r\n     * assert(newMarkup === Prism.languages.markup);\r\n     * ```\r\n     *\r\n     * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\r\n     * object to be modified.\r\n     * @param {string} before The key to insert before.\r\n     * @param {Grammar} insert An object containing the key-value pairs to be inserted.\r\n     * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\r\n     * object to be modified.\r\n     *\r\n     * Defaults to `Prism.languages`.\r\n     * @returns {Grammar} The new grammar object.\r\n     * @public\r\n     */\r\n    insertBefore: function (inside, before, insert, root) {\r\n      root = root || /** @type {any} */ (_.languages)\r\n      var grammar = root[inside]\r\n      /** @type {Grammar} */\r\n      var ret = {}\r\n\r\n      for (var token in grammar) {\r\n        if (grammar.hasOwnProperty(token)) {\r\n          if (token == before) {\r\n            for (var newToken in insert) {\r\n              if (insert.hasOwnProperty(newToken)) {\r\n                ret[newToken] = insert[newToken]\r\n              }\r\n            }\r\n          }\r\n\r\n          // Do not insert token which also occur in insert. See #1525\r\n          if (!insert.hasOwnProperty(token)) {\r\n            ret[token] = grammar[token]\r\n          }\r\n        }\r\n      }\r\n\r\n      var old = root[inside]\r\n      root[inside] = ret\r\n\r\n      // Update references in other language definitions\r\n      _.languages.DFS(_.languages, function (key, value) {\r\n        if (value === old && key != inside) {\r\n          this[key] = ret\r\n        }\r\n      })\r\n\r\n      return ret\r\n    },\r\n\r\n    // Traverse a language definition with Depth First Search\r\n    DFS: function DFS(o, callback, type, visited) {\r\n      visited = visited || {}\r\n\r\n      var objId = _.util.objId\r\n\r\n      for (var i in o) {\r\n        if (o.hasOwnProperty(i)) {\r\n          callback.call(o, i, o[i], type || i)\r\n\r\n          var property = o[i]\r\n          var propertyType = _.util.type(property)\r\n\r\n          if (propertyType === 'Object' && !visited[objId(property)]) {\r\n            visited[objId(property)] = true\r\n            DFS(property, callback, null, visited)\r\n          } else if (propertyType === 'Array' && !visited[objId(property)]) {\r\n            visited[objId(property)] = true\r\n            DFS(property, callback, i, visited)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  plugins: {},\r\n\r\n  /**\r\n   * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\r\n   * and the language definitions to use, and returns a string with the HTML produced.\r\n   *\r\n   * The following hooks will be run:\r\n   * 1. `before-tokenize`\r\n   * 2. `after-tokenize`\r\n   * 3. `wrap`: On each {@link Token}.\r\n   *\r\n   * @param {string} text A string with the code to be highlighted.\r\n   * @param {Grammar} grammar An object containing the tokens to use.\r\n   *\r\n   * Usually a language definition like `Prism.languages.markup`.\r\n   * @param {string} language The name of the language definition passed to `grammar`.\r\n   * @returns {string} The highlighted HTML.\r\n   * @memberof Prism\r\n   * @public\r\n   * @example\r\n   * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\r\n   */\r\n  highlight: function (text, grammar, language) {\r\n    var env = {\r\n      code: text,\r\n      grammar: grammar,\r\n      language: language\r\n    }\r\n    _.hooks.run('before-tokenize', env)\r\n    if (!env.grammar) {\r\n      throw new Error('The language \"' + env.language + '\" has no grammar.')\r\n    }\r\n    env.tokens = _.tokenize(env.code, env.grammar)\r\n    _.hooks.run('after-tokenize', env)\r\n    return Token.stringify(_.util.encode(env.tokens), env.language)\r\n  },\r\n\r\n  /**\r\n   * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\r\n   * and the language definitions to use, and returns an array with the tokenized code.\r\n   *\r\n   * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\r\n   *\r\n   * This method could be useful in other contexts as well, as a very crude parser.\r\n   *\r\n   * @param {string} text A string with the code to be highlighted.\r\n   * @param {Grammar} grammar An object containing the tokens to use.\r\n   *\r\n   * Usually a language definition like `Prism.languages.markup`.\r\n   * @returns {TokenStream} An array of strings and tokens, a token stream.\r\n   * @memberof Prism\r\n   * @public\r\n   * @example\r\n   * let code = `var foo = 0;`;\r\n   * let tokens = Prism.tokenize(code, Prism.languages.javascript);\r\n   * tokens.forEach(token => {\r\n   *     if (token instanceof Prism.Token && token.type === 'number') {\r\n   *         console.log(`Found numeric literal: ${token.content}`);\r\n   *     }\r\n   * });\r\n   */\r\n  tokenize: function (text, grammar) {\r\n    var rest = grammar.rest\r\n    if (rest) {\r\n      for (var token in rest) {\r\n        grammar[token] = rest[token]\r\n      }\r\n\r\n      delete grammar.rest\r\n    }\r\n\r\n    var tokenList = new LinkedList()\r\n    addAfter(tokenList, tokenList.head, text)\r\n\r\n    matchGrammar(text, tokenList, grammar, tokenList.head, 0)\r\n\r\n    return toArray(tokenList)\r\n  },\r\n\r\n  /**\r\n   * @namespace\r\n   * @memberof Prism\r\n   * @public\r\n   */\r\n  hooks: {\r\n    all: {},\r\n\r\n    /**\r\n     * Adds the given callback to the list of callbacks for the given hook.\r\n     *\r\n     * The callback will be invoked when the hook it is registered for is run.\r\n     * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\r\n     *\r\n     * One callback function can be registered to multiple hooks and the same hook multiple times.\r\n     *\r\n     * @param {string} name The name of the hook.\r\n     * @param {HookCallback} callback The callback function which is given environment variables.\r\n     * @public\r\n     */\r\n    add: function (name, callback) {\r\n      var hooks = _.hooks.all\r\n\r\n      hooks[name] = hooks[name] || []\r\n\r\n      hooks[name].push(callback)\r\n    },\r\n\r\n    /**\r\n     * Runs a hook invoking all registered callbacks with the given environment variables.\r\n     *\r\n     * Callbacks will be invoked synchronously and in the order in which they were registered.\r\n     *\r\n     * @param {string} name The name of the hook.\r\n     * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\r\n     * @public\r\n     */\r\n    run: function (name, env) {\r\n      var callbacks = _.hooks.all[name]\r\n\r\n      if (!callbacks || !callbacks.length) {\r\n        return\r\n      }\r\n\r\n      for (var i = 0, callback; (callback = callbacks[i++]); ) {\r\n        callback(env)\r\n      }\r\n    }\r\n  },\r\n\r\n  Token: Token\r\n}\r\n\r\n// Typescript note:\r\n// The following can be used to import the Token type in JSDoc:\r\n//\r\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\r\n\r\n/**\r\n * Creates a new token.\r\n *\r\n * @param {string} type See {@link Token#type type}\r\n * @param {string | TokenStream} content See {@link Token#content content}\r\n * @param {string|string[]} [alias] The alias(es) of the token.\r\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\r\n * @class\r\n * @global\r\n * @public\r\n */\r\nfunction Token(type, content, alias, matchedStr) {\r\n  /**\r\n   * The type of the token.\r\n   *\r\n   * This is usually the key of a pattern in a {@link Grammar}.\r\n   *\r\n   * @type {string}\r\n   * @see GrammarToken\r\n   * @public\r\n   */\r\n  this.type = type\r\n  /**\r\n   * The strings or tokens contained by this token.\r\n   *\r\n   * This will be a token stream if the pattern matched also defined an `inside` grammar.\r\n   *\r\n   * @type {string | TokenStream}\r\n   * @public\r\n   */\r\n  this.content = content\r\n  /**\r\n   * The alias(es) of the token.\r\n   *\r\n   * @type {string|string[]}\r\n   * @see GrammarToken\r\n   * @public\r\n   */\r\n  this.alias = alias\r\n  // Copy of the full string this token was created from\r\n  this.length = (matchedStr || '').length | 0\r\n}\r\n\r\n/**\r\n * A token stream is an array of strings and {@link Token Token} objects.\r\n *\r\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\r\n * them.\r\n *\r\n * 1. No adjacent strings.\r\n * 2. No empty strings.\r\n *\r\n *    The only exception here is the token stream that only contains the empty string and nothing else.\r\n *\r\n * @typedef {Array<string | Token>} TokenStream\r\n * @global\r\n * @public\r\n */\r\n\r\n/**\r\n * @param {RegExp} pattern\r\n * @param {number} pos\r\n * @param {string} text\r\n * @param {boolean} lookbehind\r\n * @returns {RegExpExecArray | null}\r\n */\r\nfunction matchPattern(pattern, pos, text, lookbehind) {\r\n  pattern.lastIndex = pos\r\n  var match = pattern.exec(text)\r\n  if (match && lookbehind && match[1]) {\r\n    // change the match to remove the text matched by the Prism lookbehind group\r\n    var lookbehindLength = match[1].length\r\n    match.index += lookbehindLength\r\n    match[0] = match[0].slice(lookbehindLength)\r\n  }\r\n  return match\r\n}\r\n\r\n/**\r\n * @param {string} text\r\n * @param {LinkedList<string | Token>} tokenList\r\n * @param {any} grammar\r\n * @param {LinkedListNode<string | Token>} startNode\r\n * @param {number} startPos\r\n * @param {RematchOptions} [rematch]\r\n * @returns {void}\r\n * @private\r\n *\r\n * @typedef RematchOptions\r\n * @property {string} cause\r\n * @property {number} reach\r\n */\r\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\r\n  for (var token in grammar) {\r\n    if (!grammar.hasOwnProperty(token) || !grammar[token]) {\r\n      continue\r\n    }\r\n\r\n    var patterns = grammar[token]\r\n    patterns = Array.isArray(patterns) ? patterns : [patterns]\r\n\r\n    for (var j = 0; j < patterns.length; ++j) {\r\n      if (rematch && rematch.cause == token + ',' + j) {\r\n        return\r\n      }\r\n\r\n      var patternObj = patterns[j]\r\n      var inside = patternObj.inside\r\n      var lookbehind = !!patternObj.lookbehind\r\n      var greedy = !!patternObj.greedy\r\n      var alias = patternObj.alias\r\n\r\n      if (greedy && !patternObj.pattern.global) {\r\n        // Without the global flag, lastIndex won't work\r\n        var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0]\r\n        patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g')\r\n      }\r\n\r\n      /** @type {RegExp} */\r\n      var pattern = patternObj.pattern || patternObj\r\n\r\n      for (\r\n        // iterate the token list and keep track of the current token/string position\r\n        var currentNode = startNode.next, pos = startPos;\r\n        currentNode !== tokenList.tail;\r\n        pos += currentNode.value.length, currentNode = currentNode.next\r\n      ) {\r\n        if (rematch && pos >= rematch.reach) {\r\n          break\r\n        }\r\n\r\n        var str = currentNode.value\r\n\r\n        if (tokenList.length > text.length) {\r\n          // Something went terribly wrong, ABORT, ABORT!\r\n          return\r\n        }\r\n\r\n        if (str instanceof Token) {\r\n          continue\r\n        }\r\n\r\n        var removeCount = 1 // this is the to parameter of removeBetween\r\n        var match\r\n\r\n        if (greedy) {\r\n          match = matchPattern(pattern, pos, text, lookbehind)\r\n          if (!match || match.index >= text.length) {\r\n            break\r\n          }\r\n\r\n          var from = match.index\r\n          var to = match.index + match[0].length\r\n          var p = pos\r\n\r\n          // find the node that contains the match\r\n          p += currentNode.value.length\r\n          while (from >= p) {\r\n            currentNode = currentNode.next\r\n            p += currentNode.value.length\r\n          }\r\n          // adjust pos (and p)\r\n          p -= currentNode.value.length\r\n          pos = p\r\n\r\n          // the current node is a Token, then the match starts inside another Token, which is invalid\r\n          if (currentNode.value instanceof Token) {\r\n            continue\r\n          }\r\n\r\n          // find the last node which is affected by this match\r\n          for (\r\n            var k = currentNode;\r\n            k !== tokenList.tail && (p < to || typeof k.value === 'string');\r\n            k = k.next\r\n          ) {\r\n            removeCount++\r\n            p += k.value.length\r\n          }\r\n          removeCount--\r\n\r\n          // replace with the new match\r\n          str = text.slice(pos, p)\r\n          match.index -= pos\r\n        } else {\r\n          match = matchPattern(pattern, 0, str, lookbehind)\r\n          if (!match) {\r\n            continue\r\n          }\r\n        }\r\n\r\n        // eslint-disable-next-line no-redeclare\r\n        var from = match.index\r\n        var matchStr = match[0]\r\n        var before = str.slice(0, from)\r\n        var after = str.slice(from + matchStr.length)\r\n\r\n        var reach = pos + str.length\r\n        if (rematch && reach > rematch.reach) {\r\n          rematch.reach = reach\r\n        }\r\n\r\n        var removeFrom = currentNode.prev\r\n\r\n        if (before) {\r\n          removeFrom = addAfter(tokenList, removeFrom, before)\r\n          pos += before.length\r\n        }\r\n\r\n        removeRange(tokenList, removeFrom, removeCount)\r\n\r\n        var wrapped = new Token(\r\n          token,\r\n          inside ? _.tokenize(matchStr, inside) : matchStr,\r\n          alias,\r\n          matchStr\r\n        )\r\n        currentNode = addAfter(tokenList, removeFrom, wrapped)\r\n\r\n        if (after) {\r\n          addAfter(tokenList, currentNode, after)\r\n        }\r\n\r\n        if (removeCount > 1) {\r\n          // at least one Token object was removed, so we have to do some rematching\r\n          // this can only happen if the current pattern is greedy\r\n\r\n          /** @type {RematchOptions} */\r\n          var nestedRematch = {\r\n            cause: token + ',' + j,\r\n            reach: reach\r\n          }\r\n          matchGrammar(\r\n            text,\r\n            tokenList,\r\n            grammar,\r\n            currentNode.prev,\r\n            pos,\r\n            nestedRematch\r\n          )\r\n\r\n          // the reach might have been extended because of the rematching\r\n          if (rematch && nestedRematch.reach > rematch.reach) {\r\n            rematch.reach = nestedRematch.reach\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef LinkedListNode\r\n * @property {T} value\r\n * @property {LinkedListNode<T> | null} prev The previous node.\r\n * @property {LinkedListNode<T> | null} next The next node.\r\n * @template T\r\n * @private\r\n */\r\n\r\n/**\r\n * @template T\r\n * @private\r\n */\r\nfunction LinkedList() {\r\n  /** @type {LinkedListNode<T>} */\r\n  var head = {value: null, prev: null, next: null}\r\n  /** @type {LinkedListNode<T>} */\r\n  var tail = {value: null, prev: head, next: null}\r\n  head.next = tail\r\n\r\n  /** @type {LinkedListNode<T>} */\r\n  this.head = head\r\n  /** @type {LinkedListNode<T>} */\r\n  this.tail = tail\r\n  this.length = 0\r\n}\r\n\r\n/**\r\n * Adds a new node with the given value to the list.\r\n *\r\n * @param {LinkedList<T>} list\r\n * @param {LinkedListNode<T>} node\r\n * @param {T} value\r\n * @returns {LinkedListNode<T>} The added node.\r\n * @template T\r\n */\r\nfunction addAfter(list, node, value) {\r\n  // assumes that node != list.tail && values.length >= 0\r\n  var next = node.next\r\n\r\n  var newNode = {value: value, prev: node, next: next}\r\n  node.next = newNode\r\n  next.prev = newNode\r\n  list.length++\r\n\r\n  return newNode\r\n}\r\n/**\r\n * Removes `count` nodes after the given node. The given node will not be removed.\r\n *\r\n * @param {LinkedList<T>} list\r\n * @param {LinkedListNode<T>} node\r\n * @param {number} count\r\n * @template T\r\n */\r\nfunction removeRange(list, node, count) {\r\n  var next = node.next\r\n  for (var i = 0; i < count && next !== list.tail; i++) {\r\n    next = next.next\r\n  }\r\n  node.next = next\r\n  next.prev = node\r\n  list.length -= i\r\n}\r\n/**\r\n * @param {LinkedList<T>} list\r\n * @returns {T[]}\r\n * @template T\r\n */\r\nfunction toArray(list) {\r\n  var array = []\r\n  var node = list.head.next\r\n  while (node !== list.tail) {\r\n    array.push(node.value)\r\n    node = node.next\r\n  }\r\n  return array\r\n}\r\n\r\nexport const Prism = _\r\n\r\n// some additional documentation/types\r\n\r\n/**\r\n * The expansion of a simple `RegExp` literal to support additional properties.\r\n *\r\n * @typedef GrammarToken\r\n * @property {RegExp} pattern The regular expression of the token.\r\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\r\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\r\n * @property {boolean} [greedy=false] Whether the token is greedy.\r\n * @property {string|string[]} [alias] An optional alias or list of aliases.\r\n * @property {Grammar} [inside] The nested grammar of this token.\r\n *\r\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\r\n *\r\n * This can be used to make nested and even recursive language definitions.\r\n *\r\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\r\n * each another.\r\n * @global\r\n * @public\r\n */\r\n\r\n/**\r\n * @typedef Grammar\r\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\r\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\r\n * @global\r\n * @public\r\n */\r\n\r\n/**\r\n * A function which will invoked after an element was successfully highlighted.\r\n *\r\n * @callback HighlightCallback\r\n * @param {Element} element The element successfully highlighted.\r\n * @returns {void}\r\n * @global\r\n * @public\r\n */\r\n\r\n/**\r\n * @callback HookCallback\r\n * @param {Object<string, any>} env The environment variables of the hook.\r\n * @returns {void}\r\n * @global\r\n * @public\r\n */\r\n", "/**\r\n * @typedef _Token A hidden Prism token\r\n * @property {string} type\r\n * @property {string} content\r\n * @property {string} alias\r\n * @property {number} length\r\n *\r\n * @typedef _Env A hidden Prism environment\r\n * @property {string} type\r\n * @property {string} tag\r\n * @property {Text|RefractorElement|Array<Text|RefractorElement>} content\r\n * @property {Array<string>} classes\r\n * @property {Record<string, string>} attributes\r\n * @property {string} language\r\n *\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Text} Text\r\n * @typedef {Omit<Element, 'children'> & {children: Array<RefractorElement|Text>}} RefractorElement\r\n * @typedef {Omit<Root, 'children'> & {children: Array<RefractorElement|Text>}} RefractorRoot\r\n *\r\n * @typedef {import('prismjs').Languages} Languages\r\n * @typedef {import('prismjs').Grammar} Grammar Whatever this is, Prism handles it.\r\n * @typedef {((prism: unknown) => void) & {displayName: string, aliases?: Array<string>}} Syntax A refractor syntax function\r\n *\r\n * @typedef Refractor Virtual syntax highlighting\r\n * @property {highlight} highlight\r\n * @property {alias} alias\r\n * @property {register} register\r\n * @property {registered} registered\r\n * @property {listLanguages} listLanguages\r\n * @property {Languages} languages\r\n */\r\n\r\n// Load all stuff in `prism.js` itself, except for `prism-file-highlight.js`.\r\n// The wrapped non-leaky grammars are loaded instead of Prism’s originals.\r\nimport {h} from 'hastscript'\r\nimport {parseEntities} from 'parse-entities'\r\nimport {Prism} from './prism-core.js'\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n// Inherit.\r\nfunction Refractor() {}\r\n\r\nRefractor.prototype = Prism\r\n\r\n/** @type {Refractor} */\r\n// @ts-expect-error: TS is wrong.\r\nexport const refractor = new Refractor()\r\n\r\n// Create.\r\nrefractor.highlight = highlight\r\nrefractor.register = register\r\nrefractor.alias = alias\r\nrefractor.registered = registered\r\nrefractor.listLanguages = listLanguages\r\n\r\n// @ts-expect-error Overwrite Prism.\r\nrefractor.util.encode = encode\r\n// @ts-expect-error Overwrite Prism.\r\nrefractor.Token.stringify = stringify\r\n\r\n/**\r\n * Highlight `value` (code) as `language` (programming language).\r\n *\r\n * @param {string} value\r\n *   Code to highlight.\r\n * @param {string|Grammar} language\r\n *   Programming language name, alias, or grammar.\r\n * @returns {RefractorRoot}\r\n *   Node representing highlighted code.\r\n */\r\nfunction highlight(value, language) {\r\n  if (typeof value !== 'string') {\r\n    throw new TypeError('Expected `string` for `value`, got `' + value + '`')\r\n  }\r\n\r\n  /** @type {Grammar} */\r\n  let grammar\r\n  /** @type {string|undefined} */\r\n  let name\r\n\r\n  // `name` is a grammar object.\r\n  // This was called internally by Prism.js before 1.28.0.\r\n  /* c8 ignore next 2 */\r\n  if (language && typeof language === 'object') {\r\n    grammar = language\r\n  } else {\r\n    name = language\r\n\r\n    if (typeof name !== 'string') {\r\n      throw new TypeError('Expected `string` for `name`, got `' + name + '`')\r\n    }\r\n\r\n    if (own.call(refractor.languages, name)) {\r\n      grammar = refractor.languages[name]\r\n    } else {\r\n      throw new Error('Unknown language: `' + name + '` is not registered')\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: 'root',\r\n    // @ts-expect-error: we hacked Prism to accept and return the things we want.\r\n    children: Prism.highlight.call(refractor, value, grammar, name)\r\n  }\r\n}\r\n\r\n/**\r\n * Register a syntax.\r\n *\r\n * @param {Syntax} syntax\r\n *   Language function made for refractor, as in, the files in\r\n *   `refractor/lang/*.js`.\r\n * @returns {void}\r\n */\r\nfunction register(syntax) {\r\n  if (typeof syntax !== 'function' || !syntax.displayName) {\r\n    throw new Error('Expected `function` for `syntax`, got `' + syntax + '`')\r\n  }\r\n\r\n  // Do not duplicate registrations.\r\n  if (!own.call(refractor.languages, syntax.displayName)) {\r\n    syntax(refractor)\r\n  }\r\n}\r\n\r\n/**\r\n * Register aliases for already registered languages.\r\n *\r\n * @param {Record<string, string|Array<string>>|string} language\r\n * @param {string|Array<string>} [alias]\r\n * @returns {void}\r\n */\r\nfunction alias(language, alias) {\r\n  const languages = refractor.languages\r\n  /** @type {Record<string, string|Array<string>>} */\r\n  let map = {}\r\n\r\n  if (typeof language === 'string') {\r\n    if (alias) {\r\n      map[language] = alias\r\n    }\r\n  } else {\r\n    map = language\r\n  }\r\n\r\n  /** @type {string} */\r\n  let key\r\n\r\n  for (key in map) {\r\n    if (own.call(map, key)) {\r\n      const value = map[key]\r\n      const list = typeof value === 'string' ? [value] : value\r\n      let index = -1\r\n\r\n      while (++index < list.length) {\r\n        languages[list[index]] = languages[key]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Check whether an `alias` or `language` is registered.\r\n *\r\n * @param {string} aliasOrLanguage\r\n * @returns {boolean}\r\n */\r\nfunction registered(aliasOrLanguage) {\r\n  if (typeof aliasOrLanguage !== 'string') {\r\n    throw new TypeError(\r\n      'Expected `string` for `aliasOrLanguage`, got `' + aliasOrLanguage + '`'\r\n    )\r\n  }\r\n\r\n  return own.call(refractor.languages, aliasOrLanguage)\r\n}\r\n\r\n/**\r\n * List all registered languages (names and aliases).\r\n *\r\n * @returns {Array<string>}\r\n */\r\nfunction listLanguages() {\r\n  const languages = refractor.languages\r\n  /** @type {Array<string>} */\r\n  const list = []\r\n  /** @type {string} */\r\n  let language\r\n\r\n  for (language in languages) {\r\n    if (\r\n      own.call(languages, language) &&\r\n      typeof languages[language] === 'object'\r\n    ) {\r\n      list.push(language)\r\n    }\r\n  }\r\n\r\n  return list\r\n}\r\n\r\n/**\r\n * @param {string|_Token|Array<string|_Token>} value\r\n * @param {string} language\r\n * @returns {Text|RefractorElement|Array<Text|RefractorElement>}\r\n */\r\nfunction stringify(value, language) {\r\n  if (typeof value === 'string') {\r\n    return {type: 'text', value}\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    /** @type {Array<Text|RefractorElement>} */\r\n    const result = []\r\n    let index = -1\r\n\r\n    while (++index < value.length) {\r\n      if (\r\n        value[index] !== '' &&\r\n        value[index] !== null &&\r\n        value[index] !== undefined\r\n      ) {\r\n        // @ts-expect-error Assume no sub-arrays.\r\n        result.push(stringify(value[index], language))\r\n      }\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  /** @type {_Env} */\r\n  const env = {\r\n    type: value.type,\r\n    content: stringify(value.content, language),\r\n    tag: 'span',\r\n    classes: ['token', value.type],\r\n    attributes: {},\r\n    language\r\n  }\r\n\r\n  if (value.alias) {\r\n    env.classes.push(\r\n      ...(typeof value.alias === 'string' ? [value.alias] : value.alias)\r\n    )\r\n  }\r\n\r\n  // @ts-expect-error Prism.\r\n  refractor.hooks.run('wrap', env)\r\n\r\n  // @ts-expect-error Hush, it’s fine.\r\n  return h(\r\n    env.tag + '.' + env.classes.join('.'),\r\n    attributes(env.attributes),\r\n    env.content\r\n  )\r\n}\r\n\r\n/**\r\n * @template {unknown} T\r\n * @param {T} tokens\r\n * @returns {T}\r\n */\r\nfunction encode(tokens) {\r\n  return tokens\r\n}\r\n\r\n/**\r\n * @param {Record<string, string>} attrs\r\n * @returns {Record<string, string>}\r\n */\r\nfunction attributes(attrs) {\r\n  /** @type {string} */\r\n  let key\r\n\r\n  for (key in attrs) {\r\n    if (own.call(attrs, key)) {\r\n      attrs[key] = parseEntities(attrs[key])\r\n    }\r\n  }\r\n\r\n  return attrs\r\n}\r\n", "/**\r\n * @typedef {import('./core.js').RefractorRoot} RefractorRoot\r\n * @typedef {import('./core.js').RefractorElement} RefractorElement\r\n * @typedef {import('./core.js').Text} Text\r\n * @typedef {import('./core.js').Grammar} Grammar\r\n * @typedef {import('./core.js').Syntax} Syntax\r\n */\r\nimport clike from '../lang/clike.js'\r\nimport c from '../lang/c.js'\r\nimport cpp from '../lang/cpp.js'\r\nimport arduino from '../lang/arduino.js'\r\nimport bash from '../lang/bash.js'\r\nimport csharp from '../lang/csharp.js'\r\nimport markup from '../lang/markup.js'\r\nimport css from '../lang/css.js'\r\nimport diff from '../lang/diff.js'\r\nimport go from '../lang/go.js'\r\nimport ini from '../lang/ini.js'\r\nimport java from '../lang/java.js'\r\nimport regex from '../lang/regex.js'\r\nimport javascript from '../lang/javascript.js'\r\nimport json from '../lang/json.js'\r\nimport kotlin from '../lang/kotlin.js'\r\nimport less from '../lang/less.js'\r\nimport lua from '../lang/lua.js'\r\nimport makefile from '../lang/makefile.js'\r\nimport yaml from '../lang/yaml.js'\r\nimport markdown from '../lang/markdown.js'\r\nimport objectivec from '../lang/objectivec.js'\r\nimport perl from '../lang/perl.js'\r\nimport markupTemplating from '../lang/markup-templating.js'\r\nimport php from '../lang/php.js'\r\nimport python from '../lang/python.js'\r\nimport r from '../lang/r.js'\r\nimport ruby from '../lang/ruby.js'\r\nimport rust from '../lang/rust.js'\r\nimport sass from '../lang/sass.js'\r\nimport scss from '../lang/scss.js'\r\nimport sql from '../lang/sql.js'\r\nimport swift from '../lang/swift.js'\r\nimport typescript from '../lang/typescript.js'\r\nimport basic from '../lang/basic.js'\r\nimport vbnet from '../lang/vbnet.js'\r\nimport {refractor} from './core.js'\r\n\r\nrefractor.register(clike)\r\nrefractor.register(c)\r\nrefractor.register(cpp)\r\nrefractor.register(arduino)\r\nrefractor.register(bash)\r\nrefractor.register(csharp)\r\nrefractor.register(markup)\r\nrefractor.register(css)\r\nrefractor.register(diff)\r\nrefractor.register(go)\r\nrefractor.register(ini)\r\nrefractor.register(java)\r\nrefractor.register(regex)\r\nrefractor.register(javascript)\r\nrefractor.register(json)\r\nrefractor.register(kotlin)\r\nrefractor.register(less)\r\nrefractor.register(lua)\r\nrefractor.register(makefile)\r\nrefractor.register(yaml)\r\nrefractor.register(markdown)\r\nrefractor.register(objectivec)\r\nrefractor.register(perl)\r\nrefractor.register(markupTemplating)\r\nrefractor.register(php)\r\nrefractor.register(python)\r\nrefractor.register(r)\r\nrefractor.register(ruby)\r\nrefractor.register(rust)\r\nrefractor.register(sass)\r\nrefractor.register(scss)\r\nrefractor.register(sql)\r\nrefractor.register(swift)\r\nrefractor.register(typescript)\r\nrefractor.register(basic)\r\nrefractor.register(vbnet)\r\n\r\nexport {refractor} from './core.js'\r\n", "// @ts-nocheck\r\nabap.displayName = 'abap'\r\nabap.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function abap(Prism) {\r\n  Prism.languages.abap = {\r\n    comment: /^\\*.*/m,\r\n    string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n    'string-template': {\r\n      pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\r\n      lookbehind: true,\r\n      alias: 'string'\r\n    },\r\n    /* End Of Line comments should not interfere with strings when the\r\nquote character occurs within them. We assume a string being highlighted\r\ninside an EOL comment is more acceptable than the opposite.\r\n*/\r\n    'eol-comment': {\r\n      pattern: /(^|\\s)\".*/m,\r\n      lookbehind: true,\r\n      alias: 'comment'\r\n    },\r\n    keyword: {\r\n      pattern:\r\n        /(\\s|\\.|^)(?:\\*-INPUT|\\?TO|ABAP-SOURCE|ABBREVIATED|ABS|ABSTRACT|ACCEPT|ACCEPTING|ACCESSPOLICY|ACCORDING|ACOS|ACTIVATION|ACTUAL|ADD|ADD-CORRESPONDING|ADJACENT|AFTER|ALIAS|ALIASES|ALIGN|ALL|ALLOCATE|ALPHA|ANALYSIS|ANALYZER|AND|ANY|APPEND|APPENDAGE|APPENDING|APPLICATION|ARCHIVE|AREA|ARITHMETIC|AS|ASCENDING|ASIN|ASPECT|ASSERT|ASSIGN|ASSIGNED|ASSIGNING|ASSOCIATION|ASYNCHRONOUS|AT|ATAN|ATTRIBUTES|AUTHORITY|AUTHORITY-CHECK|AVG|BACK|BACKGROUND|BACKUP|BACKWARD|BADI|BASE|BEFORE|BEGIN|BETWEEN|BIG|BINARY|BINDING|BIT|BIT-AND|BIT-NOT|BIT-OR|BIT-XOR|BLACK|BLANK|BLANKS|BLOB|BLOCK|BLOCKS|BLUE|BOUND|BOUNDARIES|BOUNDS|BOXED|BREAK-POINT|BT|BUFFER|BY|BYPASSING|BYTE|BYTE-CA|BYTE-CN|BYTE-CO|BYTE-CS|BYTE-NA|BYTE-NS|BYTE-ORDER|C|CA|CALL|CALLING|CASE|CAST|CASTING|CATCH|CEIL|CENTER|CENTERED|CHAIN|CHAIN-INPUT|CHAIN-REQUEST|CHANGE|CHANGING|CHANNELS|CHAR-TO-HEX|CHARACTER|CHARLEN|CHECK|CHECKBOX|CIRCULAR|CI_|CLASS|CLASS-CODING|CLASS-DATA|CLASS-EVENTS|CLASS-METHODS|CLASS-POOL|CLEANUP|CLEAR|CLIENT|CLOB|CLOCK|CLOSE|CN|CNT|CO|COALESCE|CODE|CODING|COLLECT|COLOR|COLUMN|COLUMNS|COL_BACKGROUND|COL_GROUP|COL_HEADING|COL_KEY|COL_NEGATIVE|COL_NORMAL|COL_POSITIVE|COL_TOTAL|COMMENT|COMMENTS|COMMIT|COMMON|COMMUNICATION|COMPARING|COMPONENT|COMPONENTS|COMPRESSION|COMPUTE|CONCAT|CONCATENATE|COND|CONDENSE|CONDITION|CONNECT|CONNECTION|CONSTANTS|CONTEXT|CONTEXTS|CONTINUE|CONTROL|CONTROLS|CONV|CONVERSION|CONVERT|COPIES|COPY|CORRESPONDING|COS|COSH|COUNT|COUNTRY|COVER|CP|CPI|CREATE|CREATING|CRITICAL|CS|CURRENCY|CURRENCY_CONVERSION|CURRENT|CURSOR|CURSOR-SELECTION|CUSTOMER|CUSTOMER-FUNCTION|DANGEROUS|DATA|DATABASE|DATAINFO|DATASET|DATE|DAYLIGHT|DBMAXLEN|DD\\/MM\\/YY|DD\\/MM\\/YYYY|DDMMYY|DEALLOCATE|DECIMALS|DECIMAL_SHIFT|DECLARATIONS|DEEP|DEFAULT|DEFERRED|DEFINE|DEFINING|DEFINITION|DELETE|DELETING|DEMAND|DEPARTMENT|DESCENDING|DESCRIBE|DESTINATION|DETAIL|DIALOG|DIRECTORY|DISCONNECT|DISPLAY|DISPLAY-MODE|DISTANCE|DISTINCT|DIV|DIVIDE|DIVIDE-CORRESPONDING|DIVISION|DO|DUMMY|DUPLICATE|DUPLICATES|DURATION|DURING|DYNAMIC|DYNPRO|E|EACH|EDIT|EDITOR-CALL|ELSE|ELSEIF|EMPTY|ENABLED|ENABLING|ENCODING|END|END-ENHANCEMENT-SECTION|END-LINES|END-OF-DEFINITION|END-OF-FILE|END-OF-PAGE|END-OF-SELECTION|ENDAT|ENDCASE|ENDCATCH|ENDCHAIN|ENDCLASS|ENDDO|ENDENHANCEMENT|ENDEXEC|ENDFOR|ENDFORM|ENDFUNCTION|ENDIAN|ENDIF|ENDING|ENDINTERFACE|ENDLOOP|ENDMETHOD|ENDMODULE|ENDON|ENDPROVIDE|ENDSELECT|ENDTRY|ENDWHILE|ENGINEERING|ENHANCEMENT|ENHANCEMENT-POINT|ENHANCEMENT-SECTION|ENHANCEMENTS|ENTRIES|ENTRY|ENVIRONMENT|EQ|EQUAL|EQUIV|ERRORMESSAGE|ERRORS|ESCAPE|ESCAPING|EVENT|EVENTS|EXACT|EXCEPT|EXCEPTION|EXCEPTION-TABLE|EXCEPTIONS|EXCLUDE|EXCLUDING|EXEC|EXECUTE|EXISTS|EXIT|EXIT-COMMAND|EXP|EXPAND|EXPANDING|EXPIRATION|EXPLICIT|EXPONENT|EXPORT|EXPORTING|EXTEND|EXTENDED|EXTENSION|EXTRACT|FAIL|FETCH|FIELD|FIELD-GROUPS|FIELD-SYMBOL|FIELD-SYMBOLS|FIELDS|FILE|FILTER|FILTER-TABLE|FILTERS|FINAL|FIND|FIRST|FIRST-LINE|FIXED-POINT|FKEQ|FKGE|FLOOR|FLUSH|FONT|FOR|FORM|FORMAT|FORWARD|FOUND|FRAC|FRAME|FRAMES|FREE|FRIENDS|FROM|FUNCTION|FUNCTION-POOL|FUNCTIONALITY|FURTHER|GAPS|GE|GENERATE|GET|GIVING|GKEQ|GKGE|GLOBAL|GRANT|GREATER|GREEN|GROUP|GROUPS|GT|HANDLE|HANDLER|HARMLESS|HASHED|HAVING|HDB|HEAD-LINES|HEADER|HEADERS|HEADING|HELP-ID|HELP-REQUEST|HIDE|HIGH|HINT|HOLD|HOTSPOT|I|ICON|ID|IDENTIFICATION|IDENTIFIER|IDS|IF|IGNORE|IGNORING|IMMEDIATELY|IMPLEMENTATION|IMPLEMENTATIONS|IMPLEMENTED|IMPLICIT|IMPORT|IMPORTING|IN|INACTIVE|INCL|INCLUDE|INCLUDES|INCLUDING|INCREMENT|INDEX|INDEX-LINE|INFOTYPES|INHERITING|INIT|INITIAL|INITIALIZATION|INNER|INOUT|INPUT|INSERT|INSTANCES|INTENSIFIED|INTERFACE|INTERFACE-POOL|INTERFACES|INTERNAL|INTERVALS|INTO|INVERSE|INVERTED-DATE|IS|ISO|ITERATOR|ITNO|JOB|JOIN|KEEP|KEEPING|KERNEL|KEY|KEYS|KEYWORDS|KIND|LANGUAGE|LAST|LATE|LAYOUT|LE|LEADING|LEAVE|LEFT|LEFT-JUSTIFIED|LEFTPLUS|LEFTSPACE|LEGACY|LENGTH|LESS|LET|LEVEL|LEVELS|LIKE|LINE|LINE-COUNT|LINE-SELECTION|LINE-SIZE|LINEFEED|LINES|LIST|LIST-PROCESSING|LISTBOX|LITTLE|LLANG|LOAD|LOAD-OF-PROGRAM|LOB|LOCAL|LOCALE|LOCATOR|LOG|LOG-POINT|LOG10|LOGFILE|LOGICAL|LONG|LOOP|LOW|LOWER|LPAD|LPI|LT|M|MAIL|MAIN|MAJOR-ID|MAPPING|MARGIN|MARK|MASK|MATCH|MATCHCODE|MAX|MAXIMUM|MEDIUM|MEMBERS|MEMORY|MESH|MESSAGE|MESSAGE-ID|MESSAGES|MESSAGING|METHOD|METHODS|MIN|MINIMUM|MINOR-ID|MM\\/DD\\/YY|MM\\/DD\\/YYYY|MMDDYY|MOD|MODE|MODIF|MODIFIER|MODIFY|MODULE|MOVE|MOVE-CORRESPONDING|MULTIPLY|MULTIPLY-CORRESPONDING|NA|NAME|NAMETAB|NATIVE|NB|NE|NESTED|NESTING|NEW|NEW-LINE|NEW-PAGE|NEW-SECTION|NEXT|NO|NO-DISPLAY|NO-EXTENSION|NO-GAP|NO-GAPS|NO-GROUPING|NO-HEADING|NO-SCROLLING|NO-SIGN|NO-TITLE|NO-TOPOFPAGE|NO-ZERO|NODE|NODES|NON-UNICODE|NON-UNIQUE|NOT|NP|NS|NULL|NUMBER|NUMOFCHAR|O|OBJECT|OBJECTS|OBLIGATORY|OCCURRENCE|OCCURRENCES|OCCURS|OF|OFF|OFFSET|OLE|ON|ONLY|OPEN|OPTION|OPTIONAL|OPTIONS|OR|ORDER|OTHER|OTHERS|OUT|OUTER|OUTPUT|OUTPUT-LENGTH|OVERFLOW|OVERLAY|PACK|PACKAGE|PAD|PADDING|PAGE|PAGES|PARAMETER|PARAMETER-TABLE|PARAMETERS|PART|PARTIALLY|PATTERN|PERCENTAGE|PERFORM|PERFORMING|PERSON|PF|PF-STATUS|PINK|PLACES|POOL|POSITION|POS_HIGH|POS_LOW|PRAGMAS|PRECOMPILED|PREFERRED|PRESERVING|PRIMARY|PRINT|PRINT-CONTROL|PRIORITY|PRIVATE|PROCEDURE|PROCESS|PROGRAM|PROPERTY|PROTECTED|PROVIDE|PUBLIC|PUSHBUTTON|PUT|QUEUE-ONLY|QUICKINFO|RADIOBUTTON|RAISE|RAISING|RANGE|RANGES|RAW|READ|READ-ONLY|READER|RECEIVE|RECEIVED|RECEIVER|RECEIVING|RED|REDEFINITION|REDUCE|REDUCED|REF|REFERENCE|REFRESH|REGEX|REJECT|REMOTE|RENAMING|REPLACE|REPLACEMENT|REPLACING|REPORT|REQUEST|REQUESTED|RESERVE|RESET|RESOLUTION|RESPECTING|RESPONSIBLE|RESULT|RESULTS|RESUMABLE|RESUME|RETRY|RETURN|RETURNCODE|RETURNING|RIGHT|RIGHT-JUSTIFIED|RIGHTPLUS|RIGHTSPACE|RISK|RMC_COMMUNICATION_FAILURE|RMC_INVALID_STATUS|RMC_SYSTEM_FAILURE|ROLE|ROLLBACK|ROUND|ROWS|RTTI|RUN|SAP|SAP-SPOOL|SAVING|SCALE_PRESERVING|SCALE_PRESERVING_SCIENTIFIC|SCAN|SCIENTIFIC|SCIENTIFIC_WITH_LEADING_ZERO|SCREEN|SCROLL|SCROLL-BOUNDARY|SCROLLING|SEARCH|SECONDARY|SECONDS|SECTION|SELECT|SELECT-OPTIONS|SELECTION|SELECTION-SCREEN|SELECTION-SET|SELECTION-SETS|SELECTION-TABLE|SELECTIONS|SELECTOR|SEND|SEPARATE|SEPARATED|SET|SHARED|SHIFT|SHORT|SHORTDUMP-ID|SIGN|SIGN_AS_POSTFIX|SIMPLE|SIN|SINGLE|SINH|SIZE|SKIP|SKIPPING|SMART|SOME|SORT|SORTABLE|SORTED|SOURCE|SPACE|SPECIFIED|SPLIT|SPOOL|SPOTS|SQL|SQLSCRIPT|SQRT|STABLE|STAMP|STANDARD|START-OF-SELECTION|STARTING|STATE|STATEMENT|STATEMENTS|STATIC|STATICS|STATUSINFO|STEP-LOOP|STOP|STRLEN|STRUCTURE|STRUCTURES|STYLE|SUBKEY|SUBMATCHES|SUBMIT|SUBROUTINE|SUBSCREEN|SUBSTRING|SUBTRACT|SUBTRACT-CORRESPONDING|SUFFIX|SUM|SUMMARY|SUMMING|SUPPLIED|SUPPLY|SUPPRESS|SWITCH|SWITCHSTATES|SYMBOL|SYNCPOINTS|SYNTAX|SYNTAX-CHECK|SYNTAX-TRACE|SYSTEM-CALL|SYSTEM-EXCEPTIONS|SYSTEM-EXIT|TAB|TABBED|TABLE|TABLES|TABLEVIEW|TABSTRIP|TAN|TANH|TARGET|TASK|TASKS|TEST|TESTING|TEXT|TEXTPOOL|THEN|THROW|TIME|TIMES|TIMESTAMP|TIMEZONE|TITLE|TITLE-LINES|TITLEBAR|TO|TOKENIZATION|TOKENS|TOP-LINES|TOP-OF-PAGE|TRACE-FILE|TRACE-TABLE|TRAILING|TRANSACTION|TRANSFER|TRANSFORMATION|TRANSLATE|TRANSPORTING|TRMAC|TRUNC|TRUNCATE|TRUNCATION|TRY|TYPE|TYPE-POOL|TYPE-POOLS|TYPES|ULINE|UNASSIGN|UNDER|UNICODE|UNION|UNIQUE|UNIT|UNIT_CONVERSION|UNIX|UNPACK|UNTIL|UNWIND|UP|UPDATE|UPPER|USER|USER-COMMAND|USING|UTF-8|VALID|VALUE|VALUE-REQUEST|VALUES|VARY|VARYING|VERIFICATION-MESSAGE|VERSION|VIA|VIEW|VISIBLE|WAIT|WARNING|WHEN|WHENEVER|WHERE|WHILE|WIDTH|WINDOW|WINDOWS|WITH|WITH-HEADING|WITH-TITLE|WITHOUT|WORD|WORK|WRITE|WRITER|X|XML|XOR|XSD|XSTRLEN|YELLOW|YES|YYMMDD|Z|ZERO|ZONE)(?![\\w-])/i,\r\n      lookbehind: true\r\n    },\r\n    /* Numbers can be only integers. Decimal or Hex appear only as strings */\r\n    number: /\\b\\d+\\b/,\r\n    /* Operators must always be surrounded by whitespace, they cannot be put\r\nadjacent to operands.\r\n*/\r\n    operator: {\r\n      pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\r\n      lookbehind: true\r\n    },\r\n    'string-operator': {\r\n      pattern: /(\\s)&&?(?=\\s)/,\r\n      lookbehind: true,\r\n      /* The official editor highlights */\r\n      alias: 'keyword'\r\n    },\r\n    'token-operator': [\r\n      {\r\n        /* Special operators used to access structure components, class methods/attributes, etc. */\r\n        pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\r\n        lookbehind: true,\r\n        alias: 'punctuation'\r\n      },\r\n      {\r\n        /* Special tokens used do delimit string templates */\r\n        pattern: /[|{}]/,\r\n        alias: 'punctuation'\r\n      }\r\n    ],\r\n    punctuation: /[,.:()]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nabnf.displayName = 'abnf'\r\nabnf.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function abnf(Prism) {\r\n  ;(function (Prism) {\r\n    var coreRules =\r\n      '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)'\r\n    Prism.languages.abnf = {\r\n      comment: /;.*/,\r\n      string: {\r\n        pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\r\n        greedy: true,\r\n        inside: {\r\n          punctuation: /^%[is]/\r\n        }\r\n      },\r\n      range: {\r\n        pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\r\n        alias: 'number'\r\n      },\r\n      terminal: {\r\n        pattern:\r\n          /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\r\n        alias: 'number'\r\n      },\r\n      repetition: {\r\n        pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\r\n        lookbehind: true,\r\n        alias: 'operator'\r\n      },\r\n      definition: {\r\n        pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,\r\n        lookbehind: true,\r\n        alias: 'keyword',\r\n        inside: {\r\n          punctuation: /<|>/\r\n        }\r\n      },\r\n      'core-rule': {\r\n        pattern: RegExp(\r\n          '(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])',\r\n          'i'\r\n        ),\r\n        lookbehind: true,\r\n        alias: ['rule', 'constant'],\r\n        inside: {\r\n          punctuation: /<|>/\r\n        }\r\n      },\r\n      rule: {\r\n        pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /<|>/\r\n        }\r\n      },\r\n      operator: /=\\/?|\\//,\r\n      punctuation: /[()\\[\\]]/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJavascript from './javascript.js'\r\nactionscript.displayName = 'actionscript'\r\nactionscript.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function actionscript(Prism) {\r\n  Prism.register(refractorJavascript)\r\n  Prism.languages.actionscript = Prism.languages.extend('javascript', {\r\n    keyword:\r\n      /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\r\n    operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\r\n  })\r\n  Prism.languages.actionscript['class-name'].alias = 'function'\r\n\r\n  // doesn't work with AS because AS is too complex\r\n  delete Prism.languages.actionscript['parameter']\r\n  delete Prism.languages.actionscript['literal-property']\r\n  if (Prism.languages.markup) {\r\n    Prism.languages.insertBefore('actionscript', 'string', {\r\n      xml: {\r\n        pattern:\r\n          /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\r\n        lookbehind: true,\r\n        inside: Prism.languages.markup\r\n      }\r\n    })\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nada.displayName = 'ada'\r\nada.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function ada(Prism) {\r\n  Prism.languages.ada = {\r\n    comment: /--.*/,\r\n    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/,\r\n    number: [\r\n      {\r\n        pattern:\r\n          /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\r\n      },\r\n      {\r\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\r\n      }\r\n    ],\r\n    attribute: {\r\n      pattern: /\\b'\\w+/,\r\n      alias: 'attr-name'\r\n    },\r\n    keyword:\r\n      /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|or|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\r\n    boolean: /\\b(?:false|true)\\b/i,\r\n    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\r\n    punctuation: /\\.\\.?|[,;():]/,\r\n    char: /'.'/,\r\n    variable: /\\b[a-z](?:\\w)*\\b/i\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nagda.displayName = 'agda'\r\nagda.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function agda(Prism) {\r\n  ;(function (Prism) {\r\n    Prism.languages.agda = {\r\n      comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\r\n      string: {\r\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\r\n        greedy: true\r\n      },\r\n      punctuation: /[(){}⦃⦄.;@]/,\r\n      'class-name': {\r\n        pattern: /((?:data|record) +)\\S+/,\r\n        lookbehind: true\r\n      },\r\n      function: {\r\n        pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\r\n        lookbehind: true\r\n      },\r\n      operator: {\r\n        pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\r\n        lookbehind: true\r\n      },\r\n      keyword:\r\n        /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nal.displayName = 'al'\r\nal.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function al(Prism) {\r\n  // based on https://github.com/microsoft/AL/blob/master/grammar/alsyntax.tmlanguage\r\n\r\n  Prism.languages.al = {\r\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\r\n    string: {\r\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\r\n      greedy: true\r\n    },\r\n    function: {\r\n      pattern:\r\n        /(\\b(?:event|procedure|trigger)\\s+|(?:^|[^.])\\.\\s*)[a-z_]\\w*(?=\\s*\\()/i,\r\n      lookbehind: true\r\n    },\r\n    keyword: [\r\n      // keywords\r\n      /\\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\\b/i,\r\n      // objects and metadata that are used like keywords\r\n      /\\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\\b/i\r\n    ],\r\n    number:\r\n      /\\b(?:0x[\\da-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)(?:F|LL?|U(?:LL?)?)?\\b/i,\r\n    boolean: /\\b(?:false|true)\\b/i,\r\n    variable: /\\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\\b/,\r\n    'class-name':\r\n      /\\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\\b/i,\r\n    operator: /\\.\\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\\b(?:and|div|mod|not|or|xor)\\b/i,\r\n    punctuation: /[()\\[\\]{}:.;,]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nantlr4.displayName = 'antlr4'\r\nantlr4.aliases = ['g4']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function antlr4(Prism) {\r\n  Prism.languages.antlr4 = {\r\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n    string: {\r\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\r\n      greedy: true\r\n    },\r\n    'character-class': {\r\n      pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\r\n      greedy: true,\r\n      alias: 'regex',\r\n      inside: {\r\n        range: {\r\n          pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\r\n          lookbehind: true,\r\n          alias: 'punctuation'\r\n        },\r\n        escape:\r\n          /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\r\n        punctuation: /[\\[\\]]/\r\n      }\r\n    },\r\n    action: {\r\n      pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\r\n      greedy: true,\r\n      inside: {\r\n        content: {\r\n          // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to\r\n          pattern: /(\\{)[\\s\\S]+(?=\\})/,\r\n          lookbehind: true\r\n        },\r\n        punctuation: /[{}]/\r\n      }\r\n    },\r\n    command: {\r\n      pattern:\r\n        /(->\\s*(?!\\s))(?:\\s*(?:,\\s*)?\\b[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\r\n      lookbehind: true,\r\n      inside: {\r\n        function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\r\n        punctuation: /[,()]/\r\n      }\r\n    },\r\n    annotation: {\r\n      pattern: /@\\w+(?:::\\w+)*/,\r\n      alias: 'keyword'\r\n    },\r\n    label: {\r\n      pattern: /#[ \\t]*\\w+/,\r\n      alias: 'punctuation'\r\n    },\r\n    keyword:\r\n      /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\r\n    definition: [\r\n      {\r\n        pattern: /\\b[a-z]\\w*(?=\\s*:)/,\r\n        alias: ['rule', 'class-name']\r\n      },\r\n      {\r\n        pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\r\n        alias: ['token', 'constant']\r\n      }\r\n    ],\r\n    constant: /\\b[A-Z][A-Z_]*\\b/,\r\n    operator: /\\.\\.|->|[|~]|[*+?]\\??/,\r\n    punctuation: /[;:()=]/\r\n  }\r\n  Prism.languages.g4 = Prism.languages.antlr4\r\n}\r\n", "// @ts-nocheck\r\napacheconf.displayName = 'apacheconf'\r\napacheconf.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function apacheconf(Prism) {\r\n  Prism.languages.apacheconf = {\r\n    comment: /#.*/,\r\n    'directive-inline': {\r\n      pattern:\r\n        /(^[\\t ]*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\r\n      lookbehind: true,\r\n      alias: 'property'\r\n    },\r\n    'directive-block': {\r\n      pattern:\r\n        /<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b.*>/i,\r\n      inside: {\r\n        'directive-block': {\r\n          pattern: /^<\\/?\\w+/,\r\n          inside: {\r\n            punctuation: /^<\\/?/\r\n          },\r\n          alias: 'tag'\r\n        },\r\n        'directive-block-parameter': {\r\n          pattern: /.*[^>]/,\r\n          inside: {\r\n            punctuation: /:/,\r\n            string: {\r\n              pattern: /(\"|').*\\1/,\r\n              inside: {\r\n                variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\r\n              }\r\n            }\r\n          },\r\n          alias: 'attr-value'\r\n        },\r\n        punctuation: />/\r\n      },\r\n      alias: 'tag'\r\n    },\r\n    'directive-flags': {\r\n      pattern: /\\[(?:[\\w=],?)+\\]/,\r\n      alias: 'keyword'\r\n    },\r\n    string: {\r\n      pattern: /(\"|').*\\1/,\r\n      inside: {\r\n        variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\r\n      }\r\n    },\r\n    variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\r\n    regex: /\\^?.*\\$|\\^.*\\$?/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nimport refractorSql from './sql.js'\r\napex.displayName = 'apex'\r\napex.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function apex(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.register(refractorSql)\r\n  ;(function (Prism) {\r\n    var keywords =\r\n      /\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i\r\n    var className =\r\n      /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(\r\n        /<keyword>/g,\r\n        function () {\r\n          return keywords.source\r\n        }\r\n      )\r\n    /** @param {string} pattern */\r\n    function insertClassName(pattern) {\r\n      return RegExp(\r\n        pattern.replace(/<CLASS-NAME>/g, function () {\r\n          return className\r\n        }),\r\n        'i'\r\n      )\r\n    }\r\n    var classNameInside = {\r\n      keyword: keywords,\r\n      punctuation: /[()\\[\\]{};,:.<>]/\r\n    }\r\n    Prism.languages.apex = {\r\n      comment: Prism.languages.clike.comment,\r\n      string: Prism.languages.clike.string,\r\n      sql: {\r\n        pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'language-sql',\r\n        inside: Prism.languages.sql\r\n      },\r\n      annotation: {\r\n        pattern: /@\\w+\\b/,\r\n        alias: 'punctuation'\r\n      },\r\n      'class-name': [\r\n        {\r\n          pattern: insertClassName(\r\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/\r\n              .source\r\n          ),\r\n          lookbehind: true,\r\n          inside: classNameInside\r\n        },\r\n        {\r\n          // cast\r\n          pattern: insertClassName(\r\n            /(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source\r\n          ),\r\n          lookbehind: true,\r\n          inside: classNameInside\r\n        },\r\n        {\r\n          // variable/parameter declaration and return types\r\n          pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\r\n          inside: classNameInside\r\n        }\r\n      ],\r\n      trigger: {\r\n        pattern: /(\\btrigger\\s+)\\w+\\b/i,\r\n        lookbehind: true,\r\n        alias: 'class-name'\r\n      },\r\n      keyword: keywords,\r\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n      boolean: /\\b(?:false|true)\\b/i,\r\n      number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\r\n      operator:\r\n        /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\r\n      punctuation: /[()\\[\\]{};,.]/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\napl.displayName = 'apl'\r\napl.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function apl(Prism) {\r\n  Prism.languages.apl = {\r\n    comment: /(?:⍝|#[! ]).*$/m,\r\n    string: {\r\n      pattern: /'(?:[^'\\r\\n]|'')*'/,\r\n      greedy: true\r\n    },\r\n    number:\r\n      /¯?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+)?|¯|∞))?/i,\r\n    statement: /:[A-Z][a-z][A-Za-z]*\\b/,\r\n    'system-function': {\r\n      pattern: /⎕[A-Z]+/i,\r\n      alias: 'function'\r\n    },\r\n    constant: /[⍬⌾#⎕⍞]/,\r\n    function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\r\n    'monadic-operator': {\r\n      pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\r\n      alias: 'operator'\r\n    },\r\n    'dyadic-operator': {\r\n      pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,\r\n      alias: 'operator'\r\n    },\r\n    assignment: {\r\n      pattern: /←/,\r\n      alias: 'keyword'\r\n    },\r\n    punctuation: /[\\[;\\]()◇⋄]/,\r\n    dfn: {\r\n      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\r\n      alias: 'builtin'\r\n    }\r\n  }\r\n}\r\n", "// @ts-nocheck\r\napplescript.displayName = 'applescript'\r\napplescript.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function applescript(Prism) {\r\n  Prism.languages.applescript = {\r\n    comment: [\r\n      // Allow one level of nesting\r\n      /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\r\n      /--.+/,\r\n      /#.+/\r\n    ],\r\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\r\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\r\n    operator: [\r\n      /[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,\r\n      /\\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\\b/\r\n    ],\r\n    keyword:\r\n      /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\r\n    'class-name':\r\n      /\\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\\b/,\r\n    punctuation: /[{}():,¬«»《》]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\naql.displayName = 'aql'\r\naql.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function aql(Prism) {\r\n  Prism.languages.aql = {\r\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\r\n    property: {\r\n      pattern:\r\n        /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\r\n      greedy: true\r\n    },\r\n    identifier: {\r\n      pattern: /([´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\r\n      greedy: true\r\n    },\r\n    variable: /@@?\\w+/,\r\n    keyword: [\r\n      {\r\n        pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\r\n        lookbehind: true\r\n      },\r\n      /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i,\r\n      // pseudo keywords get a lookbehind to avoid false positives\r\n      {\r\n        pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /\\bOPTIONS(?=\\s*\\{)/i\r\n      }\r\n    ],\r\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\r\n    boolean: /\\b(?:false|true)\\b/i,\r\n    range: {\r\n      pattern: /\\.\\./,\r\n      alias: 'operator'\r\n    },\r\n    number: [\r\n      /\\b0b[01]+/i,\r\n      /\\b0x[0-9a-f]+/i,\r\n      /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\r\n    ],\r\n    operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\r\n    punctuation: /::|[?.:,;()[\\]{}]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\narff.displayName = 'arff'\r\narff.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function arff(Prism) {\r\n  Prism.languages.arff = {\r\n    comment: /%.*/,\r\n    string: {\r\n      pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true\r\n    },\r\n    keyword: /@(?:attribute|data|end|relation)\\b/i,\r\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\r\n    punctuation: /[{},]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\narmasm.displayName = 'armasm'\r\narmasm.aliases = ['arm-asm']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function armasm(Prism) {\r\n  Prism.languages.armasm = {\r\n    comment: {\r\n      pattern: /;.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"/,\r\n      greedy: true,\r\n      inside: {\r\n        variable: {\r\n          pattern: /((?:^|[^$])(?:\\${2})*)\\$\\w+/,\r\n          lookbehind: true\r\n        }\r\n      }\r\n    },\r\n    char: {\r\n      pattern: /'(?:[^'\\r\\n]{0,4}|'')'/,\r\n      greedy: true\r\n    },\r\n    'version-symbol': {\r\n      pattern: /\\|[\\w@]+\\|/,\r\n      greedy: true,\r\n      alias: 'property'\r\n    },\r\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\r\n    directive: {\r\n      pattern:\r\n        /\\b(?:ALIAS|ALIGN|AREA|ARM|ASSERT|ATTR|CN|CODE|CODE16|CODE32|COMMON|CP|DATA|DCB|DCD|DCDO|DCDU|DCFD|DCFDU|DCI|DCQ|DCQU|DCW|DCWU|DN|ELIF|ELSE|END|ENDFUNC|ENDIF|ENDP|ENTRY|EQU|EXPORT|EXPORTAS|EXTERN|FIELD|FILL|FN|FUNCTION|GBLA|GBLL|GBLS|GET|GLOBAL|IF|IMPORT|INCBIN|INCLUDE|INFO|KEEP|LCLA|LCLL|LCLS|LTORG|MACRO|MAP|MEND|MEXIT|NOFP|OPT|PRESERVE8|PROC|QN|READONLY|RELOC|REQUIRE|REQUIRE8|RLIST|ROUT|SETA|SETL|SETS|SN|SPACE|SUBT|THUMB|THUMBX|TTL|WEND|WHILE)\\b/,\r\n      alias: 'property'\r\n    },\r\n    instruction: {\r\n      pattern:\r\n        /((?:^|(?:^|[^\\\\])(?:\\r\\n?|\\n))[ \\t]*(?:(?:[A-Z][A-Z0-9_]*[a-z]\\w*|[a-z]\\w*|\\d+)[ \\t]+)?)\\b[A-Z.]+\\b/,\r\n      lookbehind: true,\r\n      alias: 'keyword'\r\n    },\r\n    variable: /\\$\\w+/,\r\n    number:\r\n      /(?:\\b[2-9]_\\d+|(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e-?\\d+)?|\\b0(?:[fd]_|x)[0-9a-f]+|&[0-9a-f]+)\\b/i,\r\n    register: {\r\n      pattern: /\\b(?:r\\d|lr)\\b/,\r\n      alias: 'symbol'\r\n    },\r\n    operator: /<>|<<|>>|&&|\\|\\||[=!<>/]=?|[+\\-*%#?&|^]|:[A-Z]+:/,\r\n    punctuation: /[()[\\],]/\r\n  }\r\n  Prism.languages['arm-asm'] = Prism.languages.armasm\r\n}\r\n", "// @ts-nocheck\r\narturo.displayName = 'arturo'\r\narturo.aliases = ['art']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function arturo(Prism) {\r\n  ;(function (Prism) {\r\n    /**\r\n     * @param {string} lang\r\n     * @param {string} pattern\r\n     */\r\n    var createLanguageString = function (lang, pattern) {\r\n      return {\r\n        pattern: RegExp(\r\n          /\\{!/.source + '(?:' + (pattern || lang) + ')' + /$[\\s\\S]*\\}/.source,\r\n          'm'\r\n        ),\r\n        greedy: true,\r\n        inside: {\r\n          embedded: {\r\n            pattern: /(^\\{!\\w+\\b)[\\s\\S]+(?=\\}$)/,\r\n            lookbehind: true,\r\n            alias: 'language-' + lang,\r\n            inside: Prism.languages[lang]\r\n          },\r\n          string: /[\\s\\S]+/\r\n        }\r\n      }\r\n    }\r\n    Prism.languages.arturo = {\r\n      comment: {\r\n        pattern: /;.*/,\r\n        greedy: true\r\n      },\r\n      character: {\r\n        pattern: /`.`/,\r\n        alias: 'char',\r\n        greedy: true\r\n      },\r\n      number: {\r\n        pattern: /\\b\\d+(?:\\.\\d+(?:\\.\\d+(?:-[\\w+-]+)?)?)?\\b/\r\n      },\r\n      string: {\r\n        pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\r\n        greedy: true\r\n      },\r\n      regex: {\r\n        pattern: /\\{\\/.*?\\/\\}/,\r\n        greedy: true\r\n      },\r\n      'html-string': createLanguageString('html'),\r\n      'css-string': createLanguageString('css'),\r\n      'js-string': createLanguageString('js'),\r\n      'md-string': createLanguageString('md'),\r\n      'sql-string': createLanguageString('sql'),\r\n      'sh-string': createLanguageString('shell', 'sh'),\r\n      multistring: {\r\n        pattern: /».*|\\{:[\\s\\S]*?:\\}|\\{[\\s\\S]*?\\}|^-{6}$[\\s\\S]*/m,\r\n        alias: 'string',\r\n        greedy: true\r\n      },\r\n      label: {\r\n        pattern: /\\w+\\b\\??:/,\r\n        alias: 'property'\r\n      },\r\n      literal: {\r\n        pattern: /'(?:\\w+\\b\\??:?)/,\r\n        alias: 'constant'\r\n      },\r\n      type: {\r\n        pattern: /:(?:\\w+\\b\\??:?)/,\r\n        alias: 'class-name'\r\n      },\r\n      color: /#\\w+/,\r\n      predicate: {\r\n        pattern:\r\n          /\\b(?:all|and|any|ascii|attr|attribute|attributeLabel|binary|block|char|contains|database|date|dictionary|empty|equal|even|every|exists|false|floating|function|greater|greaterOrEqual|if|in|inline|integer|is|key|label|leap|less|lessOrEqual|literal|logical|lower|nand|negative|nor|not|notEqual|null|numeric|odd|or|path|pathLabel|positive|prefix|prime|regex|same|set|some|sorted|standalone|string|subset|suffix|superset|symbol|symbolLiteral|true|try|type|unless|upper|when|whitespace|word|xnor|xor|zero)\\?/,\r\n        alias: 'keyword'\r\n      },\r\n      'builtin-function': {\r\n        pattern:\r\n          /\\b(?:abs|acos|acosh|acsec|acsech|actan|actanh|add|after|alert|alias|and|angle|append|arg|args|arity|array|as|asec|asech|asin|asinh|atan|atan2|atanh|attr|attrs|average|before|benchmark|blend|break|call|capitalize|case|ceil|chop|clear|clip|close|color|combine|conj|continue|copy|cos|cosh|crc|csec|csech|ctan|ctanh|cursor|darken|dec|decode|define|delete|desaturate|deviation|dialog|dictionary|difference|digest|digits|div|do|download|drop|dup|e|else|empty|encode|ensure|env|escape|execute|exit|exp|extend|extract|factors|fdiv|filter|first|flatten|floor|fold|from|function|gamma|gcd|get|goto|hash|hypot|if|inc|indent|index|infinity|info|input|insert|inspect|intersection|invert|jaro|join|keys|kurtosis|last|let|levenshtein|lighten|list|ln|log|loop|lower|mail|map|match|max|median|min|mod|module|mul|nand|neg|new|nor|normalize|not|now|null|open|or|outdent|pad|palette|panic|path|pause|permissions|permutate|pi|pop|popup|pow|powerset|powmod|prefix|print|prints|process|product|query|random|range|read|relative|remove|rename|render|repeat|replace|request|return|reverse|round|sample|saturate|script|sec|sech|select|serve|set|shl|shr|shuffle|sin|sinh|size|skewness|slice|sort|spin|split|sqrt|squeeze|stack|strip|sub|suffix|sum|switch|symbols|symlink|sys|take|tan|tanh|terminal|terminate|to|truncate|try|type|unclip|union|unique|unless|until|unzip|upper|values|var|variance|volume|webview|while|with|wordwrap|write|xnor|xor|zip)\\b/,\r\n        alias: 'keyword'\r\n      },\r\n      sugar: {\r\n        pattern: /->|=>|\\||::/,\r\n        alias: 'operator'\r\n      },\r\n      punctuation: /[()[\\],]/,\r\n      symbol: {\r\n        pattern: /<:|-:|ø|@|#|\\+|\\||\\*|\\$|---|-|%|\\/|\\.\\.|\\^|~|=|<|>|\\\\/\r\n      },\r\n      boolean: {\r\n        pattern: /\\b(?:false|maybe|true)\\b/\r\n      }\r\n    }\r\n    Prism.languages.art = Prism.languages['arturo']\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nasciidoc.displayName = 'asciidoc'\r\nasciidoc.aliases = ['adoc']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function asciidoc(Prism) {\r\n  ;(function (Prism) {\r\n    var attributes = {\r\n      pattern:\r\n        /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        quoted: {\r\n          pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\r\n          inside: {\r\n            punctuation: /^[$`]|[$`]$/\r\n          }\r\n        },\r\n        interpreted: {\r\n          pattern: /'(?:[^'\\\\]|\\\\.)*'/,\r\n          inside: {\r\n            punctuation: /^'|'$/\r\n            // See rest below\r\n          }\r\n        },\r\n\r\n        string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\r\n        variable: /\\w+(?==)/,\r\n        punctuation: /^\\[|\\]$|,/,\r\n        operator: /=/,\r\n        // The negative look-ahead prevents blank matches\r\n        'attr-value': /(?!^\\s+$).+/\r\n      }\r\n    }\r\n    var asciidoc = (Prism.languages.asciidoc = {\r\n      'comment-block': {\r\n        pattern: /^(\\/{4,})$[\\s\\S]*?^\\1/m,\r\n        alias: 'comment'\r\n      },\r\n      table: {\r\n        pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\r\n        inside: {\r\n          specifiers: {\r\n            pattern:\r\n              /(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*](?:[<^>](?:\\.[<^>])?|\\.[<^>])?|[<^>](?:\\.[<^>])?|\\.[<^>])[a-z]*|[a-z]+)(?=\\|)/,\r\n            alias: 'attr-value'\r\n          },\r\n          punctuation: {\r\n            pattern: /(^|[^\\\\])[|!]=*/,\r\n            lookbehind: true\r\n          }\r\n          // See rest below\r\n        }\r\n      },\r\n\r\n      'passthrough-block': {\r\n        pattern: /^(\\+{4,})$[\\s\\S]*?^\\1$/m,\r\n        inside: {\r\n          punctuation: /^\\++|\\++$/\r\n          // See rest below\r\n        }\r\n      },\r\n\r\n      // Literal blocks and listing blocks\r\n      'literal-block': {\r\n        pattern: /^(-{4,}|\\.{4,})$[\\s\\S]*?^\\1$/m,\r\n        inside: {\r\n          punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/\r\n          // See rest below\r\n        }\r\n      },\r\n\r\n      // Sidebar blocks, quote blocks, example blocks and open blocks\r\n      'other-block': {\r\n        pattern: /^(--|\\*{4,}|_{4,}|={4,})$[\\s\\S]*?^\\1$/m,\r\n        inside: {\r\n          punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\r\n          // See rest below\r\n        }\r\n      },\r\n\r\n      // list-punctuation and list-label must appear before indented-block\r\n      'list-punctuation': {\r\n        pattern:\r\n          /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\r\n        lookbehind: true,\r\n        alias: 'punctuation'\r\n      },\r\n      'list-label': {\r\n        pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\r\n        lookbehind: true,\r\n        alias: 'symbol'\r\n      },\r\n      'indented-block': {\r\n        pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\r\n        lookbehind: true\r\n      },\r\n      comment: /^\\/\\/.*/m,\r\n      title: {\r\n        pattern:\r\n          /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\r\n        alias: 'important',\r\n        inside: {\r\n          punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\r\n          // See rest below\r\n        }\r\n      },\r\n\r\n      'attribute-entry': {\r\n        pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\r\n        alias: 'tag'\r\n      },\r\n      attributes: attributes,\r\n      hr: {\r\n        pattern: /^'{3,}$/m,\r\n        alias: 'punctuation'\r\n      },\r\n      'page-break': {\r\n        pattern: /^<{3,}$/m,\r\n        alias: 'punctuation'\r\n      },\r\n      admonition: {\r\n        pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,\r\n        alias: 'keyword'\r\n      },\r\n      callout: [\r\n        {\r\n          pattern: /(^[ \\t]*)<?\\d*>/m,\r\n          lookbehind: true,\r\n          alias: 'symbol'\r\n        },\r\n        {\r\n          pattern: /<\\d+>/,\r\n          alias: 'symbol'\r\n        }\r\n      ],\r\n      macro: {\r\n        pattern:\r\n          /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\r\n        inside: {\r\n          function: /^[a-z\\d-]+(?=:)/,\r\n          punctuation: /^::?/,\r\n          attributes: {\r\n            pattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\r\n            inside: attributes.inside\r\n          }\r\n        }\r\n      },\r\n      inline: {\r\n        /*\r\nThe initial look-behind prevents the highlighting of escaped quoted text.\r\nQuoted text can be multi-line but cannot span an empty line.\r\nAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\r\nFirst, we handle the constrained quotes.\r\nThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\r\nThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\r\nThen we handle the unconstrained quotes.\r\nThose do not have the restrictions of the constrained quotes.\r\nThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\r\n*/\r\n        pattern:\r\n          /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          attributes: attributes,\r\n          url: {\r\n            pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\r\n            inside: {\r\n              punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\r\n            }\r\n          },\r\n          'attribute-ref': {\r\n            pattern: /^\\{.+\\}$/,\r\n            inside: {\r\n              variable: {\r\n                pattern: /(^\\{)[a-z\\d,+_-]+/,\r\n                lookbehind: true\r\n              },\r\n              operator: /^[=?!#%@$]|!(?=[:}])/,\r\n              punctuation: /^\\{|\\}$|::?/\r\n            }\r\n          },\r\n          italic: {\r\n            pattern: /^(['_])[\\s\\S]+\\1$/,\r\n            inside: {\r\n              punctuation: /^(?:''?|__?)|(?:''?|__?)$/\r\n            }\r\n          },\r\n          bold: {\r\n            pattern: /^\\*[\\s\\S]+\\*$/,\r\n            inside: {\r\n              punctuation: /^\\*\\*?|\\*\\*?$/\r\n            }\r\n          },\r\n          punctuation:\r\n            /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\r\n        }\r\n      },\r\n      replacement: {\r\n        pattern: /\\((?:C|R|TM)\\)/,\r\n        alias: 'builtin'\r\n      },\r\n      entity: /&#?[\\da-z]{1,8};/i,\r\n      'line-continuation': {\r\n        pattern: /(^| )\\+$/m,\r\n        lookbehind: true,\r\n        alias: 'punctuation'\r\n      }\r\n    })\r\n\r\n    // Allow some nesting. There is no recursion though, so cloning should not be needed.\r\n\r\n    function copyFromAsciiDoc(keys) {\r\n      keys = keys.split(' ')\r\n      var o = {}\r\n      for (var i = 0, l = keys.length; i < l; i++) {\r\n        o[keys[i]] = asciidoc[keys[i]]\r\n      }\r\n      return o\r\n    }\r\n    attributes.inside['interpreted'].inside.rest = copyFromAsciiDoc(\r\n      'macro inline replacement entity'\r\n    )\r\n    asciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro')\r\n    asciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout')\r\n    asciidoc['table'].inside.rest = copyFromAsciiDoc(\r\n      'comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation'\r\n    )\r\n    asciidoc['other-block'].inside.rest = copyFromAsciiDoc(\r\n      'table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation'\r\n    )\r\n    asciidoc['title'].inside.rest = copyFromAsciiDoc(\r\n      'macro inline replacement entity'\r\n    )\r\n\r\n    // Plugin to make entity title show the real entity, idea by Roman Komarov\r\n    Prism.hooks.add('wrap', function (env) {\r\n      if (env.type === 'entity') {\r\n        env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\r\n      }\r\n    })\r\n    Prism.languages.adoc = Prism.languages.asciidoc\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorCsharp from './csharp.js'\r\nimport refractorMarkup from './markup.js'\r\naspnet.displayName = 'aspnet'\r\naspnet.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function aspnet(Prism) {\r\n  Prism.register(refractorCsharp)\r\n  Prism.register(refractorMarkup)\r\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\r\n    'page-directive': {\r\n      pattern: /<%\\s*@.*%>/,\r\n      alias: 'tag',\r\n      inside: {\r\n        'page-directive': {\r\n          pattern:\r\n            /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\r\n          alias: 'tag'\r\n        },\r\n        rest: Prism.languages.markup.tag.inside\r\n      }\r\n    },\r\n    directive: {\r\n      pattern: /<%.*%>/,\r\n      alias: 'tag',\r\n      inside: {\r\n        directive: {\r\n          pattern: /<%\\s*?[$=%#:]{0,2}|%>/,\r\n          alias: 'tag'\r\n        },\r\n        rest: Prism.languages.csharp\r\n      }\r\n    }\r\n  })\r\n  // Regexp copied from prism-markup, with a negative look-ahead added\r\n  Prism.languages.aspnet.tag.pattern =\r\n    /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/\r\n\r\n  // match directives of attribute value foo=\"<% Bar %>\"\r\n  Prism.languages.insertBefore(\r\n    'inside',\r\n    'punctuation',\r\n    {\r\n      directive: Prism.languages.aspnet['directive']\r\n    },\r\n    Prism.languages.aspnet.tag.inside['attr-value']\r\n  )\r\n  Prism.languages.insertBefore('aspnet', 'comment', {\r\n    'asp-comment': {\r\n      pattern: /<%--[\\s\\S]*?--%>/,\r\n      alias: ['asp', 'comment']\r\n    }\r\n  })\r\n\r\n  // script runat=\"server\" contains csharp, not javascript\r\n  Prism.languages.insertBefore(\r\n    'aspnet',\r\n    Prism.languages.javascript ? 'script' : 'tag',\r\n    {\r\n      'asp-script': {\r\n        pattern:\r\n          /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\r\n        lookbehind: true,\r\n        alias: ['asp', 'script'],\r\n        inside: Prism.languages.csharp || {}\r\n      }\r\n    }\r\n  )\r\n}\r\n", "// @ts-nocheck\r\nasm6502.displayName = 'asm6502'\r\nasm6502.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function asm6502(Prism) {\r\n  Prism.languages.asm6502 = {\r\n    comment: /;.*/,\r\n    directive: {\r\n      pattern: /\\.\\w+(?= )/,\r\n      alias: 'property'\r\n    },\r\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n    'op-code': {\r\n      pattern:\r\n        /\\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\\b/,\r\n      alias: 'keyword'\r\n    },\r\n    'hex-number': {\r\n      pattern: /#?\\$[\\da-f]{1,4}\\b/i,\r\n      alias: 'number'\r\n    },\r\n    'binary-number': {\r\n      pattern: /#?%[01]+\\b/,\r\n      alias: 'number'\r\n    },\r\n    'decimal-number': {\r\n      pattern: /#?\\b\\d+\\b/,\r\n      alias: 'number'\r\n    },\r\n    register: {\r\n      pattern: /\\b[xya]\\b/i,\r\n      alias: 'variable'\r\n    },\r\n    punctuation: /[(),:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nasmatmel.displayName = 'asmatmel'\r\nasmatmel.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function asmatmel(Prism) {\r\n  Prism.languages.asmatmel = {\r\n    comment: {\r\n      pattern: /;.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true\r\n    },\r\n    constant: /\\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\\d|[0-2]\\d|3[01]))\\b/,\r\n    directive: {\r\n      pattern: /\\.\\w+(?= )/,\r\n      alias: 'property'\r\n    },\r\n    'r-register': {\r\n      pattern: /\\br(?:\\d|[12]\\d|3[01])\\b/,\r\n      alias: 'variable'\r\n    },\r\n    'op-code': {\r\n      pattern:\r\n        /\\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\\b/,\r\n      alias: 'keyword'\r\n    },\r\n    'hex-number': {\r\n      pattern: /#?\\$[\\da-f]{2,4}\\b/i,\r\n      alias: 'number'\r\n    },\r\n    'binary-number': {\r\n      pattern: /#?%[01]+\\b/,\r\n      alias: 'number'\r\n    },\r\n    'decimal-number': {\r\n      pattern: /#?\\b\\d+\\b/,\r\n      alias: 'number'\r\n    },\r\n    register: {\r\n      pattern: /\\b[acznvshtixy]\\b/i,\r\n      alias: 'variable'\r\n    },\r\n    operator: />>=?|<<=?|&[&=]?|\\|[\\|=]?|[-+*/%^!=<>?]=?/,\r\n    punctuation: /[(),:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nautohotkey.displayName = 'autohotkey'\r\nautohotkey.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function autohotkey(Prism) {\r\n  // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\r\n  Prism.languages.autohotkey = {\r\n    comment: [\r\n      {\r\n        pattern: /(^|\\s);.*/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern:\r\n          /(^[\\t ]*)\\/\\*(?:[\\r\\n](?![ \\t]*\\*\\/)|[^\\r\\n])*(?:[\\r\\n][ \\t]*\\*\\/)?/m,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    tag: {\r\n      // labels\r\n      pattern: /^([ \\t]*)[^\\s,`\":]+(?=:[ \\t]*$)/m,\r\n      lookbehind: true\r\n    },\r\n    string: /\"(?:[^\"\\n\\r]|\"\")*\"/,\r\n    variable: /%\\w+%/,\r\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\r\n    operator:\r\n      /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    command: {\r\n      pattern:\r\n        /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\r\n      alias: 'selector'\r\n    },\r\n    constant:\r\n      /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\\b/i,\r\n    builtin:\r\n      /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\\b/i,\r\n    symbol:\r\n      /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\r\n    directive: {\r\n      pattern: /#[a-z]+\\b/i,\r\n      alias: 'important'\r\n    },\r\n    keyword:\r\n      /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i,\r\n    function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+(?=\\()/,\r\n    punctuation: /[{}[\\]():,]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nautoit.displayName = 'autoit'\r\nautoit.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function autoit(Prism) {\r\n  Prism.languages.autoit = {\r\n    comment: [\r\n      /;.*/,\r\n      {\r\n        // The multi-line comments delimiters can actually be commented out with \";\"\r\n        pattern:\r\n          /(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:ce|comments-end)/m,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    url: {\r\n      pattern: /(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\r\n      lookbehind: true\r\n    },\r\n    string: {\r\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\r\n      greedy: true,\r\n      inside: {\r\n        variable: /([%$@])\\w+\\1/\r\n      }\r\n    },\r\n    directive: {\r\n      pattern: /(^[\\t ]*)#[\\w-]+/m,\r\n      lookbehind: true,\r\n      alias: 'keyword'\r\n    },\r\n    function: /\\b\\w+(?=\\()/,\r\n    // Variables and macros\r\n    variable: /[$@]\\w+/,\r\n    keyword:\r\n      /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\r\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\r\n    boolean: /\\b(?:False|True)\\b/i,\r\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Not|Or)\\b/i,\r\n    punctuation: /[\\[\\]().,:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\navisynth.displayName = 'avisynth'\r\navisynth.aliases = ['avs']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function avisynth(Prism) {\r\n  // http://avisynth.nl/index.php/The_full_AviSynth_grammar\r\n  ;(function (Prism) {\r\n    function replace(pattern, replacements) {\r\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\r\n        return replacements[+index]\r\n      })\r\n    }\r\n    function re(pattern, replacements, flags) {\r\n      return RegExp(replace(pattern, replacements), flags || '')\r\n    }\r\n    var types = /bool|clip|float|int|string|val/.source\r\n    var internals = [\r\n      // bools\r\n      /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/\r\n        .source,\r\n      // control\r\n      /apply|assert|default|eval|import|nop|select|undefined/.source,\r\n      // global\r\n      /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/\r\n        .source,\r\n      // conv\r\n      /hex(?:value)?|value/.source,\r\n      // numeric\r\n      /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/\r\n        .source,\r\n      // trig\r\n      /a?sinh?|a?cosh?|a?tan[2h]?/.source,\r\n      // bit\r\n      /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/\r\n        .source,\r\n      // runtime\r\n      /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/\r\n        .source,\r\n      // script\r\n      /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/\r\n        .source,\r\n      // string\r\n      /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/\r\n        .source,\r\n      // version\r\n      /isversionorgreater|version(?:number|string)/.source,\r\n      // helper\r\n      /buildpixeltype|colorspacenametopixeltype/.source,\r\n      // avsplus\r\n      /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source\r\n    ].join('|')\r\n    var properties = [\r\n      // content\r\n      /has(?:audio|video)/.source,\r\n      // resolution\r\n      /height|width/.source,\r\n      // framerate\r\n      /frame(?:count|rate)|framerate(?:denominator|numerator)/.source,\r\n      // interlacing\r\n      /getparity|is(?:field|frame)based/.source,\r\n      // color format\r\n      /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/\r\n        .source,\r\n      // audio\r\n      /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/\r\n        .source\r\n    ].join('|')\r\n    var filters = [\r\n      // source\r\n      /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/\r\n        .source,\r\n      // color\r\n      /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/\r\n        .source,\r\n      // overlay\r\n      /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source,\r\n      // geometry\r\n      /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/\r\n        .source,\r\n      // pixel\r\n      /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/\r\n        .source,\r\n      // timeline\r\n      /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/\r\n        .source,\r\n      // interlace\r\n      /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/\r\n        .source,\r\n      // audio\r\n      /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/\r\n        .source,\r\n      // conditional\r\n      /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/\r\n        .source,\r\n      // export\r\n      /imagewriter/.source,\r\n      // debug\r\n      /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/\r\n        .source\r\n    ].join('|')\r\n    var allinternals = [internals, properties, filters].join('|')\r\n    Prism.languages.avisynth = {\r\n      comment: [\r\n        {\r\n          // Matches [* *] nestable block comments, but only supports 1 level of nested comments\r\n          // /\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|<self>)*\\*\\]/\r\n          pattern:\r\n            /(^|[^\\\\])\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\]))*\\*\\])*\\*\\]/,\r\n          lookbehind: true,\r\n          greedy: true\r\n        },\r\n        {\r\n          // Matches /* */ block comments\r\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n          lookbehind: true,\r\n          greedy: true\r\n        },\r\n        {\r\n          // Matches # comments\r\n          pattern: /(^|[^\\\\$])#.*/,\r\n          lookbehind: true,\r\n          greedy: true\r\n        }\r\n      ],\r\n      // Handle before strings because optional arguments are surrounded by double quotes\r\n      argument: {\r\n        pattern: re(/\\b(?:<<0>>)\\s+(\"?)\\w+\\1/.source, [types], 'i'),\r\n        inside: {\r\n          keyword: /^\\w+/\r\n        }\r\n      },\r\n      // Optional argument assignment\r\n      'argument-label': {\r\n        pattern: /([,(][\\s\\\\]*)\\w+\\s*=(?!=)/,\r\n        lookbehind: true,\r\n        inside: {\r\n          'argument-name': {\r\n            pattern: /^\\w+/,\r\n            alias: 'punctuation'\r\n          },\r\n          punctuation: /=$/\r\n        }\r\n      },\r\n      string: [\r\n        {\r\n          // triple double-quoted\r\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\r\n          greedy: true\r\n        },\r\n        {\r\n          // single double-quoted\r\n          pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\r\n          greedy: true,\r\n          inside: {\r\n            constant: {\r\n              // These *are* case-sensitive!\r\n              pattern:\r\n                /\\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\\b/\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      // The special \"last\" variable that takes the value of the last implicitly returned clip\r\n      variable: /\\b(?:last)\\b/i,\r\n      boolean: /\\b(?:false|no|true|yes)\\b/i,\r\n      keyword:\r\n        /\\b(?:catch|else|for|function|global|if|return|try|while|__END__)\\b/i,\r\n      constant: /\\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\\b/,\r\n      // AviSynth's internal functions, filters, and properties\r\n      'builtin-function': {\r\n        pattern: re(/\\b(?:<<0>>)\\b/.source, [allinternals], 'i'),\r\n        alias: 'function'\r\n      },\r\n      'type-cast': {\r\n        pattern: re(/\\b(?:<<0>>)(?=\\s*\\()/.source, [types], 'i'),\r\n        alias: 'keyword'\r\n      },\r\n      // External/user-defined filters\r\n      function: {\r\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()|(\\.)[a-z_]\\w*\\b/i,\r\n        lookbehind: true\r\n      },\r\n      // Matches a \\ as the first or last character on a line\r\n      'line-continuation': {\r\n        pattern: /(^[ \\t]*)\\\\|\\\\(?=[ \\t]*$)/m,\r\n        lookbehind: true,\r\n        alias: 'punctuation'\r\n      },\r\n      number:\r\n        /\\B\\$(?:[\\da-f]{6}|[\\da-f]{8})\\b|(?:(?:\\b|\\B-)\\d+(?:\\.\\d*)?\\b|\\B\\.\\d+\\b)/i,\r\n      operator: /\\+\\+?|[!=<>]=?|&&|\\|\\||[?:*/%-]/,\r\n      punctuation: /[{}\\[\\]();,.]/\r\n    }\r\n    Prism.languages.avs = Prism.languages.avisynth\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\navroIdl.displayName = 'avro-idl'\r\navroIdl.aliases = ['avdl']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function avroIdl(Prism) {\r\n  // GitHub: https://github.com/apache/avro\r\n  // Docs: https://avro.apache.org/docs/current/idl.html\r\n\r\n  Prism.languages['avro-idl'] = {\r\n    comment: {\r\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /(^|[^\\\\])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    annotation: {\r\n      pattern: /@(?:[$\\w.-]|`[^\\r\\n`]+`)+/,\r\n      greedy: true,\r\n      alias: 'function'\r\n    },\r\n    'function-identifier': {\r\n      pattern: /`[^\\r\\n`]+`(?=\\s*\\()/,\r\n      greedy: true,\r\n      alias: 'function'\r\n    },\r\n    identifier: {\r\n      pattern: /`[^\\r\\n`]+`/,\r\n      greedy: true\r\n    },\r\n    'class-name': {\r\n      pattern: /(\\b(?:enum|error|protocol|record|throws)\\b\\s+)[$\\w]+/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\\b/,\r\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n    number: [\r\n      {\r\n        pattern:\r\n          /(^|[^\\w.])-?(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|0x(?:[a-f0-9]+(?:\\.[a-f0-9]*)?|\\.[a-f0-9]+)(?:p[+-]?\\d+)?)[dfl]?(?![\\w.])/i,\r\n        lookbehind: true\r\n      },\r\n      /-?\\b(?:Infinity|NaN)\\b/\r\n    ],\r\n    operator: /=/,\r\n    punctuation: /[()\\[\\]{}<>.:,;-]/\r\n  }\r\n  Prism.languages.avdl = Prism.languages['avro-idl']\r\n}\r\n", "// @ts-nocheck\r\nawk.displayName = 'awk'\r\nawk.aliases = ['gawk']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function awk(Prism) {\r\n  Prism.languages.awk = {\r\n    hashbang: {\r\n      pattern: /^#!.*/,\r\n      greedy: true,\r\n      alias: 'comment'\r\n    },\r\n    comment: {\r\n      pattern: /#.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /(^|[^\\\\])\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    regex: {\r\n      pattern: /((?:^|[^\\w\\s)])\\s*)\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\//,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    variable: /\\$\\w+/,\r\n    keyword:\r\n      /\\b(?:BEGIN|BEGINFILE|END|ENDFILE|break|case|continue|default|delete|do|else|exit|for|function|getline|if|in|next|nextfile|printf?|return|switch|while)\\b|@(?:include|load)\\b/,\r\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[a-fA-F0-9]+)\\b/,\r\n    operator: /--|\\+\\+|!?~|>&|>>|<<|(?:\\*\\*|[<>!=+\\-*/%^])=?|&&|\\|[|&]|[?:]/,\r\n    punctuation: /[()[\\]{},;]/\r\n  }\r\n  Prism.languages.gawk = Prism.languages.awk\r\n}\r\n", "// @ts-nocheck\r\nbatch.displayName = 'batch'\r\nbatch.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function batch(Prism) {\r\n  ;(function (Prism) {\r\n    var variable = /%%?[~:\\w]+%?|!\\S+!/\r\n    var parameter = {\r\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\r\n      alias: 'attr-name',\r\n      inside: {\r\n        punctuation: /:/\r\n      }\r\n    }\r\n    var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/\r\n    var number = /(?:\\b|-)\\d+\\b/\r\n    Prism.languages.batch = {\r\n      comment: [\r\n        /^::.*/m,\r\n        {\r\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      label: {\r\n        pattern: /^:.*/m,\r\n        alias: 'property'\r\n      },\r\n      command: [\r\n        {\r\n          // FOR command\r\n          pattern:\r\n            /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /\\b(?:do|in)\\b|^for\\b/i,\r\n            string: string,\r\n            parameter: parameter,\r\n            variable: variable,\r\n            number: number,\r\n            punctuation: /[()',]/\r\n          }\r\n        },\r\n        {\r\n          // IF command\r\n          pattern:\r\n            /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword:\r\n              /\\b(?:cmdextversion|defined|errorlevel|exist|not)\\b|^if\\b/i,\r\n            string: string,\r\n            parameter: parameter,\r\n            variable: variable,\r\n            number: number,\r\n            operator: /\\^|==|\\b(?:equ|geq|gtr|leq|lss|neq)\\b/i\r\n          }\r\n        },\r\n        {\r\n          // ELSE command\r\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /^else\\b/i\r\n          }\r\n        },\r\n        {\r\n          // SET command\r\n          pattern:\r\n            /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /^set\\b/i,\r\n            string: string,\r\n            parameter: parameter,\r\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\r\n            number: number,\r\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\r\n            punctuation: /[()',]/\r\n          }\r\n        },\r\n        {\r\n          // Other commands\r\n          pattern:\r\n            /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/m,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /^\\w+\\b/,\r\n            string: string,\r\n            parameter: parameter,\r\n            label: {\r\n              pattern: /(^\\s*):\\S+/m,\r\n              lookbehind: true,\r\n              alias: 'property'\r\n            },\r\n            variable: variable,\r\n            number: number,\r\n            operator: /\\^/\r\n          }\r\n        }\r\n      ],\r\n      operator: /[&@]/,\r\n      punctuation: /[()']/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nbbcode.displayName = 'bbcode'\r\nbbcode.aliases = ['shortcode']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function bbcode(Prism) {\r\n  Prism.languages.bbcode = {\r\n    tag: {\r\n      pattern:\r\n        /\\[\\/?[^\\s=\\]]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))?(?:\\s+[^\\s=\\]]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))*\\s*\\]/,\r\n      inside: {\r\n        tag: {\r\n          pattern: /^\\[\\/?[^\\s=\\]]+/,\r\n          inside: {\r\n            punctuation: /^\\[\\/?/\r\n          }\r\n        },\r\n        'attr-value': {\r\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+)/,\r\n          inside: {\r\n            punctuation: [\r\n              /^=/,\r\n              {\r\n                pattern: /^(\\s*)[\"']|[\"']$/,\r\n                lookbehind: true\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        punctuation: /\\]/,\r\n        'attr-name': /[^\\s=\\]]+/\r\n      }\r\n    }\r\n  }\r\n  Prism.languages.shortcode = Prism.languages.bbcode\r\n}\r\n", "// @ts-nocheck\r\nbbj.displayName = 'bbj'\r\nbbj.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function bbj(Prism) {\r\n  ;(function (Prism) {\r\n    Prism.languages.bbj = {\r\n      comment: {\r\n        pattern: /(^|[^\\\\:])rem\\s+.*/i,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      string: {\r\n        pattern: /(['\"])(?:(?!\\1|\\\\).|\\\\.)*\\1/,\r\n        greedy: true\r\n      },\r\n      number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\r\n      keyword:\r\n        /\\b(?:abstract|all|argc|begin|bye|callback|case|chn|class|classend|ctl|day|declare|delete|dim|dom|dread|dsz|else|end|endif|err|exitto|extends|fi|field|for|from|gosub|goto|if|implements|interface|interfaceend|iol|iolist|let|list|load|method|methodend|methodret|on|opts|pfx|print|private|process_events|protected|psz|public|read|read_resource|release|remove_callback|repeat|restore|return|rev|seterr|setesc|sqlchn|sqlunt|ssn|start|static|swend|switch|sys|then|tim|unt|until|use|void|wend|where|while)\\b/i,\r\n      function: /\\b\\w+(?=\\()/,\r\n      boolean: /\\b(?:BBjAPI\\.TRUE|BBjAPI\\.FALSE)\\b/i,\r\n      operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:and|not|or|xor)\\b/i,\r\n      punctuation: /[.,;:()]/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nbicep.displayName = 'bicep'\r\nbicep.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function bicep(Prism) {\r\n  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\r\n  Prism.languages.bicep = {\r\n    comment: [\r\n      {\r\n        // multiline comments eg /* ASDF */\r\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      {\r\n        // singleline comments eg // ASDF\r\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    property: [\r\n      {\r\n        pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    string: [\r\n      {\r\n        pattern: /'''[^'][\\s\\S]*?'''/,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    'interpolated-string': {\r\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern: /\\$\\{[^{}\\r\\n]*\\}/,\r\n          inside: {\r\n            expression: {\r\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\r\n              lookbehind: true\r\n            },\r\n            punctuation: /^\\$\\{|\\}$/\r\n          }\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    },\r\n    datatype: {\r\n      pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\r\n      lookbehind: true,\r\n      alias: 'class-name'\r\n    },\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\r\n    keyword:\r\n      /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\r\n    decorator: /@\\w+\\b/,\r\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\r\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\r\n    operator:\r\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\r\n    punctuation: /[{}[\\];(),.:]/\r\n  }\r\n  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside[\r\n    'expression'\r\n  ].inside = Prism.languages.bicep\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nbirb.displayName = 'birb'\r\nbirb.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function birb(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.birb = Prism.languages.extend('clike', {\r\n    string: {\r\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\r\n      greedy: true\r\n    },\r\n    'class-name': [\r\n      /\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/,\r\n      // matches variable and function return types (parameters as well).\r\n      /\\b(?:[A-Z]\\w*|(?!(?:var|void)\\b)[a-z]\\w*)(?=\\s+\\w+\\s*[;,=()])/\r\n    ],\r\n    keyword:\r\n      /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\\b/,\r\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\r\n    variable: /\\b[a-z_]\\w*\\b/\r\n  })\r\n  Prism.languages.insertBefore('birb', 'function', {\r\n    metadata: {\r\n      pattern: /<\\w+>/,\r\n      greedy: true,\r\n      alias: 'symbol'\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nimport refractorC from './c.js'\r\nbison.displayName = 'bison'\r\nbison.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function bison(Prism) {\r\n  Prism.register(refractorC)\r\n  Prism.languages.bison = Prism.languages.extend('c', {})\r\n  Prism.languages.insertBefore('bison', 'comment', {\r\n    bison: {\r\n      // This should match all the beginning of the file\r\n      // including the prologue(s), the bison declarations and\r\n      // the grammar rules.\r\n      pattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\r\n      inside: {\r\n        c: {\r\n          // Allow for one level of nested braces\r\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\r\n          inside: {\r\n            delimiter: {\r\n              pattern: /^%?\\{|%?\\}$/,\r\n              alias: 'punctuation'\r\n            },\r\n            'bison-variable': {\r\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\r\n              alias: 'variable',\r\n              inside: {\r\n                punctuation: /<|>/\r\n              }\r\n            },\r\n            rest: Prism.languages.c\r\n          }\r\n        },\r\n        comment: Prism.languages.c.comment,\r\n        string: Prism.languages.c.string,\r\n        property: /\\S+(?=:)/,\r\n        keyword: /%\\w+/,\r\n        number: {\r\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\r\n          lookbehind: true\r\n        },\r\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\r\n      }\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nbnf.displayName = 'bnf'\r\nbnf.aliases = ['rbnf']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function bnf(Prism) {\r\n  Prism.languages.bnf = {\r\n    string: {\r\n      pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\r\n    },\r\n    definition: {\r\n      pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\r\n      alias: ['rule', 'keyword'],\r\n      inside: {\r\n        punctuation: /^<|>$/\r\n      }\r\n    },\r\n    rule: {\r\n      pattern: /<[^<>\\r\\n\\t]+>/,\r\n      inside: {\r\n        punctuation: /^<|>$/\r\n      }\r\n    },\r\n    operator: /::=|[|()[\\]{}*+?]|\\.{3}/\r\n  }\r\n  Prism.languages.rbnf = Prism.languages.bnf\r\n}\r\n", "// @ts-nocheck\r\nbqn.displayName = 'bqn'\r\nbqn.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function bqn(Prism) {\r\n  Prism.languages.bqn = {\r\n    shebang: {\r\n      pattern: /^#![ \\t]*\\/.*/,\r\n      alias: 'important',\r\n      greedy: true\r\n    },\r\n    comment: {\r\n      pattern: /#.*/,\r\n      greedy: true\r\n    },\r\n    'string-literal': {\r\n      pattern: /\"(?:[^\"]|\"\")*\"/,\r\n      greedy: true,\r\n      alias: 'string'\r\n    },\r\n    'character-literal': {\r\n      pattern: /'(?:[\\s\\S]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])'/,\r\n      greedy: true,\r\n      alias: 'char'\r\n    },\r\n    function: /•[\\w¯.∞π]+[\\w¯.∞π]*/,\r\n    'dot-notation-on-brackets': {\r\n      pattern: /\\{(?=.*\\}\\.)|\\}\\./,\r\n      alias: 'namespace'\r\n    },\r\n    'special-name': {\r\n      pattern: /(?:𝕨|𝕩|𝕗|𝕘|𝕤|𝕣|𝕎|𝕏|𝔽|𝔾|𝕊|_𝕣_|_𝕣)/,\r\n      alias: 'keyword'\r\n    },\r\n    'dot-notation-on-name': {\r\n      pattern: /[A-Za-z_][\\w¯∞π]*\\./,\r\n      alias: 'namespace'\r\n    },\r\n    'word-number-scientific': {\r\n      pattern: /\\d+(?:\\.\\d+)?[eE]¯?\\d+/,\r\n      alias: 'number'\r\n    },\r\n    'word-name': {\r\n      pattern: /[A-Za-z_][\\w¯∞π]*/,\r\n      alias: 'symbol'\r\n    },\r\n    'word-number': {\r\n      pattern:\r\n        /[¯∞π]?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+|E[+¯]?\\d+)?|¯|∞|π)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+|E[+¯]?\\d+)?|¯|∞|π))?/,\r\n      alias: 'number'\r\n    },\r\n    'null-literal': {\r\n      pattern: /@/,\r\n      alias: 'char'\r\n    },\r\n    'primitive-functions': {\r\n      pattern: /[-+×÷⋆√⌊⌈|¬∧∨<>≠=≤≥≡≢⊣⊢⥊∾≍⋈↑↓↕«»⌽⍉/⍋⍒⊏⊑⊐⊒∊⍷⊔!]/,\r\n      alias: 'operator'\r\n    },\r\n    'primitive-1-operators': {\r\n      pattern: /[`˜˘¨⁼⌜´˝˙]/,\r\n      alias: 'operator'\r\n    },\r\n    'primitive-2-operators': {\r\n      pattern: /[∘⊸⟜○⌾⎉⚇⍟⊘◶⎊]/,\r\n      alias: 'operator'\r\n    },\r\n    punctuation: /[←⇐↩(){}⟨⟩[\\]‿·⋄,.;:?]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nbrainfuck.displayName = 'brainfuck'\r\nbrainfuck.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function brainfuck(Prism) {\r\n  Prism.languages.brainfuck = {\r\n    pointer: {\r\n      pattern: /<|>/,\r\n      alias: 'keyword'\r\n    },\r\n    increment: {\r\n      pattern: /\\+/,\r\n      alias: 'inserted'\r\n    },\r\n    decrement: {\r\n      pattern: /-/,\r\n      alias: 'deleted'\r\n    },\r\n    branching: {\r\n      pattern: /\\[|\\]/,\r\n      alias: 'important'\r\n    },\r\n    operator: /[.,]/,\r\n    comment: /\\S+/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nbrightscript.displayName = 'brightscript'\r\nbrightscript.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function brightscript(Prism) {\r\n  Prism.languages.brightscript = {\r\n    comment: /(?:\\brem|').*/i,\r\n    'directive-statement': {\r\n      pattern: /(^[\\t ]*)#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if).*/im,\r\n      lookbehind: true,\r\n      alias: 'property',\r\n      inside: {\r\n        'error-message': {\r\n          pattern: /(^#error).+/,\r\n          lookbehind: true\r\n        },\r\n        directive: {\r\n          pattern: /^#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if)/,\r\n          alias: 'keyword'\r\n        },\r\n        expression: {\r\n          pattern: /[\\s\\S]+/,\r\n          inside: null // see below\r\n        }\r\n      }\r\n    },\r\n\r\n    property: {\r\n      pattern:\r\n        /([\\r\\n{,][\\t ]*)(?:(?!\\d)\\w+|\"(?:[^\"\\r\\n]|\"\")*\"(?!\"))(?=[ \\t]*:)/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\r\n      greedy: true\r\n    },\r\n    'class-name': {\r\n      pattern: /(\\bAs[\\t ]+)\\w+/i,\r\n      lookbehind: true\r\n    },\r\n    keyword:\r\n      /\\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\\b/i,\r\n    boolean: /\\b(?:false|true)\\b/i,\r\n    function: /\\b(?!\\d)\\w+(?=[\\t ]*\\()/,\r\n    number: /(?:\\b\\d+(?:\\.\\d+)?(?:[ed][+-]\\d+)?|&h[a-f\\d]+)\\b[%&!#]?/i,\r\n    operator:\r\n      /--|\\+\\+|>>=?|<<=?|<>|[-+*/\\\\<>]=?|[:^=?]|\\b(?:and|mod|not|or)\\b/i,\r\n    punctuation: /[.,;()[\\]{}]/,\r\n    constant: /\\b(?:LINE_NUM)\\b/i\r\n  }\r\n  Prism.languages.brightscript['directive-statement'].inside.expression.inside =\r\n    Prism.languages.brightscript\r\n}\r\n", "// @ts-nocheck\r\nbro.displayName = 'bro'\r\nbro.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function bro(Prism) {\r\n  Prism.languages.bro = {\r\n    comment: {\r\n      pattern: /(^|[^\\\\$])#.*/,\r\n      lookbehind: true,\r\n      inside: {\r\n        italic: /\\b(?:FIXME|TODO|XXX)\\b/\r\n      }\r\n    },\r\n    string: {\r\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true\r\n    },\r\n    boolean: /\\b[TF]\\b/,\r\n    function: {\r\n      pattern: /(\\b(?:event|function|hook)[ \\t]+)\\w+(?:::\\w+)?/,\r\n      lookbehind: true\r\n    },\r\n    builtin:\r\n      /(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,\r\n    constant: {\r\n      pattern: /(\\bconst[ \\t]+)\\w+/i,\r\n      lookbehind: true\r\n    },\r\n    keyword:\r\n      /\\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\\b/,\r\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\r\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\r\n    punctuation: /[{}[\\];(),.:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nbsl.displayName = 'bsl'\r\nbsl.aliases = ['oscript']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function bsl(Prism) {\r\n  /* eslint-disable no-misleading-character-class */\r\n\r\n  // 1C:Enterprise\r\n  // https://github.com/Diversus23/\r\n  //\r\n  Prism.languages.bsl = {\r\n    comment: /\\/\\/.*/,\r\n    string: [\r\n      // Строки\r\n      // Strings\r\n      {\r\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\r\n        greedy: true\r\n      },\r\n      // Дата и время\r\n      // Date & time\r\n      {\r\n        pattern: /'(?:[^'\\r\\n\\\\]|\\\\.)*'/\r\n      }\r\n    ],\r\n    keyword: [\r\n      {\r\n        // RU\r\n        pattern:\r\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // EN\r\n        pattern:\r\n          /\\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\\b/i\r\n      }\r\n    ],\r\n    number: {\r\n      pattern:\r\n        /(^(?=\\d)|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:E[+-]?\\d+)?/i,\r\n      lookbehind: true\r\n    },\r\n    operator: [\r\n      /[<>+\\-*/]=?|[%=]/,\r\n      // RU\r\n      {\r\n        pattern:\r\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:и|или|не)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\r\n        lookbehind: true\r\n      },\r\n      // EN\r\n      {\r\n        pattern: /\\b(?:and|not|or)\\b/i\r\n      }\r\n    ],\r\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/,\r\n    directive: [\r\n      // Теги препроцессора вида &Клиент, &Сервер, ...\r\n      // Preprocessor tags of the type &Client, &Server, ...\r\n      {\r\n        pattern: /^([ \\t]*)&.*/m,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'important'\r\n      },\r\n      // Инструкции препроцессора вида:\r\n      // #Если Сервер Тогда\r\n      // ...\r\n      // #КонецЕсли\r\n      // Preprocessor instructions of the form:\r\n      // #If Server Then\r\n      // ...\r\n      // #EndIf\r\n      {\r\n        pattern: /^([ \\t]*)#.*/gm,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'important'\r\n      }\r\n    ]\r\n  }\r\n  Prism.languages.oscript = Prism.languages['bsl']\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\ncfscript.displayName = 'cfscript'\r\ncfscript.aliases = ['cfc']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function cfscript(Prism) {\r\n  Prism.register(refractorClike)\r\n  // https://cfdocs.org/script\r\n  Prism.languages.cfscript = Prism.languages.extend('clike', {\r\n    comment: [\r\n      {\r\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n        lookbehind: true,\r\n        inside: {\r\n          annotation: {\r\n            pattern: /(?:^|[^.])@[\\w\\.]+/,\r\n            alias: 'punctuation'\r\n          }\r\n        }\r\n      },\r\n      {\r\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    keyword:\r\n      /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\r\n    operator: [\r\n      /\\+\\+|--|&&|\\|\\||::|=>|[!=]==|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|:/,\r\n      /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/\r\n    ],\r\n    scope: {\r\n      pattern:\r\n        /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\r\n      alias: 'global'\r\n    },\r\n    type: {\r\n      pattern:\r\n        /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\r\n      alias: 'builtin'\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('cfscript', 'keyword', {\r\n    // This must be declared before keyword because we use \"function\" inside the lookahead\r\n    'function-variable': {\r\n      pattern:\r\n        /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\r\n      alias: 'function'\r\n    }\r\n  })\r\n  delete Prism.languages.cfscript['class-name']\r\n  Prism.languages.cfc = Prism.languages['cfscript']\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nimport refractorCpp from './cpp.js'\r\nchaiscript.displayName = 'chaiscript'\r\nchaiscript.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function chaiscript(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.register(refractorCpp)\r\n  Prism.languages.chaiscript = Prism.languages.extend('clike', {\r\n    string: {\r\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    'class-name': [\r\n      {\r\n        // e.g. class Rectangle { ... }\r\n        pattern: /(\\bclass\\s+)\\w+/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // e.g. attr Rectangle::height, def Rectangle::area() { ... }\r\n        pattern: /(\\b(?:attr|def)\\s+)\\w+(?=\\s*::)/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    keyword:\r\n      /\\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\\b/,\r\n    number: [Prism.languages.cpp.number, /\\b(?:Infinity|NaN)\\b/],\r\n    operator:\r\n      />>=?|<<=?|\\|\\||&&|:[:=]?|--|\\+\\+|[=!<>+\\-*/%|&^]=?|[?~]|`[^`\\r\\n]{1,4}`/\r\n  })\r\n  Prism.languages.insertBefore('chaiscript', 'operator', {\r\n    'parameter-type': {\r\n      // e.g. def foo(int x, Vector y) {...}\r\n      pattern: /([,(]\\s*)\\w+(?=\\s+\\w)/,\r\n      lookbehind: true,\r\n      alias: 'class-name'\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('chaiscript', 'string', {\r\n    'string-interpolation': {\r\n      pattern:\r\n        /(^|[^\\\\])\"(?:[^\"$\\\\]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\"/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern:\r\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}/,\r\n          lookbehind: true,\r\n          inside: {\r\n            'interpolation-expression': {\r\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\r\n              lookbehind: true,\r\n              inside: Prism.languages.chaiscript\r\n            },\r\n            'interpolation-punctuation': {\r\n              pattern: /^\\$\\{|\\}$/,\r\n              alias: 'punctuation'\r\n            }\r\n          }\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\ncil.displayName = 'cil'\r\ncil.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function cil(Prism) {\r\n  Prism.languages.cil = {\r\n    comment: /\\/\\/.*/,\r\n    string: {\r\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true\r\n    },\r\n    directive: {\r\n      pattern: /(^|\\W)\\.[a-z]+(?=\\s)/,\r\n      lookbehind: true,\r\n      alias: 'class-name'\r\n    },\r\n    // Actually an assembly reference\r\n    variable: /\\[[\\w\\.]+\\]/,\r\n    keyword:\r\n      /\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,\r\n    function:\r\n      /\\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.\\d+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.\\d+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|castclass|ldvirtftn|beq(?:\\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    number: /\\b-?(?:0x[0-9a-f]+|\\d+)(?:\\.[0-9a-f]+)?\\b/i,\r\n    punctuation: /[{}[\\];(),:=]|IL_[0-9A-Za-z]+/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorC from './c.js'\r\ncilkc.displayName = 'cilkc'\r\ncilkc.aliases = ['cilk-c']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function cilkc(Prism) {\r\n  Prism.register(refractorC)\r\n  Prism.languages.cilkc = Prism.languages.insertBefore('c', 'function', {\r\n    'parallel-keyword': {\r\n      pattern: /\\bcilk_(?:for|reducer|s(?:cope|pawn|ync))\\b/,\r\n      alias: 'keyword'\r\n    }\r\n  })\r\n  Prism.languages['cilk-c'] = Prism.languages['cilkc']\r\n}\r\n", "// @ts-nocheck\r\nimport refractorCpp from './cpp.js'\r\ncilkcpp.displayName = 'cilkcpp'\r\ncilkcpp.aliases = ['cilk', 'cilk-cpp']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function cilkcpp(Prism) {\r\n  Prism.register(refractorCpp)\r\n  Prism.languages.cilkcpp = Prism.languages.insertBefore('cpp', 'function', {\r\n    'parallel-keyword': {\r\n      pattern: /\\bcilk_(?:for|reducer|s(?:cope|pawn|ync))\\b/,\r\n      alias: 'keyword'\r\n    }\r\n  })\r\n  Prism.languages['cilk-cpp'] = Prism.languages['cilkcpp']\r\n  Prism.languages['cilk'] = Prism.languages['cilkcpp']\r\n}\r\n", "// @ts-nocheck\r\nclojure.displayName = 'clojure'\r\nclojure.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function clojure(Prism) {\r\n  // Copied from https://github.com/jeluard/prism-clojure\r\n  Prism.languages.clojure = {\r\n    comment: {\r\n      pattern: /;.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\r\n      greedy: true\r\n    },\r\n    char: /\\\\\\w+/,\r\n    symbol: {\r\n      pattern: /(^|[\\s()\\[\\]{},])::?[\\w*+!?'<>=/.-]+/,\r\n      lookbehind: true\r\n    },\r\n    keyword: {\r\n      pattern:\r\n        /(\\()(?:-|->|->>|\\.|\\.\\.|\\*|\\/|\\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[\\s)]|$)/,\r\n      lookbehind: true\r\n    },\r\n    boolean: /\\b(?:false|nil|true)\\b/,\r\n    number: {\r\n      pattern:\r\n        /(^|[^\\w$@])(?:\\d+(?:[/.]\\d+)?(?:e[+-]?\\d+)?|0x[a-f0-9]+|[1-9]\\d?r[a-z0-9]+)[lmn]?(?![\\w$@])/i,\r\n      lookbehind: true\r\n    },\r\n    function: {\r\n      pattern: /((?:^|[^'])\\()[\\w*+!?'<>=/.-]+(?=[\\s)]|$)/,\r\n      lookbehind: true\r\n    },\r\n    operator: /[#@^`~]/,\r\n    punctuation: /[{}\\[\\](),]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\ncmake.displayName = 'cmake'\r\ncmake.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function cmake(Prism) {\r\n  Prism.languages.cmake = {\r\n    comment: /#.*/,\r\n    string: {\r\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern: /\\$\\{(?:[^{}$]|\\$\\{[^{}$]*\\})*\\}/,\r\n          inside: {\r\n            punctuation: /\\$\\{|\\}/,\r\n            variable: /\\w+/\r\n          }\r\n        }\r\n      }\r\n    },\r\n    variable:\r\n      /\\b(?:CMAKE_\\w+|\\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_NAME|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE))\\b/,\r\n    property:\r\n      /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\r\n    keyword:\r\n      /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\r\n    boolean: /\\b(?:FALSE|OFF|ON|TRUE)\\b/,\r\n    namespace:\r\n      /\\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\\b/,\r\n    operator:\r\n      /\\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\\b/,\r\n    inserted: {\r\n      pattern: /\\b\\w+::\\w+\\b/,\r\n      alias: 'class-name'\r\n    },\r\n    number: /\\b\\d+(?:\\.\\d+)*\\b/,\r\n    function: /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\r\n    punctuation: /[()>}]|\\$[<{]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\ncobol.displayName = 'cobol'\r\ncobol.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function cobol(Prism) {\r\n  Prism.languages.cobol = {\r\n    comment: {\r\n      pattern: /\\*>.*|(^[ \\t]*)\\*.*/m,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /[xzgn]?(?:\"(?:[^\\r\\n\"]|\"\")*\"(?!\")|'(?:[^\\r\\n']|'')*'(?!'))/i,\r\n      greedy: true\r\n    },\r\n    level: {\r\n      pattern: /(^[ \\t]*)\\d+\\b/m,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'number'\r\n    },\r\n    'class-name': {\r\n      // https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015\r\n      pattern:\r\n        /(\\bpic(?:ture)?\\s+)(?:(?:[-\\w$/,:*+<>]|\\.(?!\\s|$))(?:\\(\\d+\\))?)+/i,\r\n      lookbehind: true,\r\n      inside: {\r\n        number: {\r\n          pattern: /(\\()\\d+/,\r\n          lookbehind: true\r\n        },\r\n        punctuation: /[()]/\r\n      }\r\n    },\r\n    keyword: {\r\n      pattern:\r\n        /(^|[^\\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\\w-])/i,\r\n      lookbehind: true\r\n    },\r\n    boolean: {\r\n      pattern: /(^|[^\\w-])(?:false|true)(?![\\w-])/i,\r\n      lookbehind: true\r\n    },\r\n    number: {\r\n      pattern:\r\n        /(^|[^\\w-])(?:[+-]?(?:(?:\\d+(?:[.,]\\d+)?|[.,]\\d+)(?:e[+-]?\\d+)?|zero))(?![\\w-])/i,\r\n      lookbehind: true\r\n    },\r\n    operator: [\r\n      /<>|[<>]=?|[=+*/&]/,\r\n      {\r\n        pattern: /(^|[^\\w-])(?:-|and|equal|greater|less|not|or|than)(?![\\w-])/i,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    punctuation: /[.:,()]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJavascript from './javascript.js'\r\ncoffeescript.displayName = 'coffeescript'\r\ncoffeescript.aliases = ['coffee']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function coffeescript(Prism) {\r\n  Prism.register(refractorJavascript)\r\n  ;(function (Prism) {\r\n    // Ignore comments starting with { to privilege string interpolation highlighting\r\n    var comment = /#(?!\\{).+/\r\n    var interpolation = {\r\n      pattern: /#\\{[^}]+\\}/,\r\n      alias: 'variable'\r\n    }\r\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\r\n      comment: comment,\r\n      string: [\r\n        // Strings are multiline\r\n        {\r\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\r\n          greedy: true\r\n        },\r\n        {\r\n          // Strings are multiline\r\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\r\n          greedy: true,\r\n          inside: {\r\n            interpolation: interpolation\r\n          }\r\n        }\r\n      ],\r\n      keyword:\r\n        /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\r\n      'class-member': {\r\n        pattern: /@(?!\\d)\\w+/,\r\n        alias: 'variable'\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('coffeescript', 'comment', {\r\n      'multiline-comment': {\r\n        pattern: /###[\\s\\S]+?###/,\r\n        alias: 'comment'\r\n      },\r\n      // Block regexp can contain comments and interpolation\r\n      'block-regex': {\r\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\r\n        alias: 'regex',\r\n        inside: {\r\n          comment: comment,\r\n          interpolation: interpolation\r\n        }\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('coffeescript', 'string', {\r\n      'inline-javascript': {\r\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\r\n        inside: {\r\n          delimiter: {\r\n            pattern: /^`|`$/,\r\n            alias: 'punctuation'\r\n          },\r\n          script: {\r\n            pattern: /[\\s\\S]+/,\r\n            alias: 'language-javascript',\r\n            inside: Prism.languages.javascript\r\n          }\r\n        }\r\n      },\r\n      // Block strings\r\n      'multiline-string': [\r\n        {\r\n          pattern: /'''[\\s\\S]*?'''/,\r\n          greedy: true,\r\n          alias: 'string'\r\n        },\r\n        {\r\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\r\n          greedy: true,\r\n          alias: 'string',\r\n          inside: {\r\n            interpolation: interpolation\r\n          }\r\n        }\r\n      ]\r\n    })\r\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\r\n      // Object property\r\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\r\n    })\r\n    delete Prism.languages.coffeescript['template-string']\r\n    Prism.languages.coffee = Prism.languages.coffeescript\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nconcurnas.displayName = 'concurnas'\r\nconcurnas.aliases = ['conc']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function concurnas(Prism) {\r\n  Prism.languages.concurnas = {\r\n    comment: {\r\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*)/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    langext: {\r\n      pattern: /\\b\\w+\\s*\\|\\|[\\s\\S]+?\\|\\|/,\r\n      greedy: true,\r\n      inside: {\r\n        'class-name': /^\\w+/,\r\n        string: {\r\n          pattern: /(^\\s*\\|\\|)[\\s\\S]+(?=\\|\\|$)/,\r\n          lookbehind: true\r\n        },\r\n        punctuation: /\\|\\|/\r\n      }\r\n    },\r\n    function: {\r\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/,\r\n      lookbehind: true\r\n    },\r\n    keyword:\r\n      /\\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    number:\r\n      /\\b0b[01][01_]*L?\\b|\\b0x(?:[\\da-f_]*\\.)?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfls]?/i,\r\n    punctuation: /[{}[\\];(),.:]/,\r\n    operator:\r\n      /<==|>==|=>|->|<-|<>|&==|&<>|\\?:?|\\.\\?|\\+\\+|--|[-+*/=<>]=?|[!^~]|\\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\\b=?/,\r\n    annotation: {\r\n      pattern: /@(?:\\w+:)?(?:\\w+|\\[[^\\]]+\\])?/,\r\n      alias: 'builtin'\r\n    }\r\n  }\r\n  Prism.languages.insertBefore('concurnas', 'langext', {\r\n    'regex-literal': {\r\n      pattern: /\\br(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern:\r\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\r\n          lookbehind: true,\r\n          inside: Prism.languages.concurnas\r\n        },\r\n        regex: /[\\s\\S]+/\r\n      }\r\n    },\r\n    'string-literal': {\r\n      pattern: /(?:\\B|\\bs)(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern:\r\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\r\n          lookbehind: true,\r\n          inside: Prism.languages.concurnas\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    }\r\n  })\r\n  Prism.languages.conc = Prism.languages.concurnas\r\n}\r\n", "// @ts-nocheck\r\ncsp.displayName = 'csp'\r\ncsp.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function csp(Prism) {\r\n  /**\r\n   * Original by Scott Helme.\r\n   *\r\n   * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\r\n   *\r\n   * Supports the following:\r\n   *  - https://www.w3.org/TR/CSP1/\r\n   *  - https://www.w3.org/TR/CSP2/\r\n   *  - https://www.w3.org/TR/CSP3/\r\n   */\r\n\r\n  ;(function (Prism) {\r\n    /**\r\n     * @param {string} source\r\n     * @returns {RegExp}\r\n     */\r\n    function value(source) {\r\n      return RegExp(\r\n        /([ \\t])/.source + '(?:' + source + ')' + /(?=[\\s;]|$)/.source,\r\n        'i'\r\n      )\r\n    }\r\n    Prism.languages.csp = {\r\n      directive: {\r\n        pattern:\r\n          /(^|[\\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\\s;]|$)/i,\r\n        lookbehind: true,\r\n        alias: 'property'\r\n      },\r\n      scheme: {\r\n        pattern: value(/[a-z][a-z0-9.+-]*:/.source),\r\n        lookbehind: true\r\n      },\r\n      none: {\r\n        pattern: value(/'none'/.source),\r\n        lookbehind: true,\r\n        alias: 'keyword'\r\n      },\r\n      nonce: {\r\n        pattern: value(/'nonce-[-+/\\w=]+'/.source),\r\n        lookbehind: true,\r\n        alias: 'number'\r\n      },\r\n      hash: {\r\n        pattern: value(/'sha(?:256|384|512)-[-+/\\w=]+'/.source),\r\n        lookbehind: true,\r\n        alias: 'number'\r\n      },\r\n      host: {\r\n        pattern: value(\r\n          /[a-z][a-z0-9.+-]*:\\/\\/[^\\s;,']*/.source +\r\n            '|' +\r\n            /\\*[^\\s;,']*/.source +\r\n            '|' +\r\n            /[a-z0-9-]+(?:\\.[a-z0-9-]+)+(?::[\\d*]+)?(?:\\/[^\\s;,']*)?/.source\r\n        ),\r\n        lookbehind: true,\r\n        alias: 'url',\r\n        inside: {\r\n          important: /\\*/\r\n        }\r\n      },\r\n      keyword: [\r\n        {\r\n          pattern: value(/'unsafe-[a-z-]+'/.source),\r\n          lookbehind: true,\r\n          alias: 'unsafe'\r\n        },\r\n        {\r\n          pattern: value(/'[a-z-]+'/.source),\r\n          lookbehind: true,\r\n          alias: 'safe'\r\n        }\r\n      ],\r\n      punctuation: /;/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ncooklang.displayName = 'cooklang'\r\ncooklang.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function cooklang(Prism) {\r\n  ;(function (Prism) {\r\n    // see https://github.com/cooklang/spec/blob/main/EBNF.md\r\n\r\n    var single_token_suffix = /(?:(?!\\s)[\\d$+<=a-zA-Z\\x80-\\uFFFF])+/.source\r\n    var multi_token_infix = /[^{}@#]+/.source\r\n    var multi_token_suffix = /\\{[^}#@]*\\}/.source\r\n    var multi_token = multi_token_infix + multi_token_suffix\r\n    var timer_units = /(?:h|hours|hrs|m|min|minutes)/.source\r\n    var amount_group_impl = {\r\n      pattern: /\\{[^{}]*\\}/,\r\n      inside: {\r\n        amount: {\r\n          pattern: /([\\{|])[^{}|*%]+/,\r\n          lookbehind: true,\r\n          alias: 'number'\r\n        },\r\n        unit: {\r\n          pattern: /(%)[^}]+/,\r\n          lookbehind: true,\r\n          alias: 'symbol'\r\n        },\r\n        'servings-scaler': {\r\n          pattern: /\\*/,\r\n          alias: 'operator'\r\n        },\r\n        'servings-alternative-separator': {\r\n          pattern: /\\|/,\r\n          alias: 'operator'\r\n        },\r\n        'unit-separator': {\r\n          pattern: /(?:%|(\\*)%)/,\r\n          lookbehind: true,\r\n          alias: 'operator'\r\n        },\r\n        punctuation: /[{}]/\r\n      }\r\n    }\r\n    Prism.languages.cooklang = {\r\n      comment: {\r\n        // [- comment -]\r\n        // -- comment\r\n        pattern: /\\[-[\\s\\S]*?-\\]|--.*/,\r\n        greedy: true\r\n      },\r\n      meta: {\r\n        // >> key: value\r\n        pattern: />>.*:.*/,\r\n        inside: {\r\n          property: {\r\n            // key:\r\n            pattern: /(>>\\s*)[^\\s:](?:[^:]*[^\\s:])?/,\r\n            lookbehind: true\r\n          }\r\n        }\r\n      },\r\n      'cookware-group': {\r\n        // #...{...}, #...\r\n        pattern: new RegExp(\r\n          '#(?:' + multi_token + '|' + single_token_suffix + ')'\r\n        ),\r\n        inside: {\r\n          cookware: {\r\n            pattern: new RegExp('(^#)(?:' + multi_token_infix + ')'),\r\n            lookbehind: true,\r\n            alias: 'variable'\r\n          },\r\n          'cookware-keyword': {\r\n            pattern: /^#/,\r\n            alias: 'keyword'\r\n          },\r\n          'quantity-group': {\r\n            pattern: new RegExp(/\\{[^{}@#]*\\}/),\r\n            inside: {\r\n              quantity: {\r\n                pattern: new RegExp(/(^\\{)/.source + multi_token_infix),\r\n                lookbehind: true,\r\n                alias: 'number'\r\n              },\r\n              punctuation: /[{}]/\r\n            }\r\n          }\r\n        }\r\n      },\r\n      'ingredient-group': {\r\n        // @...{...}, @...\r\n        pattern: new RegExp(\r\n          '@(?:' + multi_token + '|' + single_token_suffix + ')'\r\n        ),\r\n        inside: {\r\n          ingredient: {\r\n            pattern: new RegExp('(^@)(?:' + multi_token_infix + ')'),\r\n            lookbehind: true,\r\n            alias: 'variable'\r\n          },\r\n          'ingredient-keyword': {\r\n            pattern: /^@/,\r\n            alias: 'keyword'\r\n          },\r\n          'amount-group': amount_group_impl\r\n        }\r\n      },\r\n      'timer-group': {\r\n        // ~timer{...}\r\n        // eslint-disable-next-line regexp/sort-alternatives\r\n        pattern: /~(?!\\s)[^@#~{}]*\\{[^{}]*\\}/,\r\n        inside: {\r\n          timer: {\r\n            pattern: /(^~)[^{]+/,\r\n            lookbehind: true,\r\n            alias: 'variable'\r\n          },\r\n          'duration-group': {\r\n            // {...}\r\n            pattern: /\\{[^{}]*\\}/,\r\n            inside: {\r\n              punctuation: /[{}]/,\r\n              unit: {\r\n                pattern: new RegExp(\r\n                  /(%\\s*)/.source + timer_units + /\\b/.source\r\n                ),\r\n                lookbehind: true,\r\n                alias: 'symbol'\r\n              },\r\n              operator: /%/,\r\n              duration: {\r\n                pattern: /\\d+/,\r\n                alias: 'number'\r\n              }\r\n            }\r\n          },\r\n          'timer-keyword': {\r\n            pattern: /^~/,\r\n            alias: 'keyword'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ncoq.displayName = 'coq'\r\ncoq.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function coq(Prism) {\r\n  ;(function (Prism) {\r\n    // https://github.com/coq/coq\r\n\r\n    var commentSource = /\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source\r\n    for (var i = 0; i < 2; i++) {\r\n      commentSource = commentSource.replace(/<self>/g, function () {\r\n        return commentSource\r\n      })\r\n    }\r\n    commentSource = commentSource.replace(/<self>/g, '[]')\r\n    Prism.languages.coq = {\r\n      comment: RegExp(commentSource),\r\n      string: {\r\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\r\n        greedy: true\r\n      },\r\n      attribute: [\r\n        {\r\n          pattern: RegExp(\r\n            /#\\[(?:[^\\[\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(\r\n              /<comment>/g,\r\n              function () {\r\n                return commentSource\r\n              }\r\n            )\r\n          ),\r\n          greedy: true,\r\n          alias: 'attr-name',\r\n          inside: {\r\n            comment: RegExp(commentSource),\r\n            string: {\r\n              pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\r\n              greedy: true\r\n            },\r\n            operator: /=/,\r\n            punctuation: /^#\\[|\\]$|[,()]/\r\n          }\r\n        },\r\n        {\r\n          pattern:\r\n            /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\r\n          alias: 'attr-name'\r\n        }\r\n      ],\r\n      keyword:\r\n        /\\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\\b/,\r\n      number:\r\n        /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\r\n      punct: {\r\n        pattern: /@\\{|\\{\\||\\[=|:>/,\r\n        alias: 'punctuation'\r\n      },\r\n      operator:\r\n        /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\r\n      punctuation: /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorRuby from './ruby.js'\r\ncrystal.displayName = 'crystal'\r\ncrystal.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function crystal(Prism) {\r\n  Prism.register(refractorRuby)\r\n  ;(function (Prism) {\r\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\r\n      keyword: [\r\n        /\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/,\r\n        {\r\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      number:\r\n        /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,\r\n      operator: [/->/, Prism.languages.ruby.operator],\r\n      punctuation: /[(){}[\\].,;\\\\]/\r\n    })\r\n    Prism.languages.insertBefore('crystal', 'string-literal', {\r\n      attribute: {\r\n        pattern: /@\\[.*?\\]/,\r\n        inside: {\r\n          delimiter: {\r\n            pattern: /^@\\[|\\]$/,\r\n            alias: 'punctuation'\r\n          },\r\n          attribute: {\r\n            pattern: /^(\\s*)\\w+/,\r\n            lookbehind: true,\r\n            alias: 'class-name'\r\n          },\r\n          args: {\r\n            pattern: /\\S(?:[\\s\\S]*\\S)?/,\r\n            inside: Prism.languages.crystal\r\n          }\r\n        }\r\n      },\r\n      expansion: {\r\n        pattern: /\\{(?:\\{.*?\\}|%.*?%)\\}/,\r\n        inside: {\r\n          content: {\r\n            pattern: /^(\\{.)[\\s\\S]+(?=.\\}$)/,\r\n            lookbehind: true,\r\n            inside: Prism.languages.crystal\r\n          },\r\n          delimiter: {\r\n            pattern: /^\\{[\\{%]|[\\}%]\\}$/,\r\n            alias: 'operator'\r\n          }\r\n        }\r\n      },\r\n      char: {\r\n        pattern:\r\n          /'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/,\r\n        greedy: true\r\n      }\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorCss from './css.js'\r\ncssExtras.displayName = 'css-extras'\r\ncssExtras.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function cssExtras(Prism) {\r\n  Prism.register(refractorCss)\r\n  ;(function (Prism) {\r\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\r\n    var selectorInside\r\n    Prism.languages.css.selector = {\r\n      pattern: Prism.languages.css.selector.pattern,\r\n      lookbehind: true,\r\n      inside: (selectorInside = {\r\n        'pseudo-element':\r\n          /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\r\n        'pseudo-class': /:[-\\w]+/,\r\n        class: /\\.[-\\w]+/,\r\n        id: /#[-\\w]+/,\r\n        attribute: {\r\n          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\r\n          greedy: true,\r\n          inside: {\r\n            punctuation: /^\\[|\\]$/,\r\n            'case-sensitivity': {\r\n              pattern: /(\\s)[si]$/i,\r\n              lookbehind: true,\r\n              alias: 'keyword'\r\n            },\r\n            namespace: {\r\n              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\r\n              lookbehind: true,\r\n              inside: {\r\n                punctuation: /\\|$/\r\n              }\r\n            },\r\n            'attr-name': {\r\n              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\r\n              lookbehind: true\r\n            },\r\n            'attr-value': [\r\n              string,\r\n              {\r\n                pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\r\n                lookbehind: true\r\n              }\r\n            ],\r\n            operator: /[|~*^$]?=/\r\n          }\r\n        },\r\n        'n-th': [\r\n          {\r\n            pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\r\n            lookbehind: true,\r\n            inside: {\r\n              number: /[\\dn]+/,\r\n              operator: /[+-]/\r\n            }\r\n          },\r\n          {\r\n            pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\r\n            lookbehind: true\r\n          }\r\n        ],\r\n        combinator: />|\\+|~|\\|\\|/,\r\n        // the `tag` token has been existed and removed.\r\n        // because we can't find a perfect tokenize to match it.\r\n        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\r\n\r\n        punctuation: /[(),]/\r\n      })\r\n    }\r\n    Prism.languages.css['atrule'].inside['selector-function-argument'].inside =\r\n      selectorInside\r\n    Prism.languages.insertBefore('css', 'property', {\r\n      variable: {\r\n        pattern:\r\n          /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\r\n        lookbehind: true\r\n      }\r\n    })\r\n    var unit = {\r\n      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\r\n      lookbehind: true\r\n    }\r\n    // 123 -123 .123 -.123 12.3 -12.3\r\n    var number = {\r\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\r\n      lookbehind: true\r\n    }\r\n    Prism.languages.insertBefore('css', 'function', {\r\n      operator: {\r\n        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\r\n        lookbehind: true\r\n      },\r\n      // CAREFUL!\r\n      // Previewers and Inline color use hexcode and color.\r\n      hexcode: {\r\n        pattern: /\\B#[\\da-f]{3,8}\\b/i,\r\n        alias: 'color'\r\n      },\r\n      color: [\r\n        {\r\n          pattern:\r\n            /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern:\r\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\r\n          inside: {\r\n            unit: unit,\r\n            number: number,\r\n            function: /[\\w-]+(?=\\()/,\r\n            punctuation: /[(),]/\r\n          }\r\n        }\r\n      ],\r\n      // it's important that there is no boundary assertion after the hex digits\r\n      entity: /\\\\[\\da-f]{1,8}/i,\r\n      unit: unit,\r\n      number: number\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ncsv.displayName = 'csv'\r\ncsv.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function csv(Prism) {\r\n  // https://tools.ietf.org/html/rfc4180\r\n\r\n  Prism.languages.csv = {\r\n    value: /[^\\r\\n,\"]+|\"(?:[^\"]|\"\")*\"(?!\")/,\r\n    punctuation: /,/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\ncue.displayName = 'cue'\r\ncue.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function cue(Prism) {\r\n  ;(function (Prism) {\r\n    // https://cuelang.org/docs/references/spec/\r\n\r\n    // eslint-disable-next-line regexp/strict\r\n    var stringEscape = /\\\\(?:(?!\\2)|\\2(?:[^()\\r\\n]|\\([^()]*\\)))/.source\r\n    // eslint-disable-next-line regexp/strict\r\n    var stringTypes =\r\n      /\"\"\"(?:[^\\\\\"]|\"(?!\"\"\\2)|<esc>)*\"\"\"/.source +\r\n      // eslint-disable-next-line regexp/strict\r\n      '|' +\r\n      /'''(?:[^\\\\']|'(?!''\\2)|<esc>)*'''/.source +\r\n      // eslint-disable-next-line regexp/strict\r\n      '|' +\r\n      /\"(?:[^\\\\\\r\\n\"]|\"(?!\\2)|<esc>)*\"/.source +\r\n      // eslint-disable-next-line regexp/strict\r\n      '|' +\r\n      /'(?:[^\\\\\\r\\n']|'(?!\\2)|<esc>)*'/.source\r\n    var stringLiteral =\r\n      '(?:' + stringTypes.replace(/<esc>/g, stringEscape) + ')'\r\n    Prism.languages.cue = {\r\n      comment: {\r\n        pattern: /\\/\\/.*/,\r\n        greedy: true\r\n      },\r\n      'string-literal': {\r\n        // eslint-disable-next-line regexp/strict\r\n        pattern: RegExp(\r\n          /(^|[^#\"'\\\\])(#*)/.source + stringLiteral + /(?![\"'])\\2/.source\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          // I'm using dirty hack here. We have to know the number hashes at the start of the string somehow,\r\n          // but we can't look back. So instead, we will use a lookahead, go to the end of the string, and\r\n          // capture the hashes at the end of the string.\r\n          escape: {\r\n            pattern:\r\n              /(?=[\\s\\S]*[\"'](#*)$)\\\\\\1(?:U[a-fA-F0-9]{1,8}|u[a-fA-F0-9]{1,4}|x[a-fA-F0-9]{1,2}|\\d{2,3}|[^(])/,\r\n            greedy: true,\r\n            alias: 'string'\r\n          },\r\n          interpolation: {\r\n            pattern: /(?=[\\s\\S]*[\"'](#*)$)\\\\\\1\\([^()]*\\)/,\r\n            greedy: true,\r\n            inside: {\r\n              punctuation: /^\\\\#*\\(|\\)$/,\r\n              expression: {\r\n                pattern: /[\\s\\S]+/,\r\n                inside: null\r\n              }\r\n            }\r\n          },\r\n          string: /[\\s\\S]+/\r\n        }\r\n      },\r\n      keyword: {\r\n        pattern: /(^|[^\\w$])(?:for|if|import|in|let|null|package)(?![\\w$])/,\r\n        lookbehind: true\r\n      },\r\n      boolean: {\r\n        pattern: /(^|[^\\w$])(?:false|true)(?![\\w$])/,\r\n        lookbehind: true\r\n      },\r\n      builtin: {\r\n        pattern:\r\n          /(^|[^\\w$])(?:bool|bytes|float|float(?:32|64)|u?int(?:8|16|32|64|128)?|number|rune|string)(?![\\w$])/,\r\n        lookbehind: true\r\n      },\r\n      attribute: {\r\n        pattern: /@[\\w$]+(?=\\s*\\()/,\r\n        alias: 'function'\r\n      },\r\n      function: {\r\n        pattern: /(^|[^\\w$])[a-z_$][\\w$]*(?=\\s*\\()/i,\r\n        lookbehind: true\r\n      },\r\n      number: {\r\n        pattern:\r\n          /(^|[^\\w$.])(?:0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|0[xX][0-9A-Fa-f]+(?:_[0-9A-Fa-f]+)*|(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[eE][+-]?\\d+(?:_\\d+)*)?(?:[KMGTP]i?)?)(?![\\w$])/,\r\n        lookbehind: true\r\n      },\r\n      operator: /\\.{3}|_\\|_|&&?|\\|\\|?|[=!]~|[<>=!]=?|[+\\-*/?]/,\r\n      punctuation: /[()[\\]{},.:]/\r\n    }\r\n    Prism.languages.cue[\r\n      'string-literal'\r\n    ].inside.interpolation.inside.expression.inside = Prism.languages.cue\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ncypher.displayName = 'cypher'\r\ncypher.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function cypher(Prism) {\r\n  Prism.languages.cypher = {\r\n    // https://neo4j.com/docs/cypher-manual/current/syntax/comments/\r\n    comment: /\\/\\/.*/,\r\n    string: {\r\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\r\n      greedy: true\r\n    },\r\n    'class-name': {\r\n      pattern: /(:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)(?=\\s*[{):])/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    relationship: {\r\n      pattern:\r\n        /(-\\[\\s*(?:\\w+\\s*|`(?:[^`\\\\\\r\\n])*`\\s*)?:\\s*|\\|\\s*:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'property'\r\n    },\r\n    identifier: {\r\n      pattern: /`(?:[^`\\\\\\r\\n])*`/,\r\n      greedy: true\r\n    },\r\n    variable: /\\$\\w+/,\r\n    // https://neo4j.com/docs/cypher-manual/current/syntax/reserved/\r\n    keyword:\r\n      /\\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\\b/i,\r\n    function: /\\b\\w+\\b(?=\\s*\\()/,\r\n    boolean: /\\b(?:false|null|true)\\b/i,\r\n    number: /\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)\\b/,\r\n    // https://neo4j.com/docs/cypher-manual/current/syntax/operators/\r\n    operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\\.\\.\\.?/,\r\n    punctuation: /[()[\\]{},;.]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nd.displayName = 'd'\r\nd.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function d(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.d = Prism.languages.extend('clike', {\r\n    comment: [\r\n      {\r\n        // Shebang\r\n        pattern: /^\\s*#!.+/,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: RegExp(\r\n          /(^|[^\\\\])/.source +\r\n            '(?:' +\r\n            [\r\n              // /+ comment +/\r\n              // Allow one level of nesting\r\n              /\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source,\r\n              // // comment\r\n              /\\/\\/.*/.source,\r\n              // /* comment */\r\n              /\\/\\*[\\s\\S]*?\\*\\//.source\r\n            ].join('|') +\r\n            ')'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    string: [\r\n      {\r\n        pattern: RegExp(\r\n          [\r\n            // r\"\", x\"\"\r\n            /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source,\r\n            // q\"[]\", q\"()\", q\"<>\", q\"{}\"\r\n            /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source,\r\n            // q\"IDENT\r\n            // ...\r\n            // IDENT\"\r\n            /\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source,\r\n            // q\"//\", q\"||\", etc.\r\n            // eslint-disable-next-line regexp/strict\r\n            /\\bq\"(.)[\\s\\S]*?\\2\"/.source,\r\n            // eslint-disable-next-line regexp/strict\r\n            /([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source\r\n          ].join('|'),\r\n          'm'\r\n        ),\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\r\n        greedy: true,\r\n        alias: 'token-string'\r\n      }\r\n    ],\r\n    // In order: $, keywords and special tokens, globally defined symbols\r\n    keyword:\r\n      /\\$|\\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\\b/,\r\n    number: [\r\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\r\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\r\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,\r\n      {\r\n        pattern:\r\n          /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    operator:\r\n      /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\r\n  })\r\n  Prism.languages.insertBefore('d', 'string', {\r\n    // Characters\r\n    // 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\r\n    char: /'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/\r\n  })\r\n  Prism.languages.insertBefore('d', 'keyword', {\r\n    property: /\\B@\\w*/\r\n  })\r\n  Prism.languages.insertBefore('d', 'function', {\r\n    register: {\r\n      // Iasm registers\r\n      pattern:\r\n        /\\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\r\n      alias: 'variable'\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\ndart.displayName = 'dart'\r\ndart.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function dart(Prism) {\r\n  Prism.register(refractorClike)\r\n  ;(function (Prism) {\r\n    var keywords = [\r\n      /\\b(?:async|sync|yield)\\*/,\r\n      /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\r\n    ]\r\n\r\n    // Handles named imports, such as http.Client\r\n    var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\r\n      .source\r\n\r\n    // based on the dart naming conventions\r\n    var className = {\r\n      pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\r\n      lookbehind: true,\r\n      inside: {\r\n        namespace: {\r\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\r\n          inside: {\r\n            punctuation: /\\./\r\n          }\r\n        }\r\n      }\r\n    }\r\n    Prism.languages.dart = Prism.languages.extend('clike', {\r\n      'class-name': [\r\n        className,\r\n        {\r\n          // variables and parameters\r\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\r\n          pattern: RegExp(\r\n            packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\r\n          ),\r\n          lookbehind: true,\r\n          inside: className.inside\r\n        }\r\n      ],\r\n      keyword: keywords,\r\n      operator:\r\n        /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\r\n    })\r\n    Prism.languages.insertBefore('dart', 'string', {\r\n      'string-literal': {\r\n        pattern:\r\n          /r?(?:(\"\"\"|''')[\\s\\S]*?\\1|([\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2(?!\\2))/,\r\n        greedy: true,\r\n        inside: {\r\n          interpolation: {\r\n            pattern:\r\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\r\n            lookbehind: true,\r\n            inside: {\r\n              punctuation: /^\\$\\{?|\\}$/,\r\n              expression: {\r\n                pattern: /[\\s\\S]+/,\r\n                inside: Prism.languages.dart\r\n              }\r\n            }\r\n          },\r\n          string: /[\\s\\S]+/\r\n        }\r\n      },\r\n      string: undefined\r\n    })\r\n    Prism.languages.insertBefore('dart', 'class-name', {\r\n      metadata: {\r\n        pattern: /@\\w+/,\r\n        alias: 'function'\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('dart', 'class-name', {\r\n      generics: {\r\n        pattern:\r\n          /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\r\n        inside: {\r\n          'class-name': className,\r\n          keyword: keywords,\r\n          punctuation: /[<>(),.:]/,\r\n          operator: /[?&|]/\r\n        }\r\n      }\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ndataweave.displayName = 'dataweave'\r\ndataweave.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function dataweave(Prism) {\r\n  ;(function (Prism) {\r\n    Prism.languages.dataweave = {\r\n      url: /\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,\r\n      property: {\r\n        pattern: /(?:\\b\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\b\\w+)(?=\\s*[:@])/,\r\n        greedy: true\r\n      },\r\n      string: {\r\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\r\n        greedy: true\r\n      },\r\n      'mime-type':\r\n        /\\b(?:application|audio|image|multipart|text|video)\\/[\\w+-]+/,\r\n      date: {\r\n        pattern: /\\|[\\w:+-]+\\|/,\r\n        greedy: true\r\n      },\r\n      comment: [\r\n        {\r\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n          lookbehind: true,\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\r\n          lookbehind: true,\r\n          greedy: true\r\n        }\r\n      ],\r\n      regex: {\r\n        pattern: /\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,\r\n        greedy: true\r\n      },\r\n      keyword:\r\n        /\\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\\b/,\r\n      function: /\\b[A-Z_]\\w*(?=\\s*\\()/i,\r\n      number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\r\n      punctuation: /[{}[\\];(),.:@]/,\r\n      operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|!|\\?/,\r\n      boolean: /\\b(?:false|true)\\b/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ndax.displayName = 'dax'\r\ndax.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function dax(Prism) {\r\n  Prism.languages.dax = {\r\n    comment: {\r\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/).*)/,\r\n      lookbehind: true\r\n    },\r\n    'data-field': {\r\n      pattern:\r\n        /'(?:[^']|'')*'(?!')(?:\\[[ \\w\\xA0-\\uFFFF]+\\])?|\\w+\\[[ \\w\\xA0-\\uFFFF]+\\]/,\r\n      alias: 'symbol'\r\n    },\r\n    measure: {\r\n      pattern: /\\[[ \\w\\xA0-\\uFFFF]+\\]/,\r\n      alias: 'constant'\r\n    },\r\n    string: {\r\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\r\n      greedy: true\r\n    },\r\n    function:\r\n      /\\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\\.DIST|BETA\\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\\.DIST|CHISQ\\.DIST\\.RT|CHISQ\\.INV|CHISQ\\.INV\\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\\.NORM|CONFIDENCE\\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\\.DIST|NORM\\.INV|NORM\\.S\\.DIST|NORM\\.S\\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\\.EXC|PERCENTILE\\.INC|PERCENTILEX\\.EXC|PERCENTILEX\\.INC|PERMUT|PI|POISSON\\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\\.P|STDEV\\.S|STDEVX\\.P|STDEVX\\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\\.DIST|T\\.DIST\\.2T|T\\.DIST\\.RT|T\\.INV|T\\.INV\\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\\.P|VAR\\.S|VARX\\.P|VARX\\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\\s*\\()/i,\r\n    keyword:\r\n      /\\b(?:DEFINE|EVALUATE|MEASURE|ORDER\\s+BY|RETURN|VAR|START\\s+AT|ASC|DESC)\\b/i,\r\n    boolean: {\r\n      pattern: /\\b(?:FALSE|NULL|TRUE)\\b/i,\r\n      alias: 'constant'\r\n    },\r\n    number: /\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/,\r\n    operator: /:=|[-+*\\/=^]|&&?|\\|\\||<(?:=>?|<|>)?|>[>=]?|\\b(?:IN|NOT)\\b/i,\r\n    punctuation: /[;\\[\\](){}`,.]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\ndhall.displayName = 'dhall'\r\ndhall.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function dhall(Prism) {\r\n  // ABNF grammar:\r\n  // https://github.com/dhall-lang/dhall-lang/blob/master/standard/dhall.abnf\r\n\r\n  Prism.languages.dhall = {\r\n    // Multi-line comments can be nested. E.g. {- foo {- bar -} -}\r\n    // The multi-line pattern is essentially this:\r\n    //   \\{-(?:[^-{]|-(?!\\})|\\{(?!-)|<SELF>)*-\\}\r\n    comment:\r\n      /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\r\n    string: {\r\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern: /\\$\\{[^{}]*\\}/,\r\n          inside: {\r\n            expression: {\r\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\r\n              lookbehind: true,\r\n              alias: 'language-dhall',\r\n              inside: null // see blow\r\n            },\r\n\r\n            punctuation: /\\$\\{|\\}/\r\n          }\r\n        }\r\n      }\r\n    },\r\n    label: {\r\n      pattern: /`[^`]*`/,\r\n      greedy: true\r\n    },\r\n    url: {\r\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596\r\n      pattern:\r\n        /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\r\n      greedy: true\r\n    },\r\n    env: {\r\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661\r\n      pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\r\n      greedy: true,\r\n      inside: {\r\n        function: /^env/,\r\n        operator: /^:/,\r\n        variable: /[\\s\\S]+/\r\n      }\r\n    },\r\n    hash: {\r\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725\r\n      pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\r\n      inside: {\r\n        function: /sha256/,\r\n        operator: /:/,\r\n        number: /[\\da-fA-F]{64}/\r\n      }\r\n    },\r\n    // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359\r\n    keyword:\r\n      /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\r\n    builtin: /\\b(?:None|Some)\\b/,\r\n    boolean: /\\b(?:False|True)\\b/,\r\n    number:\r\n      /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\r\n    operator:\r\n      /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\r\n    punctuation: /\\.\\.|[{}\\[\\](),./]/,\r\n    // we'll just assume that every capital word left is a type name\r\n    'class-name': /\\b[A-Z]\\w*\\b/\r\n  }\r\n  Prism.languages.dhall.string.inside.interpolation.inside.expression.inside =\r\n    Prism.languages.dhall\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkupTemplating from './markup-templating.js'\r\ndjango.displayName = 'django'\r\ndjango.aliases = ['jinja2']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function django(Prism) {\r\n  Prism.register(refractorMarkupTemplating)\r\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\r\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\r\n\r\n  ;(function (Prism) {\r\n    Prism.languages.django = {\r\n      comment: /^\\{#[\\s\\S]*?#\\}$/,\r\n      tag: {\r\n        pattern: /(^\\{%[+-]?\\s*)\\w+/,\r\n        lookbehind: true,\r\n        alias: 'keyword'\r\n      },\r\n      delimiter: {\r\n        pattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\r\n        alias: 'punctuation'\r\n      },\r\n      string: {\r\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n        greedy: true\r\n      },\r\n      filter: {\r\n        pattern: /(\\|)\\w+/,\r\n        lookbehind: true,\r\n        alias: 'function'\r\n      },\r\n      test: {\r\n        pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\r\n        lookbehind: true,\r\n        alias: 'function'\r\n      },\r\n      function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\r\n      keyword:\r\n        /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\r\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\r\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\r\n      boolean: /[Ff]alse|[Nn]one|[Tt]rue/,\r\n      variable: /\\b\\w+\\b/,\r\n      punctuation: /[{}[\\](),.:;]/\r\n    }\r\n    var pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g\r\n    var markupTemplating = Prism.languages['markup-templating']\r\n    Prism.hooks.add('before-tokenize', function (env) {\r\n      markupTemplating.buildPlaceholders(env, 'django', pattern)\r\n    })\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      markupTemplating.tokenizePlaceholders(env, 'django')\r\n    })\r\n\r\n    // Add an Jinja2 alias\r\n    Prism.languages.jinja2 = Prism.languages.django\r\n    Prism.hooks.add('before-tokenize', function (env) {\r\n      markupTemplating.buildPlaceholders(env, 'jinja2', pattern)\r\n    })\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      markupTemplating.tokenizePlaceholders(env, 'jinja2')\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ndnsZoneFile.displayName = 'dns-zone-file'\r\ndnsZoneFile.aliases = ['dns-zone']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function dnsZoneFile(Prism) {\r\n  Prism.languages['dns-zone-file'] = {\r\n    comment: /;.*/,\r\n    string: {\r\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\r\n      greedy: true\r\n    },\r\n    variable: [\r\n      {\r\n        pattern: /(^\\$ORIGIN[ \\t]+)\\S+/m,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(^|\\s)@(?=\\s|$)/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    keyword: /^\\$(?:INCLUDE|ORIGIN|TTL)(?=\\s|$)/m,\r\n    class: {\r\n      // https://tools.ietf.org/html/rfc1035#page-13\r\n      pattern: /(^|\\s)(?:CH|CS|HS|IN)(?=\\s|$)/,\r\n      lookbehind: true,\r\n      alias: 'keyword'\r\n    },\r\n    type: {\r\n      // https://en.wikipedia.org/wiki/List_of_DNS_record_types\r\n      pattern:\r\n        /(^|\\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\\s|$)/,\r\n      lookbehind: true,\r\n      alias: 'keyword'\r\n    },\r\n    punctuation: /[()]/\r\n  }\r\n  Prism.languages['dns-zone'] = Prism.languages['dns-zone-file']\r\n}\r\n", "// @ts-nocheck\r\ndocker.displayName = 'docker'\r\ndocker.aliases = ['dockerfile']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function docker(Prism) {\r\n  ;(function (Prism) {\r\n    // Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\r\n    // that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\r\n\r\n    var spaceAfterBackSlash =\r\n      /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source\r\n    // At least one space, comment, or line break\r\n    var space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(\r\n      /<SP_BS>/g,\r\n      function () {\r\n        return spaceAfterBackSlash\r\n      }\r\n    )\r\n    var string =\r\n      /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/\r\n        .source\r\n    var option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(\r\n      /<STR>/g,\r\n      function () {\r\n        return string\r\n      }\r\n    )\r\n    var stringRule = {\r\n      pattern: RegExp(string),\r\n      greedy: true\r\n    }\r\n    var commentRule = {\r\n      pattern: /(^[ \\t]*)#.*/m,\r\n      lookbehind: true,\r\n      greedy: true\r\n    }\r\n\r\n    /**\r\n     * @param {string} source\r\n     * @param {string} flags\r\n     * @returns {RegExp}\r\n     */\r\n    function re(source, flags) {\r\n      source = source\r\n        .replace(/<OPT>/g, function () {\r\n          return option\r\n        })\r\n        .replace(/<SP>/g, function () {\r\n          return space\r\n        })\r\n      return RegExp(source, flags)\r\n    }\r\n    Prism.languages.docker = {\r\n      instruction: {\r\n        pattern:\r\n          /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          options: {\r\n            pattern: re(\r\n              /(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,\r\n              'i'\r\n            ),\r\n            lookbehind: true,\r\n            greedy: true,\r\n            inside: {\r\n              property: {\r\n                pattern: /(^|\\s)--[\\w-]+/,\r\n                lookbehind: true\r\n              },\r\n              string: [\r\n                stringRule,\r\n                {\r\n                  pattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\r\n                  lookbehind: true\r\n                }\r\n              ],\r\n              operator: /\\\\$/m,\r\n              punctuation: /=/\r\n            }\r\n          },\r\n          keyword: [\r\n            {\r\n              // https://docs.docker.com/engine/reference/builder/#healthcheck\r\n              pattern: re(\r\n                /(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/\r\n                  .source,\r\n                'i'\r\n              ),\r\n              lookbehind: true,\r\n              greedy: true\r\n            },\r\n            {\r\n              // https://docs.docker.com/engine/reference/builder/#from\r\n              pattern: re(\r\n                /(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/\r\n                  .source,\r\n                'i'\r\n              ),\r\n              lookbehind: true,\r\n              greedy: true\r\n            },\r\n            {\r\n              // https://docs.docker.com/engine/reference/builder/#onbuild\r\n              pattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\r\n              lookbehind: true,\r\n              greedy: true\r\n            },\r\n            {\r\n              pattern: /^\\w+/,\r\n              greedy: true\r\n            }\r\n          ],\r\n          comment: commentRule,\r\n          string: stringRule,\r\n          variable: /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\r\n          operator: /\\\\$/m\r\n        }\r\n      },\r\n      comment: commentRule\r\n    }\r\n    Prism.languages.dockerfile = Prism.languages.docker\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ndot.displayName = 'dot'\r\ndot.aliases = ['gv']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function dot(Prism) {\r\n  // https://www.graphviz.org/doc/info/lang.html\r\n\r\n  ;(function (Prism) {\r\n    var ID =\r\n      '(?:' +\r\n      [\r\n        // an identifier\r\n        /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source,\r\n        // a number\r\n        /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source,\r\n        // a double-quoted string\r\n        /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source,\r\n        // HTML-like string\r\n        /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/\r\n          .source\r\n      ].join('|') +\r\n      ')'\r\n    var IDInside = {\r\n      markup: {\r\n        pattern: /(^<)[\\s\\S]+(?=>$)/,\r\n        lookbehind: true,\r\n        alias: ['language-markup', 'language-html', 'language-xml'],\r\n        inside: Prism.languages.markup\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {string} source\r\n     * @param {string} flags\r\n     * @returns {RegExp}\r\n     */\r\n    function withID(source, flags) {\r\n      return RegExp(\r\n        source.replace(/<ID>/g, function () {\r\n          return ID\r\n        }),\r\n        flags\r\n      )\r\n    }\r\n    Prism.languages.dot = {\r\n      comment: {\r\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\r\n        greedy: true\r\n      },\r\n      'graph-name': {\r\n        pattern: withID(\r\n          /(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source,\r\n          'i'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'class-name',\r\n        inside: IDInside\r\n      },\r\n      'attr-value': {\r\n        pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: IDInside\r\n      },\r\n      'attr-name': {\r\n        pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: IDInside\r\n      },\r\n      keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\r\n      'compass-point': {\r\n        pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\r\n        lookbehind: true,\r\n        alias: 'builtin'\r\n      },\r\n      node: {\r\n        pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: IDInside\r\n      },\r\n      operator: /[=:]|-[->]/,\r\n      punctuation: /[\\[\\]{};,]/\r\n    }\r\n    Prism.languages.gv = Prism.languages.dot\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nebnf.displayName = 'ebnf'\r\nebnf.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function ebnf(Prism) {\r\n  Prism.languages.ebnf = {\r\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\r\n    string: {\r\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\r\n      greedy: true\r\n    },\r\n    special: {\r\n      pattern: /\\?[^?\\r\\n]*\\?/,\r\n      greedy: true,\r\n      alias: 'class-name'\r\n    },\r\n    definition: {\r\n      pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\r\n      lookbehind: true,\r\n      alias: ['rule', 'keyword']\r\n    },\r\n    rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\r\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\r\n    operator: /[-=|*/!]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\neditorconfig.displayName = 'editorconfig'\r\neditorconfig.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function editorconfig(Prism) {\r\n  Prism.languages.editorconfig = {\r\n    // https://editorconfig-specification.readthedocs.io\r\n    comment: /[;#].*/,\r\n    section: {\r\n      pattern: /(^[ \\t]*)\\[.+\\]/m,\r\n      lookbehind: true,\r\n      alias: 'selector',\r\n      inside: {\r\n        regex: /\\\\\\\\[\\[\\]{},!?.*]/,\r\n        // Escape special characters with '\\\\'\r\n        operator: /[!?]|\\.\\.|\\*{1,2}/,\r\n        punctuation: /[\\[\\]{},]/\r\n      }\r\n    },\r\n    key: {\r\n      pattern: /(^[ \\t]*)[^\\s=]+(?=[ \\t]*=)/m,\r\n      lookbehind: true,\r\n      alias: 'attr-name'\r\n    },\r\n    value: {\r\n      pattern: /=.*/,\r\n      alias: 'attr-value',\r\n      inside: {\r\n        punctuation: /^=/\r\n      }\r\n    }\r\n  }\r\n}\r\n", "// @ts-nocheck\r\neiffel.displayName = 'eiffel'\r\neiffel.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function eiffel(Prism) {\r\n  Prism.languages.eiffel = {\r\n    comment: /--.*/,\r\n    string: [\r\n      // Aligned-verbatim-strings\r\n      {\r\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\r\n        greedy: true\r\n      },\r\n      // Non-aligned-verbatim-strings\r\n      {\r\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\r\n        greedy: true\r\n      },\r\n      // Single-line string\r\n      {\r\n        pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\r\n        greedy: true\r\n      }\r\n    ],\r\n    // normal char | special char | char code\r\n    char: /'(?:%.|[^%'\\r\\n])+'/,\r\n    keyword:\r\n      /\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\r\n    boolean: /\\b(?:False|True)\\b/i,\r\n    // Convention: class-names are always all upper-case characters\r\n    'class-name': /\\b[A-Z][\\dA-Z_]*\\b/,\r\n    number: [\r\n      // hexa | octal | bin\r\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\r\n      // Decimal\r\n      /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i\r\n    ],\r\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\r\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJavascript from './javascript.js'\r\nimport refractorMarkupTemplating from './markup-templating.js'\r\nejs.displayName = 'ejs'\r\nejs.aliases = ['eta']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function ejs(Prism) {\r\n  Prism.register(refractorJavascript)\r\n  Prism.register(refractorMarkupTemplating)\r\n  ;(function (Prism) {\r\n    Prism.languages.ejs = {\r\n      delimiter: {\r\n        pattern: /^<%[-_=]?|[-_]?%>$/,\r\n        alias: 'punctuation'\r\n      },\r\n      comment: /^#[\\s\\S]*/,\r\n      'language-javascript': {\r\n        pattern: /[\\s\\S]+/,\r\n        inside: Prism.languages.javascript\r\n      }\r\n    }\r\n    Prism.hooks.add('before-tokenize', function (env) {\r\n      var ejsPattern = /<%(?!%)[\\s\\S]+?%>/g\r\n      Prism.languages['markup-templating'].buildPlaceholders(\r\n        env,\r\n        'ejs',\r\n        ejsPattern\r\n      )\r\n    })\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ejs')\r\n    })\r\n    Prism.languages.eta = Prism.languages.ejs\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nelixir.displayName = 'elixir'\r\nelixir.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function elixir(Prism) {\r\n  Prism.languages.elixir = {\r\n    doc: {\r\n      pattern:\r\n        /@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,\r\n      inside: {\r\n        attribute: /^@\\w+/,\r\n        string: /['\"][\\s\\S]+/\r\n      }\r\n    },\r\n    comment: {\r\n      pattern: /#.*/,\r\n      greedy: true\r\n    },\r\n    // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\r\n    regex: {\r\n      pattern:\r\n        /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\r\n      greedy: true\r\n    },\r\n    string: [\r\n      {\r\n        // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\r\n        pattern:\r\n          /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\r\n        greedy: true,\r\n        inside: {\r\n          // See interpolation below\r\n        }\r\n      },\r\n      {\r\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\r\n        greedy: true,\r\n        inside: {\r\n          // See interpolation below\r\n        }\r\n      },\r\n      {\r\n        // Multi-line strings are allowed\r\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n        greedy: true,\r\n        inside: {\r\n          // See interpolation below\r\n        }\r\n      }\r\n    ],\r\n    atom: {\r\n      // Look-behind prevents bad highlighting of the :: operator\r\n      pattern: /(^|[^:]):\\w+/,\r\n      lookbehind: true,\r\n      alias: 'symbol'\r\n    },\r\n    module: {\r\n      pattern: /\\b[A-Z]\\w*\\b/,\r\n      alias: 'class-name'\r\n    },\r\n    // Look-ahead prevents bad highlighting of the :: operator\r\n    'attr-name': /\\b\\w+\\??:(?!:)/,\r\n    argument: {\r\n      // Look-behind prevents bad highlighting of the && operator\r\n      pattern: /(^|[^&])&\\d+/,\r\n      lookbehind: true,\r\n      alias: 'variable'\r\n    },\r\n    attribute: {\r\n      pattern: /@\\w+/,\r\n      alias: 'variable'\r\n    },\r\n    function: /\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,\r\n    number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\r\n    keyword:\r\n      /\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,\r\n    boolean: /\\b(?:false|nil|true)\\b/,\r\n    operator: [\r\n      /\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\r\n      {\r\n        // We don't want to match <<\r\n        pattern: /([^<])<(?!<)/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // We don't want to match >>\r\n        pattern: /([^>])>(?!>)/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    punctuation: /<<|>>|[.,%\\[\\]{}()]/\r\n  }\r\n  Prism.languages.elixir.string.forEach(function (o) {\r\n    o.inside = {\r\n      interpolation: {\r\n        pattern: /#\\{[^}]+\\}/,\r\n        inside: {\r\n          delimiter: {\r\n            pattern: /^#\\{|\\}$/,\r\n            alias: 'punctuation'\r\n          },\r\n          rest: Prism.languages.elixir\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nelm.displayName = 'elm'\r\nelm.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function elm(Prism) {\r\n  Prism.languages.elm = {\r\n    comment: /--.*|\\{-[\\s\\S]*?-\\}/,\r\n    char: {\r\n      pattern:\r\n        /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+|u\\{[0-9a-fA-F]+\\}))'/,\r\n      greedy: true\r\n    },\r\n    string: [\r\n      {\r\n        // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\r\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\r\n        greedy: true\r\n      }\r\n    ],\r\n    'import-statement': {\r\n      // The imported or hidden names are not included in this import\r\n      // statement. This is because we want to highlight those exactly like\r\n      // we do for the names in the program.\r\n      pattern:\r\n        /(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        keyword: /\\b(?:as|exposing|import)\\b/\r\n      }\r\n    },\r\n    keyword:\r\n      /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\r\n    // These are builtin variables only. Constructors are highlighted later as a constant.\r\n    builtin:\r\n      /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\r\n    // decimal integers and floating point numbers | hexadecimal integers\r\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\r\n    // Most of this is needed because of the meaning of a single '.'.\r\n    // If it stands alone freely, it is the function composition.\r\n    // It may also be a separator between a module name and an identifier => no\r\n    // operator. If it comes together with other special characters it is an\r\n    // operator too.\r\n    // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\r\n    // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\r\n    operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\r\n    // In Elm, nearly everything is a variable, do not highlight these.\r\n    hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\r\n    constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\r\n    punctuation: /[{}[\\]|(),.:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorLua from './lua.js'\r\nimport refractorMarkupTemplating from './markup-templating.js'\r\netlua.displayName = 'etlua'\r\netlua.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function etlua(Prism) {\r\n  Prism.register(refractorLua)\r\n  Prism.register(refractorMarkupTemplating)\r\n  ;(function (Prism) {\r\n    Prism.languages.etlua = {\r\n      delimiter: {\r\n        pattern: /^<%[-=]?|-?%>$/,\r\n        alias: 'punctuation'\r\n      },\r\n      'language-lua': {\r\n        pattern: /[\\s\\S]+/,\r\n        inside: Prism.languages.lua\r\n      }\r\n    }\r\n    Prism.hooks.add('before-tokenize', function (env) {\r\n      var pattern = /<%[\\s\\S]+?%>/g\r\n      Prism.languages['markup-templating'].buildPlaceholders(\r\n        env,\r\n        'etlua',\r\n        pattern\r\n      )\r\n    })\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'etlua')\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkupTemplating from './markup-templating.js'\r\nimport refractorRuby from './ruby.js'\r\nerb.displayName = 'erb'\r\nerb.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function erb(Prism) {\r\n  Prism.register(refractorMarkupTemplating)\r\n  Prism.register(refractorRuby)\r\n  ;(function (Prism) {\r\n    Prism.languages.erb = {\r\n      delimiter: {\r\n        pattern: /^(\\s*)<%=?|%>(?=\\s*$)/,\r\n        lookbehind: true,\r\n        alias: 'punctuation'\r\n      },\r\n      ruby: {\r\n        pattern: /\\s*\\S[\\s\\S]*/,\r\n        alias: 'language-ruby',\r\n        inside: Prism.languages.ruby\r\n      }\r\n    }\r\n    Prism.hooks.add('before-tokenize', function (env) {\r\n      var erbPattern =\r\n        /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s(?:[^\\r\\n]|[\\r\\n](?!=end))*[\\r\\n]=end)+?%>/g\r\n      Prism.languages['markup-templating'].buildPlaceholders(\r\n        env,\r\n        'erb',\r\n        erbPattern\r\n      )\r\n    })\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb')\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nerlang.displayName = 'erlang'\r\nerlang.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function erlang(Prism) {\r\n  Prism.languages.erlang = {\r\n    comment: /%.+/,\r\n    string: {\r\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\r\n      greedy: true\r\n    },\r\n    'quoted-function': {\r\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\r\n      alias: 'function'\r\n    },\r\n    'quoted-atom': {\r\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\r\n      alias: 'atom'\r\n    },\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    keyword: /\\b(?:after|begin|case|catch|end|fun|if|of|receive|try|when)\\b/,\r\n    number: [\r\n      /\\$\\\\?./,\r\n      /\\b\\d+#[a-z0-9]+/i,\r\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\r\n    ],\r\n    function: /\\b[a-z][\\w@]*(?=\\()/,\r\n    variable: {\r\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\r\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\r\n      lookbehind: true\r\n    },\r\n    operator: [\r\n      /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/,\r\n      {\r\n        // We don't want to match <<\r\n        pattern: /(^|[^<])<(?!<)/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // We don't want to match >>\r\n        pattern: /(^|[^>])>(?!>)/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    atom: /\\b[a-z][\\w@]*/,\r\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nexcelFormula.displayName = 'excel-formula'\r\nexcelFormula.aliases = ['xls', 'xlsx']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function excelFormula(Prism) {\r\n  Prism.languages['excel-formula'] = {\r\n    comment: {\r\n      pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\r\n      greedy: true\r\n    },\r\n    reference: {\r\n      // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\r\n\r\n      // Sales!B2\r\n      // 'Winter sales'!B2\r\n      // [Sales.xlsx]Jan!B2:B5\r\n      // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\r\n      // '[Sales.xlsx]Jan sales'!B2:B5\r\n      // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\r\n\r\n      pattern:\r\n        /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\r\n      greedy: true,\r\n      alias: 'string',\r\n      inside: {\r\n        operator: /!$/,\r\n        punctuation: /'/,\r\n        sheet: {\r\n          pattern: /[^[\\]]+$/,\r\n          alias: 'function'\r\n        },\r\n        file: {\r\n          pattern: /\\[[^[\\]]+\\]$/,\r\n          inside: {\r\n            punctuation: /[[\\]]/\r\n          }\r\n        },\r\n        path: /[\\s\\S]+/\r\n      }\r\n    },\r\n    'function-name': {\r\n      pattern: /\\b[A-Z]\\w*(?=\\()/i,\r\n      alias: 'builtin'\r\n    },\r\n    range: {\r\n      pattern:\r\n        /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\r\n      alias: 'selector',\r\n      inside: {\r\n        operator: /:/,\r\n        cell: /\\$?[A-Z]+\\$?\\d+/i,\r\n        column: /\\$?[A-Z]+/i,\r\n        row: /\\$?\\d+/\r\n      }\r\n    },\r\n    cell: {\r\n      // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\r\n      // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\r\n      pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\r\n      alias: 'selector'\r\n    },\r\n    number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\r\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\r\n    operator: /[-+*/^%=&,]|<[=>]?|>=?/,\r\n    punctuation: /[[\\]();{}|]/\r\n  }\r\n  Prism.languages['xlsx'] = Prism.languages['xls'] =\r\n    Prism.languages['excel-formula']\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nfsharp.displayName = 'fsharp'\r\nfsharp.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function fsharp(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\r\n    comment: [\r\n      {\r\n        pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    string: {\r\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?/,\r\n      greedy: true\r\n    },\r\n    'class-name': {\r\n      pattern:\r\n        /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\r\n      lookbehind: true,\r\n      inside: {\r\n        operator: /->|\\*/,\r\n        punctuation: /\\./\r\n      }\r\n    },\r\n    keyword:\r\n      /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\\b/,\r\n    number: [\r\n      /\\b0x[\\da-fA-F]+(?:LF|lf|un)?\\b/,\r\n      /\\b0b[01]+(?:uy|y)?\\b/,\r\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\r\n      /\\b\\d+(?:[IlLsy]|UL|u[lsy]?)?\\b/\r\n    ],\r\n    operator:\r\n      /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\r\n  })\r\n  Prism.languages.insertBefore('fsharp', 'keyword', {\r\n    preprocessor: {\r\n      pattern: /(^[\\t ]*)#.*/m,\r\n      lookbehind: true,\r\n      alias: 'property',\r\n      inside: {\r\n        directive: {\r\n          pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\r\n          lookbehind: true,\r\n          alias: 'keyword'\r\n        }\r\n      }\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('fsharp', 'punctuation', {\r\n    'computation-expression': {\r\n      pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\r\n      alias: 'keyword'\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('fsharp', 'string', {\r\n    annotation: {\r\n      pattern: /\\[<.+?>\\]/,\r\n      greedy: true,\r\n      inside: {\r\n        punctuation: /^\\[<|>\\]$/,\r\n        'class-name': {\r\n          pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\r\n          lookbehind: true\r\n        },\r\n        'annotation-content': {\r\n          pattern: /[\\s\\S]+/,\r\n          inside: Prism.languages.fsharp\r\n        }\r\n      }\r\n    },\r\n    char: {\r\n      pattern:\r\n        /'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\r\n      greedy: true\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nfactor.displayName = 'factor'\r\nfactor.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function factor(Prism) {\r\n  ;(function (Prism) {\r\n    var comment_inside = {\r\n      function:\r\n        /\\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\\?{2,}|!{2,})\\b/\r\n    }\r\n    var string_inside = {\r\n      number: /\\\\[^\\s']|%\\w/\r\n    }\r\n    var factor = {\r\n      comment: [\r\n        {\r\n          // ! single-line exclamation point comments with whitespace after/around the !\r\n          pattern: /(^|\\s)(?:! .*|!$)/,\r\n          lookbehind: true,\r\n          inside: comment_inside\r\n        } /* from basis/multiline: */,\r\n        {\r\n          // /* comment */, /* comment*/\r\n          pattern: /(^|\\s)\\/\\*\\s[\\s\\S]*?\\*\\/(?=\\s|$)/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          inside: comment_inside\r\n        },\r\n        {\r\n          // ![[ comment ]] , ![===[ comment]===]\r\n          pattern: /(^|\\s)!\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          inside: comment_inside\r\n        }\r\n      ],\r\n      number: [\r\n        {\r\n          // basic base 10 integers 9, -9\r\n          pattern: /(^|\\s)[+-]?\\d+(?=\\s|$)/,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          // base prefix integers 0b010 0o70 0xad 0d10 0XAD -0xa9\r\n          pattern: /(^|\\s)[+-]?0(?:b[01]+|o[0-7]+|d\\d+|x[\\dA-F]+)(?=\\s|$)/i,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          // fractional ratios 1/5 -1/5 and the literal float approximations 1/5. -1/5.\r\n          pattern: /(^|\\s)[+-]?\\d+\\/\\d+\\.?(?=\\s|$)/,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          // positive mixed numbers 23+1/5 +23+1/5\r\n          pattern: /(^|\\s)\\+?\\d+\\+\\d+\\/\\d+(?=\\s|$)/,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          // negative mixed numbers -23-1/5\r\n          pattern: /(^|\\s)-\\d+-\\d+\\/\\d+(?=\\s|$)/,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          // basic decimal floats -0.01 0. .0 .1 -.1 -1. -12.13 +12.13\r\n          // and scientific notation with base 10 exponents 3e4 3e-4 .3e-4\r\n          pattern:\r\n            /(^|\\s)[+-]?(?:\\d*\\.\\d+|\\d+\\.\\d*|\\d+)(?:e[+-]?\\d+)?(?=\\s|$)/i,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          // NAN literal syntax NAN: 80000deadbeef, NAN: a\r\n          pattern: /(^|\\s)NAN:\\s+[\\da-fA-F]+(?=\\s|$)/,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          /*\r\nbase prefix floats 0x1.0p3 (8.0) 0b1.010p2 (5.0) 0x1.p1 0b1.11111111p11111...\r\n\"The normalized hex form ±0x1.MMMMMMMMMMMMM[pP]±EEEE allows any floating-point number to be specified precisely.\r\nThe values of MMMMMMMMMMMMM and EEEE map directly to the mantissa and exponent fields of the binary IEEE 754 representation.\"\r\n<https://docs.factorcode.org/content/article-syntax-floats.html>\r\n*/\r\n          pattern:\r\n            /(^|\\s)[+-]?0(?:b1\\.[01]*|o1\\.[0-7]*|d1\\.\\d*|x1\\.[\\dA-F]*)p\\d+(?=\\s|$)/i,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      // R/ regexp?\\/\\\\/\r\n      regexp: {\r\n        pattern:\r\n          /(^|\\s)R\\/\\s(?:\\\\\\S|[^\\\\/])*\\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\\s|$)/,\r\n        lookbehind: true,\r\n        alias: 'number',\r\n        inside: {\r\n          variable: /\\\\\\S/,\r\n          keyword: /[+?*\\[\\]^$(){}.|]/,\r\n          operator: {\r\n            pattern: /(\\/)[idmsr]+(?:-[idmsr]+)?/,\r\n            lookbehind: true\r\n          }\r\n        }\r\n      },\r\n      boolean: {\r\n        pattern: /(^|\\s)[tf](?=\\s|$)/,\r\n        lookbehind: true\r\n      },\r\n      // SBUF\" asd\", URL\" ://...\", P\" /etc/\"\r\n      'custom-string': {\r\n        pattern: /(^|\\s)[A-Z0-9\\-]+\"\\s(?:\\\\\\S|[^\"\\\\])*\"/,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'string',\r\n        inside: {\r\n          number: /\\\\\\S|%\\w|\\//\r\n        }\r\n      },\r\n      'multiline-string': [\r\n        {\r\n          // STRING: name \\n content \\n ; -> CONSTANT: name \"content\" (symbol)\r\n          pattern: /(^|\\s)STRING:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*;(?=\\s|$)/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          alias: 'string',\r\n          inside: {\r\n            number: string_inside.number,\r\n            // trailing semicolon on its own line\r\n            'semicolon-or-setlocal': {\r\n              pattern: /([\\r\\n][ \\t]*);(?=\\s|$)/,\r\n              lookbehind: true,\r\n              alias: 'function'\r\n            }\r\n          }\r\n        },\r\n        {\r\n          // HEREDOC: marker \\n content \\n marker ; -> \"content\" (immediate)\r\n          pattern: /(^|\\s)HEREDOC:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*\\S+(?=\\s|$)/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          alias: 'string',\r\n          inside: string_inside\r\n        },\r\n        {\r\n          // [[ string ]], [==[ string]==]\r\n          pattern: /(^|\\s)\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          alias: 'string',\r\n          inside: string_inside\r\n        }\r\n      ],\r\n      'special-using': {\r\n        pattern: /(^|\\s)USING:(?:\\s\\S+)*(?=\\s+;(?:\\s|$))/,\r\n        lookbehind: true,\r\n        alias: 'function',\r\n        inside: {\r\n          // this is essentially a regex for vocab names, which i don't want to specify\r\n          // but the USING: gets picked up as a vocab name\r\n          string: {\r\n            pattern: /(\\s)[^:\\s]+/,\r\n            lookbehind: true\r\n          }\r\n        }\r\n      },\r\n      /* this description of stack effect literal syntax is not complete and not as specific as theoretically possible\r\ntrying to do better is more work and regex-computation-time than it's worth though.\r\n- we'd like to have the \"delimiter\" parts of the stack effect [ (, --, and ) ] be a different (less-important or comment-like) colour to the stack effect contents\r\n- we'd like if nested stack effects were treated as such rather than just appearing flat (with `inside`)\r\n- we'd like if the following variable name conventions were recognised specifically:\r\nspecial row variables = ..a b..\r\ntype and stack effect annotations end with a colon = ( quot: ( a: ( -- ) -- b ) -- x ), ( x: number -- )\r\nword throws unconditional error = *\r\nany other word-like variable name = a ? q' etc\r\nhttps://docs.factorcode.org/content/article-effects.html\r\nthese are pretty complicated to highlight properly without a real parser, and therefore out of scope\r\nthe old pattern, which may be later useful, was: (^|\\s)(?:call|execute|eval)?\\((?:\\s+[^\"\\r\\n\\t ]\\S*)*?\\s+--(?:\\s+[^\"\\n\\t ]\\S*)*?\\s+\\)(?=\\s|$)\r\n*/\r\n\r\n      // current solution is not great\r\n      'stack-effect-delimiter': [\r\n        {\r\n          // opening parenthesis\r\n          pattern: /(^|\\s)(?:call|eval|execute)?\\((?=\\s)/,\r\n          lookbehind: true,\r\n          alias: 'operator'\r\n        },\r\n        {\r\n          // middle --\r\n          pattern: /(\\s)--(?=\\s)/,\r\n          lookbehind: true,\r\n          alias: 'operator'\r\n        },\r\n        {\r\n          // closing parenthesis\r\n          pattern: /(\\s)\\)(?=\\s|$)/,\r\n          lookbehind: true,\r\n          alias: 'operator'\r\n        }\r\n      ],\r\n      combinators: {\r\n        pattern: null,\r\n        lookbehind: true,\r\n        alias: 'keyword'\r\n      },\r\n      'kernel-builtin': {\r\n        pattern: null,\r\n        lookbehind: true,\r\n        alias: 'variable'\r\n      },\r\n      'sequences-builtin': {\r\n        pattern: null,\r\n        lookbehind: true,\r\n        alias: 'variable'\r\n      },\r\n      'math-builtin': {\r\n        pattern: null,\r\n        lookbehind: true,\r\n        alias: 'variable'\r\n      },\r\n      'constructor-word': {\r\n        // <array> but not <=>\r\n        pattern: /(^|\\s)<(?!=+>|-+>)\\S+>(?=\\s|$)/,\r\n        lookbehind: true,\r\n        alias: 'keyword'\r\n      },\r\n      'other-builtin-syntax': {\r\n        pattern: null,\r\n        lookbehind: true,\r\n        alias: 'operator'\r\n      },\r\n      /*\r\nfull list of supported word naming conventions: (the convention appears outside of the [brackets])\r\nset-[x]\r\nchange-[x]\r\nwith-[x]\r\nnew-[x]\r\n>[string]\r\n[base]>\r\n[string]>[number]\r\n+[symbol]+\r\n[boolean-word]?\r\n?[of]\r\n[slot-reader]>>\r\n>>[slot-setter]\r\n[slot-writer]<<\r\n([implementation-detail])\r\n[mutater]!\r\n[variant]*\r\n[prettyprint].\r\n$[help-markup]\r\n<constructors>, SYNTAX:, etc are supported by their own patterns.\r\n`with` and `new` from `kernel` are their own builtins.\r\nsee <https://docs.factorcode.org/content/article-conventions.html>\r\n*/\r\n      'conventionally-named-word': {\r\n        pattern:\r\n          /(^|\\s)(?!\")(?:(?:change|new|set|with)-\\S+|\\$\\S+|>[^>\\s]+|[^:>\\s]+>|[^>\\s]+>[^>\\s]+|\\+[^+\\s]+\\+|[^?\\s]+\\?|\\?[^?\\s]+|[^>\\s]+>>|>>[^>\\s]+|[^<\\s]+<<|\\([^()\\s]+\\)|[^!\\s]+!|[^*\\s]\\S*\\*|[^.\\s]\\S*\\.)(?=\\s|$)/,\r\n        lookbehind: true,\r\n        alias: 'keyword'\r\n      },\r\n      'colon-syntax': {\r\n        pattern: /(^|\\s)(?:[A-Z0-9\\-]+#?)?:{1,2}\\s+(?:;\\S+|(?!;)\\S+)(?=\\s|$)/,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'function'\r\n      },\r\n      'semicolon-or-setlocal': {\r\n        pattern: /(\\s)(?:;|:>)(?=\\s|$)/,\r\n        lookbehind: true,\r\n        alias: 'function'\r\n      },\r\n      // do not highlight leading } or trailing X{ at the begin/end of the file as it's invalid syntax\r\n      'curly-brace-literal-delimiter': [\r\n        {\r\n          // opening\r\n          pattern: /(^|\\s)[a-z]*\\{(?=\\s)/i,\r\n          lookbehind: true,\r\n          alias: 'operator'\r\n        },\r\n        {\r\n          // closing\r\n          pattern: /(\\s)\\}(?=\\s|$)/,\r\n          lookbehind: true,\r\n          alias: 'operator'\r\n        }\r\n      ],\r\n      // do not highlight leading ] or trailing [ at the begin/end of the file as it's invalid syntax\r\n      'quotation-delimiter': [\r\n        {\r\n          // opening\r\n          pattern: /(^|\\s)\\[(?=\\s)/,\r\n          lookbehind: true,\r\n          alias: 'operator'\r\n        },\r\n        {\r\n          // closing\r\n          pattern: /(\\s)\\](?=\\s|$)/,\r\n          lookbehind: true,\r\n          alias: 'operator'\r\n        }\r\n      ],\r\n      'normal-word': {\r\n        pattern: /(^|\\s)[^\"\\s]\\S*(?=\\s|$)/,\r\n        lookbehind: true\r\n      },\r\n      /*\r\nbasic first-class string \"a\"\r\nwith escaped double-quote \"a\\\"\"\r\nescaped backslash \"\\\\\"\r\nand general escapes since Factor has so many \"\\N\"\r\nsyntax that works in the reference implementation that isn't fully\r\nsupported because it's an implementation detail:\r\n\"string 1\"\"string 2\" -> 2 strings (works anyway)\r\n\"string\"5 -> string, 5\r\n\"string\"[ ] -> string, quotation\r\n{ \"a\"} -> array<string>\r\nthe rest of those examples all properly recognise the string, but not\r\nthe other object (number, quotation, etc)\r\nthis is fine for a regex-only implementation.\r\n*/\r\n      string: {\r\n        pattern: /\"(?:\\\\\\S|[^\"\\\\])*\"/,\r\n        greedy: true,\r\n        inside: string_inside\r\n      }\r\n    }\r\n    var escape = function (str) {\r\n      return (str + '').replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, '\\\\$1')\r\n    }\r\n    var arrToWordsRegExp = function (arr) {\r\n      return new RegExp('(^|\\\\s)(?:' + arr.map(escape).join('|') + ')(?=\\\\s|$)')\r\n    }\r\n    var builtins = {\r\n      'kernel-builtin': [\r\n        'or',\r\n        '2nipd',\r\n        '4drop',\r\n        'tuck',\r\n        'wrapper',\r\n        'nip',\r\n        'wrapper?',\r\n        'callstack>array',\r\n        'die',\r\n        'dupd',\r\n        'callstack',\r\n        'callstack?',\r\n        '3dup',\r\n        'hashcode',\r\n        'pick',\r\n        '4nip',\r\n        'build',\r\n        '>boolean',\r\n        'nipd',\r\n        'clone',\r\n        '5nip',\r\n        'eq?',\r\n        '?',\r\n        '=',\r\n        'swapd',\r\n        '2over',\r\n        'clear',\r\n        '2dup',\r\n        'get-retainstack',\r\n        'not',\r\n        'tuple?',\r\n        'dup',\r\n        '3nipd',\r\n        'call',\r\n        '-rotd',\r\n        'object',\r\n        'drop',\r\n        'assert=',\r\n        'assert?',\r\n        '-rot',\r\n        'execute',\r\n        'boa',\r\n        'get-callstack',\r\n        'curried?',\r\n        '3drop',\r\n        'pickd',\r\n        'overd',\r\n        'over',\r\n        'roll',\r\n        '3nip',\r\n        'swap',\r\n        'and',\r\n        '2nip',\r\n        'rotd',\r\n        'throw',\r\n        '(clone)',\r\n        'hashcode*',\r\n        'spin',\r\n        'reach',\r\n        '4dup',\r\n        'equal?',\r\n        'get-datastack',\r\n        'assert',\r\n        '2drop',\r\n        '<wrapper>',\r\n        'boolean?',\r\n        'identity-hashcode',\r\n        'identity-tuple?',\r\n        'null',\r\n        'composed?',\r\n        'new',\r\n        '5drop',\r\n        'rot',\r\n        '-roll',\r\n        'xor',\r\n        'identity-tuple',\r\n        'boolean'\r\n      ],\r\n      'other-builtin-syntax': [\r\n        // syntax\r\n        '=======',\r\n        'recursive',\r\n        'flushable',\r\n        '>>',\r\n        '<<<<<<',\r\n        'M\\\\',\r\n        'B',\r\n        'PRIVATE>',\r\n        '\\\\',\r\n        '======',\r\n        'final',\r\n        'inline',\r\n        'delimiter',\r\n        'deprecated',\r\n        '<PRIVATE',\r\n        '>>>>>>',\r\n        '<<<<<<<',\r\n        'parse-complex',\r\n        'malformed-complex',\r\n        'read-only',\r\n        '>>>>>>>',\r\n        'call-next-method',\r\n        '<<',\r\n        'foldable',\r\n        // literals\r\n        '$',\r\n        '$[',\r\n        '${'\r\n      ],\r\n      'sequences-builtin': [\r\n        'member-eq?',\r\n        'mismatch',\r\n        'append',\r\n        'assert-sequence=',\r\n        'longer',\r\n        'repetition',\r\n        'clone-like',\r\n        '3sequence',\r\n        'assert-sequence?',\r\n        'last-index-from',\r\n        'reversed',\r\n        'index-from',\r\n        'cut*',\r\n        'pad-tail',\r\n        'join-as',\r\n        'remove-eq!',\r\n        'concat-as',\r\n        'but-last',\r\n        'snip',\r\n        'nths',\r\n        'nth',\r\n        'sequence',\r\n        'longest',\r\n        'slice?',\r\n        '<slice>',\r\n        'remove-nth',\r\n        'tail-slice',\r\n        'empty?',\r\n        'tail*',\r\n        'member?',\r\n        'virtual-sequence?',\r\n        'set-length',\r\n        'drop-prefix',\r\n        'iota',\r\n        'unclip',\r\n        'bounds-error?',\r\n        'unclip-last-slice',\r\n        'non-negative-integer-expected',\r\n        'non-negative-integer-expected?',\r\n        'midpoint@',\r\n        'longer?',\r\n        '?set-nth',\r\n        '?first',\r\n        'rest-slice',\r\n        'prepend-as',\r\n        'prepend',\r\n        'fourth',\r\n        'sift',\r\n        'subseq-start',\r\n        'new-sequence',\r\n        '?last',\r\n        'like',\r\n        'first4',\r\n        '1sequence',\r\n        'reverse',\r\n        'slice',\r\n        'virtual@',\r\n        'repetition?',\r\n        'set-last',\r\n        'index',\r\n        '4sequence',\r\n        'max-length',\r\n        'set-second',\r\n        'immutable-sequence',\r\n        'first2',\r\n        'first3',\r\n        'supremum',\r\n        'unclip-slice',\r\n        'suffix!',\r\n        'insert-nth',\r\n        'tail',\r\n        '3append',\r\n        'short',\r\n        'suffix',\r\n        'concat',\r\n        'flip',\r\n        'immutable?',\r\n        'reverse!',\r\n        '2sequence',\r\n        'sum',\r\n        'delete-all',\r\n        'indices',\r\n        'snip-slice',\r\n        '<iota>',\r\n        'check-slice',\r\n        'sequence?',\r\n        'head',\r\n        'append-as',\r\n        'halves',\r\n        'sequence=',\r\n        'collapse-slice',\r\n        '?second',\r\n        'slice-error?',\r\n        'product',\r\n        'bounds-check?',\r\n        'bounds-check',\r\n        'immutable',\r\n        'virtual-exemplar',\r\n        'harvest',\r\n        'remove',\r\n        'pad-head',\r\n        'last',\r\n        'set-fourth',\r\n        'cartesian-product',\r\n        'remove-eq',\r\n        'shorten',\r\n        'shorter',\r\n        'reversed?',\r\n        'shorter?',\r\n        'shortest',\r\n        'head-slice',\r\n        'pop*',\r\n        'tail-slice*',\r\n        'but-last-slice',\r\n        'iota?',\r\n        'append!',\r\n        'cut-slice',\r\n        'new-resizable',\r\n        'head-slice*',\r\n        'sequence-hashcode',\r\n        'pop',\r\n        'set-nth',\r\n        '?nth',\r\n        'second',\r\n        'join',\r\n        'immutable-sequence?',\r\n        '<reversed>',\r\n        '3append-as',\r\n        'virtual-sequence',\r\n        'subseq?',\r\n        'remove-nth!',\r\n        'length',\r\n        'last-index',\r\n        'lengthen',\r\n        'assert-sequence',\r\n        'copy',\r\n        'move',\r\n        'third',\r\n        'first',\r\n        'tail?',\r\n        'set-first',\r\n        'prefix',\r\n        'bounds-error',\r\n        '<repetition>',\r\n        'exchange',\r\n        'surround',\r\n        'cut',\r\n        'min-length',\r\n        'set-third',\r\n        'push-all',\r\n        'head?',\r\n        'subseq-start-from',\r\n        'delete-slice',\r\n        'rest',\r\n        'sum-lengths',\r\n        'head*',\r\n        'infimum',\r\n        'remove!',\r\n        'glue',\r\n        'slice-error',\r\n        'subseq',\r\n        'push',\r\n        'replace-slice',\r\n        'subseq-as',\r\n        'unclip-last'\r\n      ],\r\n      'math-builtin': [\r\n        'number=',\r\n        'next-power-of-2',\r\n        '?1+',\r\n        'fp-special?',\r\n        'imaginary-part',\r\n        'float>bits',\r\n        'number?',\r\n        'fp-infinity?',\r\n        'bignum?',\r\n        'fp-snan?',\r\n        'denominator',\r\n        'gcd',\r\n        '*',\r\n        '+',\r\n        'fp-bitwise=',\r\n        '-',\r\n        'u>=',\r\n        '/',\r\n        '>=',\r\n        'bitand',\r\n        'power-of-2?',\r\n        'log2-expects-positive',\r\n        'neg?',\r\n        '<',\r\n        'log2',\r\n        '>',\r\n        'integer?',\r\n        'number',\r\n        'bits>double',\r\n        '2/',\r\n        'zero?',\r\n        'bits>float',\r\n        'float?',\r\n        'shift',\r\n        'ratio?',\r\n        'rect>',\r\n        'even?',\r\n        'ratio',\r\n        'fp-sign',\r\n        'bitnot',\r\n        '>fixnum',\r\n        'complex?',\r\n        '/i',\r\n        'integer>fixnum',\r\n        '/f',\r\n        'sgn',\r\n        '>bignum',\r\n        'next-float',\r\n        'u<',\r\n        'u>',\r\n        'mod',\r\n        'recip',\r\n        'rational',\r\n        '>float',\r\n        '2^',\r\n        'integer',\r\n        'fixnum?',\r\n        'neg',\r\n        'fixnum',\r\n        'sq',\r\n        'bignum',\r\n        '>rect',\r\n        'bit?',\r\n        'fp-qnan?',\r\n        'simple-gcd',\r\n        'complex',\r\n        '<fp-nan>',\r\n        'real',\r\n        '>fraction',\r\n        'double>bits',\r\n        'bitor',\r\n        'rem',\r\n        'fp-nan-payload',\r\n        'real-part',\r\n        'log2-expects-positive?',\r\n        'prev-float',\r\n        'align',\r\n        'unordered?',\r\n        'float',\r\n        'fp-nan?',\r\n        'abs',\r\n        'bitxor',\r\n        'integer>fixnum-strict',\r\n        'u<=',\r\n        'odd?',\r\n        '<=',\r\n        '/mod',\r\n        '>integer',\r\n        'real?',\r\n        'rational?',\r\n        'numerator'\r\n      ]\r\n      // that's all for now\r\n    }\r\n\r\n    Object.keys(builtins).forEach(function (k) {\r\n      factor[k].pattern = arrToWordsRegExp(builtins[k])\r\n    })\r\n    var combinators = [\r\n      // kernel\r\n      '2bi',\r\n      'while',\r\n      '2tri',\r\n      'bi*',\r\n      '4dip',\r\n      'both?',\r\n      'same?',\r\n      'tri@',\r\n      'curry',\r\n      'prepose',\r\n      '3bi',\r\n      '?if',\r\n      'tri*',\r\n      '2keep',\r\n      '3keep',\r\n      'curried',\r\n      '2keepd',\r\n      'when',\r\n      '2bi*',\r\n      '2tri*',\r\n      '4keep',\r\n      'bi@',\r\n      'keepdd',\r\n      'do',\r\n      'unless*',\r\n      'tri-curry',\r\n      'if*',\r\n      'loop',\r\n      'bi-curry*',\r\n      'when*',\r\n      '2bi@',\r\n      '2tri@',\r\n      'with',\r\n      '2with',\r\n      'either?',\r\n      'bi',\r\n      'until',\r\n      '3dip',\r\n      '3curry',\r\n      'tri-curry*',\r\n      'tri-curry@',\r\n      'bi-curry',\r\n      'keepd',\r\n      'compose',\r\n      '2dip',\r\n      'if',\r\n      '3tri',\r\n      'unless',\r\n      'tuple',\r\n      'keep',\r\n      '2curry',\r\n      'tri',\r\n      'most',\r\n      'while*',\r\n      'dip',\r\n      'composed',\r\n      'bi-curry@',\r\n      // sequences\r\n      'find-last-from',\r\n      'trim-head-slice',\r\n      'map-as',\r\n      'each-from',\r\n      'none?',\r\n      'trim-tail',\r\n      'partition',\r\n      'if-empty',\r\n      'accumulate*',\r\n      'reject!',\r\n      'find-from',\r\n      'accumulate-as',\r\n      'collector-for-as',\r\n      'reject',\r\n      'map',\r\n      'map-sum',\r\n      'accumulate!',\r\n      '2each-from',\r\n      'follow',\r\n      'supremum-by',\r\n      'map!',\r\n      'unless-empty',\r\n      'collector',\r\n      'padding',\r\n      'reduce-index',\r\n      'replicate-as',\r\n      'infimum-by',\r\n      'trim-tail-slice',\r\n      'count',\r\n      'find-index',\r\n      'filter',\r\n      'accumulate*!',\r\n      'reject-as',\r\n      'map-integers',\r\n      'map-find',\r\n      'reduce',\r\n      'selector',\r\n      'interleave',\r\n      '2map',\r\n      'filter-as',\r\n      'binary-reduce',\r\n      'map-index-as',\r\n      'find',\r\n      'produce',\r\n      'filter!',\r\n      'replicate',\r\n      'cartesian-map',\r\n      'cartesian-each',\r\n      'find-index-from',\r\n      'map-find-last',\r\n      '3map-as',\r\n      '3map',\r\n      'find-last',\r\n      'selector-as',\r\n      '2map-as',\r\n      '2map-reduce',\r\n      'accumulate',\r\n      'each',\r\n      'each-index',\r\n      'accumulate*-as',\r\n      'when-empty',\r\n      'all?',\r\n      'collector-as',\r\n      'push-either',\r\n      'new-like',\r\n      'collector-for',\r\n      '2selector',\r\n      'push-if',\r\n      '2all?',\r\n      'map-reduce',\r\n      '3each',\r\n      'any?',\r\n      'trim-slice',\r\n      '2reduce',\r\n      'change-nth',\r\n      'produce-as',\r\n      '2each',\r\n      'trim',\r\n      'trim-head',\r\n      'cartesian-find',\r\n      'map-index',\r\n      // math\r\n      'if-zero',\r\n      'each-integer',\r\n      'unless-zero',\r\n      '(find-integer)',\r\n      'when-zero',\r\n      'find-last-integer',\r\n      '(all-integers?)',\r\n      'times',\r\n      '(each-integer)',\r\n      'find-integer',\r\n      'all-integers?',\r\n      // math.combinators\r\n      'unless-negative',\r\n      'if-positive',\r\n      'when-positive',\r\n      'when-negative',\r\n      'unless-positive',\r\n      'if-negative',\r\n      // combinators\r\n      'case',\r\n      '2cleave',\r\n      'cond>quot',\r\n      'case>quot',\r\n      '3cleave',\r\n      'wrong-values',\r\n      'to-fixed-point',\r\n      'alist>quot',\r\n      'cond',\r\n      'cleave',\r\n      'call-effect',\r\n      'recursive-hashcode',\r\n      'spread',\r\n      'deep-spread>quot',\r\n      // combinators.short-circuit\r\n      '2||',\r\n      '0||',\r\n      'n||',\r\n      '0&&',\r\n      '2&&',\r\n      '3||',\r\n      '1||',\r\n      '1&&',\r\n      'n&&',\r\n      '3&&',\r\n      // combinators.smart\r\n      'smart-unless*',\r\n      'keep-inputs',\r\n      'reduce-outputs',\r\n      'smart-when*',\r\n      'cleave>array',\r\n      'smart-with',\r\n      'smart-apply',\r\n      'smart-if',\r\n      'inputs/outputs',\r\n      'output>sequence-n',\r\n      'map-outputs',\r\n      'map-reduce-outputs',\r\n      'dropping',\r\n      'output>array',\r\n      'smart-map-reduce',\r\n      'smart-2map-reduce',\r\n      'output>array-n',\r\n      'nullary',\r\n      'input<sequence',\r\n      'append-outputs',\r\n      'drop-inputs',\r\n      'inputs',\r\n      'smart-2reduce',\r\n      'drop-outputs',\r\n      'smart-reduce',\r\n      'preserving',\r\n      'smart-when',\r\n      'outputs',\r\n      'append-outputs-as',\r\n      'smart-unless',\r\n      'smart-if*',\r\n      'sum-outputs',\r\n      'input<sequence-unsafe',\r\n      'output>sequence'\r\n      // tafn\r\n    ]\r\n\r\n    factor.combinators.pattern = arrToWordsRegExp(combinators)\r\n    Prism.languages.factor = factor\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\n$false.displayName = 'false'\r\n$false.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function $false(Prism) {\r\n  ;(function (Prism) {\r\n    /**\r\n     * Based on the manual by Wouter van Oortmerssen.\r\n     *\r\n     * @see {@link https://github.com/PrismJS/prism/issues/2801#issue-829717504}\r\n     */\r\n    Prism.languages['false'] = {\r\n      comment: {\r\n        pattern: /\\{[^}]*\\}/\r\n      },\r\n      string: {\r\n        pattern: /\"[^\"]*\"/,\r\n        greedy: true\r\n      },\r\n      'character-code': {\r\n        pattern: /'(?:[^\\r]|\\r\\n?)/,\r\n        alias: 'number'\r\n      },\r\n      'assembler-code': {\r\n        pattern: /\\d+`/,\r\n        alias: 'important'\r\n      },\r\n      number: /\\d+/,\r\n      operator: /[-!#$%&'*+,./:;=>?@\\\\^_`|~ßø]/,\r\n      punctuation: /\\[|\\]/,\r\n      variable: /[a-z]/,\r\n      'non-standard': {\r\n        pattern: /[()<BDO®]/,\r\n        alias: 'bold'\r\n      }\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nfirestoreSecurityRules.displayName = 'firestore-security-rules'\r\nfirestoreSecurityRules.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function firestoreSecurityRules(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages['firestore-security-rules'] = Prism.languages.extend(\r\n    'clike',\r\n    {\r\n      comment: /\\/\\/.*/,\r\n      keyword:\r\n        /\\b(?:allow|function|if|match|null|return|rules_version|service)\\b/,\r\n      operator: /&&|\\|\\||[<>!=]=?|[-+*/%]|\\b(?:in|is)\\b/\r\n    }\r\n  )\r\n  delete Prism.languages['firestore-security-rules']['class-name']\r\n  Prism.languages.insertBefore('firestore-security-rules', 'keyword', {\r\n    path: {\r\n      pattern:\r\n        /(^|[\\s(),])(?:\\/(?:[\\w\\xA0-\\uFFFF]+|\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)))+/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: {\r\n        variable: {\r\n          pattern: /\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)/,\r\n          inside: {\r\n            operator: /=/,\r\n            keyword: /\\*\\*/,\r\n            punctuation: /[.$(){}]/\r\n          }\r\n        },\r\n        punctuation: /\\//\r\n      }\r\n    },\r\n    method: {\r\n      // to make the pattern shorter, the actual method names are omitted\r\n      pattern: /(\\ballow\\s+)[a-z]+(?:\\s*,\\s*[a-z]+)*(?=\\s*[:;])/,\r\n      lookbehind: true,\r\n      alias: 'builtin',\r\n      inside: {\r\n        punctuation: /,/\r\n      }\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJavascript from './javascript.js'\r\nflow.displayName = 'flow'\r\nflow.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function flow(Prism) {\r\n  Prism.register(refractorJavascript)\r\n  ;(function (Prism) {\r\n    Prism.languages.flow = Prism.languages.extend('javascript', {})\r\n    Prism.languages.insertBefore('flow', 'keyword', {\r\n      type: [\r\n        {\r\n          pattern:\r\n            /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\\b/,\r\n          alias: 'class-name'\r\n        }\r\n      ]\r\n    })\r\n    Prism.languages.flow['function-variable'].pattern =\r\n      /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i\r\n    delete Prism.languages.flow['parameter']\r\n    Prism.languages.insertBefore('flow', 'operator', {\r\n      'flow-punctuation': {\r\n        pattern: /\\{\\||\\|\\}/,\r\n        alias: 'punctuation'\r\n      }\r\n    })\r\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\r\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\r\n    }\r\n    Prism.languages.flow.keyword.unshift(\r\n      {\r\n        pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern:\r\n          /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\r\n        lookbehind: true\r\n      }\r\n    )\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nfortran.displayName = 'fortran'\r\nfortran.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function fortran(Prism) {\r\n  Prism.languages.fortran = {\r\n    'quoted-number': {\r\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\r\n      alias: 'number'\r\n    },\r\n    string: {\r\n      pattern:\r\n        /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\r\n      inside: {\r\n        comment: {\r\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\r\n          lookbehind: true\r\n        }\r\n      }\r\n    },\r\n    comment: {\r\n      pattern: /!.*/,\r\n      greedy: true\r\n    },\r\n    boolean: /\\.(?:FALSE|TRUE)\\.(?:_\\w+)?/i,\r\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\r\n    keyword: [\r\n      // Types\r\n      /\\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\\b/i,\r\n      // END statements\r\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,\r\n      // Statements\r\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,\r\n      // Others\r\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\r\n    ],\r\n    operator: [\r\n      /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\r\n      {\r\n        // Use lookbehind to prevent confusion with (/ /)\r\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkupTemplating from './markup-templating.js'\r\nftl.displayName = 'ftl'\r\nftl.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function ftl(Prism) {\r\n  Prism.register(refractorMarkupTemplating)\r\n  ;(function (Prism) {\r\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\r\n\r\n    // FTL expression with 4 levels of nesting supported\r\n    var FTL_EXPR =\r\n      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\r\n        .source\r\n    for (var i = 0; i < 2; i++) {\r\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\r\n        return FTL_EXPR\r\n      })\r\n    }\r\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\r\n    var ftl = {\r\n      comment: /<#--[\\s\\S]*?-->/,\r\n      string: [\r\n        {\r\n          // raw string\r\n          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern: RegExp(\r\n            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\r\n              /<expr>/g,\r\n              function () {\r\n                return FTL_EXPR\r\n              }\r\n            )\r\n          ),\r\n          greedy: true,\r\n          inside: {\r\n            interpolation: {\r\n              pattern: RegExp(\r\n                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\r\n                  /<expr>/g,\r\n                  function () {\r\n                    return FTL_EXPR\r\n                  }\r\n                )\r\n              ),\r\n              lookbehind: true,\r\n              inside: {\r\n                'interpolation-punctuation': {\r\n                  pattern: /^\\$\\{|\\}$/,\r\n                  alias: 'punctuation'\r\n                },\r\n                rest: null\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      keyword: /\\b(?:as)\\b/,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      'builtin-function': {\r\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\r\n        lookbehind: true,\r\n        alias: 'function'\r\n      },\r\n      function: /\\b\\w+(?=\\s*\\()/,\r\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\r\n      operator:\r\n        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\r\n      punctuation: /[,;.:()[\\]{}]/\r\n    }\r\n    ftl.string[1].inside.interpolation.inside.rest = ftl\r\n    Prism.languages.ftl = {\r\n      'ftl-comment': {\r\n        // the pattern is shortened to be more efficient\r\n        pattern: /^<#--[\\s\\S]*/,\r\n        alias: 'comment'\r\n      },\r\n      'ftl-directive': {\r\n        pattern: /^<[\\s\\S]+>$/,\r\n        inside: {\r\n          directive: {\r\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\r\n            lookbehind: true,\r\n            alias: 'keyword'\r\n          },\r\n          punctuation: /^<\\/?|\\/?>$/,\r\n          content: {\r\n            pattern: /\\s*\\S[\\s\\S]*/,\r\n            alias: 'ftl',\r\n            inside: ftl\r\n          }\r\n        }\r\n      },\r\n      'ftl-interpolation': {\r\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\r\n        inside: {\r\n          punctuation: /^\\$\\{|\\}$/,\r\n          content: {\r\n            pattern: /\\s*\\S[\\s\\S]*/,\r\n            alias: 'ftl',\r\n            inside: ftl\r\n          }\r\n        }\r\n      }\r\n    }\r\n    Prism.hooks.add('before-tokenize', function (env) {\r\n      // eslint-disable-next-line regexp/no-useless-lazy\r\n      var pattern = RegExp(\r\n        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\r\n          /<expr>/g,\r\n          function () {\r\n            return FTL_EXPR\r\n          }\r\n        ),\r\n        'gi'\r\n      )\r\n      Prism.languages['markup-templating'].buildPlaceholders(\r\n        env,\r\n        'ftl',\r\n        pattern\r\n      )\r\n    })\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\ngml.displayName = 'gml'\r\ngml.aliases = ['gamemakerlanguage']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function gml(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.gamemakerlanguage = Prism.languages.gml =\r\n    Prism.languages.extend('clike', {\r\n      keyword:\r\n        /\\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\\b/,\r\n      number:\r\n        /(?:\\b0x[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]{0,4}/i,\r\n      operator:\r\n        /--|\\+\\+|[-+%/=]=?|!=|\\*\\*?=?|<[<=>]?|>[=>]?|&&?|\\^\\^?|\\|\\|?|~|\\b(?:and|at|not|or|with|xor)\\b/,\r\n      constant:\r\n        /\\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\\d|numpad\\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\\w+)\\b/,\r\n      variable:\r\n        /\\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\\d)|argument|global|local|other|self)\\b/\r\n    })\r\n}\r\n", "// @ts-nocheck\r\ngap.displayName = 'gap'\r\ngap.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function gap(Prism) {\r\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\r\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\r\n\r\n  Prism.languages.gap = {\r\n    shell: {\r\n      pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\r\n      greedy: true,\r\n      inside: {\r\n        gap: {\r\n          pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\r\n          lookbehind: true,\r\n          inside: null // see below\r\n        },\r\n\r\n        punctuation: /^gap>/\r\n      }\r\n    },\r\n    comment: {\r\n      pattern: /#.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern:\r\n        /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: {\r\n        continuation: {\r\n          pattern: /([\\r\\n])>/,\r\n          lookbehind: true,\r\n          alias: 'punctuation'\r\n        }\r\n      }\r\n    },\r\n    keyword:\r\n      /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n    number: {\r\n      pattern:\r\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\r\n      lookbehind: true\r\n    },\r\n    continuation: {\r\n      pattern: /([\\r\\n])>/,\r\n      lookbehind: true,\r\n      alias: 'punctuation'\r\n    },\r\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\r\n    punctuation: /[()[\\]{},;.:]/\r\n  }\r\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap\r\n}\r\n", "// @ts-nocheck\r\ngcode.displayName = 'gcode'\r\ngcode.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function gcode(Prism) {\r\n  Prism.languages.gcode = {\r\n    comment: /;.*|\\B\\(.*?\\)\\B/,\r\n    string: {\r\n      pattern: /\"(?:\"\"|[^\"])*\"/,\r\n      greedy: true\r\n    },\r\n    keyword: /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\r\n    property: /\\b[A-Z]/,\r\n    checksum: {\r\n      pattern: /(\\*)\\d+/,\r\n      lookbehind: true,\r\n      alias: 'number'\r\n    },\r\n    // T0:0:0\r\n    punctuation: /[:*]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\ngdscript.displayName = 'gdscript'\r\ngdscript.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function gdscript(Prism) {\r\n  Prism.languages.gdscript = {\r\n    comment: /#.*/,\r\n    string: {\r\n      pattern:\r\n        /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\r\n      greedy: true\r\n    },\r\n    'class-name': {\r\n      // class_name Foo, extends Bar, class InnerClass\r\n      // export(int) var baz, export(int, 0) var i\r\n      // as Node\r\n      // const FOO: int = 9, var bar: bool = true\r\n      // func add(reference: Item, amount: int) -> Item:\r\n      pattern:\r\n        /(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\r\n      lookbehind: true\r\n    },\r\n    keyword:\r\n      /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\r\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\r\n    variable: /\\$\\w+/,\r\n    number: [\r\n      /\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,\r\n      /\\b(?:INF|NAN|PI|TAU)\\b/\r\n    ],\r\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\r\n    punctuation: /[.:,;()[\\]{}]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\ngedcom.displayName = 'gedcom'\r\ngedcom.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function gedcom(Prism) {\r\n  Prism.languages.gedcom = {\r\n    'line-value': {\r\n      // Preceded by level, optional pointer, and tag\r\n      pattern:\r\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        pointer: {\r\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\r\n          alias: 'variable'\r\n        }\r\n      }\r\n    },\r\n    record: {\r\n      // Preceded by level and optional pointer\r\n      pattern:\r\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\r\n      lookbehind: true,\r\n      alias: 'tag'\r\n    },\r\n    level: {\r\n      pattern: /(^[\\t ]*)\\d+/m,\r\n      lookbehind: true,\r\n      alias: 'number'\r\n    },\r\n    pointer: {\r\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\r\n      alias: 'variable'\r\n    }\r\n  }\r\n}\r\n", "// @ts-nocheck\r\ngettext.displayName = 'gettext'\r\ngettext.aliases = ['po']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function gettext(Prism) {\r\n  Prism.languages.gettext = {\r\n    comment: [\r\n      {\r\n        pattern: /# .*/,\r\n        greedy: true,\r\n        alias: 'translator-comment'\r\n      },\r\n      {\r\n        pattern: /#\\..*/,\r\n        greedy: true,\r\n        alias: 'extracted-comment'\r\n      },\r\n      {\r\n        pattern: /#:.*/,\r\n        greedy: true,\r\n        alias: 'reference-comment'\r\n      },\r\n      {\r\n        pattern: /#,.*/,\r\n        greedy: true,\r\n        alias: 'flag-comment'\r\n      },\r\n      {\r\n        pattern: /#\\|.*/,\r\n        greedy: true,\r\n        alias: 'previously-untranslated-comment'\r\n      },\r\n      {\r\n        pattern: /#.*/,\r\n        greedy: true\r\n      }\r\n    ],\r\n    string: {\r\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\.)*\"/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    keyword: /^msg(?:ctxt|id|id_plural|str)\\b/m,\r\n    number: /\\b\\d+\\b/,\r\n    punctuation: /[\\[\\]]/\r\n  }\r\n  Prism.languages.po = Prism.languages.gettext\r\n}\r\n", "// @ts-nocheck\r\ngherkin.displayName = 'gherkin'\r\ngherkin.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function gherkin(Prism) {\r\n  ;(function (Prism) {\r\n    var tableRow = /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|(?:(?!\\|).)*/.source\r\n    Prism.languages.gherkin = {\r\n      pystring: {\r\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\r\n        alias: 'string'\r\n      },\r\n      comment: {\r\n        pattern: /(^[ \\t]*)#.*/m,\r\n        lookbehind: true\r\n      },\r\n      tag: {\r\n        pattern: /(^[ \\t]*)@\\S*/m,\r\n        lookbehind: true\r\n      },\r\n      feature: {\r\n        pattern:\r\n          /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\\r\\n]+(?:\\r?\\n|\\r|$))*/,\r\n        lookbehind: true,\r\n        inside: {\r\n          important: {\r\n            pattern: /(:)[^\\r\\n]+/,\r\n            lookbehind: true\r\n          },\r\n          keyword: /[^:\\r\\n]+:/\r\n        }\r\n      },\r\n      scenario: {\r\n        pattern:\r\n          /(^[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          important: {\r\n            pattern: /(:)[^\\r\\n]*/,\r\n            lookbehind: true\r\n          },\r\n          keyword: /[^:\\r\\n]+:/\r\n        }\r\n      },\r\n      'table-body': {\r\n        // Look-behind is used to skip the table head, which has the same format as any table row\r\n        pattern: RegExp('(' + tableRow + ')(?:' + tableRow + ')+'),\r\n        lookbehind: true,\r\n        inside: {\r\n          outline: {\r\n            pattern: /<[^>]+>/,\r\n            alias: 'variable'\r\n          },\r\n          td: {\r\n            pattern: /\\s*[^\\s|][^|]*/,\r\n            alias: 'string'\r\n          },\r\n          punctuation: /\\|/\r\n        }\r\n      },\r\n      'table-head': {\r\n        pattern: RegExp(tableRow),\r\n        inside: {\r\n          th: {\r\n            pattern: /\\s*[^\\s|][^|]*/,\r\n            alias: 'variable'\r\n          },\r\n          punctuation: /\\|/\r\n        }\r\n      },\r\n      atrule: {\r\n        pattern:\r\n          /(^[ \\t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t])/m,\r\n        lookbehind: true\r\n      },\r\n      string: {\r\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\r\n        inside: {\r\n          outline: {\r\n            pattern: /<[^>]+>/,\r\n            alias: 'variable'\r\n          }\r\n        }\r\n      },\r\n      outline: {\r\n        pattern: /<[^>]+>/,\r\n        alias: 'variable'\r\n      }\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ngit.displayName = 'git'\r\ngit.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function git(Prism) {\r\n  Prism.languages.git = {\r\n    /*\r\n     * A simple one line comment like in a git status command\r\n     * For instance:\r\n     * $ git status\r\n     * # On branch infinite-scroll\r\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\r\n     * # and have 1 and 2 different commits each, respectively.\r\n     * nothing to commit (working directory clean)\r\n     */\r\n    comment: /^#.*/m,\r\n    /*\r\n     * Regexp to match the changed lines in a git diff output. Check the example below.\r\n     */\r\n    deleted: /^[-–].*/m,\r\n    inserted: /^\\+.*/m,\r\n    /*\r\n     * a string (double and simple quote)\r\n     */\r\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n    /*\r\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\r\n     * For instance:\r\n     * $ git add file.txt\r\n     */\r\n    command: {\r\n      pattern: /^.*\\$ git .*$/m,\r\n      inside: {\r\n        /*\r\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\r\n         * For instance:\r\n         * $ git diff --cached\r\n         * $ git log -p\r\n         */\r\n        parameter: /\\s--?\\w+/\r\n      }\r\n    },\r\n    /*\r\n     * Coordinates displayed in a git diff command\r\n     * For instance:\r\n     * $ git diff\r\n     * diff --git file.txt file.txt\r\n     * index 6214953..1d54a52 100644\r\n     * --- file.txt\r\n     * +++ file.txt\r\n     * @@ -1 +1,2 @@\r\n     * -Here's my tetx file\r\n     * +Here's my text file\r\n     * +And this is the second line\r\n     */\r\n    coord: /^@@.*@@$/m,\r\n    /*\r\n     * Match a \"commit [SHA1]\" line in a git log output.\r\n     * For instance:\r\n     * $ git log\r\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\r\n     * Author: lgiraudel\r\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\r\n     *\r\n     *     Add of a new line\r\n     */\r\n    'commit-sha1': /^commit \\w{40}$/m\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorC from './c.js'\r\nglsl.displayName = 'glsl'\r\nglsl.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function glsl(Prism) {\r\n  Prism.register(refractorC)\r\n  Prism.languages.glsl = Prism.languages.extend('c', {\r\n    keyword:\r\n      /\\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\\b/\r\n  })\r\n}\r\n", "// @ts-nocheck\r\ngn.displayName = 'gn'\r\ngn.aliases = ['gni']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function gn(Prism) {\r\n  // https://gn.googlesource.com/gn/+/refs/heads/main/docs/reference.md#grammar\r\n\r\n  Prism.languages.gn = {\r\n    comment: {\r\n      pattern: /#.*/,\r\n      greedy: true\r\n    },\r\n    'string-literal': {\r\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern:\r\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[\\s\\S]*?\\}|[a-zA-Z_]\\w*|0x[a-fA-F0-9]{2})/,\r\n          lookbehind: true,\r\n          inside: {\r\n            number: /^\\$0x[\\s\\S]{2}$/,\r\n            variable: /^\\$\\w+$/,\r\n            'interpolation-punctuation': {\r\n              pattern: /^\\$\\{|\\}$/,\r\n              alias: 'punctuation'\r\n            },\r\n            expression: {\r\n              pattern: /[\\s\\S]+/,\r\n              inside: null // see below\r\n            }\r\n          }\r\n        },\r\n\r\n        string: /[\\s\\S]+/\r\n      }\r\n    },\r\n    keyword: /\\b(?:else|if)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    'builtin-function': {\r\n      // a few functions get special highlighting to improve readability\r\n      pattern:\r\n        /\\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\\s*\\()/i,\r\n      alias: 'keyword'\r\n    },\r\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n    constant:\r\n      /\\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\\b/,\r\n    number: /-?\\b\\d+\\b/,\r\n    operator: /[-+!=<>]=?|&&|\\|\\|/,\r\n    punctuation: /[(){}[\\],.]/\r\n  }\r\n  Prism.languages.gn['string-literal'].inside['interpolation'].inside[\r\n    'expression'\r\n  ].inside = Prism.languages.gn\r\n  Prism.languages.gni = Prism.languages.gn\r\n}\r\n", "// @ts-nocheck\r\nlinkerScript.displayName = 'linker-script'\r\nlinkerScript.aliases = ['ld']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function linkerScript(Prism) {\r\n  Prism.languages['linker-script'] = {\r\n    comment: {\r\n      pattern: /(^|\\s)\\/\\*[\\s\\S]*?(?:$|\\*\\/)/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    identifier: {\r\n      pattern: /\"[^\"\\r\\n]*\"/,\r\n      greedy: true\r\n    },\r\n    'location-counter': {\r\n      pattern: /\\B\\.\\B/,\r\n      alias: 'important'\r\n    },\r\n    section: {\r\n      pattern: /(^|[^\\w*])\\.\\w+\\b/,\r\n      lookbehind: true,\r\n      alias: 'keyword'\r\n    },\r\n    function: /\\b[A-Z][A-Z_]*(?=\\s*\\()/,\r\n    number: /\\b(?:0[xX][a-fA-F0-9]+|\\d+)[KM]?\\b/,\r\n    operator: />>=?|<<=?|->|\\+\\+|--|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?/,\r\n    punctuation: /[(){},;]/\r\n  }\r\n  Prism.languages['ld'] = Prism.languages['linker-script']\r\n}\r\n", "// @ts-nocheck\r\ngoModule.displayName = 'go-module'\r\ngoModule.aliases = ['go-mod']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function goModule(Prism) {\r\n  // https://go.dev/ref/mod#go-mod-file-module\r\n\r\n  Prism.languages['go-mod'] = Prism.languages['go-module'] = {\r\n    comment: {\r\n      pattern: /\\/\\/.*/,\r\n      greedy: true\r\n    },\r\n    version: {\r\n      pattern: /(^|[\\s()[\\],])v\\d+\\.\\d+\\.\\d+(?:[+-][-+.\\w]*)?(?![^\\s()[\\],])/,\r\n      lookbehind: true,\r\n      alias: 'number'\r\n    },\r\n    'go-version': {\r\n      pattern: /((?:^|\\s)go\\s+)\\d+(?:\\.\\d+){1,2}/,\r\n      lookbehind: true,\r\n      alias: 'number'\r\n    },\r\n    keyword: {\r\n      pattern: /^([ \\t]*)(?:exclude|go|module|replace|require|retract)\\b/m,\r\n      lookbehind: true\r\n    },\r\n    operator: /=>/,\r\n    punctuation: /[()[\\],]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\ngradle.displayName = 'gradle'\r\ngradle.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function gradle(Prism) {\r\n  Prism.register(refractorClike)\r\n  ;(function (Prism) {\r\n    var interpolation = {\r\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\r\n      lookbehind: true,\r\n      inside: {\r\n        'interpolation-punctuation': {\r\n          pattern: /^\\$\\{?|\\}$/,\r\n          alias: 'punctuation'\r\n        },\r\n        expression: {\r\n          pattern: /[\\s\\S]+/,\r\n          inside: null\r\n        }\r\n      }\r\n    }\r\n    Prism.languages.gradle = Prism.languages.extend('clike', {\r\n      string: {\r\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\r\n        greedy: true\r\n      },\r\n      keyword:\r\n        /\\b(?:apply|def|dependencies|else|if|implementation|import|plugin|plugins|project|repositories|repository|sourceSets|tasks|val)\\b/,\r\n      number:\r\n        /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\r\n      operator: {\r\n        pattern:\r\n          /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\r\n        lookbehind: true\r\n      },\r\n      punctuation: /\\.+|[{}[\\];(),:$]/\r\n    })\r\n    Prism.languages.insertBefore('gradle', 'string', {\r\n      shebang: {\r\n        pattern: /#!.+/,\r\n        alias: 'comment',\r\n        greedy: true\r\n      },\r\n      'interpolation-string': {\r\n        pattern:\r\n          /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\r\n        greedy: true,\r\n        inside: {\r\n          interpolation: interpolation,\r\n          string: /[\\s\\S]+/\r\n        }\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('gradle', 'punctuation', {\r\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\r\n    })\r\n    Prism.languages.insertBefore('gradle', 'function', {\r\n      annotation: {\r\n        pattern: /(^|[^.])@\\w+/,\r\n        lookbehind: true,\r\n        alias: 'punctuation'\r\n      }\r\n    })\r\n    interpolation.inside.expression.inside = Prism.languages.gradle\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ngraphql.displayName = 'graphql'\r\ngraphql.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function graphql(Prism) {\r\n  Prism.languages.graphql = {\r\n    comment: /#.*/,\r\n    description: {\r\n      pattern:\r\n        /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\r\n      greedy: true,\r\n      alias: 'string',\r\n      inside: {\r\n        'language-markdown': {\r\n          pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\r\n          lookbehind: true,\r\n          inside: Prism.languages.markdown\r\n        }\r\n      }\r\n    },\r\n    string: {\r\n      pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\r\n      greedy: true\r\n    },\r\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    variable: /\\$[a-z_]\\w*/i,\r\n    directive: {\r\n      pattern: /@[a-z_]\\w*/i,\r\n      alias: 'function'\r\n    },\r\n    'attr-name': {\r\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\r\n      greedy: true\r\n    },\r\n    'atom-input': {\r\n      pattern: /\\b[A-Z]\\w*Input\\b/,\r\n      alias: 'class-name'\r\n    },\r\n    scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\r\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\r\n    'class-name': {\r\n      pattern:\r\n        /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\r\n      lookbehind: true\r\n    },\r\n    fragment: {\r\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\r\n      lookbehind: true,\r\n      alias: 'function'\r\n    },\r\n    'definition-mutation': {\r\n      pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\r\n      lookbehind: true,\r\n      alias: 'function'\r\n    },\r\n    'definition-query': {\r\n      pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\r\n      lookbehind: true,\r\n      alias: 'function'\r\n    },\r\n    keyword:\r\n      /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\r\n    operator: /[!=|&]|\\.{3}/,\r\n    'property-query': /\\w+(?=\\s*\\()/,\r\n    object: /\\w+(?=\\s*\\{)/,\r\n    punctuation: /[!(){}\\[\\]:=,]/,\r\n    property: /\\w+/\r\n  }\r\n  Prism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\r\n    if (env.language !== 'graphql') {\r\n      return\r\n    }\r\n\r\n    /**\r\n     * get the graphql token stream that we want to customize\r\n     *\r\n     * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\r\n     * @type {Token[]}\r\n     */\r\n    var validTokens = env.tokens.filter(function (token) {\r\n      return (\r\n        typeof token !== 'string' &&\r\n        token.type !== 'comment' &&\r\n        token.type !== 'scalar'\r\n      )\r\n    })\r\n    var currentIndex = 0\r\n\r\n    /**\r\n     * Returns whether the token relative to the current index has the given type.\r\n     *\r\n     * @param {number} offset\r\n     * @returns {Token | undefined}\r\n     */\r\n    function getToken(offset) {\r\n      return validTokens[currentIndex + offset]\r\n    }\r\n\r\n    /**\r\n     * Returns whether the token relative to the current index has the given type.\r\n     *\r\n     * @param {readonly string[]} types\r\n     * @param {number} [offset=0]\r\n     * @returns {boolean}\r\n     */\r\n    function isTokenType(types, offset) {\r\n      offset = offset || 0\r\n      for (var i = 0; i < types.length; i++) {\r\n        var token = getToken(i + offset)\r\n        if (!token || token.type !== types[i]) {\r\n          return false\r\n        }\r\n      }\r\n      return true\r\n    }\r\n\r\n    /**\r\n     * Returns the index of the closing bracket to an opening bracket.\r\n     *\r\n     * It is assumed that `token[currentIndex - 1]` is an opening bracket.\r\n     *\r\n     * If no closing bracket could be found, `-1` will be returned.\r\n     *\r\n     * @param {RegExp} open\r\n     * @param {RegExp} close\r\n     * @returns {number}\r\n     */\r\n    function findClosingBracket(open, close) {\r\n      var stackHeight = 1\r\n      for (var i = currentIndex; i < validTokens.length; i++) {\r\n        var token = validTokens[i]\r\n        var content = token.content\r\n        if (token.type === 'punctuation' && typeof content === 'string') {\r\n          if (open.test(content)) {\r\n            stackHeight++\r\n          } else if (close.test(content)) {\r\n            stackHeight--\r\n            if (stackHeight === 0) {\r\n              return i\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return -1\r\n    }\r\n\r\n    /**\r\n     * Adds an alias to the given token.\r\n     *\r\n     * @param {Token} token\r\n     * @param {string} alias\r\n     * @returns {void}\r\n     */\r\n    function addAlias(token, alias) {\r\n      var aliases = token.alias\r\n      if (!aliases) {\r\n        token.alias = aliases = []\r\n      } else if (!Array.isArray(aliases)) {\r\n        token.alias = aliases = [aliases]\r\n      }\r\n      aliases.push(alias)\r\n    }\r\n    for (; currentIndex < validTokens.length; ) {\r\n      var startToken = validTokens[currentIndex++]\r\n\r\n      // add special aliases for mutation tokens\r\n      if (startToken.type === 'keyword' && startToken.content === 'mutation') {\r\n        // any array of the names of all input variables (if any)\r\n        var inputVariables = []\r\n        if (\r\n          isTokenType(['definition-mutation', 'punctuation']) &&\r\n          getToken(1).content === '('\r\n        ) {\r\n          // definition\r\n\r\n          currentIndex += 2 // skip 'definition-mutation' and 'punctuation'\r\n\r\n          var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/)\r\n          if (definitionEnd === -1) {\r\n            continue\r\n          }\r\n\r\n          // find all input variables\r\n          for (; currentIndex < definitionEnd; currentIndex++) {\r\n            var t = getToken(0)\r\n            if (t.type === 'variable') {\r\n              addAlias(t, 'variable-input')\r\n              inputVariables.push(t.content)\r\n            }\r\n          }\r\n          currentIndex = definitionEnd + 1\r\n        }\r\n        if (\r\n          isTokenType(['punctuation', 'property-query']) &&\r\n          getToken(0).content === '{'\r\n        ) {\r\n          currentIndex++ // skip opening bracket\r\n\r\n          addAlias(getToken(0), 'property-mutation')\r\n          if (inputVariables.length > 0) {\r\n            var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/)\r\n            if (mutationEnd === -1) {\r\n              continue\r\n            }\r\n\r\n            // give references to input variables a special alias\r\n            for (var i = currentIndex; i < mutationEnd; i++) {\r\n              var varToken = validTokens[i]\r\n              if (\r\n                varToken.type === 'variable' &&\r\n                inputVariables.indexOf(varToken.content) >= 0\r\n              ) {\r\n                addAlias(varToken, 'variable-input')\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\ngroovy.displayName = 'groovy'\r\ngroovy.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function groovy(Prism) {\r\n  Prism.register(refractorClike)\r\n  ;(function (Prism) {\r\n    var interpolation = {\r\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\r\n      lookbehind: true,\r\n      inside: {\r\n        'interpolation-punctuation': {\r\n          pattern: /^\\$\\{?|\\}$/,\r\n          alias: 'punctuation'\r\n        },\r\n        expression: {\r\n          pattern: /[\\s\\S]+/,\r\n          inside: null // see below\r\n        }\r\n      }\r\n    }\r\n\r\n    Prism.languages.groovy = Prism.languages.extend('clike', {\r\n      string: {\r\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\r\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\r\n        greedy: true\r\n      },\r\n      keyword:\r\n        /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\r\n      number:\r\n        /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\r\n      operator: {\r\n        pattern:\r\n          /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\r\n        lookbehind: true\r\n      },\r\n      punctuation: /\\.+|[{}[\\];(),:$]/\r\n    })\r\n    Prism.languages.insertBefore('groovy', 'string', {\r\n      shebang: {\r\n        pattern: /#!.+/,\r\n        alias: 'comment',\r\n        greedy: true\r\n      },\r\n      'interpolation-string': {\r\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\r\n        // simple division (see JS regex), so find a fix maybe?\r\n        pattern:\r\n          /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\r\n        greedy: true,\r\n        inside: {\r\n          interpolation: interpolation,\r\n          string: /[\\s\\S]+/\r\n        }\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('groovy', 'punctuation', {\r\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\r\n    })\r\n    Prism.languages.insertBefore('groovy', 'function', {\r\n      annotation: {\r\n        pattern: /(^|[^.])@\\w+/,\r\n        lookbehind: true,\r\n        alias: 'punctuation'\r\n      }\r\n    })\r\n    interpolation.inside.expression.inside = Prism.languages.groovy\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkup from './markup.js'\r\ntextile.displayName = 'textile'\r\ntextile.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function textile(Prism) {\r\n  Prism.register(refractorMarkup)\r\n  ;(function (Prism) {\r\n    // We don't allow for pipes inside parentheses\r\n    // to not break table pattern |(. foo |). bar |\r\n    var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source\r\n    // Opening and closing parentheses which are not a modifier\r\n    // This pattern is necessary to prevent exponential backtracking\r\n    var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source\r\n    /**\r\n     * @param {string} source\r\n     * @param {string} [flags]\r\n     */\r\n    function withModifier(source, flags) {\r\n      return RegExp(\r\n        source\r\n          .replace(/<MOD>/g, function () {\r\n            return '(?:' + modifierRegex + ')'\r\n          })\r\n          .replace(/<PAR>/g, function () {\r\n            return '(?:' + parenthesesRegex + ')'\r\n          }),\r\n        flags || ''\r\n      )\r\n    }\r\n    var modifierTokens = {\r\n      css: {\r\n        pattern: /\\{[^{}]+\\}/,\r\n        inside: {\r\n          rest: Prism.languages.css\r\n        }\r\n      },\r\n      'class-id': {\r\n        pattern: /(\\()[^()]+(?=\\))/,\r\n        lookbehind: true,\r\n        alias: 'attr-value'\r\n      },\r\n      lang: {\r\n        pattern: /(\\[)[^\\[\\]]+(?=\\])/,\r\n        lookbehind: true,\r\n        alias: 'attr-value'\r\n      },\r\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\r\n      punctuation: /[\\\\\\/]\\d+|\\S/\r\n    }\r\n    var textile = (Prism.languages.textile = Prism.languages.extend('markup', {\r\n      phrase: {\r\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\r\n        lookbehind: true,\r\n        inside: {\r\n          // h1. Header 1\r\n          'block-tag': {\r\n            pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\r\n            inside: {\r\n              modifier: {\r\n                pattern: withModifier(\r\n                  /(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source\r\n                ),\r\n                lookbehind: true,\r\n                inside: modifierTokens\r\n              },\r\n              tag: /^[a-z]\\w*/,\r\n              punctuation: /\\.$/\r\n            }\r\n          },\r\n          // # List item\r\n          // * List item\r\n          list: {\r\n            pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\r\n            inside: {\r\n              modifier: {\r\n                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\r\n                lookbehind: true,\r\n                inside: modifierTokens\r\n              },\r\n              punctuation: /^[*#]+/\r\n            }\r\n          },\r\n          // | cell | cell | cell |\r\n          table: {\r\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\r\n            // or the cell: |{color:red}.1|2|3|\r\n            pattern: withModifier(\r\n              /^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/\r\n                .source,\r\n              'm'\r\n            ),\r\n            inside: {\r\n              modifier: {\r\n                // Modifiers for rows after the first one are\r\n                // preceded by a pipe and a line feed\r\n                pattern: withModifier(\r\n                  /(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/\r\n                    .source\r\n                ),\r\n                lookbehind: true,\r\n                inside: modifierTokens\r\n              },\r\n              punctuation: /\\||^\\./\r\n            }\r\n          },\r\n          inline: {\r\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n            pattern: withModifier(\r\n              /(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/\r\n                .source\r\n            ),\r\n            lookbehind: true,\r\n            inside: {\r\n              // Note: superscripts and subscripts are not handled specifically\r\n\r\n              // *bold*, **bold**\r\n              bold: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\r\n                lookbehind: true\r\n              },\r\n              // _italic_, __italic__\r\n              italic: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\r\n                lookbehind: true\r\n              },\r\n              // ??cite??\r\n              cite: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\r\n                lookbehind: true,\r\n                alias: 'string'\r\n              },\r\n              // @code@\r\n              code: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\r\n                lookbehind: true,\r\n                alias: 'keyword'\r\n              },\r\n              // +inserted+\r\n              inserted: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\r\n                lookbehind: true\r\n              },\r\n              // -deleted-\r\n              deleted: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\r\n                lookbehind: true\r\n              },\r\n              // %span%\r\n              span: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\r\n                lookbehind: true\r\n              },\r\n              modifier: {\r\n                pattern: withModifier(\r\n                  /(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source\r\n                ),\r\n                lookbehind: true,\r\n                inside: modifierTokens\r\n              },\r\n              punctuation: /[*_%?@+\\-^~]+/\r\n            }\r\n          },\r\n          // [alias]http://example.com\r\n          'link-ref': {\r\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\r\n            inside: {\r\n              string: {\r\n                pattern: /(^\\[)[^\\]]+(?=\\])/,\r\n                lookbehind: true\r\n              },\r\n              url: {\r\n                pattern: /(^\\])\\S+$/,\r\n                lookbehind: true\r\n              },\r\n              punctuation: /[\\[\\]]/\r\n            }\r\n          },\r\n          // \"text\":http://example.com\r\n          // \"text\":link-ref\r\n          link: {\r\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n            pattern: withModifier(\r\n              /\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source\r\n            ),\r\n            inside: {\r\n              text: {\r\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\r\n                lookbehind: true\r\n              },\r\n              modifier: {\r\n                pattern: withModifier(/(^\")<MOD>+/.source),\r\n                lookbehind: true,\r\n                inside: modifierTokens\r\n              },\r\n              url: {\r\n                pattern: /(:).+/,\r\n                lookbehind: true\r\n              },\r\n              punctuation: /[\":]/\r\n            }\r\n          },\r\n          // !image.jpg!\r\n          // !image.jpg(Title)!:http://example.com\r\n          image: {\r\n            pattern: withModifier(\r\n              /!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/\r\n                .source\r\n            ),\r\n            inside: {\r\n              source: {\r\n                pattern: withModifier(\r\n                  /(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/\r\n                    .source\r\n                ),\r\n                lookbehind: true,\r\n                alias: 'url'\r\n              },\r\n              modifier: {\r\n                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\r\n                lookbehind: true,\r\n                inside: modifierTokens\r\n              },\r\n              url: {\r\n                pattern: /(:).+/,\r\n                lookbehind: true\r\n              },\r\n              punctuation: /[!:]/\r\n            }\r\n          },\r\n          // Footnote[1]\r\n          footnote: {\r\n            pattern: /\\b\\[\\d+\\]/,\r\n            alias: 'comment',\r\n            inside: {\r\n              punctuation: /\\[|\\]/\r\n            }\r\n          },\r\n          // CSS(Cascading Style Sheet)\r\n          acronym: {\r\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\r\n            inside: {\r\n              comment: {\r\n                pattern: /(\\()[^()]+(?=\\))/,\r\n                lookbehind: true\r\n              },\r\n              punctuation: /[()]/\r\n            }\r\n          },\r\n          // Prism(C)\r\n          mark: {\r\n            pattern: /\\b\\((?:C|R|TM)\\)/,\r\n            alias: 'comment',\r\n            inside: {\r\n              punctuation: /[()]/\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }))\r\n    var phraseInside = textile['phrase'].inside\r\n    var nestedPatterns = {\r\n      inline: phraseInside['inline'],\r\n      link: phraseInside['link'],\r\n      image: phraseInside['image'],\r\n      footnote: phraseInside['footnote'],\r\n      acronym: phraseInside['acronym'],\r\n      mark: phraseInside['mark']\r\n    }\r\n\r\n    // Only allow alpha-numeric HTML tags, not XML tags\r\n    textile.tag.pattern =\r\n      /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i\r\n\r\n    // Allow some nesting\r\n    var phraseInlineInside = phraseInside['inline'].inside\r\n    phraseInlineInside['bold'].inside = nestedPatterns\r\n    phraseInlineInside['italic'].inside = nestedPatterns\r\n    phraseInlineInside['inserted'].inside = nestedPatterns\r\n    phraseInlineInside['deleted'].inside = nestedPatterns\r\n    phraseInlineInside['span'].inside = nestedPatterns\r\n\r\n    // Allow some styles inside table cells\r\n    var phraseTableInside = phraseInside['table'].inside\r\n    phraseTableInside['inline'] = nestedPatterns['inline']\r\n    phraseTableInside['link'] = nestedPatterns['link']\r\n    phraseTableInside['image'] = nestedPatterns['image']\r\n    phraseTableInside['footnote'] = nestedPatterns['footnote']\r\n    phraseTableInside['acronym'] = nestedPatterns['acronym']\r\n    phraseTableInside['mark'] = nestedPatterns['mark']\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorRuby from './ruby.js'\r\nhaml.displayName = 'haml'\r\nhaml.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function haml(Prism) {\r\n  Prism.register(refractorRuby)\r\n  /* TODO\r\nHandle multiline code after tag\r\n%foo= some |\r\nmultiline |\r\ncode |\r\n*/\r\n\r\n  ;(function (Prism) {\r\n    Prism.languages.haml = {\r\n      // Multiline stuff should appear before the rest\r\n\r\n      'multiline-comment': {\r\n        pattern:\r\n          /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/,\r\n        lookbehind: true,\r\n        alias: 'comment'\r\n      },\r\n      'multiline-code': [\r\n        {\r\n          pattern:\r\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)/,\r\n          lookbehind: true,\r\n          inside: Prism.languages.ruby\r\n        },\r\n        {\r\n          pattern:\r\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*\\|[\\t ]*)*/,\r\n          lookbehind: true,\r\n          inside: Prism.languages.ruby\r\n        }\r\n      ],\r\n      // See at the end of the file for known filters\r\n      filter: {\r\n        pattern:\r\n          /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/,\r\n        lookbehind: true,\r\n        inside: {\r\n          'filter-name': {\r\n            pattern: /^:[\\w-]+/,\r\n            alias: 'symbol'\r\n          }\r\n        }\r\n      },\r\n      markup: {\r\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\r\n        lookbehind: true,\r\n        inside: Prism.languages.markup\r\n      },\r\n      doctype: {\r\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\r\n        lookbehind: true\r\n      },\r\n      tag: {\r\n        // Allows for one nested group of braces\r\n        pattern:\r\n          /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^{}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\r\n        lookbehind: true,\r\n        inside: {\r\n          attributes: [\r\n            {\r\n              // Lookbehind tries to prevent interpolations from breaking it all\r\n              // Allows for one nested group of braces\r\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^{}])+\\}/,\r\n              lookbehind: true,\r\n              inside: Prism.languages.ruby\r\n            },\r\n            {\r\n              pattern: /\\([^)]+\\)/,\r\n              inside: {\r\n                'attr-value': {\r\n                  pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\r\n                  lookbehind: true\r\n                },\r\n                'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\r\n                punctuation: /[=(),]/\r\n              }\r\n            },\r\n            {\r\n              pattern: /\\[[^\\]]+\\]/,\r\n              inside: Prism.languages.ruby\r\n            }\r\n          ],\r\n          punctuation: /[<>]/\r\n        }\r\n      },\r\n      code: {\r\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\r\n        lookbehind: true,\r\n        inside: Prism.languages.ruby\r\n      },\r\n      // Interpolations in plain text\r\n      interpolation: {\r\n        pattern: /#\\{[^}]+\\}/,\r\n        inside: {\r\n          delimiter: {\r\n            pattern: /^#\\{|\\}$/,\r\n            alias: 'punctuation'\r\n          },\r\n          ruby: {\r\n            pattern: /[\\s\\S]+/,\r\n            inside: Prism.languages.ruby\r\n          }\r\n        }\r\n      },\r\n      punctuation: {\r\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\r\n        lookbehind: true\r\n      }\r\n    }\r\n    var filter_pattern =\r\n      '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ].+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+'\r\n\r\n    // Non exhaustive list of available filters and associated languages\r\n    var filters = [\r\n      'css',\r\n      {\r\n        filter: 'coffee',\r\n        language: 'coffeescript'\r\n      },\r\n      'erb',\r\n      'javascript',\r\n      'less',\r\n      'markdown',\r\n      'ruby',\r\n      'scss',\r\n      'textile'\r\n    ]\r\n    var all_filters = {}\r\n    for (var i = 0, l = filters.length; i < l; i++) {\r\n      var filter = filters[i]\r\n      filter =\r\n        typeof filter === 'string'\r\n          ? {\r\n              filter: filter,\r\n              language: filter\r\n            }\r\n          : filter\r\n      if (Prism.languages[filter.language]) {\r\n        all_filters['filter-' + filter.filter] = {\r\n          pattern: RegExp(\r\n            filter_pattern.replace('{{filter_name}}', function () {\r\n              return filter.filter\r\n            })\r\n          ),\r\n          lookbehind: true,\r\n          inside: {\r\n            'filter-name': {\r\n              pattern: /^:[\\w-]+/,\r\n              alias: 'symbol'\r\n            },\r\n            text: {\r\n              pattern: /[\\s\\S]+/,\r\n              alias: [filter.language, 'language-' + filter.language],\r\n              inside: Prism.languages[filter.language]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    Prism.languages.insertBefore('haml', 'filter', all_filters)\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkupTemplating from './markup-templating.js'\r\nhandlebars.displayName = 'handlebars'\r\nhandlebars.aliases = ['hbs', 'mustache']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function handlebars(Prism) {\r\n  Prism.register(refractorMarkupTemplating)\r\n  ;(function (Prism) {\r\n    Prism.languages.handlebars = {\r\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\r\n      delimiter: {\r\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\r\n        alias: 'punctuation'\r\n      },\r\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      block: {\r\n        pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\r\n        lookbehind: true,\r\n        alias: 'keyword'\r\n      },\r\n      brackets: {\r\n        pattern: /\\[[^\\]]+\\]/,\r\n        inside: {\r\n          punctuation: /\\[|\\]/,\r\n          variable: /[\\s\\S]+/\r\n        }\r\n      },\r\n      punctuation: /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\r\n      variable: /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\r\n    }\r\n    Prism.hooks.add('before-tokenize', function (env) {\r\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\r\n      Prism.languages['markup-templating'].buildPlaceholders(\r\n        env,\r\n        'handlebars',\r\n        handlebarsPattern\r\n      )\r\n    })\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      Prism.languages['markup-templating'].tokenizePlaceholders(\r\n        env,\r\n        'handlebars'\r\n      )\r\n    })\r\n    Prism.languages.hbs = Prism.languages.handlebars\r\n    Prism.languages.mustache = Prism.languages.handlebars\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nhaskell.displayName = 'haskell'\r\nhaskell.aliases = ['hs']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function haskell(Prism) {\r\n  Prism.languages.haskell = {\r\n    comment: {\r\n      pattern:\r\n        /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|$)|\\{-[\\s\\S]*?-\\})/m,\r\n      lookbehind: true\r\n    },\r\n    char: {\r\n      pattern:\r\n        /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\r\n      alias: 'string'\r\n    },\r\n    string: {\r\n      pattern: /\"(?:[^\\\\\"]|\\\\(?:\\S|\\s+\\\\))*\"/,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\r\n    'import-statement': {\r\n      // The imported or hidden names are not included in this import\r\n      // statement. This is because we want to highlight those exactly like\r\n      // we do for the names in the program.\r\n      pattern:\r\n        /(^[\\t ]*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        keyword: /\\b(?:as|hiding|import|qualified)\\b/,\r\n        punctuation: /\\./\r\n      }\r\n    },\r\n    // These are builtin variables only. Constructors are highlighted later as a constant.\r\n    builtin:\r\n      /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\r\n    // decimal integers and floating point numbers | octal integers | hexadecimal integers\r\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\r\n    operator: [\r\n      {\r\n        // infix operator\r\n        pattern: /`(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\r\n        greedy: true\r\n      },\r\n      {\r\n        // function composition\r\n        pattern: /(\\s)\\.(?=\\s)/,\r\n        lookbehind: true\r\n      },\r\n      // Most of this is needed because of the meaning of a single '.'.\r\n      // If it stands alone freely, it is the function composition.\r\n      // It may also be a separator between a module name and an identifier => no\r\n      // operator. If it comes together with other special characters it is an\r\n      // operator too.\r\n      //\r\n      // This regex means: /[-!#$%*+=?&@|~.:<>^\\\\\\/]+/ without /\\./.\r\n      /[-!#$%*+=?&@|~:<>^\\\\\\/][-!#$%*+=?&@|~.:<>^\\\\\\/]*|\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+/\r\n    ],\r\n    // In Haskell, nearly everything is a variable, do not highlight these.\r\n    hvariable: {\r\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*/,\r\n      inside: {\r\n        punctuation: /\\./\r\n      }\r\n    },\r\n    constant: {\r\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*/,\r\n      inside: {\r\n        punctuation: /\\./\r\n      }\r\n    },\r\n    punctuation: /[{}[\\];(),.:]/\r\n  }\r\n  Prism.languages.hs = Prism.languages.haskell\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nhaxe.displayName = 'haxe'\r\nhaxe.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function haxe(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.haxe = Prism.languages.extend('clike', {\r\n    string: {\r\n      // Strings can be multi-line\r\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\r\n      greedy: true\r\n    },\r\n    'class-name': [\r\n      {\r\n        pattern:\r\n          /(\\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\\s+)[A-Z_]\\w*/,\r\n        lookbehind: true\r\n      },\r\n      // based on naming convention\r\n      /\\b[A-Z]\\w*/\r\n    ],\r\n    // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\r\n    keyword:\r\n      /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\\.)\\b/,\r\n    function: {\r\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:<[^<>]*>\\s*)?\\()/i,\r\n      greedy: true\r\n    },\r\n    operator: /\\.{3}|\\+\\+|--|&&|\\|\\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/\r\n  })\r\n  Prism.languages.insertBefore('haxe', 'string', {\r\n    'string-interpolation': {\r\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^{}]+\\})/,\r\n          lookbehind: true,\r\n          inside: {\r\n            'interpolation-punctuation': {\r\n              pattern: /^\\$\\{?|\\}$/,\r\n              alias: 'punctuation'\r\n            },\r\n            expression: {\r\n              pattern: /[\\s\\S]+/,\r\n              inside: Prism.languages.haxe\r\n            }\r\n          }\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('haxe', 'class-name', {\r\n    regex: {\r\n      pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[a-z]*/,\r\n      greedy: true,\r\n      inside: {\r\n        'regex-flags': /\\b[a-z]+$/,\r\n        'regex-source': {\r\n          pattern: /^(~\\/)[\\s\\S]+(?=\\/$)/,\r\n          lookbehind: true,\r\n          alias: 'language-regex',\r\n          inside: Prism.languages.regex\r\n        },\r\n        'regex-delimiter': /^~\\/|\\/$/\r\n      }\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('haxe', 'keyword', {\r\n    preprocessor: {\r\n      pattern: /#(?:else|elseif|end|if)\\b.*/,\r\n      alias: 'property'\r\n    },\r\n    metadata: {\r\n      pattern: /@:?[\\w.]+/,\r\n      alias: 'symbol'\r\n    },\r\n    reification: {\r\n      pattern: /\\$(?:\\w+|(?=\\{))/,\r\n      alias: 'important'\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nhcl.displayName = 'hcl'\r\nhcl.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function hcl(Prism) {\r\n  Prism.languages.hcl = {\r\n    comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n    heredoc: {\r\n      pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\r\n      greedy: true,\r\n      alias: 'string'\r\n    },\r\n    keyword: [\r\n      {\r\n        pattern:\r\n          /(?:data|resource)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\r\n        inside: {\r\n          type: {\r\n            pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\r\n            lookbehind: true,\r\n            alias: 'variable'\r\n          }\r\n        }\r\n      },\r\n      {\r\n        pattern:\r\n          /(?:backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\r\n        inside: {\r\n          type: {\r\n            pattern:\r\n              /(backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\r\n            lookbehind: true,\r\n            alias: 'variable'\r\n          }\r\n        }\r\n      },\r\n      /[\\w-]+(?=\\s+\\{)/\r\n    ],\r\n    property: [/[-\\w\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\r\n    string: {\r\n      pattern:\r\n        /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\r\n          lookbehind: true,\r\n          inside: {\r\n            type: {\r\n              pattern:\r\n                /(\\b(?:count|data|local|module|path|self|terraform|var)\\b\\.)[\\w\\*]+/i,\r\n              lookbehind: true,\r\n              alias: 'variable'\r\n            },\r\n            keyword: /\\b(?:count|data|local|module|path|self|terraform|var)\\b/i,\r\n            function: /\\w+(?=\\()/,\r\n            string: {\r\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\r\n              greedy: true\r\n            },\r\n            number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\r\n            punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\r\n          }\r\n        }\r\n      }\r\n    },\r\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\r\n    boolean: /\\b(?:false|true)\\b/i,\r\n    punctuation: /[=\\[\\]{}]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorC from './c.js'\r\nhlsl.displayName = 'hlsl'\r\nhlsl.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function hlsl(Prism) {\r\n  Prism.register(refractorC)\r\n  Prism.languages.hlsl = Prism.languages.extend('c', {\r\n    // Regarding keywords and class names:\r\n    // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\r\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\r\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\r\n    'class-name': [\r\n      Prism.languages.c['class-name'],\r\n      /\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\r\n    ],\r\n    keyword: [\r\n      // HLSL keyword\r\n      /\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/,\r\n      // scalar, vector, and matrix types\r\n      /\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\r\n    ],\r\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\r\n    number:\r\n      /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\r\n    boolean: /\\b(?:false|true)\\b/\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nhoon.displayName = 'hoon'\r\nhoon.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function hoon(Prism) {\r\n  Prism.languages.hoon = {\r\n    comment: {\r\n      pattern: /::.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'/,\r\n      greedy: true\r\n    },\r\n    constant: /%(?:\\.[ny]|[\\w-]+)/,\r\n    'class-name': /@(?:[a-z0-9-]*[a-z0-9])?|\\*/i,\r\n    function: /(?:\\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,\r\n    keyword:\r\n      /\\.[\\^\\+\\*=\\?]|![><:\\.=\\?!]|=[>|:,\\.\\-\\^<+;/~\\*\\?]|\\?[>|:\\.\\-\\^<\\+&~=@!]|\\|[\\$_%:\\.\\-\\^~\\*=@\\?]|\\+[|\\$\\+\\*]|:[_\\-\\^\\+~\\*]|%[_:\\.\\-\\^\\+~\\*=]|\\^[|:\\.\\-\\+&~\\*=\\?]|\\$[|_%:<>\\-\\^&~@=\\?]|;[:<\\+;\\/~\\*=]|~[>|\\$_%<\\+\\/&=\\?!]|--|==/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nhpkp.displayName = 'hpkp'\r\nhpkp.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function hpkp(Prism) {\r\n  /**\r\n   * Original by Scott Helme.\r\n   *\r\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\r\n   */\r\n\r\n  Prism.languages.hpkp = {\r\n    directive: {\r\n      pattern:\r\n        /\\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\\s;=]|$)/i,\r\n      alias: 'property'\r\n    },\r\n    operator: /=/,\r\n    punctuation: /;/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nhsts.displayName = 'hsts'\r\nhsts.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function hsts(Prism) {\r\n  /**\r\n   * Original by Scott Helme.\r\n   *\r\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\r\n   */\r\n\r\n  Prism.languages.hsts = {\r\n    directive: {\r\n      pattern: /\\b(?:includeSubDomains|max-age|preload)(?=[\\s;=]|$)/i,\r\n      alias: 'property'\r\n    },\r\n    operator: /=/,\r\n    punctuation: /;/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nuri.displayName = 'uri'\r\nuri.aliases = ['url']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function uri(Prism) {\r\n  // https://tools.ietf.org/html/rfc3986#appendix-A\r\n\r\n  Prism.languages.uri = {\r\n    scheme: {\r\n      pattern: /^[a-z][a-z0-9+.-]*:/im,\r\n      greedy: true,\r\n      inside: {\r\n        'scheme-delimiter': /:$/\r\n      }\r\n    },\r\n    fragment: {\r\n      pattern: /#[\\w\\-.~!$&'()*+,;=%:@/?]*/,\r\n      inside: {\r\n        'fragment-delimiter': /^#/\r\n      }\r\n    },\r\n    query: {\r\n      pattern: /\\?[\\w\\-.~!$&'()*+,;=%:@/?]*/,\r\n      inside: {\r\n        'query-delimiter': {\r\n          pattern: /^\\?/,\r\n          greedy: true\r\n        },\r\n        'pair-delimiter': /[&;]/,\r\n        pair: {\r\n          pattern: /^[^=][\\s\\S]*/,\r\n          inside: {\r\n            key: /^[^=]+/,\r\n            value: {\r\n              pattern: /(^=)[\\s\\S]+/,\r\n              lookbehind: true\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    authority: {\r\n      pattern: RegExp(\r\n        /^\\/\\//.source +\r\n          // [ userinfo \"@\" ]\r\n          /(?:[\\w\\-.~!$&'()*+,;=%:]*@)?/.source +\r\n          // host\r\n          ('(?:' +\r\n            // IP-literal\r\n            /\\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\\.[\\w\\-.~!$&'()*+,;=]+)\\]/\r\n              .source +\r\n            '|' +\r\n            // IPv4address or registered name\r\n            /[\\w\\-.~!$&'()*+,;=%]*/.source +\r\n            ')') +\r\n          // [ \":\" port ]\r\n          /(?::\\d*)?/.source,\r\n        'm'\r\n      ),\r\n      inside: {\r\n        'authority-delimiter': /^\\/\\//,\r\n        'user-info-segment': {\r\n          pattern: /^[\\w\\-.~!$&'()*+,;=%:]*@/,\r\n          inside: {\r\n            'user-info-delimiter': /@$/,\r\n            'user-info': /^[\\w\\-.~!$&'()*+,;=%:]+/\r\n          }\r\n        },\r\n        'port-segment': {\r\n          pattern: /:\\d*$/,\r\n          inside: {\r\n            'port-delimiter': /^:/,\r\n            port: /^\\d+/\r\n          }\r\n        },\r\n        host: {\r\n          pattern: /[\\s\\S]+/,\r\n          inside: {\r\n            'ip-literal': {\r\n              pattern: /^\\[[\\s\\S]+\\]$/,\r\n              inside: {\r\n                'ip-literal-delimiter': /^\\[|\\]$/,\r\n                'ipv-future': /^v[\\s\\S]+/,\r\n                'ipv6-address': /^[\\s\\S]+/\r\n              }\r\n            },\r\n            'ipv4-address':\r\n              /^(?:(?:[03-9]\\d?|[12]\\d{0,2})\\.){3}(?:[03-9]\\d?|[12]\\d{0,2})$/\r\n          }\r\n        }\r\n      }\r\n    },\r\n    path: {\r\n      pattern: /^[\\w\\-.~!$&'()*+,;=%:@/]+/m,\r\n      inside: {\r\n        'path-separator': /\\//\r\n      }\r\n    }\r\n  }\r\n  Prism.languages.url = Prism.languages.uri\r\n}\r\n", "// @ts-nocheck\r\nhttp.displayName = 'http'\r\nhttp.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function http(Prism) {\r\n  ;(function (Prism) {\r\n    /**\r\n     * @param {string} name\r\n     * @returns {RegExp}\r\n     */\r\n    function headerValueOf(name) {\r\n      return RegExp('(^(?:' + name + '):[ \\t]*(?![ \\t]))[^]+', 'i')\r\n    }\r\n    Prism.languages.http = {\r\n      'request-line': {\r\n        pattern:\r\n          /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[\\d.]+/m,\r\n        inside: {\r\n          // HTTP Method\r\n          method: {\r\n            pattern: /^[A-Z]+\\b/,\r\n            alias: 'property'\r\n          },\r\n          // Request Target e.g. http://example.com, /path/to/file\r\n          'request-target': {\r\n            pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\r\n            lookbehind: true,\r\n            alias: 'url',\r\n            inside: Prism.languages.uri\r\n          },\r\n          // HTTP Version\r\n          'http-version': {\r\n            pattern: /^(\\s)HTTP\\/[\\d.]+/,\r\n            lookbehind: true,\r\n            alias: 'property'\r\n          }\r\n        }\r\n      },\r\n      'response-status': {\r\n        pattern: /^HTTP\\/[\\d.]+ \\d+ .+/m,\r\n        inside: {\r\n          // HTTP Version\r\n          'http-version': {\r\n            pattern: /^HTTP\\/[\\d.]+/,\r\n            alias: 'property'\r\n          },\r\n          // Status Code\r\n          'status-code': {\r\n            pattern: /^(\\s)\\d+(?=\\s)/,\r\n            lookbehind: true,\r\n            alias: 'number'\r\n          },\r\n          // Reason Phrase\r\n          'reason-phrase': {\r\n            pattern: /^(\\s).+/,\r\n            lookbehind: true,\r\n            alias: 'string'\r\n          }\r\n        }\r\n      },\r\n      header: {\r\n        pattern: /^[\\w-]+:.+(?:(?:\\r\\n?|\\n)[ \\t].+)*/m,\r\n        inside: {\r\n          'header-value': [\r\n            {\r\n              pattern: headerValueOf(/Content-Security-Policy/.source),\r\n              lookbehind: true,\r\n              alias: ['csp', 'languages-csp'],\r\n              inside: Prism.languages.csp\r\n            },\r\n            {\r\n              pattern: headerValueOf(/Public-Key-Pins(?:-Report-Only)?/.source),\r\n              lookbehind: true,\r\n              alias: ['hpkp', 'languages-hpkp'],\r\n              inside: Prism.languages.hpkp\r\n            },\r\n            {\r\n              pattern: headerValueOf(/Strict-Transport-Security/.source),\r\n              lookbehind: true,\r\n              alias: ['hsts', 'languages-hsts'],\r\n              inside: Prism.languages.hsts\r\n            },\r\n            {\r\n              pattern: headerValueOf(/[^:]+/.source),\r\n              lookbehind: true\r\n            }\r\n          ],\r\n          'header-name': {\r\n            pattern: /^[^:]+/,\r\n            alias: 'keyword'\r\n          },\r\n          punctuation: /^:/\r\n        }\r\n      }\r\n    }\r\n\r\n    // Create a mapping of Content-Type headers to language definitions\r\n    var langs = Prism.languages\r\n    var httpLanguages = {\r\n      'application/javascript': langs.javascript,\r\n      'application/json': langs.json || langs.javascript,\r\n      'application/xml': langs.xml,\r\n      'text/xml': langs.xml,\r\n      'text/html': langs.html,\r\n      'text/css': langs.css,\r\n      'text/plain': langs.plain\r\n    }\r\n\r\n    // Declare which types can also be suffixes\r\n    var suffixTypes = {\r\n      'application/json': true,\r\n      'application/xml': true\r\n    }\r\n\r\n    /**\r\n     * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\r\n     *\r\n     * @param {string} contentType\r\n     * @returns {string}\r\n     */\r\n    function getSuffixPattern(contentType) {\r\n      var suffix = contentType.replace(/^[a-z]+\\//, '')\r\n      var suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])'\r\n      return '(?:' + contentType + '|' + suffixPattern + ')'\r\n    }\r\n\r\n    // Insert each content type parser that has its associated language\r\n    // currently loaded.\r\n    var options\r\n    for (var contentType in httpLanguages) {\r\n      if (httpLanguages[contentType]) {\r\n        options = options || {}\r\n        var pattern = suffixTypes[contentType]\r\n          ? getSuffixPattern(contentType)\r\n          : contentType\r\n        options[contentType.replace(/\\//g, '-')] = {\r\n          pattern: RegExp(\r\n            '(' +\r\n              /content-type:\\s*/.source +\r\n              pattern +\r\n              /(?:(?:\\r\\n?|\\n)[\\w-].*)*(?:\\r(?:\\n|(?!\\n))|\\n)/.source +\r\n              ')' +\r\n              // This is a little interesting:\r\n              // The HTTP format spec required 1 empty line before the body to make everything unambiguous.\r\n              // However, when writing code by hand (e.g. to display on a website) people can forget about this,\r\n              // so we want to be liberal here. We will allow the empty line to be omitted if the first line of\r\n              // the body does not start with a [\\w-] character (as headers do).\r\n              /[^ \\t\\w-][\\s\\S]*/.source,\r\n            'i'\r\n          ),\r\n          lookbehind: true,\r\n          inside: httpLanguages[contentType]\r\n        }\r\n      }\r\n    }\r\n    if (options) {\r\n      Prism.languages.insertBefore('http', 'header', options)\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nichigojam.displayName = 'ichigojam'\r\nichigojam.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function ichigojam(Prism) {\r\n  // according to the offical reference (EN)\r\n  // https://ichigojam.net/IchigoJam-en.html\r\n  Prism.languages.ichigojam = {\r\n    comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\r\n    string: {\r\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\r\n      greedy: true\r\n    },\r\n    number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\r\n    keyword:\r\n      /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\r\n    function:\r\n      /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\r\n    label: /(?:\\B@\\S+)/,\r\n    operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\r\n    punctuation: /[\\[,;:()\\]]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nicon.displayName = 'icon'\r\nicon.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function icon(Prism) {\r\n  Prism.languages.icon = {\r\n    comment: /#.*/,\r\n    string: {\r\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\r\n      greedy: true\r\n    },\r\n    number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\r\n    'builtin-keyword': {\r\n      pattern:\r\n        /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\r\n      alias: 'variable'\r\n    },\r\n    directive: {\r\n      pattern: /\\$\\w+/,\r\n      alias: 'builtin'\r\n    },\r\n    keyword:\r\n      /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\r\n    function: /\\b(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\r\n    operator:\r\n      /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\r\n    punctuation: /[\\[\\](){},;]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nicuMessageFormat.displayName = 'icu-message-format'\r\nicuMessageFormat.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function icuMessageFormat(Prism) {\r\n  // https://unicode-org.github.io/icu/userguide/format_parse/messages/\r\n  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\r\n\r\n  ;(function (Prism) {\r\n    /**\r\n     * @param {string} source\r\n     * @param {number} level\r\n     * @returns {string}\r\n     */\r\n    function nested(source, level) {\r\n      if (level <= 0) {\r\n        return /[]/.source\r\n      } else {\r\n        return source.replace(/<SELF>/g, function () {\r\n          return nested(source, level - 1)\r\n        })\r\n      }\r\n    }\r\n    var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/\r\n    var escape = {\r\n      pattern: /''/,\r\n      greedy: true,\r\n      alias: 'operator'\r\n    }\r\n    var string = {\r\n      pattern: stringPattern,\r\n      greedy: true,\r\n      inside: {\r\n        escape: escape\r\n      }\r\n    }\r\n    var argumentSource = nested(\r\n      /\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(\r\n        /<STR>/g,\r\n        function () {\r\n          return stringPattern.source\r\n        }\r\n      ),\r\n      8\r\n    )\r\n    var nestedMessage = {\r\n      pattern: RegExp(argumentSource),\r\n      inside: {\r\n        message: {\r\n          pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\r\n          lookbehind: true,\r\n          inside: null // see below\r\n        },\r\n\r\n        'message-delimiter': {\r\n          pattern: /./,\r\n          alias: 'punctuation'\r\n        }\r\n      }\r\n    }\r\n    Prism.languages['icu-message-format'] = {\r\n      argument: {\r\n        pattern: RegExp(argumentSource),\r\n        greedy: true,\r\n        inside: {\r\n          content: {\r\n            pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\r\n            lookbehind: true,\r\n            inside: {\r\n              'argument-name': {\r\n                pattern: /^(\\s*)[^{}:=,\\s]+/,\r\n                lookbehind: true\r\n              },\r\n              'choice-style': {\r\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\r\n                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\r\n                lookbehind: true,\r\n                inside: {\r\n                  punctuation: /\\|/,\r\n                  range: {\r\n                    pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\r\n                    lookbehind: true,\r\n                    inside: {\r\n                      operator: /[<#\\u2264]/,\r\n                      number: /\\S+/\r\n                    }\r\n                  },\r\n                  rest: null // see below\r\n                }\r\n              },\r\n\r\n              'plural-style': {\r\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\r\n                pattern:\r\n                  /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\r\n                lookbehind: true,\r\n                inside: {\r\n                  offset: /^offset:\\s*\\d+/,\r\n                  'nested-message': nestedMessage,\r\n                  selector: {\r\n                    pattern: /=\\d+|[^{}:=,\\s]+/,\r\n                    inside: {\r\n                      keyword: /^(?:few|many|one|other|two|zero)$/\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              'select-style': {\r\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\r\n                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\r\n                lookbehind: true,\r\n                inside: {\r\n                  'nested-message': nestedMessage,\r\n                  selector: {\r\n                    pattern: /[^{}:=,\\s]+/,\r\n                    inside: {\r\n                      keyword: /^other$/\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\r\n              'arg-type': {\r\n                pattern: /\\b(?:date|duration|number|ordinal|spellout|time)\\b/,\r\n                alias: 'keyword'\r\n              },\r\n              'arg-skeleton': {\r\n                pattern: /(,\\s*)::[^{}:=,\\s]+/,\r\n                lookbehind: true\r\n              },\r\n              'arg-style': {\r\n                pattern:\r\n                  /(,\\s*)(?:currency|full|integer|long|medium|percent|short)(?=\\s*$)/,\r\n                lookbehind: true\r\n              },\r\n              'arg-style-text': {\r\n                pattern: RegExp(\r\n                  /(^\\s*,\\s*(?=\\S))/.source +\r\n                    nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) +\r\n                    '$'\r\n                ),\r\n                lookbehind: true,\r\n                alias: 'string'\r\n              },\r\n              punctuation: /,/\r\n            }\r\n          },\r\n          'argument-delimiter': {\r\n            pattern: /./,\r\n            alias: 'operator'\r\n          }\r\n        }\r\n      },\r\n      escape: escape,\r\n      string: string\r\n    }\r\n    nestedMessage.inside.message.inside = Prism.languages['icu-message-format']\r\n    Prism.languages['icu-message-format'].argument.inside.content.inside[\r\n      'choice-style'\r\n    ].inside.rest = Prism.languages['icu-message-format']\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorHaskell from './haskell.js'\r\nidris.displayName = 'idris'\r\nidris.aliases = ['idr']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function idris(Prism) {\r\n  Prism.register(refractorHaskell)\r\n  Prism.languages.idris = Prism.languages.extend('haskell', {\r\n    comment: {\r\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\r\n    },\r\n    keyword:\r\n      /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\r\n    builtin: undefined\r\n  })\r\n  Prism.languages.insertBefore('idris', 'keyword', {\r\n    'import-statement': {\r\n      pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        punctuation: /\\./\r\n      }\r\n    }\r\n  })\r\n  Prism.languages.idr = Prism.languages.idris\r\n}\r\n", "// @ts-nocheck\r\nignore.displayName = 'ignore'\r\nignore.aliases = ['gitignore', 'hgignore', 'npmignore']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function ignore(Prism) {\r\n  ;(function (Prism) {\r\n    Prism.languages.ignore = {\r\n      // https://git-scm.com/docs/gitignore\r\n      comment: /^#.*/m,\r\n      entry: {\r\n        pattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\r\n        alias: 'string',\r\n        inside: {\r\n          operator: /^!|\\*\\*?|\\?/,\r\n          regex: {\r\n            pattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\r\n            lookbehind: true\r\n          },\r\n          punctuation: /\\//\r\n        }\r\n      }\r\n    }\r\n    Prism.languages.gitignore = Prism.languages.ignore\r\n    Prism.languages.hgignore = Prism.languages.ignore\r\n    Prism.languages.npmignore = Prism.languages.ignore\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ninform7.displayName = 'inform7'\r\ninform7.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function inform7(Prism) {\r\n  Prism.languages.inform7 = {\r\n    string: {\r\n      pattern: /\"[^\"]*\"/,\r\n      inside: {\r\n        substitution: {\r\n          pattern: /\\[[^\\[\\]]+\\]/,\r\n          inside: {\r\n            delimiter: {\r\n              pattern: /\\[|\\]/,\r\n              alias: 'punctuation'\r\n            }\r\n            // See rest below\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    comment: {\r\n      pattern: /\\[[^\\[\\]]+\\]/,\r\n      greedy: true\r\n    },\r\n    title: {\r\n      pattern: /^[ \\t]*(?:book|chapter|part(?! of)|section|table|volume)\\b.+/im,\r\n      alias: 'important'\r\n    },\r\n    number: {\r\n      pattern:\r\n        /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?(?:(?!\\d)\\w+)?|\\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\\b(?!-)/i,\r\n      lookbehind: true\r\n    },\r\n    verb: {\r\n      pattern:\r\n        /(^|[^-])\\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\\b(?!-)/i,\r\n      lookbehind: true,\r\n      alias: 'operator'\r\n    },\r\n    keyword: {\r\n      pattern:\r\n        /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\r\n      lookbehind: true\r\n    },\r\n    property: {\r\n      pattern:\r\n        /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\r\n      lookbehind: true,\r\n      alias: 'symbol'\r\n    },\r\n    position: {\r\n      pattern:\r\n        /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\r\n      lookbehind: true,\r\n      alias: 'keyword'\r\n    },\r\n    type: {\r\n      pattern:\r\n        /(^|[^-])\\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\r\n      lookbehind: true,\r\n      alias: 'variable'\r\n    },\r\n    punctuation: /[.,:;(){}]/\r\n  }\r\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest =\r\n    Prism.languages.inform7\r\n  // We don't want the remaining text in the substitution to be highlighted as the string.\r\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\r\n    pattern: /\\S(?:\\s*\\S)*/,\r\n    alias: 'comment'\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nio.displayName = 'io'\r\nio.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function io(Prism) {\r\n  Prism.languages.io = {\r\n    comment: {\r\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*|#.*)/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    'triple-quoted-string': {\r\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\r\n      greedy: true,\r\n      alias: 'string'\r\n    },\r\n    string: {\r\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\r\n    builtin:\r\n      /\\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\\b/,\r\n    boolean: /\\b(?:false|nil|true)\\b/,\r\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?/i,\r\n    operator:\r\n      /[=!*/%+\\-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|\\b(?:and|not|or|return)\\b|@@?|\\?\\??|\\.\\./,\r\n    punctuation: /[{}[\\];(),.:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nj.displayName = 'j'\r\nj.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function j(Prism) {\r\n  Prism.languages.j = {\r\n    comment: {\r\n      pattern: /\\bNB\\..*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /'(?:''|[^'\\r\\n])*'/,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\r\n    verb: {\r\n      // Negative look-ahead prevents bad highlighting\r\n      // of ^: ;. =. =: !. !:\r\n      pattern:\r\n        /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\r\n      alias: 'keyword'\r\n    },\r\n    number:\r\n      /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:ad|ar|[ejpx])_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_\\b(?!\\.))/,\r\n    adverb: {\r\n      pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\r\n      alias: 'builtin'\r\n    },\r\n    operator: /[=a][.:]|_\\./,\r\n    conjunction: {\r\n      pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\r\n      alias: 'variable'\r\n    },\r\n    punctuation: /[()]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\njavadoclike.displayName = 'javadoclike'\r\njavadoclike.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function javadoclike(Prism) {\r\n  ;(function (Prism) {\r\n    var javaDocLike = (Prism.languages.javadoclike = {\r\n      parameter: {\r\n        pattern:\r\n          /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\r\n        lookbehind: true\r\n      },\r\n      keyword: {\r\n        // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\r\n        // @word, {@word}\r\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\r\n        lookbehind: true\r\n      },\r\n      punctuation: /[{}]/\r\n    })\r\n\r\n    /**\r\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\r\n     *\r\n     * @param {string} lang the language add doc comment support to.\r\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\r\n     */\r\n    function docCommentSupport(lang, callback) {\r\n      var tokenName = 'doc-comment'\r\n      var grammar = Prism.languages[lang]\r\n      if (!grammar) {\r\n        return\r\n      }\r\n      var token = grammar[tokenName]\r\n      if (!token) {\r\n        // add doc comment: /** */\r\n        var definition = {}\r\n        definition[tokenName] = {\r\n          pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\r\n          lookbehind: true,\r\n          alias: 'comment'\r\n        }\r\n        grammar = Prism.languages.insertBefore(lang, 'comment', definition)\r\n        token = grammar[tokenName]\r\n      }\r\n      if (token instanceof RegExp) {\r\n        // convert regex to object\r\n        token = grammar[tokenName] = {\r\n          pattern: token\r\n        }\r\n      }\r\n      if (Array.isArray(token)) {\r\n        for (var i = 0, l = token.length; i < l; i++) {\r\n          if (token[i] instanceof RegExp) {\r\n            token[i] = {\r\n              pattern: token[i]\r\n            }\r\n          }\r\n          callback(token[i])\r\n        }\r\n      } else {\r\n        callback(token)\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Adds doc-comment support to the given languages for the given documentation language.\r\n     *\r\n     * @param {string[]|string} languages\r\n     * @param {Object} docLanguage\r\n     */\r\n    function addSupport(languages, docLanguage) {\r\n      if (typeof languages === 'string') {\r\n        languages = [languages]\r\n      }\r\n      languages.forEach(function (lang) {\r\n        docCommentSupport(lang, function (pattern) {\r\n          if (!pattern.inside) {\r\n            pattern.inside = {}\r\n          }\r\n          pattern.inside.rest = docLanguage\r\n        })\r\n      })\r\n    }\r\n    Object.defineProperty(javaDocLike, 'addSupport', {\r\n      value: addSupport\r\n    })\r\n    javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike)\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJava from './java.js'\r\nscala.displayName = 'scala'\r\nscala.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function scala(Prism) {\r\n  Prism.register(refractorJava)\r\n  Prism.languages.scala = Prism.languages.extend('java', {\r\n    'triple-quoted-string': {\r\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\r\n      greedy: true,\r\n      alias: 'string'\r\n    },\r\n    string: {\r\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /<-|=>|\\b(?:abstract|case|catch|class|def|derives|do|else|enum|extends|extension|final|finally|for|forSome|given|if|implicit|import|infix|inline|lazy|match|new|null|object|opaque|open|override|package|private|protected|return|sealed|self|super|this|throw|trait|transparent|try|type|using|val|var|while|with|yield)\\b/,\r\n    number:\r\n      /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\r\n    builtin:\r\n      /\\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\\b/,\r\n    symbol: /'[^\\d\\s\\\\]\\w*/\r\n  })\r\n  Prism.languages.insertBefore('scala', 'triple-quoted-string', {\r\n    'string-interpolation': {\r\n      pattern:\r\n        /\\b[a-z]\\w*(?:\"\"\"(?:[^$]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*?\"\"\"|\"(?:[^$\"\\r\\n]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*\")/i,\r\n      greedy: true,\r\n      inside: {\r\n        id: {\r\n          pattern: /^\\w+/,\r\n          greedy: true,\r\n          alias: 'function'\r\n        },\r\n        escape: {\r\n          pattern: /\\\\\\$\"|\\$[$\"]/,\r\n          greedy: true,\r\n          alias: 'symbol'\r\n        },\r\n        interpolation: {\r\n          pattern: /\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\r\n          greedy: true,\r\n          inside: {\r\n            punctuation: /^\\$\\{?|\\}$/,\r\n            expression: {\r\n              pattern: /[\\s\\S]+/,\r\n              inside: Prism.languages.scala\r\n            }\r\n          }\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    }\r\n  })\r\n  delete Prism.languages.scala['class-name']\r\n  delete Prism.languages.scala['function']\r\n  delete Prism.languages.scala['constant']\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJava from './java.js'\r\nimport refractorJavadoclike from './javadoclike.js'\r\nimport refractorMarkup from './markup.js'\r\njavadoc.displayName = 'javadoc'\r\njavadoc.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function javadoc(Prism) {\r\n  Prism.register(refractorJava)\r\n  Prism.register(refractorJavadoclike)\r\n  Prism.register(refractorMarkup)\r\n  ;(function (Prism) {\r\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\r\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\r\n    var reference =\r\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\r\n        /<mem>/g,\r\n        function () {\r\n          return memberReference\r\n        }\r\n      )\r\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\r\n    Prism.languages.insertBefore('javadoc', 'keyword', {\r\n      reference: {\r\n        pattern: RegExp(\r\n          /(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/\r\n            .source +\r\n            '(?:' +\r\n            reference +\r\n            ')'\r\n        ),\r\n        lookbehind: true,\r\n        inside: {\r\n          function: {\r\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\r\n            lookbehind: true\r\n          },\r\n          field: {\r\n            pattern: /(#\\s*)\\w+/,\r\n            lookbehind: true\r\n          },\r\n          namespace: {\r\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\r\n            inside: {\r\n              punctuation: /\\./\r\n            }\r\n          },\r\n          'class-name': /\\b[A-Z]\\w*/,\r\n          keyword: Prism.languages.java.keyword,\r\n          punctuation: /[#()[\\],.]/\r\n        }\r\n      },\r\n      'class-name': {\r\n        // @param <T> the first generic type parameter\r\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /[.<>]/\r\n        }\r\n      },\r\n      'code-section': [\r\n        {\r\n          pattern:\r\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\r\n          lookbehind: true,\r\n          inside: {\r\n            code: {\r\n              // there can't be any HTML inside of {@code} tags\r\n              pattern: codeLinePattern,\r\n              lookbehind: true,\r\n              inside: Prism.languages.java,\r\n              alias: 'language-java'\r\n            }\r\n          }\r\n        },\r\n        {\r\n          pattern:\r\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\r\n          lookbehind: true,\r\n          inside: {\r\n            line: {\r\n              pattern: codeLinePattern,\r\n              lookbehind: true,\r\n              inside: {\r\n                // highlight HTML tags and entities\r\n                tag: Prism.languages.markup.tag,\r\n                entity: Prism.languages.markup.entity,\r\n                code: {\r\n                  // everything else is Java code\r\n                  pattern: /.+/,\r\n                  inside: Prism.languages.java,\r\n                  alias: 'language-java'\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      tag: Prism.languages.markup.tag,\r\n      entity: Prism.languages.markup.entity\r\n    })\r\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\njavastacktrace.displayName = 'javastacktrace'\r\njavastacktrace.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function javastacktrace(Prism) {\r\n  // Specification:\r\n  // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/Throwable.html#printStackTrace()\r\n\r\n  Prism.languages.javastacktrace = {\r\n    // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\r\n    // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\r\n    // Caused by: com.example.myproject.MyProjectServletException\r\n    // Caused by: MidLevelException: LowLevelException\r\n    // Suppressed: Resource$CloseFailException: Resource ID = 0\r\n    summary: {\r\n      pattern:\r\n        /^([\\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        keyword: {\r\n          pattern:\r\n            /^([\\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\r\n          lookbehind: true\r\n        },\r\n        // the current thread if the summary starts with 'Exception in thread'\r\n        string: {\r\n          pattern: /^(\\s*)\"[^\"]*\"/,\r\n          lookbehind: true\r\n        },\r\n        exceptions: {\r\n          pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\r\n          lookbehind: true,\r\n          inside: {\r\n            'class-name': /[\\w$]+$/,\r\n            namespace: /\\b[a-z]\\w*\\b/,\r\n            punctuation: /\\./\r\n          }\r\n        },\r\n        message: {\r\n          pattern: /(:\\s*)\\S.*/,\r\n          lookbehind: true,\r\n          alias: 'string'\r\n        },\r\n        punctuation: /:/\r\n      }\r\n    },\r\n    // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\r\n    // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\r\n    // at java.base/java.lang.Class.forName0(Native Method)\r\n    // at Util.<init>(Unknown Source)\r\n    // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\r\n    // at com.foo.loader//com.foo.bar.App.run(App.java:12)\r\n    // at acme@2.1/org.acme.Lib.test(Lib.java:80)\r\n    // at MyClass.mash(MyClass.java:9)\r\n    //\r\n    // More information:\r\n    // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\r\n    //\r\n    // A valid Java module name is defined as:\r\n    //   \"A module name consists of one or more Java identifiers (§3.8) separated by \".\" tokens.\"\r\n    // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\r\n    //\r\n    // A Java module version is defined by this class:\r\n    // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\r\n    // This is the implementation of the `parse` method in JDK13:\r\n    // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\r\n    // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\r\n    'stack-frame': {\r\n      pattern: /^([\\t ]*)at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        keyword: {\r\n          pattern: /^(\\s*)at(?= )/,\r\n          lookbehind: true\r\n        },\r\n        source: [\r\n          // (Main.java:15)\r\n          // (Main.scala:15)\r\n          {\r\n            pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\r\n            lookbehind: true,\r\n            inside: {\r\n              file: /^\\w+\\.\\w+/,\r\n              punctuation: /:/,\r\n              'line-number': {\r\n                pattern: /\\b\\d+\\b/,\r\n                alias: 'number'\r\n              }\r\n            }\r\n          },\r\n          // (Unknown Source)\r\n          // (Native Method)\r\n          // (...something...)\r\n          {\r\n            pattern: /(\\()[^()]*(?=\\))/,\r\n            lookbehind: true,\r\n            inside: {\r\n              keyword: /^(?:Native Method|Unknown Source)$/\r\n            }\r\n          }\r\n        ],\r\n        'class-name': /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\r\n        function: /(?:<init>|[\\w$]+)(?=\\()/,\r\n        'class-loader': {\r\n          pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\r\n          lookbehind: true,\r\n          alias: 'namespace',\r\n          inside: {\r\n            punctuation: /\\./\r\n          }\r\n        },\r\n        module: {\r\n          pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\r\n          lookbehind: true,\r\n          inside: {\r\n            version: {\r\n              pattern: /(@)[\\s\\S]+/,\r\n              lookbehind: true,\r\n              alias: 'number'\r\n            },\r\n            punctuation: /[@.]/\r\n          }\r\n        },\r\n        namespace: {\r\n          pattern: /(?:\\b[a-z]\\w*\\.)+/,\r\n          inside: {\r\n            punctuation: /\\./\r\n          }\r\n        },\r\n        punctuation: /[()/.]/\r\n      }\r\n    },\r\n    // ... 32 more\r\n    // ... 32 common frames omitted\r\n    more: {\r\n      pattern: /^([\\t ]*)\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        punctuation: /\\.{3}/,\r\n        number: /\\d+/,\r\n        keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\r\n      }\r\n    }\r\n  }\r\n}\r\n", "// @ts-nocheck\r\njexl.displayName = 'jexl'\r\njexl.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function jexl(Prism) {\r\n  Prism.languages.jexl = {\r\n    string: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\r\n    transform: {\r\n      pattern:\r\n        /(\\|\\s*)[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*/,\r\n      alias: 'function',\r\n      lookbehind: true\r\n    },\r\n    function:\r\n      /[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*\\s*(?=\\()/,\r\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+\\b/,\r\n    operator: /[<>!]=?|-|\\+|&&|==|\\|\\|?|\\/\\/?|[?:*^%]/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    keyword: /\\bin\\b/,\r\n    punctuation: /[{}[\\](),.]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\njolie.displayName = 'jolie'\r\njolie.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function jolie(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.jolie = Prism.languages.extend('clike', {\r\n    string: {\r\n      pattern: /(^|[^\\\\])\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    'class-name': {\r\n      pattern:\r\n        /((?:\\b(?:as|courier|embed|in|inputPort|outputPort|service)\\b|@)[ \\t]*)\\w+/,\r\n      lookbehind: true\r\n    },\r\n    keyword:\r\n      /\\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\\b/,\r\n    function: /\\b[a-z_]\\w*(?=[ \\t]*[@(])/i,\r\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\r\n    operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[?\\/%^@|]/,\r\n    punctuation: /[()[\\]{},;.:]/,\r\n    builtin:\r\n      /\\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\\b/\r\n  })\r\n  Prism.languages.insertBefore('jolie', 'keyword', {\r\n    aggregates: {\r\n      pattern:\r\n        /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\r\n      lookbehind: true,\r\n      inside: {\r\n        keyword: /\\bwith\\b/,\r\n        'class-name': /\\w+/,\r\n        punctuation: /,/\r\n      }\r\n    },\r\n    redirects: {\r\n      pattern:\r\n        /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\r\n      lookbehind: true,\r\n      inside: {\r\n        punctuation: /,/,\r\n        'class-name': /\\w+/,\r\n        operator: /=>/\r\n      }\r\n    },\r\n    property: {\r\n      pattern:\r\n        /\\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\\b(?=[ \\t]*:)/\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\njq.displayName = 'jq'\r\njq.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function jq(Prism) {\r\n  ;(function (Prism) {\r\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\r\n    var string = RegExp(\r\n      /(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(\r\n        /__/g,\r\n        function () {\r\n          return interpolation\r\n        }\r\n      )\r\n    )\r\n    var stringInterpolation = {\r\n      interpolation: {\r\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\r\n        lookbehind: true,\r\n        inside: {\r\n          content: {\r\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\r\n            lookbehind: true,\r\n            inside: null // see below\r\n          },\r\n\r\n          punctuation: /^\\\\\\(|\\)$/\r\n        }\r\n      }\r\n    }\r\n    var jq = (Prism.languages.jq = {\r\n      comment: /#.*/,\r\n      property: {\r\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: stringInterpolation\r\n      },\r\n      string: {\r\n        pattern: string,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: stringInterpolation\r\n      },\r\n      function: {\r\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\r\n        lookbehind: true\r\n      },\r\n      variable: /\\B\\$\\w+/,\r\n      'property-literal': {\r\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\r\n        alias: 'property'\r\n      },\r\n      keyword:\r\n        /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\r\n      operator: [\r\n        {\r\n          pattern: /\\|=?/,\r\n          alias: 'pipe'\r\n        },\r\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/\r\n      ],\r\n      'c-style-function': {\r\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n        alias: 'function'\r\n      },\r\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\r\n      dot: {\r\n        pattern: /\\./,\r\n        alias: 'important'\r\n      }\r\n    })\r\n    stringInterpolation.interpolation.inside.content.inside = jq\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJavascript from './javascript.js'\r\njsTemplates.displayName = 'js-templates'\r\njsTemplates.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function jsTemplates(Prism) {\r\n  Prism.register(refractorJavascript)\r\n  ;(function (Prism) {\r\n    var templateString = Prism.languages.javascript['template-string']\r\n\r\n    // see the pattern in prism-javascript.js\r\n    var templateLiteralPattern = templateString.pattern.source\r\n    var interpolationObject = templateString.inside['interpolation']\r\n    var interpolationPunctuationObject =\r\n      interpolationObject.inside['interpolation-punctuation']\r\n    var interpolationPattern = interpolationObject.pattern.source\r\n\r\n    /**\r\n     * Creates a new pattern to match a template string with a special tag.\r\n     *\r\n     * This will return `undefined` if there is no grammar with the given language id.\r\n     *\r\n     * @param {string} language The language id of the embedded language. E.g. `markdown`.\r\n     * @param {string} tag The regex pattern to match the tag.\r\n     * @returns {object | undefined}\r\n     * @example\r\n     * createTemplate('css', /\\bcss/.source);\r\n     */\r\n    function createTemplate(language, tag) {\r\n      if (!Prism.languages[language]) {\r\n        return undefined\r\n      }\r\n      return {\r\n        pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          'template-punctuation': {\r\n            pattern: /^`|`$/,\r\n            alias: 'string'\r\n          },\r\n          'embedded-code': {\r\n            pattern: /[\\s\\S]+/,\r\n            alias: language\r\n          }\r\n        }\r\n      }\r\n    }\r\n    Prism.languages.javascript['template-string'] = [\r\n      // styled-jsx:\r\n      //   css`a { color: #25F; }`\r\n      // styled-components:\r\n      //   styled.h1`color: red;`\r\n      createTemplate(\r\n        'css',\r\n        /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/\r\n          .source\r\n      ),\r\n      // html`<p></p>`\r\n      // div.innerHTML = `<p></p>`\r\n      createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source),\r\n      // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\r\n      createTemplate('svg', /\\bsvg/.source),\r\n      // md`# h1`, markdown`## h2`\r\n      createTemplate('markdown', /\\b(?:markdown|md)/.source),\r\n      // gql`...`, graphql`...`, graphql.experimental`...`\r\n      createTemplate(\r\n        'graphql',\r\n        /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source\r\n      ),\r\n      // sql`...`\r\n      createTemplate('sql', /\\bsql/.source),\r\n      // vanilla template string\r\n      templateString\r\n    ].filter(Boolean)\r\n\r\n    /**\r\n     * Returns a specific placeholder literal for the given language.\r\n     *\r\n     * @param {number} counter\r\n     * @param {string} language\r\n     * @returns {string}\r\n     */\r\n    function getPlaceholder(counter, language) {\r\n      return '___' + language.toUpperCase() + '_' + counter + '___'\r\n    }\r\n\r\n    /**\r\n     * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\r\n     *\r\n     * @param {string} code\r\n     * @param {any} grammar\r\n     * @param {string} language\r\n     * @returns {(string|Token)[]}\r\n     */\r\n    function tokenizeWithHooks(code, grammar, language) {\r\n      var env = {\r\n        code: code,\r\n        grammar: grammar,\r\n        language: language\r\n      }\r\n      Prism.hooks.run('before-tokenize', env)\r\n      env.tokens = Prism.tokenize(env.code, env.grammar)\r\n      Prism.hooks.run('after-tokenize', env)\r\n      return env.tokens\r\n    }\r\n\r\n    /**\r\n     * Returns the token of the given JavaScript interpolation expression.\r\n     *\r\n     * @param {string} expression The code of the expression. E.g. `\"${42}\"`\r\n     * @returns {Token}\r\n     */\r\n    function tokenizeInterpolationExpression(expression) {\r\n      var tempGrammar = {}\r\n      tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject\r\n\r\n      /** @type {Array} */\r\n      var tokens = Prism.tokenize(expression, tempGrammar)\r\n      if (tokens.length === 3) {\r\n        /**\r\n         * The token array will look like this\r\n         * [\r\n         *     [\"interpolation-punctuation\", \"${\"]\r\n         *     \"...\" // JavaScript expression of the interpolation\r\n         *     [\"interpolation-punctuation\", \"}\"]\r\n         * ]\r\n         */\r\n\r\n        var args = [1, 1]\r\n        args.push.apply(\r\n          args,\r\n          tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript')\r\n        )\r\n        tokens.splice.apply(tokens, args)\r\n      }\r\n      return new Prism.Token(\r\n        'interpolation',\r\n        tokens,\r\n        interpolationObject.alias,\r\n        expression\r\n      )\r\n    }\r\n\r\n    /**\r\n     * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\r\n     *\r\n     * This function has 3 phases:\r\n     *\r\n     * 1. Replace all JavaScript interpolation expression with a placeholder.\r\n     *    The placeholder will have the syntax of a identify of the target language.\r\n     * 2. Tokenize the code with placeholders.\r\n     * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\r\n     *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\r\n     *    tokenized as two tokens by the grammar of the embedded language.\r\n     *\r\n     * @param {string} code\r\n     * @param {object} grammar\r\n     * @param {string} language\r\n     * @returns {Token}\r\n     */\r\n    function tokenizeEmbedded(code, grammar, language) {\r\n      // 1. First filter out all interpolations\r\n\r\n      // because they might be escaped, we need a lookbehind, so we use Prism\r\n      /** @type {(Token|string)[]} */\r\n      var _tokens = Prism.tokenize(code, {\r\n        interpolation: {\r\n          pattern: RegExp(interpolationPattern),\r\n          lookbehind: true\r\n        }\r\n      })\r\n\r\n      // replace all interpolations with a placeholder which is not in the code already\r\n      var placeholderCounter = 0\r\n      /** @type {Object<string, string>} */\r\n      var placeholderMap = {}\r\n      var embeddedCode = _tokens\r\n        .map(function (token) {\r\n          if (typeof token === 'string') {\r\n            return token\r\n          } else {\r\n            var interpolationExpression = token.content\r\n            var placeholder\r\n            while (\r\n              code.indexOf(\r\n                (placeholder = getPlaceholder(placeholderCounter++, language))\r\n              ) !== -1\r\n            ) {\r\n              /* noop */\r\n            }\r\n            placeholderMap[placeholder] = interpolationExpression\r\n            return placeholder\r\n          }\r\n        })\r\n        .join('')\r\n\r\n      // 2. Tokenize the embedded code\r\n\r\n      var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language)\r\n\r\n      // 3. Re-insert the interpolation\r\n\r\n      var placeholders = Object.keys(placeholderMap)\r\n      placeholderCounter = 0\r\n\r\n      /**\r\n       *\r\n       * @param {(Token|string)[]} tokens\r\n       * @returns {void}\r\n       */\r\n      function walkTokens(tokens) {\r\n        for (var i = 0; i < tokens.length; i++) {\r\n          if (placeholderCounter >= placeholders.length) {\r\n            return\r\n          }\r\n          var token = tokens[i]\r\n          if (typeof token === 'string' || typeof token.content === 'string') {\r\n            var placeholder = placeholders[placeholderCounter]\r\n            var s =\r\n              typeof token === 'string'\r\n                ? token\r\n                : /** @type {string} */ token.content\r\n            var index = s.indexOf(placeholder)\r\n            if (index !== -1) {\r\n              ++placeholderCounter\r\n              var before = s.substring(0, index)\r\n              var middle = tokenizeInterpolationExpression(\r\n                placeholderMap[placeholder]\r\n              )\r\n              var after = s.substring(index + placeholder.length)\r\n              var replacement = []\r\n              if (before) {\r\n                replacement.push(before)\r\n              }\r\n              replacement.push(middle)\r\n              if (after) {\r\n                var afterTokens = [after]\r\n                walkTokens(afterTokens)\r\n                replacement.push.apply(replacement, afterTokens)\r\n              }\r\n              if (typeof token === 'string') {\r\n                tokens.splice.apply(tokens, [i, 1].concat(replacement))\r\n                i += replacement.length - 1\r\n              } else {\r\n                token.content = replacement\r\n              }\r\n            }\r\n          } else {\r\n            var content = token.content\r\n            if (Array.isArray(content)) {\r\n              walkTokens(content)\r\n            } else {\r\n              walkTokens([content])\r\n            }\r\n          }\r\n        }\r\n      }\r\n      walkTokens(embeddedTokens)\r\n      return new Prism.Token(\r\n        language,\r\n        embeddedTokens,\r\n        'language-' + language,\r\n        code\r\n      )\r\n    }\r\n\r\n    /**\r\n     * The languages for which JS templating will handle tagged template literals.\r\n     *\r\n     * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\r\n     */\r\n    var supportedLanguages = {\r\n      javascript: true,\r\n      js: true,\r\n      typescript: true,\r\n      ts: true,\r\n      jsx: true,\r\n      tsx: true\r\n    }\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      if (!(env.language in supportedLanguages)) {\r\n        return\r\n      }\r\n\r\n      /**\r\n       * Finds and tokenizes all template strings with an embedded languages.\r\n       *\r\n       * @param {(Token | string)[]} tokens\r\n       * @returns {void}\r\n       */\r\n      function findTemplateStrings(tokens) {\r\n        for (var i = 0, l = tokens.length; i < l; i++) {\r\n          var token = tokens[i]\r\n          if (typeof token === 'string') {\r\n            continue\r\n          }\r\n          var content = token.content\r\n          if (!Array.isArray(content)) {\r\n            if (typeof content !== 'string') {\r\n              findTemplateStrings([content])\r\n            }\r\n            continue\r\n          }\r\n          if (token.type === 'template-string') {\r\n            /**\r\n             * A JavaScript template-string token will look like this:\r\n             *\r\n             * [\"template-string\", [\r\n             *     [\"template-punctuation\", \"`\"],\r\n             *     (\r\n             *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\r\n             *         or\r\n             *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\r\n             *                                  It also has an alias which is the language of the embedded code.\r\n             *     ),\r\n             *     [\"template-punctuation\", \"`\"]\r\n             * ]]\r\n             */\r\n\r\n            var embedded = content[1]\r\n            if (\r\n              content.length === 3 &&\r\n              typeof embedded !== 'string' &&\r\n              embedded.type === 'embedded-code'\r\n            ) {\r\n              // get string content\r\n              var code = stringContent(embedded)\r\n              var alias = embedded.alias\r\n              var language = Array.isArray(alias) ? alias[0] : alias\r\n              var grammar = Prism.languages[language]\r\n              if (!grammar) {\r\n                // the embedded language isn't registered.\r\n                continue\r\n              }\r\n              content[1] = tokenizeEmbedded(code, grammar, language)\r\n            }\r\n          } else {\r\n            findTemplateStrings(content)\r\n          }\r\n        }\r\n      }\r\n      findTemplateStrings(env.tokens)\r\n    })\r\n\r\n    /**\r\n     * Returns the string content of a token or token stream.\r\n     *\r\n     * @param {string | Token | (string | Token)[]} value\r\n     * @returns {string}\r\n     */\r\n    function stringContent(value) {\r\n      if (typeof value === 'string') {\r\n        return value\r\n      } else if (Array.isArray(value)) {\r\n        return value.map(stringContent).join('')\r\n      } else {\r\n        return stringContent(value.content)\r\n      }\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJavadoclike from './javadoclike.js'\r\nimport refractorJavascript from './javascript.js'\r\nimport refractorTypescript from './typescript.js'\r\njsdoc.displayName = 'jsdoc'\r\njsdoc.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function jsdoc(Prism) {\r\n  Prism.register(refractorJavadoclike)\r\n  Prism.register(refractorJavascript)\r\n  Prism.register(refractorTypescript)\r\n  ;(function (Prism) {\r\n    var javascript = Prism.languages.javascript\r\n    var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source\r\n    var parameterPrefix =\r\n      '(@(?:arg|argument|param|property)\\\\s+(?:' + type + '\\\\s+)?)'\r\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\r\n      parameter: {\r\n        // @param {string} foo - foo bar\r\n        pattern: RegExp(\r\n          parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source\r\n        ),\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /\\./\r\n        }\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\r\n      'optional-parameter': {\r\n        // @param {string} [baz.foo=\"bar\"] foo bar\r\n        pattern: RegExp(\r\n          parameterPrefix +\r\n            /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\r\n        ),\r\n        lookbehind: true,\r\n        inside: {\r\n          parameter: {\r\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\r\n            lookbehind: true,\r\n            inside: {\r\n              punctuation: /\\./\r\n            }\r\n          },\r\n          code: {\r\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\r\n            lookbehind: true,\r\n            inside: javascript,\r\n            alias: 'language-javascript'\r\n          },\r\n          punctuation: /[=[\\]]/\r\n        }\r\n      },\r\n      'class-name': [\r\n        {\r\n          pattern: RegExp(\r\n            /(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(\r\n              /<TYPE>/g,\r\n              function () {\r\n                return type\r\n              }\r\n            )\r\n          ),\r\n          lookbehind: true,\r\n          inside: {\r\n            punctuation: /\\./\r\n          }\r\n        },\r\n        {\r\n          pattern: RegExp('(@[a-z]+\\\\s+)' + type),\r\n          lookbehind: true,\r\n          inside: {\r\n            string: javascript.string,\r\n            number: javascript.number,\r\n            boolean: javascript.boolean,\r\n            keyword: Prism.languages.typescript.keyword,\r\n            operator: /=>|\\.\\.\\.|[&|?:*]/,\r\n            punctuation: /[.,;=<>{}()[\\]]/\r\n          }\r\n        }\r\n      ],\r\n      example: {\r\n        pattern:\r\n          /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\r\n        lookbehind: true,\r\n        inside: {\r\n          code: {\r\n            pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\r\n            lookbehind: true,\r\n            inside: javascript,\r\n            alias: 'language-javascript'\r\n          }\r\n        }\r\n      }\r\n    })\r\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc)\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJavascript from './javascript.js'\r\nn4js.displayName = 'n4js'\r\nn4js.aliases = ['n4jsd']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function n4js(Prism) {\r\n  Prism.register(refractorJavascript)\r\n  Prism.languages.n4js = Prism.languages.extend('javascript', {\r\n    // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\r\n    keyword:\r\n      /\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\r\n  })\r\n  Prism.languages.insertBefore('n4js', 'constant', {\r\n    // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\r\n    annotation: {\r\n      pattern: /@+\\w+/,\r\n      alias: 'operator'\r\n    }\r\n  })\r\n  Prism.languages.n4jsd = Prism.languages.n4js\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJavascript from './javascript.js'\r\njsExtras.displayName = 'js-extras'\r\njsExtras.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function jsExtras(Prism) {\r\n  Prism.register(refractorJavascript)\r\n  ;(function (Prism) {\r\n    Prism.languages.insertBefore('javascript', 'function-variable', {\r\n      'method-variable': {\r\n        pattern: RegExp(\r\n          '(\\\\.\\\\s*)' +\r\n            Prism.languages.javascript['function-variable'].pattern.source\r\n        ),\r\n        lookbehind: true,\r\n        alias: ['function-variable', 'method', 'function', 'property-access']\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('javascript', 'function', {\r\n      method: {\r\n        pattern: RegExp(\r\n          '(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source\r\n        ),\r\n        lookbehind: true,\r\n        alias: ['function', 'property-access']\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('javascript', 'constant', {\r\n      'known-class-name': [\r\n        {\r\n          // standard built-ins\r\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\r\n          pattern:\r\n            /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\r\n          alias: 'class-name'\r\n        },\r\n        {\r\n          // errors\r\n          pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\r\n          alias: 'class-name'\r\n        }\r\n      ]\r\n    })\r\n\r\n    /**\r\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\r\n     *\r\n     * @param {string} source\r\n     * @param {string} [flags]\r\n     * @returns {RegExp}\r\n     */\r\n    function withId(source, flags) {\r\n      return RegExp(\r\n        source.replace(/<ID>/g, function () {\r\n          return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source\r\n        }),\r\n        flags\r\n      )\r\n    }\r\n    Prism.languages.insertBefore('javascript', 'keyword', {\r\n      imports: {\r\n        // https://tc39.es/ecma262/#sec-imports\r\n        pattern: withId(\r\n          /(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/\r\n            .source\r\n        ),\r\n        lookbehind: true,\r\n        inside: Prism.languages.javascript\r\n      },\r\n      exports: {\r\n        // https://tc39.es/ecma262/#sec-exports\r\n        pattern: withId(\r\n          /(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/\r\n            .source\r\n        ),\r\n        lookbehind: true,\r\n        inside: Prism.languages.javascript\r\n      }\r\n    })\r\n    Prism.languages.javascript['keyword'].unshift(\r\n      {\r\n        pattern: /\\b(?:as|default|export|from|import)\\b/,\r\n        alias: 'module'\r\n      },\r\n      {\r\n        pattern:\r\n          /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\r\n        alias: 'control-flow'\r\n      },\r\n      {\r\n        pattern: /\\bnull\\b/,\r\n        alias: ['null', 'nil']\r\n      },\r\n      {\r\n        pattern: /\\bundefined\\b/,\r\n        alias: 'nil'\r\n      }\r\n    )\r\n    Prism.languages.insertBefore('javascript', 'operator', {\r\n      spread: {\r\n        pattern: /\\.{3}/,\r\n        alias: 'operator'\r\n      },\r\n      arrow: {\r\n        pattern: /=>/,\r\n        alias: 'operator'\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('javascript', 'punctuation', {\r\n      'property-access': {\r\n        pattern: withId(/(\\.\\s*)#?<ID>/.source),\r\n        lookbehind: true\r\n      },\r\n      'maybe-class-name': {\r\n        pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\r\n        lookbehind: true\r\n      },\r\n      dom: {\r\n        // this contains only a few commonly used DOM variables\r\n        pattern:\r\n          /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\r\n        alias: 'variable'\r\n      },\r\n      console: {\r\n        pattern: /\\bconsole(?=\\s*\\.)/,\r\n        alias: 'class-name'\r\n      }\r\n    })\r\n\r\n    // add 'maybe-class-name' to tokens which might be a class name\r\n    var maybeClassNameTokens = [\r\n      'function',\r\n      'function-variable',\r\n      'method',\r\n      'method-variable',\r\n      'property-access'\r\n    ]\r\n    for (var i = 0; i < maybeClassNameTokens.length; i++) {\r\n      var token = maybeClassNameTokens[i]\r\n      var value = Prism.languages.javascript[token]\r\n\r\n      // convert regex to object\r\n      if (Prism.util.type(value) === 'RegExp') {\r\n        value = Prism.languages.javascript[token] = {\r\n          pattern: value\r\n        }\r\n      }\r\n\r\n      // keep in mind that we don't support arrays\r\n\r\n      var inside = value.inside || {}\r\n      value.inside = inside\r\n      inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJson from './json.js'\r\njson5.displayName = 'json5'\r\njson5.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function json5(Prism) {\r\n  Prism.register(refractorJson)\r\n  ;(function (Prism) {\r\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\r\n    Prism.languages.json5 = Prism.languages.extend('json', {\r\n      property: [\r\n        {\r\n          pattern: RegExp(string.source + '(?=\\\\s*:)'),\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern:\r\n            /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\r\n          alias: 'unquoted'\r\n        }\r\n      ],\r\n      string: {\r\n        pattern: string,\r\n        greedy: true\r\n      },\r\n      number:\r\n        /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJson from './json.js'\r\njsonp.displayName = 'jsonp'\r\njsonp.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function jsonp(Prism) {\r\n  Prism.register(refractorJson)\r\n  Prism.languages.jsonp = Prism.languages.extend('json', {\r\n    punctuation: /[{}[\\]();,.]/\r\n  })\r\n  Prism.languages.insertBefore('jsonp', 'punctuation', {\r\n    function: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*\\()/\r\n  })\r\n}\r\n", "// @ts-nocheck\r\njsstacktrace.displayName = 'jsstacktrace'\r\njsstacktrace.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function jsstacktrace(Prism) {\r\n  Prism.languages.jsstacktrace = {\r\n    'error-message': {\r\n      pattern: /^\\S.*/m,\r\n      alias: 'string'\r\n    },\r\n    'stack-frame': {\r\n      pattern: /(^[ \\t]+)at[ \\t].*/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        'not-my-code': {\r\n          pattern:\r\n            /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\r\n          alias: 'comment'\r\n        },\r\n        filename: {\r\n          pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\r\n          lookbehind: true,\r\n          alias: 'url'\r\n        },\r\n        function: {\r\n          pattern:\r\n            /(\\bat\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\r\n          lookbehind: true,\r\n          inside: {\r\n            punctuation: /\\./\r\n          }\r\n        },\r\n        punctuation: /[()]/,\r\n        keyword: /\\b(?:at|new)\\b/,\r\n        alias: {\r\n          pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\r\n          alias: 'variable'\r\n        },\r\n        'line-number': {\r\n          pattern: /:\\d+(?::\\d+)?\\b/,\r\n          alias: 'number',\r\n          inside: {\r\n            punctuation: /:/\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n", "// @ts-nocheck\r\njulia.displayName = 'julia'\r\njulia.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function julia(Prism) {\r\n  Prism.languages.julia = {\r\n    comment: {\r\n      // support one level of nested comments\r\n      // https://github.com/JuliaLang/julia/pull/6128\r\n      pattern:\r\n        /(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,\r\n      lookbehind: true\r\n    },\r\n    regex: {\r\n      // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1\r\n      pattern: /r\"(?:\\\\.|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1\r\n      // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1\r\n      // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1\r\n      pattern:\r\n        /\"\"\"[\\s\\S]+?\"\"\"|(?:\\b\\w+)?\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`(?:[^\\\\`\\r\\n]|\\\\.)*`/,\r\n      greedy: true\r\n    },\r\n    char: {\r\n      // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1\r\n      pattern: /(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    number:\r\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i,\r\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/\r\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1\r\n    operator:\r\n      /&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,\r\n    punctuation: /::?|[{}[\\]();,.?]/,\r\n    // https://docs.julialang.org/en/v1/base/numbers/#Base.im\r\n    constant: /\\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\\b|[πℯ]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nkeepalived.displayName = 'keepalived'\r\nkeepalived.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function keepalived(Prism) {\r\n  Prism.languages.keepalived = {\r\n    comment: {\r\n      pattern: /[#!].*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern:\r\n        /(^|[^\\\\])(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    // support IPv4, IPv6, subnet mask\r\n    ip: {\r\n      pattern: RegExp(\r\n        /\\b(?:(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){5}:(?:[\\da-f]{1,4}:)?[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){4}:(?:[\\da-f]{1,4}:){0,2}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){3}:(?:[\\da-f]{1,4}:){0,3}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){2}:(?:[\\da-f]{1,4}:){0,4}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}<ipv4>|(?:[\\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\\da-f]{1,4}:){0,5}<ipv4>|[\\da-f]{1,4}::(?:[\\da-f]{1,4}:){0,5}[\\da-f]{1,4}|::(?:[\\da-f]{1,4}:){0,6}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:)(?:\\/\\d{1,3})?|<ipv4>(?:\\/\\d{1,2})?)\\b/.source.replace(\r\n          /<ipv4>/g,\r\n          function () {\r\n            return /(?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d))/\r\n              .source\r\n          }\r\n        ),\r\n        'i'\r\n      ),\r\n      alias: 'number'\r\n    },\r\n    // support *nix / Windows, directory / file\r\n    path: {\r\n      pattern:\r\n        /(\\s)\\/(?:[^\\/\\s]+\\/)*[^\\/\\s]*|\\b[a-zA-Z]:\\\\(?:[^\\\\\\s]+\\\\)*[^\\\\\\s]*/,\r\n      lookbehind: true,\r\n      alias: 'string'\r\n    },\r\n    variable: /\\$\\{?\\w+\\}?/,\r\n    email: {\r\n      pattern: /[\\w-]+@[\\w-]+(?:\\.[\\w-]{2,3}){1,2}/,\r\n      alias: 'string'\r\n    },\r\n    'conditional-configuration': {\r\n      pattern: /@\\^?[\\w-]+/,\r\n      alias: 'variable'\r\n    },\r\n    operator: /=/,\r\n    property:\r\n      /\\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\\b/,\r\n    constant:\r\n      /\\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\\b/,\r\n    number: {\r\n      pattern: /(^|[^\\w.-])-?\\d+(?:\\.\\d+)?/,\r\n      lookbehind: true\r\n    },\r\n    boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\r\n    punctuation: /[\\{\\}]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nkeyman.displayName = 'keyman'\r\nkeyman.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function keyman(Prism) {\r\n  Prism.languages.keyman = {\r\n    comment: {\r\n      pattern: /\\bc .*/i,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\r\n      greedy: true\r\n    },\r\n    'virtual-key': {\r\n      pattern:\r\n        /\\[\\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\\s+)*(?:[TKU]_[\\w?]+|[A-E]\\d\\d?|\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*\\]/i,\r\n      greedy: true,\r\n      alias: 'function' // alias for styles\r\n    },\r\n\r\n    // https://help.keyman.com/developer/language/guide/headers\r\n    'header-keyword': {\r\n      pattern: /&\\w+/,\r\n      alias: 'bold' // alias for styles\r\n    },\r\n\r\n    'header-statement': {\r\n      pattern:\r\n        /\\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\\b/i,\r\n      alias: 'bold' // alias for styles\r\n    },\r\n\r\n    'rule-keyword': {\r\n      pattern:\r\n        /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\\b/i,\r\n      alias: 'keyword'\r\n    },\r\n    'structural-keyword': {\r\n      pattern:\r\n        /\\b(?:ansi|begin|group|match|newcontext|nomatch|postkeystroke|readonly|unicode|using keys)\\b/i,\r\n      alias: 'keyword'\r\n    },\r\n    'compile-target': {\r\n      pattern: /\\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,\r\n      alias: 'property'\r\n    },\r\n    // U+####, x###, d### characters and numbers\r\n    number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\r\n    operator: /[+>\\\\$]|\\.\\./,\r\n    punctuation: /[()=,]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nkumir.displayName = 'kumir'\r\nkumir.aliases = ['kum']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function kumir(Prism) {\r\n  /* eslint-disable regexp/no-dupe-characters-character-class */\r\n  ;(function (Prism) {\r\n    /**\r\n     * Regular expression for characters that are not allowed in identifiers.\r\n     *\r\n     * @type {string}\r\n     */\r\n    var nonId = /\\s\\x00-\\x1f\\x22-\\x2f\\x3a-\\x3f\\x5b-\\x5e\\x60\\x7b-\\x7e/.source\r\n\r\n    /**\r\n     * Surround a regular expression for IDs with patterns for non-ID sequences.\r\n     *\r\n     * @param {string} pattern A regular expression for identifiers.\r\n     * @param {string} [flags] The regular expression flags.\r\n     * @returns {RegExp} A wrapped regular expression for identifiers.\r\n     */\r\n    function wrapId(pattern, flags) {\r\n      return RegExp(pattern.replace(/<nonId>/g, nonId), flags)\r\n    }\r\n    Prism.languages.kumir = {\r\n      comment: {\r\n        pattern: /\\|.*/\r\n      },\r\n      prolog: {\r\n        pattern: /#.*/,\r\n        greedy: true\r\n      },\r\n      string: {\r\n        pattern: /\"[^\\n\\r\"]*\"|'[^\\n\\r']*'/,\r\n        greedy: true\r\n      },\r\n      boolean: {\r\n        pattern: wrapId(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),\r\n        lookbehind: true\r\n      },\r\n      'operator-word': {\r\n        pattern: wrapId(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),\r\n        lookbehind: true,\r\n        alias: 'keyword'\r\n      },\r\n      'system-variable': {\r\n        pattern: wrapId(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),\r\n        lookbehind: true,\r\n        alias: 'keyword'\r\n      },\r\n      type: [\r\n        {\r\n          pattern: wrapId(\r\n            /(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\\x20*таб)?(?=[<nonId>]|$)/\r\n              .source\r\n          ),\r\n          lookbehind: true,\r\n          alias: 'builtin'\r\n        },\r\n        {\r\n          pattern: wrapId(\r\n            /(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source\r\n          ),\r\n          lookbehind: true,\r\n          alias: 'important'\r\n        }\r\n      ],\r\n      /**\r\n       * Should be performed after searching for type names because of \"таб\".\r\n       * \"таб\" is a reserved word, but never used without a preceding type name.\r\n       * \"НАЗНАЧИТЬ\", \"Фввод\", and \"Фвывод\" are not reserved words.\r\n       */\r\n      keyword: {\r\n        pattern: wrapId(\r\n          /(^|[<nonId>])(?:алг|арг(?:\\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\\x20+|_)исп)?|кц(?:(?:\\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/\r\n            .source\r\n        ),\r\n        lookbehind: true\r\n      },\r\n      /** Should be performed after searching for reserved words. */\r\n      name: {\r\n        // eslint-disable-next-line regexp/no-super-linear-backtracking\r\n        pattern: wrapId(\r\n          /(^|[<nonId>])[^\\d<nonId>][^<nonId>]*(?:\\x20+[^<nonId>]+)*(?=[<nonId>]|$)/\r\n            .source\r\n        ),\r\n        lookbehind: true\r\n      },\r\n      /** Should be performed after searching for names. */\r\n      number: {\r\n        pattern: wrapId(\r\n          /(^|[<nonId>])(?:\\B\\$[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?=[<nonId>]|$)/\r\n            .source,\r\n          'i'\r\n        ),\r\n        lookbehind: true\r\n      },\r\n      /** Should be performed after searching for words. */\r\n      punctuation: /:=|[(),:;\\[\\]]/,\r\n      /**\r\n       * Should be performed after searching for\r\n       * - numeric constants (because of \"+\" and \"-\");\r\n       * - punctuation marks (because of \":=\" and \"=\").\r\n       */\r\n      'operator-char': {\r\n        pattern: /\\*\\*?|<[=>]?|>=?|[-+/=]/,\r\n        alias: 'operator'\r\n      }\r\n    }\r\n    Prism.languages.kum = Prism.languages.kumir\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nkusto.displayName = 'kusto'\r\nkusto.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function kusto(Prism) {\r\n  Prism.languages.kusto = {\r\n    comment: {\r\n      pattern: /\\/\\/.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern:\r\n        /```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,\r\n      greedy: true\r\n    },\r\n    verb: {\r\n      pattern: /(\\|\\s*)[a-z][\\w-]*/i,\r\n      lookbehind: true,\r\n      alias: 'keyword'\r\n    },\r\n    command: {\r\n      pattern: /\\.[a-z][a-z\\d-]*\\b/,\r\n      alias: 'keyword'\r\n    },\r\n    'class-name':\r\n      /\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,\r\n    keyword:\r\n      /\\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,\r\n    boolean: /\\b(?:false|null|true)\\b/,\r\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/,\r\n    datetime: [\r\n      {\r\n        // RFC 822 + RFC 850\r\n        pattern:\r\n          /\\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\\d{4}))?\\b/,\r\n        alias: 'number'\r\n      },\r\n      {\r\n        // ISO 8601\r\n        pattern:\r\n          /[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,\r\n        alias: 'number'\r\n      }\r\n    ],\r\n    number:\r\n      /\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\\b)?|[+-]?\\binf\\b/,\r\n    operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,\r\n    punctuation: /[()\\[\\]{},;.:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nlatex.displayName = 'latex'\r\nlatex.aliases = ['context', 'tex']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function latex(Prism) {\r\n  ;(function (Prism) {\r\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i\r\n    var insideEqu = {\r\n      'equation-command': {\r\n        pattern: funcPattern,\r\n        alias: 'regex'\r\n      }\r\n    }\r\n    Prism.languages.latex = {\r\n      comment: /%.*/,\r\n      // the verbatim environment prints whitespace to the document\r\n      cdata: {\r\n        pattern:\r\n          /(\\\\begin\\{((?:lstlisting|verbatim)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\r\n        lookbehind: true\r\n      },\r\n      /*\r\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\r\n       * (all are multiline)\r\n       */\r\n      equation: [\r\n        {\r\n          pattern:\r\n            /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\r\n          inside: insideEqu,\r\n          alias: 'string'\r\n        },\r\n        {\r\n          pattern:\r\n            /(\\\\begin\\{((?:align|eqnarray|equation|gather|math|multline)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\r\n          lookbehind: true,\r\n          inside: insideEqu,\r\n          alias: 'string'\r\n        }\r\n      ],\r\n      /*\r\n       * arguments which are keywords or references are highlighted\r\n       * as keywords\r\n       */\r\n      keyword: {\r\n        pattern:\r\n          /(\\\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\r\n        lookbehind: true\r\n      },\r\n      url: {\r\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\r\n        lookbehind: true\r\n      },\r\n      /*\r\n       * section or chapter headlines are highlighted as bold so that\r\n       * they stand out more\r\n       */\r\n      headline: {\r\n        pattern:\r\n          /(\\\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\r\n        lookbehind: true,\r\n        alias: 'class-name'\r\n      },\r\n      function: {\r\n        pattern: funcPattern,\r\n        alias: 'selector'\r\n      },\r\n      punctuation: /[[\\]{}&]/\r\n    }\r\n    Prism.languages.tex = Prism.languages.latex\r\n    Prism.languages.context = Prism.languages.latex\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nimport refractorMarkupTemplating from './markup-templating.js'\r\nimport refractorPhp from './php.js'\r\nlatte.displayName = 'latte'\r\nlatte.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function latte(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.register(refractorMarkupTemplating)\r\n  Prism.register(refractorPhp)\r\n  ;(function (Prism) {\r\n    Prism.languages.latte = {\r\n      comment: /^\\{\\*[\\s\\S]*/,\r\n      'latte-tag': {\r\n        // https://latte.nette.org/en/tags\r\n        pattern: /(^\\{(?:\\/(?=[a-z]))?)(?:[=_]|[a-z]\\w*\\b(?!\\())/i,\r\n        lookbehind: true,\r\n        alias: 'important'\r\n      },\r\n      delimiter: {\r\n        pattern: /^\\{\\/?|\\}$/,\r\n        alias: 'punctuation'\r\n      },\r\n      php: {\r\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\r\n        alias: 'language-php',\r\n        inside: Prism.languages.php\r\n      }\r\n    }\r\n    var markupLatte = Prism.languages.extend('markup', {})\r\n    Prism.languages.insertBefore(\r\n      'inside',\r\n      'attr-value',\r\n      {\r\n        'n-attr': {\r\n          pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\r\n          inside: {\r\n            'attr-name': {\r\n              pattern: /^[^\\s=]+/,\r\n              alias: 'important'\r\n            },\r\n            'attr-value': {\r\n              pattern: /=[\\s\\S]+/,\r\n              inside: {\r\n                punctuation: [\r\n                  /^=/,\r\n                  {\r\n                    pattern: /^(\\s*)[\"']|[\"']$/,\r\n                    lookbehind: true\r\n                  }\r\n                ],\r\n                php: {\r\n                  pattern: /\\S(?:[\\s\\S]*\\S)?/,\r\n                  inside: Prism.languages.php\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      markupLatte.tag\r\n    )\r\n    Prism.hooks.add('before-tokenize', function (env) {\r\n      if (env.language !== 'latte') {\r\n        return\r\n      }\r\n      var lattePattern =\r\n        /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\}/g\r\n      Prism.languages['markup-templating'].buildPlaceholders(\r\n        env,\r\n        'latte',\r\n        lattePattern\r\n      )\r\n      env.grammar = markupLatte\r\n    })\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte')\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nscheme.displayName = 'scheme'\r\nscheme.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function scheme(Prism) {\r\n  ;(function (Prism) {\r\n    Prism.languages.scheme = {\r\n      // this supports \"normal\" single-line comments:\r\n      //   ; comment\r\n      // and (potentially nested) multiline comments:\r\n      //   #| comment #| nested |# still comment |#\r\n      // (only 1 level of nesting is supported)\r\n      comment:\r\n        /;.*|#;\\s*(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\[(?:[^\\[\\]]|\\[[^\\[\\]]*\\])*\\])|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#)|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#))*\\|#)*\\|#/,\r\n      string: {\r\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\r\n        greedy: true\r\n      },\r\n      symbol: {\r\n        pattern: /'[^()\\[\\]#'\\s]+/,\r\n        greedy: true\r\n      },\r\n      char: {\r\n        pattern:\r\n          /#\\\\(?:[ux][a-fA-F\\d]+\\b|[-a-zA-Z]+\\b|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\\S)/,\r\n        greedy: true\r\n      },\r\n      'lambda-parameter': [\r\n        // https://www.cs.cmu.edu/Groups/AI/html/r4rs/r4rs_6.html#SEC30\r\n        {\r\n          pattern:\r\n            /((?:^|[^'`#])[(\\[]lambda\\s+)(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)/,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern: /((?:^|[^'`#])[(\\[]lambda\\s+[(\\[])[^()\\[\\]']+/,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      keyword: {\r\n        pattern:\r\n          /((?:^|[^'`#])[(\\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\\*)?|let\\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\\[\\]\\s]|$)/,\r\n        lookbehind: true\r\n      },\r\n      builtin: {\r\n        // all functions of the base library of R7RS plus some of built-ins of R5Rs\r\n        pattern:\r\n          /((?:^|[^'`#])[(\\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\\?|boolean=?\\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\\?|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)|close-(?:input-port|output-port|port)|complex\\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\\??|eq\\?|equal\\?|eqv\\?|error|error-object(?:-irritants|-message|\\?)|eval|even\\?|exact(?:-integer-sqrt|-integer\\?|\\?)?|expt|features|file-error\\?|floor(?:-quotient|-remainder|\\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\\??|input-port(?:-open\\?|\\?)|integer(?:->char|\\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\\?|newline|not|null\\?|number(?:->string|\\?)|numerator|odd\\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\\?|\\?)|pair\\?|peek-char|peek-u8|port\\?|positive\\?|procedure\\?|quotient|raise|raise-continuable|rational\\?|rationalize|read-(?:bytevector|bytevector!|char|error\\?|line|string|u8)|real\\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)?|substring|symbol(?:->string|\\?|=\\?)|syntax-error|textual-port\\?|truncate(?:-quotient|-remainder|\\/)?|u8-ready\\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\\?)(?=[()\\[\\]\\s]|$)/,\r\n        lookbehind: true\r\n      },\r\n      operator: {\r\n        pattern: /((?:^|[^'`#])[(\\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\\[\\]\\s]|$)/,\r\n        lookbehind: true\r\n      },\r\n      number: {\r\n        // The number pattern from [the R7RS spec](https://small.r7rs.org/attachment/r7rs.pdf).\r\n        //\r\n        // <number>      := <num 2>|<num 8>|<num 10>|<num 16>\r\n        // <num R>       := <prefix R><complex R>\r\n        // <complex R>   := <real R>(?:@<real R>|<imaginary R>)?|<imaginary R>\r\n        // <imaginary R> := [+-](?:<ureal R>|(?:inf|nan)\\.0)?i\r\n        // <real R>      := [+-]?<ureal R>|[+-](?:inf|nan)\\.0\r\n        // <ureal R>     := <uint R>(?:\\/<uint R>)?\r\n        //                | <decimal R>\r\n        //\r\n        // <decimal 10>  := (?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?\r\n        // <uint R>      := <digit R>+\r\n        // <prefix R>    := <radix R>(?:#[ei])?|(?:#[ei])?<radix R>\r\n        // <radix 2>     := #b\r\n        // <radix 8>     := #o\r\n        // <radix 10>    := (?:#d)?\r\n        // <radix 16>    := #x\r\n        // <digit 2>     := [01]\r\n        // <digit 8>     := [0-7]\r\n        // <digit 10>    := \\d\r\n        // <digit 16>    := [0-9a-f]\r\n        //\r\n        // The problem with this grammar is that the resulting regex is way to complex, so we simplify by grouping all\r\n        // non-decimal bases together. This results in a decimal (dec) and combined binary, octal, and hexadecimal (box)\r\n        // pattern:\r\n        pattern: RegExp(\r\n          SortedBNF({\r\n            '<ureal dec>':\r\n              /\\d+(?:\\/\\d+)|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[esfdl][+-]?\\d+)?/.source,\r\n            '<real dec>': /[+-]?<ureal dec>|[+-](?:inf|nan)\\.0/.source,\r\n            '<imaginary dec>': /[+-](?:<ureal dec>|(?:inf|nan)\\.0)?i/.source,\r\n            '<complex dec>':\r\n              /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/\r\n                .source,\r\n            '<num dec>': /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,\r\n            '<ureal box>': /[0-9a-f]+(?:\\/[0-9a-f]+)?/.source,\r\n            '<real box>': /[+-]?<ureal box>|[+-](?:inf|nan)\\.0/.source,\r\n            '<imaginary box>': /[+-](?:<ureal box>|(?:inf|nan)\\.0)?i/.source,\r\n            '<complex box>':\r\n              /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/\r\n                .source,\r\n            '<num box>': /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/\r\n              .source,\r\n            '<number>': /(^|[()\\[\\]\\s])(?:<num dec>|<num box>)(?=[()\\[\\]\\s]|$)/\r\n              .source\r\n          }),\r\n          'i'\r\n        ),\r\n        lookbehind: true\r\n      },\r\n      boolean: {\r\n        pattern: /(^|[()\\[\\]\\s])#(?:[ft]|false|true)(?=[()\\[\\]\\s]|$)/,\r\n        lookbehind: true\r\n      },\r\n      function: {\r\n        pattern:\r\n          /((?:^|[^'`#])[(\\[])(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)(?=[()\\[\\]\\s]|$)/,\r\n        lookbehind: true\r\n      },\r\n      identifier: {\r\n        pattern: /(^|[()\\[\\]\\s])\\|(?:[^\\\\|]|\\\\.)*\\|(?=[()\\[\\]\\s]|$)/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      punctuation: /[()\\[\\]']/\r\n    }\r\n\r\n    /**\r\n     * Given a topologically sorted BNF grammar, this will return the RegExp source of last rule of the grammar.\r\n     *\r\n     * @param {Record<string, string>} grammar\r\n     * @returns {string}\r\n     */\r\n    function SortedBNF(grammar) {\r\n      for (var key in grammar) {\r\n        grammar[key] = grammar[key].replace(/<[\\w\\s]+>/g, function (key) {\r\n          return '(?:' + grammar[key].trim() + ')'\r\n        })\r\n      }\r\n      // return the last item\r\n      return grammar[key]\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorScheme from './scheme.js'\r\nlilypond.displayName = 'lilypond'\r\nlilypond.aliases = ['ly']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function lilypond(Prism) {\r\n  Prism.register(refractorScheme)\r\n  ;(function (Prism) {\r\n    var schemeExpression =\r\n      /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/\r\n        .source\r\n    // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\r\n    // For some reason, this can't be 4\r\n    var recursivenessLog2 = 5\r\n    for (var i = 0; i < recursivenessLog2; i++) {\r\n      schemeExpression = schemeExpression.replace(/<expr>/g, function () {\r\n        return schemeExpression\r\n      })\r\n    }\r\n    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source)\r\n    var lilypond = (Prism.languages.lilypond = {\r\n      comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\r\n      'embedded-scheme': {\r\n        pattern: RegExp(\r\n          /(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(\r\n            /<expr>/g,\r\n            function () {\r\n              return schemeExpression\r\n            }\r\n          ),\r\n          'm'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          scheme: {\r\n            pattern: /^(#)[\\s\\S]+$/,\r\n            lookbehind: true,\r\n            alias: 'language-scheme',\r\n            inside: {\r\n              'embedded-lilypond': {\r\n                pattern: /#\\{[\\s\\S]*?#\\}/,\r\n                greedy: true,\r\n                inside: {\r\n                  punctuation: /^#\\{|#\\}$/,\r\n                  lilypond: {\r\n                    pattern: /[\\s\\S]+/,\r\n                    alias: 'language-lilypond',\r\n                    inside: null // see below\r\n                  }\r\n                }\r\n              },\r\n\r\n              rest: Prism.languages.scheme\r\n            }\r\n          },\r\n          punctuation: /#/\r\n        }\r\n      },\r\n      string: {\r\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\r\n        greedy: true\r\n      },\r\n      'class-name': {\r\n        pattern: /(\\\\new\\s+)[\\w-]+/,\r\n        lookbehind: true\r\n      },\r\n      keyword: {\r\n        pattern: /\\\\[a-z][-\\w]*/i,\r\n        inside: {\r\n          punctuation: /^\\\\/\r\n        }\r\n      },\r\n      operator: /[=|]|<<|>>/,\r\n      punctuation: {\r\n        pattern:\r\n          /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\r\n        lookbehind: true\r\n      },\r\n      number: /\\b\\d+(?:\\/\\d+)?\\b/\r\n    })\r\n    lilypond['embedded-scheme'].inside['scheme'].inside[\r\n      'embedded-lilypond'\r\n    ].inside['lilypond'].inside = lilypond\r\n    Prism.languages.ly = lilypond\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkupTemplating from './markup-templating.js'\r\nliquid.displayName = 'liquid'\r\nliquid.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function liquid(Prism) {\r\n  Prism.register(refractorMarkupTemplating)\r\n  Prism.languages.liquid = {\r\n    comment: {\r\n      pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\r\n      lookbehind: true\r\n    },\r\n    delimiter: {\r\n      pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\r\n      alias: 'punctuation'\r\n    },\r\n    string: {\r\n      pattern: /\"[^\"]*\"|'[^']*'/,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\r\n    object:\r\n      /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\r\n    function: [\r\n      {\r\n        pattern: /(\\|\\s*)\\w+/,\r\n        lookbehind: true,\r\n        alias: 'filter'\r\n      },\r\n      {\r\n        // array functions\r\n        pattern: /(\\.\\s*)(?:first|last|size)/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    boolean: /\\b(?:false|nil|true)\\b/,\r\n    range: {\r\n      pattern: /\\.\\./,\r\n      alias: 'operator'\r\n    },\r\n    // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\r\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\r\n    operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|contains(?=\\s)|or)\\b/,\r\n    punctuation: /[.,\\[\\]()]/,\r\n    empty: {\r\n      pattern: /\\bempty\\b/,\r\n      alias: 'keyword'\r\n    }\r\n  }\r\n  Prism.hooks.add('before-tokenize', function (env) {\r\n    var liquidPattern =\r\n      /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g\r\n    var insideRaw = false\r\n    Prism.languages['markup-templating'].buildPlaceholders(\r\n      env,\r\n      'liquid',\r\n      liquidPattern,\r\n      function (match) {\r\n        var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match)\r\n        if (tagMatch) {\r\n          var tag = tagMatch[1]\r\n          if (tag === 'raw' && !insideRaw) {\r\n            insideRaw = true\r\n            return true\r\n          } else if (tag === 'endraw') {\r\n            insideRaw = false\r\n            return true\r\n          }\r\n        }\r\n        return !insideRaw\r\n      }\r\n    )\r\n  })\r\n  Prism.hooks.add('after-tokenize', function (env) {\r\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid')\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nlisp.displayName = 'lisp'\r\nlisp.aliases = ['elisp', 'emacs', 'emacs-lisp']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function lisp(Prism) {\r\n  ;(function (Prism) {\r\n    /**\r\n     * Functions to construct regular expressions\r\n     * e.g. (interactive ... or (interactive)\r\n     *\r\n     * @param {string} name\r\n     * @returns {RegExp}\r\n     */\r\n    function simple_form(name) {\r\n      return RegExp(/(\\()/.source + '(?:' + name + ')' + /(?=[\\s\\)])/.source)\r\n    }\r\n    /**\r\n     * booleans and numbers\r\n     *\r\n     * @param {string} pattern\r\n     * @returns {RegExp}\r\n     */\r\n    function primitive(pattern) {\r\n      return RegExp(\r\n        /([\\s([])/.source + '(?:' + pattern + ')' + /(?=[\\s)])/.source\r\n      )\r\n    }\r\n\r\n    // Patterns in regular expressions\r\n\r\n    // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\r\n    // & and : are excluded as they are usually used for special purposes\r\n    var symbol = /(?!\\d)[-+*/~!@$%^=<>{}\\w]+/.source\r\n    // symbol starting with & used in function arguments\r\n    var marker = '&' + symbol\r\n    // Open parenthesis for look-behind\r\n    var par = '(\\\\()'\r\n    var endpar = '(?=\\\\))'\r\n    // End the pattern with look-ahead space\r\n    var space = '(?=\\\\s)'\r\n    var nestedPar =\r\n      /(?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\))*\\))*\\))*/\r\n        .source\r\n    var language = {\r\n      // Three or four semicolons are considered a heading.\r\n      // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\r\n      heading: {\r\n        pattern: /;;;.*/,\r\n        alias: ['comment', 'title']\r\n      },\r\n      comment: /;.*/,\r\n      string: {\r\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\r\n        greedy: true,\r\n        inside: {\r\n          argument: /[-A-Z]+(?=[.,\\s])/,\r\n          symbol: RegExp('`' + symbol + \"'\")\r\n        }\r\n      },\r\n      'quoted-symbol': {\r\n        pattern: RegExp(\"#?'\" + symbol),\r\n        alias: ['variable', 'symbol']\r\n      },\r\n      'lisp-property': {\r\n        pattern: RegExp(':' + symbol),\r\n        alias: 'property'\r\n      },\r\n      splice: {\r\n        pattern: RegExp(',@?' + symbol),\r\n        alias: ['symbol', 'variable']\r\n      },\r\n      keyword: [\r\n        {\r\n          pattern: RegExp(\r\n            par +\r\n              '(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)' +\r\n              space\r\n          ),\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern: RegExp(\r\n            par +\r\n              '(?:append|by|collect|concat|do|finally|for|in|return)' +\r\n              space\r\n          ),\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      declare: {\r\n        pattern: simple_form(/declare/.source),\r\n        lookbehind: true,\r\n        alias: 'keyword'\r\n      },\r\n      interactive: {\r\n        pattern: simple_form(/interactive/.source),\r\n        lookbehind: true,\r\n        alias: 'keyword'\r\n      },\r\n      boolean: {\r\n        pattern: primitive(/nil|t/.source),\r\n        lookbehind: true\r\n      },\r\n      number: {\r\n        pattern: primitive(/[-+]?\\d+(?:\\.\\d*)?/.source),\r\n        lookbehind: true\r\n      },\r\n      defvar: {\r\n        pattern: RegExp(par + 'def(?:const|custom|group|var)\\\\s+' + symbol),\r\n        lookbehind: true,\r\n        inside: {\r\n          keyword: /^def[a-z]+/,\r\n          variable: RegExp(symbol)\r\n        }\r\n      },\r\n      defun: {\r\n        pattern: RegExp(\r\n          par +\r\n            /(?:cl-)?(?:defmacro|defun\\*?)\\s+/.source +\r\n            symbol +\r\n            /\\s+\\(/.source +\r\n            nestedPar +\r\n            /\\)/.source\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          keyword: /^(?:cl-)?def\\S+/,\r\n          // See below, this property needs to be defined later so that it can\r\n          // reference the language object.\r\n          arguments: null,\r\n          function: {\r\n            pattern: RegExp('(^\\\\s)' + symbol),\r\n            lookbehind: true\r\n          },\r\n          punctuation: /[()]/\r\n        }\r\n      },\r\n      lambda: {\r\n        pattern: RegExp(\r\n          par +\r\n            'lambda\\\\s+\\\\(\\\\s*(?:&?' +\r\n            symbol +\r\n            '(?:\\\\s+&?' +\r\n            symbol +\r\n            ')*\\\\s*)?\\\\)'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          keyword: /^lambda/,\r\n          // See below, this property needs to be defined later so that it can\r\n          // reference the language object.\r\n          arguments: null,\r\n          punctuation: /[()]/\r\n        }\r\n      },\r\n      car: {\r\n        pattern: RegExp(par + symbol),\r\n        lookbehind: true\r\n      },\r\n      punctuation: [\r\n        // open paren, brackets, and close paren\r\n        /(?:['`,]?\\(|[)\\[\\]])/,\r\n        // cons\r\n        {\r\n          pattern: /(\\s)\\.(?=\\s)/,\r\n          lookbehind: true\r\n        }\r\n      ]\r\n    }\r\n    var arg = {\r\n      'lisp-marker': RegExp(marker),\r\n      varform: {\r\n        pattern: RegExp(\r\n          /\\(/.source + symbol + /\\s+(?=\\S)/.source + nestedPar + /\\)/.source\r\n        ),\r\n        inside: language\r\n      },\r\n      argument: {\r\n        pattern: RegExp(/(^|[\\s(])/.source + symbol),\r\n        lookbehind: true,\r\n        alias: 'variable'\r\n      },\r\n      rest: language\r\n    }\r\n    var forms = '\\\\S+(?:\\\\s+\\\\S+)*'\r\n    var arglist = {\r\n      pattern: RegExp(par + nestedPar + endpar),\r\n      lookbehind: true,\r\n      inside: {\r\n        'rest-vars': {\r\n          pattern: RegExp('&(?:body|rest)\\\\s+' + forms),\r\n          inside: arg\r\n        },\r\n        'other-marker-vars': {\r\n          pattern: RegExp('&(?:aux|optional)\\\\s+' + forms),\r\n          inside: arg\r\n        },\r\n        keys: {\r\n          pattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\r\n          inside: arg\r\n        },\r\n        argument: {\r\n          pattern: RegExp(symbol),\r\n          alias: 'variable'\r\n        },\r\n        punctuation: /[()]/\r\n      }\r\n    }\r\n    language['lambda'].inside.arguments = arglist\r\n    language['defun'].inside.arguments = Prism.util.clone(arglist)\r\n    language['defun'].inside.arguments.inside.sublist = arglist\r\n    Prism.languages.lisp = language\r\n    Prism.languages.elisp = language\r\n    Prism.languages.emacs = language\r\n    Prism.languages['emacs-lisp'] = language\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nlivescript.displayName = 'livescript'\r\nlivescript.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function livescript(Prism) {\r\n  Prism.languages.livescript = {\r\n    comment: [\r\n      {\r\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(^|[^\\\\])#.*/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    'interpolated-string': {\r\n      /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\r\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\r\n      pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: {\r\n        variable: {\r\n          pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\r\n          lookbehind: true\r\n        },\r\n        interpolation: {\r\n          pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\r\n          lookbehind: true,\r\n          inside: {\r\n            'interpolation-punctuation': {\r\n              pattern: /^#\\{|\\}$/,\r\n              alias: 'variable'\r\n            }\r\n            // See rest below\r\n          }\r\n        },\r\n\r\n        string: /[\\s\\S]+/\r\n      }\r\n    },\r\n    string: [\r\n      {\r\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /<\\[[\\s\\S]*?\\]>/,\r\n        greedy: true\r\n      },\r\n      /\\\\[^\\s,;\\])}]+/\r\n    ],\r\n    regex: [\r\n      {\r\n        pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\r\n        greedy: true,\r\n        inside: {\r\n          comment: {\r\n            pattern: /(^|[^\\\\])#.*/,\r\n            lookbehind: true\r\n          }\r\n        }\r\n      },\r\n      {\r\n        pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\r\n        greedy: true\r\n      }\r\n    ],\r\n    keyword: {\r\n      pattern:\r\n        /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\r\n      lookbehind: true\r\n    },\r\n    'keyword-operator': {\r\n      pattern:\r\n        /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\r\n      lookbehind: true,\r\n      alias: 'operator'\r\n    },\r\n    boolean: {\r\n      pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\r\n      lookbehind: true\r\n    },\r\n    argument: {\r\n      // Don't match .&. nor &&\r\n      pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\r\n      lookbehind: true,\r\n      alias: 'variable'\r\n    },\r\n    number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\r\n    identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\r\n    operator: [\r\n      // Spaced .\r\n      {\r\n        pattern: /( )\\.(?= )/,\r\n        lookbehind: true\r\n      },\r\n      // Full list, in order:\r\n      // .= .~ .. ...\r\n      // .&. .^. .<<. .>>. .>>>.\r\n      // := :: ::=\r\n      // &&\r\n      // || |>\r\n      // < << <<< <<<<\r\n      // <- <-- <-! <--!\r\n      // <~ <~~ <~! <~~!\r\n      // <| <= <?\r\n      // > >> >= >?\r\n      // - -- -> -->\r\n      // + ++\r\n      // @ @@\r\n      // % %%\r\n      // * **\r\n      // ! != !~=\r\n      // !~> !~~>\r\n      // !-> !-->\r\n      // ~ ~> ~~> ~=\r\n      // = ==\r\n      // ^ ^^\r\n      // / ?\r\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\r\n    ],\r\n    punctuation: /[(){}\\[\\]|.,:;`]/\r\n  }\r\n  Prism.languages.livescript['interpolated-string'].inside[\r\n    'interpolation'\r\n  ].inside.rest = Prism.languages.livescript\r\n}\r\n", "// @ts-nocheck\r\nllvm.displayName = 'llvm'\r\nllvm.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function llvm(Prism) {\r\n  ;(function (Prism) {\r\n    Prism.languages.llvm = {\r\n      comment: /;.*/,\r\n      string: {\r\n        pattern: /\"[^\"]*\"/,\r\n        greedy: true\r\n      },\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      variable: /[%@!#](?:(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+|\\d+)/i,\r\n      label: /(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+:/i,\r\n      type: {\r\n        pattern:\r\n          /\\b(?:double|float|fp128|half|i[1-9]\\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\\b/,\r\n        alias: 'class-name'\r\n      },\r\n      keyword: /\\b[a-z_][a-z_0-9]*\\b/,\r\n      number:\r\n        /[+-]?\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-Fa-f]+\\b|\\b0xK[\\dA-Fa-f]{20}\\b|\\b0x[ML][\\dA-Fa-f]{32}\\b|\\b0xH[\\dA-Fa-f]{4}\\b/,\r\n      punctuation: /[{}[\\];(),.!*=<>]/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nlog.displayName = 'log'\r\nlog.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function log(Prism) {\r\n  // This is a language definition for generic log files.\r\n  // Since there is no one log format, this language definition has to support all formats to some degree.\r\n  //\r\n  // Based on https://github.com/MTDL9/vim-log-highlighting\r\n\r\n  Prism.languages.log = {\r\n    string: {\r\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\r\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\r\n      greedy: true\r\n    },\r\n    exception: {\r\n      pattern:\r\n        /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: ['javastacktrace', 'language-javastacktrace'],\r\n      inside: Prism.languages['javastacktrace'] || {\r\n        keyword: /\\bat\\b/,\r\n        function: /[a-z_][\\w$]*(?=\\()/,\r\n        punctuation: /[.:()]/\r\n      }\r\n    },\r\n    level: [\r\n      {\r\n        pattern:\r\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\r\n        alias: ['error', 'important']\r\n      },\r\n      {\r\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\r\n        alias: ['warning', 'important']\r\n      },\r\n      {\r\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\r\n        alias: ['info', 'keyword']\r\n      },\r\n      {\r\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\r\n        alias: ['debug', 'keyword']\r\n      },\r\n      {\r\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\r\n        alias: ['trace', 'comment']\r\n      }\r\n    ],\r\n    property: {\r\n      pattern:\r\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\r\n      lookbehind: true\r\n    },\r\n    separator: {\r\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\r\n      lookbehind: true,\r\n      alias: 'comment'\r\n    },\r\n    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\r\n    email: {\r\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\r\n      lookbehind: true,\r\n      alias: 'url'\r\n    },\r\n    'ip-address': {\r\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\r\n      alias: 'constant'\r\n    },\r\n    'mac-address': {\r\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\r\n      alias: 'constant'\r\n    },\r\n    domain: {\r\n      pattern:\r\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\r\n      lookbehind: true,\r\n      alias: 'constant'\r\n    },\r\n    uuid: {\r\n      pattern:\r\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\r\n      alias: 'constant'\r\n    },\r\n    hash: {\r\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\r\n      alias: 'constant'\r\n    },\r\n    'file-path': {\r\n      pattern:\r\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'string'\r\n    },\r\n    date: {\r\n      pattern: RegExp(\r\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\r\n          '|' +\r\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/\r\n            .source +\r\n          '|' +\r\n          /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/\r\n            .source,\r\n        'i'\r\n      ),\r\n      alias: 'number'\r\n    },\r\n    time: {\r\n      pattern:\r\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\r\n      alias: 'number'\r\n    },\r\n    boolean: /\\b(?:false|null|true)\\b/i,\r\n    number: {\r\n      pattern:\r\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\r\n      lookbehind: true\r\n    },\r\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\r\n    punctuation: /[\\[\\].,]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nlolcode.displayName = 'lolcode'\r\nlolcode.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function lolcode(Prism) {\r\n  Prism.languages.lolcode = {\r\n    comment: [/\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/, /\\bBTW.+/],\r\n    string: {\r\n      pattern: /\"(?::.|[^\":])*\"/,\r\n      inside: {\r\n        variable: /:\\{[^}]+\\}/,\r\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\r\n      },\r\n      greedy: true\r\n    },\r\n    number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\r\n    symbol: {\r\n      pattern: /(^|\\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\\s|,|$)/,\r\n      lookbehind: true,\r\n      inside: {\r\n        keyword: /A(?=\\s)/\r\n      }\r\n    },\r\n    label: {\r\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\r\n      lookbehind: true,\r\n      alias: 'string'\r\n    },\r\n    function: {\r\n      pattern: /((?:^|\\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\\w*/,\r\n      lookbehind: true\r\n    },\r\n    keyword: [\r\n      {\r\n        pattern:\r\n          /(^|\\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\\?|YA RLY|YR)(?=\\s|,|$)/,\r\n        lookbehind: true\r\n      },\r\n      /'Z(?=\\s|,|$)/\r\n    ],\r\n    boolean: {\r\n      pattern: /(^|\\s)(?:FAIL|WIN)(?=\\s|,|$)/,\r\n      lookbehind: true\r\n    },\r\n    variable: {\r\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\r\n      lookbehind: true\r\n    },\r\n    operator: {\r\n      pattern:\r\n        /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\\s|,|$)/,\r\n      lookbehind: true\r\n    },\r\n    punctuation: /\\.{3}|…|,|!/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nmagma.displayName = 'magma'\r\nmagma.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function magma(Prism) {\r\n  Prism.languages.magma = {\r\n    output: {\r\n      pattern:\r\n        /^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    comment: {\r\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    // http://magma.maths.usyd.edu.au/magma/handbook/text/82\r\n    keyword:\r\n      /\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    generator: {\r\n      pattern: /\\b[a-z_]\\w*(?=\\s*<)/i,\r\n      alias: 'class-name'\r\n    },\r\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n    number: {\r\n      pattern:\r\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\r\n      lookbehind: true\r\n    },\r\n    operator: /->|[-+*/^~!|#=]|:=|\\.\\./,\r\n    punctuation: /[()[\\]{}<>,;.:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nmata.displayName = 'mata'\r\nmata.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function mata(Prism) {\r\n  // https://www.stata.com/manuals/m.pdf\r\n\r\n  ;(function (Prism) {\r\n    var orgType = /\\b(?:(?:col|row)?vector|matrix|scalar)\\b/.source\r\n    var type =\r\n      /\\bvoid\\b|<org>|\\b(?:complex|numeric|pointer(?:\\s*\\([^()]*\\))?|real|string|(?:class|struct)\\s+\\w+|transmorphic)(?:\\s*<org>)?/.source.replace(\r\n        /<org>/g,\r\n        orgType\r\n      )\r\n    Prism.languages.mata = {\r\n      comment: {\r\n        pattern:\r\n          /\\/\\/.*|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\//,\r\n        greedy: true\r\n      },\r\n      string: {\r\n        pattern: /\"[^\"\\r\\n]*\"|[‘`']\".*?\"[’`']/,\r\n        greedy: true\r\n      },\r\n      'class-name': {\r\n        pattern: /(\\b(?:class|extends|struct)\\s+)\\w+(?=\\s*(?:\\{|\\bextends\\b))/,\r\n        lookbehind: true\r\n      },\r\n      type: {\r\n        pattern: RegExp(type),\r\n        alias: 'class-name',\r\n        inside: {\r\n          punctuation: /[()]/,\r\n          keyword: /\\b(?:class|function|struct|void)\\b/\r\n        }\r\n      },\r\n      keyword:\r\n        /\\b(?:break|class|continue|do|else|end|extends|external|final|for|function|goto|if|pragma|private|protected|public|return|static|struct|unset|unused|version|virtual|while)\\b/,\r\n      constant: /\\bNULL\\b/,\r\n      number: {\r\n        pattern:\r\n          /(^|[^\\w.])(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|\\d[a-f0-9]*(?:\\.[a-f0-9]+)?x[+-]?\\d+)i?(?![\\w.])/i,\r\n        lookbehind: true\r\n      },\r\n      missing: {\r\n        pattern: /(^|[^\\w.])(?:\\.[a-z]?)(?![\\w.])/,\r\n        lookbehind: true,\r\n        alias: 'symbol'\r\n      },\r\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n      operator: /\\.\\.|\\+\\+|--|&&|\\|\\||:?(?:[!=<>]=|[+\\-*/^<>&|:])|[!?=\\\\#’`']/,\r\n      punctuation: /[()[\\]{},;.]/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nmatlab.displayName = 'matlab'\r\nmatlab.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function matlab(Prism) {\r\n  Prism.languages.matlab = {\r\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\r\n    string: {\r\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\r\n      greedy: true\r\n    },\r\n    // FIXME We could handle imaginary numbers as a whole\r\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\r\n    keyword:\r\n      /\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\r\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\r\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\r\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nmaxscript.displayName = 'maxscript'\r\nmaxscript.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function maxscript(Prism) {\r\n  ;(function (Prism) {\r\n    var keywords =\r\n      /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i\r\n    Prism.languages.maxscript = {\r\n      comment: {\r\n        pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\r\n        greedy: true\r\n      },\r\n      string: {\r\n        pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      path: {\r\n        pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\r\n        greedy: true,\r\n        alias: 'string'\r\n      },\r\n      'function-call': {\r\n        pattern: RegExp(\r\n          '((?:' +\r\n            // start of line\r\n            (/^/.source +\r\n              '|' +\r\n              // operators and other language constructs\r\n              /[;=<>+\\-*/^({\\[]/.source +\r\n              '|' +\r\n              // keywords as part of statements\r\n              /\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/\r\n                .source) +\r\n            ')[ \\t]*)' +\r\n            '(?!' +\r\n            keywords.source +\r\n            ')' +\r\n            /[a-z_]\\w*\\b/.source +\r\n            '(?=[ \\t]*(?:' +\r\n            // variable\r\n            ('(?!' +\r\n              keywords.source +\r\n              ')' +\r\n              /[a-z_]/.source +\r\n              '|' +\r\n              // number\r\n              /\\d|-\\.?\\d/.source +\r\n              '|' +\r\n              // other expressions or literals\r\n              /[({'\"$@#?]/.source) +\r\n            '))',\r\n          'im'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'function'\r\n      },\r\n      'function-definition': {\r\n        pattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\r\n        lookbehind: true,\r\n        alias: 'function'\r\n      },\r\n      argument: {\r\n        pattern: /\\b[a-z_]\\w*(?=:)/i,\r\n        alias: 'attr-name'\r\n      },\r\n      keyword: keywords,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      time: {\r\n        pattern:\r\n          /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\r\n        lookbehind: true,\r\n        alias: 'number'\r\n      },\r\n      number: [\r\n        {\r\n          pattern:\r\n            /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\r\n          lookbehind: true\r\n        },\r\n        /\\b(?:e|pi)\\b/\r\n      ],\r\n      constant: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\r\n      color: {\r\n        pattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\r\n        alias: 'constant'\r\n      },\r\n      operator: /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\r\n      punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nmel.displayName = 'mel'\r\nmel.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function mel(Prism) {\r\n  Prism.languages.mel = {\r\n    comment: {\r\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\r\n      greedy: true\r\n    },\r\n    code: {\r\n      pattern: /`(?:\\\\.|[^\\\\`])*`/,\r\n      greedy: true,\r\n      alias: 'italic',\r\n      inside: {\r\n        delimiter: {\r\n          pattern: /^`|`$/,\r\n          alias: 'punctuation'\r\n        },\r\n        statement: {\r\n          pattern: /[\\s\\S]+/,\r\n          inside: null // see below\r\n        }\r\n      }\r\n    },\r\n\r\n    string: {\r\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\r\n      greedy: true\r\n    },\r\n    variable: /\\$\\w+/,\r\n    number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+/,\r\n    flag: {\r\n      pattern: /-[^\\d\\W]\\w*/,\r\n      alias: 'operator'\r\n    },\r\n    keyword:\r\n      /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\r\n    function: {\r\n      pattern:\r\n        /((?:^|[{;])[ \\t]*)[a-z_]\\w*\\b(?!\\s*(?:\\.(?!\\.)|[[{=]))|\\b[a-z_]\\w*(?=[ \\t]*\\()/im,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    'tensor-punctuation': {\r\n      pattern: /<<|>>/,\r\n      alias: 'punctuation'\r\n    },\r\n    operator: /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=?|[*\\/!=]=?|[%^]/,\r\n    punctuation: /[.,:;?\\[\\](){}]/\r\n  }\r\n  Prism.languages.mel['code'].inside['statement'].inside = Prism.languages.mel\r\n}\r\n", "// @ts-nocheck\r\nmermaid.displayName = 'mermaid'\r\nmermaid.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function mermaid(Prism) {\r\n  Prism.languages.mermaid = {\r\n    comment: {\r\n      pattern: /%%.*/,\r\n      greedy: true\r\n    },\r\n    style: {\r\n      pattern:\r\n        /^([ \\t]*(?:classDef|linkStyle|style)[ \\t]+[\\w$-]+[ \\t]+)\\w.*[^\\s;]/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        property: /\\b\\w[\\w-]*(?=[ \\t]*:)/,\r\n        operator: /:/,\r\n        punctuation: /,/\r\n      }\r\n    },\r\n    'inter-arrow-label': {\r\n      pattern:\r\n        /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \\t]*(?:\"[^\"\\r\\n]*\"|[^\\s\".=-](?:[^\\r\\n.=-]*[^\\s.=-])?)[ \\t]*(?:\\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: {\r\n        arrow: {\r\n          pattern: /(?:\\.+->?|--+[->]|==+[=>])$/,\r\n          alias: 'operator'\r\n        },\r\n        label: {\r\n          pattern: /^([\\s\\S]{2}[ \\t]*)\\S(?:[\\s\\S]*\\S)?/,\r\n          lookbehind: true,\r\n          alias: 'property'\r\n        },\r\n        'arrow-head': {\r\n          pattern: /^\\S+/,\r\n          alias: ['arrow', 'operator']\r\n        }\r\n      }\r\n    },\r\n    arrow: [\r\n      // This might look complex but it really isn't.\r\n      // There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The\r\n      // problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow\r\n      // characters in the one lookbehind because that would create too many false negatives. So we have to split the\r\n      // arrows into different patterns.\r\n      {\r\n        // ER diagram\r\n        pattern: /(^|[^{}|o.-])[|}][|o](?:--|\\.\\.)[|o][|{](?![{}|o.-])/,\r\n        lookbehind: true,\r\n        alias: 'operator'\r\n      },\r\n      {\r\n        // flow chart\r\n        // (?:==+|--+|-\\.*-)\r\n        pattern:\r\n          /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\\.*-)[>ox]?|(?:==+|--+|-\\.*-)[>ox]|===+|---+|-\\.+-)(?![<>ox.=-])/,\r\n        lookbehind: true,\r\n        alias: 'operator'\r\n      },\r\n      {\r\n        // sequence diagram\r\n        pattern:\r\n          /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,\r\n        lookbehind: true,\r\n        alias: 'operator'\r\n      },\r\n      {\r\n        // class diagram\r\n        pattern:\r\n          /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\\|?(?:--|\\.\\.)|(?:--|\\.\\.)\\|?>|--|\\.\\.)(?![<>|*o.-])/,\r\n        lookbehind: true,\r\n        alias: 'operator'\r\n      }\r\n    ],\r\n    label: {\r\n      pattern: /(^|[^|<])\\|(?:[^\\r\\n\"|]|\"[^\"\\r\\n]*\")+\\|/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'property'\r\n    },\r\n    text: {\r\n      pattern: /(?:[(\\[{]+|\\b>)(?:[^\\r\\n\"()\\[\\]{}]|\"[^\"\\r\\n]*\")+(?:[)\\]}]+|>)/,\r\n      alias: 'string'\r\n    },\r\n    string: {\r\n      pattern: /\"[^\"\\r\\n]*\"/,\r\n      greedy: true\r\n    },\r\n    annotation: {\r\n      pattern:\r\n        /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\\[\\[(?:choice|fork|join)\\]\\]/i,\r\n      alias: 'important'\r\n    },\r\n    keyword: [\r\n      // This language has both case-sensitive and case-insensitive keywords\r\n      {\r\n        pattern:\r\n          /(^[ \\t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\\w$-])/m,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern:\r\n          /(^[ \\t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \\t]+note)?|loop|opt|par|participant|rect|state|note[ \\t]+(?:over|(?:left|right)[ \\t]+of))(?![\\w$-])/im,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    entity: /#[a-z0-9]+;/,\r\n    operator: {\r\n      pattern: /(\\w[ \\t]*)&(?=[ \\t]*\\w)|:::|:/,\r\n      lookbehind: true\r\n    },\r\n    punctuation: /[(){};]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nmetafont.displayName = 'metafont'\r\nmetafont.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function metafont(Prism) {\r\n  Prism.languages.metafont = {\r\n    // Syntax of METAFONT with the added (public) elements of PlainMETAFONT. Except for internal quantities they are expected to be rarely redefined. Freely inspired by the syntax of Christophe Grandsire for the Crimson Editor.\r\n    comment: {\r\n      pattern: /%.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"[^\\r\\n\"]*\"/,\r\n      greedy: true\r\n    },\r\n    number: /\\d*\\.?\\d+/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    punctuation: [\r\n      /[,;()]/,\r\n      {\r\n        pattern: /(^|[^{}])(?:\\{|\\})(?![{}])/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(^|[^[])\\[(?!\\[)/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(^|[^\\]])\\](?!\\])/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    constant: [\r\n      {\r\n        pattern: /(^|[^!?])\\?\\?\\?(?![!?])/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(^|[^/*\\\\])(?:\\\\|\\\\\\\\)(?![/*\\\\])/,\r\n        lookbehind: true\r\n      },\r\n      /\\b(?:_|blankpicture|bp|cc|cm|dd|ditto|down|eps|epsilon|fullcircle|halfcircle|identity|in|infinity|left|mm|nullpen|nullpicture|origin|pc|penrazor|penspeck|pensquare|penstroke|proof|pt|quartercircle|relax|right|smoke|unitpixel|unitsquare|up)\\b/\r\n    ],\r\n    quantity: {\r\n      pattern:\r\n        /\\b(?:autorounding|blacker|boundarychar|charcode|chardp|chardx|chardy|charext|charht|charic|charwd|currentwindow|day|designsize|displaying|fillin|fontmaking|granularity|hppp|join_radius|month|o_correction|pausing|pen_(?:bot|lft|rt|top)|pixels_per_inch|proofing|showstopping|smoothing|time|tolerance|tracingcapsules|tracingchoices|tracingcommands|tracingedges|tracingequations|tracingmacros|tracingonline|tracingoutput|tracingpens|tracingrestores|tracingspecs|tracingstats|tracingtitles|turningcheck|vppp|warningcheck|xoffset|year|yoffset)\\b/,\r\n      alias: 'keyword'\r\n    },\r\n    command: {\r\n      pattern:\r\n        /\\b(?:addto|batchmode|charlist|cull|display|errhelp|errmessage|errorstopmode|everyjob|extensible|fontdimen|headerbyte|inner|interim|let|ligtable|message|newinternal|nonstopmode|numspecial|openwindow|outer|randomseed|save|scrollmode|shipout|show|showdependencies|showstats|showtoken|showvariable|special)\\b/,\r\n      alias: 'builtin'\r\n    },\r\n    operator: [\r\n      {\r\n        pattern:\r\n          /(^|[^>=<:|])(?:<|<=|=|=:|\\|=:|\\|=:>|=:\\|>|=:\\||\\|=:\\||\\|=:\\|>|\\|=:\\|>>|>|>=|:|:=|<>|::|\\|\\|:)(?![>=<:|])/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(^|[^+-])(?:\\+|\\+\\+|-{1,3}|\\+-\\+)(?![+-])/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(^|[^/*\\\\])(?:\\*|\\*\\*|\\/)(?![/*\\\\])/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(^|[^.])(?:\\.{2,3})(?!\\.)/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(^|[^@#&$])&(?![@#&$])/,\r\n        lookbehind: true\r\n      },\r\n      /\\b(?:and|not|or)\\b/\r\n    ],\r\n    macro: {\r\n      pattern:\r\n        /\\b(?:abs|beginchar|bot|byte|capsule_def|ceiling|change_width|clear_pen_memory|clearit|clearpen|clearxy|counterclockwise|cullit|cutdraw|cutoff|decr|define_blacker_pixels|define_corrected_pixels|define_good_x_pixels|define_good_y_pixels|define_horizontal_corrected_pixels|define_pixels|define_whole_blacker_pixels|define_whole_pixels|define_whole_vertical_blacker_pixels|define_whole_vertical_pixels|dir|direction|directionpoint|div|dotprod|downto|draw|drawdot|endchar|erase|fill|filldraw|fix_units|flex|font_coding_scheme|font_extra_space|font_identifier|font_normal_shrink|font_normal_space|font_normal_stretch|font_quad|font_size|font_slant|font_x_height|gfcorners|gobble|gobbled|good\\.(?:bot|lft|rt|top|x|y)|grayfont|hide|hround|imagerules|incr|interact|interpath|intersectionpoint|inverse|italcorr|killtext|labelfont|labels|lft|loggingall|lowres_fix|makegrid|makelabel(?:\\.(?:bot|lft|rt|top)(?:\\.nodot)?)?|max|min|mod|mode_def|mode_setup|nodisplays|notransforms|numtok|openit|penlabels|penpos|pickup|proofoffset|proofrule|proofrulethickness|range|reflectedabout|rotatedabout|rotatedaround|round|rt|savepen|screenchars|screenrule|screenstrokes|shipit|showit|slantfont|softjoin|solve|stop|superellipse|tensepath|thru|titlefont|top|tracingall|tracingnone|undraw|undrawdot|unfill|unfilldraw|upto|vround)\\b/,\r\n      alias: 'function'\r\n    },\r\n    builtin:\r\n      /\\b(?:ASCII|angle|char|cosd|decimal|directiontime|floor|hex|intersectiontimes|jobname|known|length|makepath|makepen|mexp|mlog|normaldeviate|oct|odd|pencircle|penoffset|point|postcontrol|precontrol|reverse|rotated|sind|sqrt|str|subpath|substring|totalweight|turningnumber|uniformdeviate|unknown|xpart|xxpart|xypart|ypart|yxpart|yypart)\\b/,\r\n    keyword:\r\n      /\\b(?:also|at|atleast|begingroup|charexists|contour|controls|curl|cycle|def|delimiters|doublepath|dropping|dump|else|elseif|end|enddef|endfor|endgroup|endinput|exitif|exitunless|expandafter|fi|for|forever|forsuffixes|from|if|input|inwindow|keeping|kern|of|primarydef|quote|readstring|scaled|scantokens|secondarydef|shifted|skipto|slanted|step|tension|tertiarydef|to|transformed|until|vardef|withpen|withweight|xscaled|yscaled|zscaled)\\b/,\r\n    type: {\r\n      pattern:\r\n        /\\b(?:boolean|expr|numeric|pair|path|pen|picture|primary|secondary|string|suffix|tertiary|text|transform)\\b/,\r\n      alias: 'property'\r\n    },\r\n    variable: {\r\n      pattern:\r\n        /(^|[^@#&$])(?:@#|#@|#|@)(?![@#&$])|\\b(?:aspect_ratio|currentpen|currentpicture|currenttransform|d|extra_beginchar|extra_endchar|extra_setup|h|localfont|mag|mode|screen_cols|screen_rows|w|whatever|x|y|z)\\b/,\r\n      lookbehind: true\r\n    }\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nmizar.displayName = 'mizar'\r\nmizar.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function mizar(Prism) {\r\n  Prism.languages.mizar = {\r\n    comment: /::.+/,\r\n    keyword:\r\n      /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\b/,\r\n    parameter: {\r\n      pattern: /\\$(?:10|\\d)/,\r\n      alias: 'variable'\r\n    },\r\n    variable: /\\b\\w+(?=:)/,\r\n    number: /(?:\\b|-)\\d+\\b/,\r\n    operator: /\\.\\.\\.|->|&|\\.?=/,\r\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJavascript from './javascript.js'\r\nmongodb.displayName = 'mongodb'\r\nmongodb.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function mongodb(Prism) {\r\n  Prism.register(refractorJavascript)\r\n  ;(function (Prism) {\r\n    var operators = [\r\n      // query and projection\r\n      '$eq',\r\n      '$gt',\r\n      '$gte',\r\n      '$in',\r\n      '$lt',\r\n      '$lte',\r\n      '$ne',\r\n      '$nin',\r\n      '$and',\r\n      '$not',\r\n      '$nor',\r\n      '$or',\r\n      '$exists',\r\n      '$type',\r\n      '$expr',\r\n      '$jsonSchema',\r\n      '$mod',\r\n      '$regex',\r\n      '$text',\r\n      '$where',\r\n      '$geoIntersects',\r\n      '$geoWithin',\r\n      '$near',\r\n      '$nearSphere',\r\n      '$all',\r\n      '$elemMatch',\r\n      '$size',\r\n      '$bitsAllClear',\r\n      '$bitsAllSet',\r\n      '$bitsAnyClear',\r\n      '$bitsAnySet',\r\n      '$comment',\r\n      '$elemMatch',\r\n      '$meta',\r\n      '$slice',\r\n      // update\r\n      '$currentDate',\r\n      '$inc',\r\n      '$min',\r\n      '$max',\r\n      '$mul',\r\n      '$rename',\r\n      '$set',\r\n      '$setOnInsert',\r\n      '$unset',\r\n      '$addToSet',\r\n      '$pop',\r\n      '$pull',\r\n      '$push',\r\n      '$pullAll',\r\n      '$each',\r\n      '$position',\r\n      '$slice',\r\n      '$sort',\r\n      '$bit',\r\n      // aggregation pipeline stages\r\n      '$addFields',\r\n      '$bucket',\r\n      '$bucketAuto',\r\n      '$collStats',\r\n      '$count',\r\n      '$currentOp',\r\n      '$facet',\r\n      '$geoNear',\r\n      '$graphLookup',\r\n      '$group',\r\n      '$indexStats',\r\n      '$limit',\r\n      '$listLocalSessions',\r\n      '$listSessions',\r\n      '$lookup',\r\n      '$match',\r\n      '$merge',\r\n      '$out',\r\n      '$planCacheStats',\r\n      '$project',\r\n      '$redact',\r\n      '$replaceRoot',\r\n      '$replaceWith',\r\n      '$sample',\r\n      '$set',\r\n      '$skip',\r\n      '$sort',\r\n      '$sortByCount',\r\n      '$unionWith',\r\n      '$unset',\r\n      '$unwind',\r\n      '$setWindowFields',\r\n      // aggregation pipeline operators\r\n      '$abs',\r\n      '$accumulator',\r\n      '$acos',\r\n      '$acosh',\r\n      '$add',\r\n      '$addToSet',\r\n      '$allElementsTrue',\r\n      '$and',\r\n      '$anyElementTrue',\r\n      '$arrayElemAt',\r\n      '$arrayToObject',\r\n      '$asin',\r\n      '$asinh',\r\n      '$atan',\r\n      '$atan2',\r\n      '$atanh',\r\n      '$avg',\r\n      '$binarySize',\r\n      '$bsonSize',\r\n      '$ceil',\r\n      '$cmp',\r\n      '$concat',\r\n      '$concatArrays',\r\n      '$cond',\r\n      '$convert',\r\n      '$cos',\r\n      '$dateFromParts',\r\n      '$dateToParts',\r\n      '$dateFromString',\r\n      '$dateToString',\r\n      '$dayOfMonth',\r\n      '$dayOfWeek',\r\n      '$dayOfYear',\r\n      '$degreesToRadians',\r\n      '$divide',\r\n      '$eq',\r\n      '$exp',\r\n      '$filter',\r\n      '$first',\r\n      '$floor',\r\n      '$function',\r\n      '$gt',\r\n      '$gte',\r\n      '$hour',\r\n      '$ifNull',\r\n      '$in',\r\n      '$indexOfArray',\r\n      '$indexOfBytes',\r\n      '$indexOfCP',\r\n      '$isArray',\r\n      '$isNumber',\r\n      '$isoDayOfWeek',\r\n      '$isoWeek',\r\n      '$isoWeekYear',\r\n      '$last',\r\n      '$last',\r\n      '$let',\r\n      '$literal',\r\n      '$ln',\r\n      '$log',\r\n      '$log10',\r\n      '$lt',\r\n      '$lte',\r\n      '$ltrim',\r\n      '$map',\r\n      '$max',\r\n      '$mergeObjects',\r\n      '$meta',\r\n      '$min',\r\n      '$millisecond',\r\n      '$minute',\r\n      '$mod',\r\n      '$month',\r\n      '$multiply',\r\n      '$ne',\r\n      '$not',\r\n      '$objectToArray',\r\n      '$or',\r\n      '$pow',\r\n      '$push',\r\n      '$radiansToDegrees',\r\n      '$range',\r\n      '$reduce',\r\n      '$regexFind',\r\n      '$regexFindAll',\r\n      '$regexMatch',\r\n      '$replaceOne',\r\n      '$replaceAll',\r\n      '$reverseArray',\r\n      '$round',\r\n      '$rtrim',\r\n      '$second',\r\n      '$setDifference',\r\n      '$setEquals',\r\n      '$setIntersection',\r\n      '$setIsSubset',\r\n      '$setUnion',\r\n      '$size',\r\n      '$sin',\r\n      '$slice',\r\n      '$split',\r\n      '$sqrt',\r\n      '$stdDevPop',\r\n      '$stdDevSamp',\r\n      '$strcasecmp',\r\n      '$strLenBytes',\r\n      '$strLenCP',\r\n      '$substr',\r\n      '$substrBytes',\r\n      '$substrCP',\r\n      '$subtract',\r\n      '$sum',\r\n      '$switch',\r\n      '$tan',\r\n      '$toBool',\r\n      '$toDate',\r\n      '$toDecimal',\r\n      '$toDouble',\r\n      '$toInt',\r\n      '$toLong',\r\n      '$toObjectId',\r\n      '$toString',\r\n      '$toLower',\r\n      '$toUpper',\r\n      '$trim',\r\n      '$trunc',\r\n      '$type',\r\n      '$week',\r\n      '$year',\r\n      '$zip',\r\n      '$count',\r\n      '$dateAdd',\r\n      '$dateDiff',\r\n      '$dateSubtract',\r\n      '$dateTrunc',\r\n      '$getField',\r\n      '$rand',\r\n      '$sampleRate',\r\n      '$setField',\r\n      '$unsetField',\r\n      // aggregation pipeline query modifiers\r\n      '$comment',\r\n      '$explain',\r\n      '$hint',\r\n      '$max',\r\n      '$maxTimeMS',\r\n      '$min',\r\n      '$orderby',\r\n      '$query',\r\n      '$returnKey',\r\n      '$showDiskLoc',\r\n      '$natural'\r\n    ]\r\n    var builtinFunctions = [\r\n      'ObjectId',\r\n      'Code',\r\n      'BinData',\r\n      'DBRef',\r\n      'Timestamp',\r\n      'NumberLong',\r\n      'NumberDecimal',\r\n      'MaxKey',\r\n      'MinKey',\r\n      'RegExp',\r\n      'ISODate',\r\n      'UUID'\r\n    ]\r\n    operators = operators.map(function (operator) {\r\n      return operator.replace('$', '\\\\$')\r\n    })\r\n    var operatorsSource = '(?:' + operators.join('|') + ')\\\\b'\r\n    Prism.languages.mongodb = Prism.languages.extend('javascript', {})\r\n    Prism.languages.insertBefore('mongodb', 'string', {\r\n      property: {\r\n        pattern:\r\n          /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\r\n        greedy: true,\r\n        inside: {\r\n          keyword: RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\r\n        }\r\n      }\r\n    })\r\n    Prism.languages.mongodb.string.inside = {\r\n      url: {\r\n        // url pattern\r\n        pattern:\r\n          /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\r\n        greedy: true\r\n      },\r\n      entity: {\r\n        // ipv4\r\n        pattern:\r\n          /\\b(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\b/,\r\n        greedy: true\r\n      }\r\n    }\r\n    Prism.languages.insertBefore('mongodb', 'constant', {\r\n      builtin: {\r\n        pattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\r\n        alias: 'keyword'\r\n      }\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nmonkey.displayName = 'monkey'\r\nmonkey.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function monkey(Prism) {\r\n  Prism.languages.monkey = {\r\n    comment: {\r\n      pattern: /^#Rem\\s[\\s\\S]*?^#End|'.+/im,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"[^\"\\r\\n]*\"/,\r\n      greedy: true\r\n    },\r\n    preprocessor: {\r\n      pattern: /(^[ \\t]*)#.+/m,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'property'\r\n    },\r\n    function: /\\b\\w+(?=\\()/,\r\n    'type-char': {\r\n      pattern: /\\b[?%#$]/,\r\n      alias: 'class-name'\r\n    },\r\n    number: {\r\n      pattern:\r\n        /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\r\n      lookbehind: true\r\n    },\r\n    keyword:\r\n      /\\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\\b/i,\r\n    operator:\r\n      /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\r\n    punctuation: /[.,:;()\\[\\]]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nmoonscript.displayName = 'moonscript'\r\nmoonscript.aliases = ['moon']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function moonscript(Prism) {\r\n  Prism.languages.moonscript = {\r\n    comment: /--.*/,\r\n    string: [\r\n      {\r\n        pattern: /'[^']*'|\\[(=*)\\[[\\s\\S]*?\\]\\1\\]/,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /\"[^\"]*\"/,\r\n        greedy: true,\r\n        inside: {\r\n          interpolation: {\r\n            pattern: /#\\{[^{}]*\\}/,\r\n            inside: {\r\n              moonscript: {\r\n                pattern: /(^#\\{)[\\s\\S]+(?=\\})/,\r\n                lookbehind: true,\r\n                inside: null // see beow\r\n              },\r\n\r\n              'interpolation-punctuation': {\r\n                pattern: /#\\{|\\}/,\r\n                alias: 'punctuation'\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    'class-name': [\r\n      {\r\n        pattern: /(\\b(?:class|extends)[ \\t]+)\\w+/,\r\n        lookbehind: true\r\n      },\r\n      // class-like names start with a capital letter\r\n      /\\b[A-Z]\\w*/\r\n    ],\r\n    keyword:\r\n      /\\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\\b/,\r\n    variable: /@@?\\w*/,\r\n    property: {\r\n      pattern: /\\b(?!\\d)\\w+(?=:)|(:)(?!\\d)\\w+/,\r\n      lookbehind: true\r\n    },\r\n    function: {\r\n      pattern:\r\n        /\\b(?:_G|_VERSION|assert|collectgarbage|coroutine\\.(?:create|resume|running|status|wrap|yield)|debug\\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\\b/,\r\n      inside: {\r\n        punctuation: /\\./\r\n      }\r\n    },\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    number:\r\n      /(?:\\B\\.\\d+|\\b\\d+\\.\\d+|\\b\\d+(?=[eE]))(?:[eE][-+]?\\d+)?\\b|\\b(?:0x[a-fA-F\\d]+|\\d+)(?:U?LL)?\\b/,\r\n    operator:\r\n      /\\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\\.\\.)=?|[:#^]|\\b(?:and|or)\\b=?|\\b(?:not)\\b/,\r\n    punctuation: /[.,()[\\]{}\\\\]/\r\n  }\r\n  Prism.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside =\r\n    Prism.languages.moonscript\r\n  Prism.languages.moon = Prism.languages.moonscript\r\n}\r\n", "// @ts-nocheck\r\nn1ql.displayName = 'n1ql'\r\nn1ql.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function n1ql(Prism) {\r\n  // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/index.html\r\n\r\n  Prism.languages.n1ql = {\r\n    comment: {\r\n      pattern: /\\/\\*[\\s\\S]*?(?:$|\\*\\/)|--.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\r\n      greedy: true\r\n    },\r\n    identifier: {\r\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\r\n      greedy: true\r\n    },\r\n    parameter: /\\$[\\w.]+/,\r\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html#n1ql-reserved-words\r\n    keyword:\r\n      /\\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\\b/i,\r\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\r\n    number: /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\r\n    operator:\r\n      /[-+*\\/%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\r\n    punctuation: /[;[\\](),.{}:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nnand2tetrisHdl.displayName = 'nand2tetris-hdl'\r\nnand2tetrisHdl.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function nand2tetrisHdl(Prism) {\r\n  Prism.languages['nand2tetris-hdl'] = {\r\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n    keyword: /\\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    function: /\\b[A-Za-z][A-Za-z0-9]*(?=\\()/,\r\n    number: /\\b\\d+\\b/,\r\n    operator: /=|\\.\\./,\r\n    punctuation: /[{}[\\];(),:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nnaniscript.displayName = 'naniscript'\r\nnaniscript.aliases = ['nani']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function naniscript(Prism) {\r\n  ;(function (Prism) {\r\n    var expressionDef = /\\{[^\\r\\n\\[\\]{}]*\\}/\r\n    var params = {\r\n      'quoted-string': {\r\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\r\n        alias: 'operator'\r\n      },\r\n      'command-param-id': {\r\n        pattern: /(\\s)\\w+:/,\r\n        lookbehind: true,\r\n        alias: 'property'\r\n      },\r\n      'command-param-value': [\r\n        {\r\n          pattern: expressionDef,\r\n          alias: 'selector'\r\n        },\r\n        {\r\n          pattern: /([\\t ])\\S+/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          alias: 'operator'\r\n        },\r\n        {\r\n          pattern: /\\S(?:.*\\S)?/,\r\n          alias: 'operator'\r\n        }\r\n      ]\r\n    }\r\n    Prism.languages.naniscript = {\r\n      // ; ...\r\n      comment: {\r\n        pattern: /^([\\t ]*);.*/m,\r\n        lookbehind: true\r\n      },\r\n      // > ...\r\n      // Define is a control line starting with '>' followed by a word, a space and a text.\r\n      define: {\r\n        pattern: /^>.+/m,\r\n        alias: 'tag',\r\n        inside: {\r\n          value: {\r\n            pattern: /(^>\\w+[\\t ]+)(?!\\s)[^{}\\r\\n]+/,\r\n            lookbehind: true,\r\n            alias: 'operator'\r\n          },\r\n          key: {\r\n            pattern: /(^>)\\w+/,\r\n            lookbehind: true\r\n          }\r\n        }\r\n      },\r\n      // # ...\r\n      label: {\r\n        pattern: /^([\\t ]*)#[\\t ]*\\w+[\\t ]*$/m,\r\n        lookbehind: true,\r\n        alias: 'regex'\r\n      },\r\n      command: {\r\n        pattern: /^([\\t ]*)@\\w+(?=[\\t ]|$).*/m,\r\n        lookbehind: true,\r\n        alias: 'function',\r\n        inside: {\r\n          'command-name': /^@\\w+/,\r\n          expression: {\r\n            pattern: expressionDef,\r\n            greedy: true,\r\n            alias: 'selector'\r\n          },\r\n          'command-params': {\r\n            pattern: /\\s*\\S[\\s\\S]*/,\r\n            inside: params\r\n          }\r\n        }\r\n      },\r\n      // Generic is any line that doesn't start with operators: ;>#@\r\n      'generic-text': {\r\n        pattern: /(^[ \\t]*)[^#@>;\\s].*/m,\r\n        lookbehind: true,\r\n        alias: 'punctuation',\r\n        inside: {\r\n          // \\{ ... \\} ... \\[ ... \\] ... \\\"\r\n          'escaped-char': /\\\\[{}\\[\\]\"]/,\r\n          expression: {\r\n            pattern: expressionDef,\r\n            greedy: true,\r\n            alias: 'selector'\r\n          },\r\n          'inline-command': {\r\n            pattern: /\\[[\\t ]*\\w[^\\r\\n\\[\\]]*\\]/,\r\n            greedy: true,\r\n            alias: 'function',\r\n            inside: {\r\n              'command-params': {\r\n                pattern: /(^\\[[\\t ]*\\w+\\b)[\\s\\S]+(?=\\]$)/,\r\n                lookbehind: true,\r\n                inside: params\r\n              },\r\n              'command-param-name': {\r\n                pattern: /^(\\[[\\t ]*)\\w+/,\r\n                lookbehind: true,\r\n                alias: 'name'\r\n              },\r\n              'start-stop-char': /[\\[\\]]/\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    Prism.languages.nani = Prism.languages['naniscript']\r\n\r\n    /** @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token */\r\n\r\n    /**\r\n     * This hook is used to validate generic-text tokens for balanced brackets.\r\n     * Mark token as bad-line when contains not balanced brackets: {},[]\r\n     */\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      /** @type {(Token | string)[]} */\r\n      var tokens = env.tokens\r\n      tokens.forEach(function (token) {\r\n        if (typeof token !== 'string' && token.type === 'generic-text') {\r\n          var content = getTextContent(token)\r\n          if (!isBracketsBalanced(content)) {\r\n            token.type = 'bad-line'\r\n            token.content = content\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    /**\r\n     * @param {string} input\r\n     * @returns {boolean}\r\n     */\r\n    function isBracketsBalanced(input) {\r\n      var brackets = '[]{}'\r\n      var stack = []\r\n      for (var i = 0; i < input.length; i++) {\r\n        var bracket = input[i]\r\n        var bracketsIndex = brackets.indexOf(bracket)\r\n        if (bracketsIndex !== -1) {\r\n          if (bracketsIndex % 2 === 0) {\r\n            stack.push(bracketsIndex + 1)\r\n          } else if (stack.pop() !== bracketsIndex) {\r\n            return false\r\n          }\r\n        }\r\n      }\r\n      return stack.length === 0\r\n    }\r\n\r\n    /**\r\n     * @param {string | Token | (string | Token)[]} token\r\n     * @returns {string}\r\n     */\r\n    function getTextContent(token) {\r\n      if (typeof token === 'string') {\r\n        return token\r\n      } else if (Array.isArray(token)) {\r\n        return token.map(getTextContent).join('')\r\n      } else {\r\n        return getTextContent(token.content)\r\n      }\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nnasm.displayName = 'nasm'\r\nnasm.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function nasm(Prism) {\r\n  Prism.languages.nasm = {\r\n    comment: /;.*$/m,\r\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n    label: {\r\n      pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\r\n      lookbehind: true,\r\n      alias: 'function'\r\n    },\r\n    keyword: [\r\n      /\\[?BITS (?:16|32|64)\\]?/,\r\n      {\r\n        pattern: /(^\\s*)section\\s*[a-z.]+:?/im,\r\n        lookbehind: true\r\n      },\r\n      /(?:extern|global)[^;\\r\\n]*/i,\r\n      /(?:CPU|DEFAULT|FLOAT).*$/m\r\n    ],\r\n    register: {\r\n      pattern:\r\n        /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\\b/i,\r\n      alias: 'variable'\r\n    },\r\n    number:\r\n      /(?:\\b|(?=\\$))(?:0[hx](?:\\.[\\da-f]+|[\\da-f]+(?:\\.[\\da-f]+)?)(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\r\n    operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nneon.displayName = 'neon'\r\nneon.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function neon(Prism) {\r\n  Prism.languages.neon = {\r\n    comment: {\r\n      pattern: /#.*/,\r\n      greedy: true\r\n    },\r\n    datetime: {\r\n      pattern:\r\n        /(^|[[{(=:,\\s])\\d\\d\\d\\d-\\d\\d?-\\d\\d?(?:(?:[Tt]| +)\\d\\d?:\\d\\d:\\d\\d(?:\\.\\d*)? *(?:Z|[-+]\\d\\d?(?::?\\d\\d)?)?)?(?=$|[\\]}),\\s])/,\r\n      lookbehind: true,\r\n      alias: 'number'\r\n    },\r\n    key: {\r\n      pattern: /(^|[[{(,\\s])[^,:=[\\]{}()'\"\\s]+(?=\\s*:(?:$|[\\]}),\\s])|\\s*=)/,\r\n      lookbehind: true,\r\n      alias: 'property'\r\n    },\r\n    number: {\r\n      pattern:\r\n        /(^|[[{(=:,\\s])[+-]?(?:0x[\\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:[eE][+-]?\\d+)?)(?=$|[\\]}),:=\\s])/,\r\n      lookbehind: true\r\n    },\r\n    boolean: {\r\n      pattern: /(^|[[{(=:,\\s])(?:false|no|true|yes)(?=$|[\\]}),:=\\s])/i,\r\n      lookbehind: true\r\n    },\r\n    null: {\r\n      pattern: /(^|[[{(=:,\\s])(?:null)(?=$|[\\]}),:=\\s])/i,\r\n      lookbehind: true,\r\n      alias: 'keyword'\r\n    },\r\n    string: {\r\n      pattern:\r\n        /(^|[[{(=:,\\s])(?:('''|\"\"\")\\r?\\n(?:(?:[^\\r\\n]|\\r?\\n(?![\\t ]*\\2))*\\r?\\n)?[\\t ]*\\2|'[^'\\r\\n]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    literal: {\r\n      pattern:\r\n        /(^|[[{(=:,\\s])(?:[^#\"',:=[\\]{}()\\s`-]|[:-][^\"',=[\\]{}()\\s])(?:[^,:=\\]})(\\s]|:(?![\\s,\\]})]|$)|[ \\t]+[^#,:=\\]})(\\s])*/,\r\n      lookbehind: true,\r\n      alias: 'string'\r\n    },\r\n    punctuation: /[,:=[\\]{}()-]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nnevod.displayName = 'nevod'\r\nnevod.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function nevod(Prism) {\r\n  Prism.languages.nevod = {\r\n    comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\r\n    string: {\r\n      pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\r\n      greedy: true,\r\n      inside: {\r\n        'string-attrs': /!$|!\\*$|\\*$/\r\n      }\r\n    },\r\n    namespace: {\r\n      pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\r\n      lookbehind: true\r\n    },\r\n    pattern: {\r\n      pattern:\r\n        /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\r\n      lookbehind: true,\r\n      inside: {\r\n        'pattern-name': {\r\n          pattern: /^#?[a-zA-Z0-9\\-.]+/,\r\n          alias: 'class-name'\r\n        },\r\n        fields: {\r\n          pattern: /\\(.*\\)/,\r\n          inside: {\r\n            'field-name': {\r\n              pattern: /[a-zA-Z0-9\\-.]+/,\r\n              alias: 'variable'\r\n            },\r\n            punctuation: /[,()]/,\r\n            operator: {\r\n              pattern: /~/,\r\n              alias: 'field-hidden-mark'\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    search: {\r\n      pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\r\n      alias: 'function',\r\n      lookbehind: true\r\n    },\r\n    keyword:\r\n      /@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\r\n    'standard-pattern': {\r\n      pattern:\r\n        /\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\r\n      inside: {\r\n        'standard-pattern-name': {\r\n          pattern: /^[a-zA-Z0-9\\-.]+/,\r\n          alias: 'builtin'\r\n        },\r\n        quantifier: {\r\n          pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\r\n          alias: 'number'\r\n        },\r\n        'standard-pattern-attr': {\r\n          pattern: /[a-zA-Z0-9\\-.]+/,\r\n          alias: 'builtin'\r\n        },\r\n        punctuation: /[,()]/\r\n      }\r\n    },\r\n    quantifier: {\r\n      pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\r\n      alias: 'number'\r\n    },\r\n    operator: [\r\n      {\r\n        pattern: /=/,\r\n        alias: 'pattern-def'\r\n      },\r\n      {\r\n        pattern: /&/,\r\n        alias: 'conjunction'\r\n      },\r\n      {\r\n        pattern: /~/,\r\n        alias: 'exception'\r\n      },\r\n      {\r\n        pattern: /\\?/,\r\n        alias: 'optionality'\r\n      },\r\n      {\r\n        pattern: /[[\\]]/,\r\n        alias: 'repetition'\r\n      },\r\n      {\r\n        pattern: /[{}]/,\r\n        alias: 'variation'\r\n      },\r\n      {\r\n        pattern: /[+_]/,\r\n        alias: 'sequence'\r\n      },\r\n      {\r\n        pattern: /\\.{2,3}/,\r\n        alias: 'span'\r\n      }\r\n    ],\r\n    'field-capture': [\r\n      {\r\n        pattern:\r\n          /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\r\n        lookbehind: true,\r\n        inside: {\r\n          'field-name': {\r\n            pattern: /[a-zA-Z0-9\\-.]+/,\r\n            alias: 'variable'\r\n          },\r\n          colon: /:/\r\n        }\r\n      },\r\n      {\r\n        pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\r\n        inside: {\r\n          'field-name': {\r\n            pattern: /[a-zA-Z0-9\\-.]+/,\r\n            alias: 'variable'\r\n          },\r\n          colon: /:/\r\n        }\r\n      }\r\n    ],\r\n    punctuation: /[:;,()]/,\r\n    name: /[a-zA-Z0-9\\-.]+/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nnginx.displayName = 'nginx'\r\nnginx.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function nginx(Prism) {\r\n  ;(function (Prism) {\r\n    var variable =\r\n      /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i\r\n    Prism.languages.nginx = {\r\n      comment: {\r\n        pattern: /(^|[\\s{};])#.*/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      directive: {\r\n        pattern:\r\n          /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          string: {\r\n            pattern:\r\n              /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\r\n            lookbehind: true,\r\n            greedy: true,\r\n            inside: {\r\n              escape: {\r\n                pattern: /\\\\[\"'\\\\nrt]/,\r\n                alias: 'entity'\r\n              },\r\n              variable: variable\r\n            }\r\n          },\r\n          comment: {\r\n            pattern: /(\\s)#.*/,\r\n            lookbehind: true,\r\n            greedy: true\r\n          },\r\n          keyword: {\r\n            pattern: /^\\S+/,\r\n            greedy: true\r\n          },\r\n          // other patterns\r\n\r\n          boolean: {\r\n            pattern: /(\\s)(?:off|on)(?!\\S)/,\r\n            lookbehind: true\r\n          },\r\n          number: {\r\n            pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\r\n            lookbehind: true\r\n          },\r\n          variable: variable\r\n        }\r\n      },\r\n      punctuation: /[{};]/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nnim.displayName = 'nim'\r\nnim.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function nim(Prism) {\r\n  Prism.languages.nim = {\r\n    comment: {\r\n      pattern: /#.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\r\n      pattern:\r\n        /(?:\\b(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")/,\r\n      greedy: true\r\n    },\r\n    char: {\r\n      // Character literals are handled specifically to prevent issues with numeric type suffixes\r\n      pattern: /'(?:\\\\(?:\\d+|x[\\da-fA-F]{0,2}|.)|[^'])'/,\r\n      greedy: true\r\n    },\r\n    function: {\r\n      pattern:\r\n        /(?:(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\r\n      greedy: true,\r\n      inside: {\r\n        operator: /\\*$/\r\n      }\r\n    },\r\n    // We don't want to highlight operators (and anything really) inside backticks\r\n    identifier: {\r\n      pattern: /`[^`\\r\\n]+`/,\r\n      greedy: true,\r\n      inside: {\r\n        punctuation: /`/\r\n      }\r\n    },\r\n    // The negative look ahead prevents wrong highlighting of the .. operator\r\n    number:\r\n      /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\r\n    keyword:\r\n      /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\r\n    operator: {\r\n      // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\r\n      // but allow the slice operator .. to take precedence over them\r\n      // One can define his own operators in Nim so all combination of operators might be an operator.\r\n      pattern:\r\n        /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\\b)/m,\r\n      lookbehind: true\r\n    },\r\n    punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nnix.displayName = 'nix'\r\nnix.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function nix(Prism) {\r\n  Prism.languages.nix = {\r\n    comment: {\r\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\r\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\r\n          lookbehind: true,\r\n          inside: null // see below\r\n        }\r\n      }\r\n    },\r\n\r\n    url: [\r\n      /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\r\n      {\r\n        pattern:\r\n          /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    antiquotation: {\r\n      pattern: /\\$(?=\\{)/,\r\n      alias: 'important'\r\n    },\r\n    number: /\\b\\d+\\b/,\r\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\r\n    function:\r\n      /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\r\n    punctuation: /[{}()[\\].,:;]/\r\n  }\r\n  Prism.languages.nix.string.inside.interpolation.inside = Prism.languages.nix\r\n}\r\n", "// @ts-nocheck\r\nnsis.displayName = 'nsis'\r\nnsis.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function nsis(Prism) {\r\n  /**\r\n   * Original by Jan T. Sott (http://github.com/idleberg)\r\n   *\r\n   * Includes all commands and plug-ins shipped with NSIS 3.08\r\n   */\r\n  Prism.languages.nsis = {\r\n    comment: {\r\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true\r\n    },\r\n    keyword: {\r\n      pattern:\r\n        /(^[\\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|KnownFolderPath|LabelAddress|TempFileName|WinVer)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|RtlLanguage|ShellVarContextAll|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Target|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\\b/m,\r\n      lookbehind: true\r\n    },\r\n    property:\r\n      /\\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\\b/,\r\n    constant: /\\$\\{[!\\w\\.:\\^-]+\\}|\\$\\([!\\w\\.:\\^-]+\\)/,\r\n    variable: /\\$\\w[\\w\\.]*/,\r\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\r\n    operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\r\n    punctuation: /[{}[\\];(),.:]/,\r\n    important: {\r\n      pattern:\r\n        /(^[\\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\r\n      lookbehind: true\r\n    }\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nocaml.displayName = 'ocaml'\r\nocaml.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function ocaml(Prism) {\r\n  // https://ocaml.org/manual/lex.html\r\n\r\n  Prism.languages.ocaml = {\r\n    comment: {\r\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\r\n      greedy: true\r\n    },\r\n    char: {\r\n      pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\r\n      greedy: true\r\n    },\r\n    string: [\r\n      {\r\n        pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\r\n        greedy: true\r\n      }\r\n    ],\r\n    number: [\r\n      // binary and octal\r\n      /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i,\r\n      // hexadecimal\r\n      /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i,\r\n      // decimal\r\n      /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i\r\n    ],\r\n    directive: {\r\n      pattern: /\\B#\\w+/,\r\n      alias: 'property'\r\n    },\r\n    label: {\r\n      pattern: /\\B~\\w+/,\r\n      alias: 'property'\r\n    },\r\n    'type-variable': {\r\n      pattern: /\\B'\\w+/,\r\n      alias: 'function'\r\n    },\r\n    variant: {\r\n      pattern: /`\\w+/,\r\n      alias: 'symbol'\r\n    },\r\n    // For the list of keywords and operators,\r\n    // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\r\n    keyword:\r\n      /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    'operator-like-punctuation': {\r\n      pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\r\n      alias: 'punctuation'\r\n    },\r\n    // Custom operators are allowed\r\n    operator:\r\n      /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\r\n    punctuation: /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nodin.displayName = 'odin'\r\nodin.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function odin(Prism) {\r\n  ;(function (Prism) {\r\n    var escapes =\r\n      /\\\\(?:[\"'\\\\abefnrtv]|0[0-7]{2}|U[\\dA-Fa-f]{6}|u[\\dA-Fa-f]{4}|x[\\dA-Fa-f]{2})/\r\n    Prism.languages.odin = {\r\n      /**\r\n       * The current implementation supports only 1 level of nesting.\r\n       *\r\n       * @author Michael Schmidt\r\n       * @author edukisto\r\n       */\r\n      comment: [\r\n        {\r\n          pattern:\r\n            /\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:\\*(?!\\/)|[^*])*(?:\\*\\/|$))*(?:\\*\\/|$)/,\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern: /#![^\\n\\r]*/,\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern: /\\/\\/[^\\n\\r]*/,\r\n          greedy: true\r\n        }\r\n      ],\r\n      /**\r\n       * Should be found before strings because of '\"'\"- and '`'`-like sequences.\r\n       */\r\n      char: {\r\n        pattern: /'(?:\\\\(?:.|[0Uux][0-9A-Fa-f]{1,6})|[^\\n\\r'\\\\])'/,\r\n        greedy: true,\r\n        inside: {\r\n          symbol: escapes\r\n        }\r\n      },\r\n      string: [\r\n        {\r\n          pattern: /`[^`]*`/,\r\n          greedy: true\r\n        },\r\n        {\r\n          pattern: /\"(?:\\\\.|[^\\n\\r\"\\\\])*\"/,\r\n          greedy: true,\r\n          inside: {\r\n            symbol: escapes\r\n          }\r\n        }\r\n      ],\r\n      directive: {\r\n        pattern: /#\\w+/,\r\n        alias: 'property'\r\n      },\r\n      number:\r\n        /\\b0(?:b[01_]+|d[\\d_]+|h_*(?:(?:(?:[\\dA-Fa-f]_*){8}){1,2}|(?:[\\dA-Fa-f]_*){4})|o[0-7_]+|x[\\dA-F_a-f]+|z[\\dAB_ab]+)\\b|(?:\\b\\d+(?:\\.(?!\\.)\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d*)?[ijk]?(?!\\w)/,\r\n      discard: {\r\n        pattern: /\\b_\\b/,\r\n        alias: 'keyword'\r\n      },\r\n      'procedure-definition': {\r\n        pattern: /\\b\\w+(?=[ \\t]*(?::\\s*){2}proc\\b)/,\r\n        alias: 'function'\r\n      },\r\n      keyword:\r\n        /\\b(?:asm|auto_cast|bit_set|break|case|cast|context|continue|defer|distinct|do|dynamic|else|enum|fallthrough|for|foreign|if|import|in|map|matrix|not_in|or_else|or_return|package|proc|return|struct|switch|transmute|typeid|union|using|when|where)\\b/,\r\n      /**\r\n       * false, nil, true can be used as procedure names. \"_\" and keywords can't.\r\n       */\r\n      'procedure-name': {\r\n        pattern: /\\b\\w+(?=[ \\t]*\\()/,\r\n        alias: 'function'\r\n      },\r\n      boolean: /\\b(?:false|nil|true)\\b/,\r\n      'constant-parameter-sign': {\r\n        pattern: /\\$/,\r\n        alias: 'important'\r\n      },\r\n      undefined: {\r\n        pattern: /---/,\r\n        alias: 'operator'\r\n      },\r\n      arrow: {\r\n        pattern: /->/,\r\n        alias: 'punctuation'\r\n      },\r\n      operator: /\\+\\+|--|\\.\\.[<=]?|(?:&~|[-!*+/=~]|[%&<>|]{1,2})=?|[?^]/,\r\n      punctuation: /[(),.:;@\\[\\]{}]/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorC from './c.js'\r\nopencl.displayName = 'opencl'\r\nopencl.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function opencl(Prism) {\r\n  Prism.register(refractorC)\r\n  ;(function (Prism) {\r\n    /* OpenCL kernel language */\r\n    Prism.languages.opencl = Prism.languages.extend('c', {\r\n      // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\r\n      keyword:\r\n        /\\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\\b/,\r\n      // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\r\n      // Math Constants: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/mathConstants.html\r\n      // Macros and Limits: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/macroLimits.html\r\n      number:\r\n        /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[fuhl]{0,4}/i,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      'constant-opencl-kernel': {\r\n        pattern:\r\n          /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\\b/,\r\n        alias: 'constant'\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('opencl', 'class-name', {\r\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/scalarDataTypes.html\r\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/otherDataTypes.html\r\n      'builtin-type': {\r\n        pattern:\r\n          /\\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\\b/,\r\n        alias: 'keyword'\r\n      }\r\n    })\r\n    var attributes = {\r\n      // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\r\n      'type-opencl-host': {\r\n        pattern:\r\n          /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\r\n        alias: 'keyword'\r\n      },\r\n      'boolean-opencl-host': {\r\n        pattern: /\\bCL_(?:FALSE|TRUE)\\b/,\r\n        alias: 'boolean'\r\n      },\r\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\r\n      'constant-opencl-host': {\r\n        pattern:\r\n          /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\r\n        alias: 'constant'\r\n      },\r\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\r\n      'function-opencl-host': {\r\n        pattern:\r\n          /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\r\n        alias: 'function'\r\n      }\r\n    }\r\n\r\n    /* OpenCL host API */\r\n    Prism.languages.insertBefore('c', 'keyword', attributes)\r\n\r\n    // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\r\n    if (Prism.languages.cpp) {\r\n      // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\r\n      attributes['type-opencl-host-cpp'] = {\r\n        pattern:\r\n          /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\\b/,\r\n        alias: 'keyword'\r\n      }\r\n      Prism.languages.insertBefore('cpp', 'keyword', attributes)\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nopenqasm.displayName = 'openqasm'\r\nopenqasm.aliases = ['qasm']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function openqasm(Prism) {\r\n  // https://qiskit.github.io/openqasm/grammar/index.html\r\n\r\n  Prism.languages.openqasm = {\r\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\r\n    string: {\r\n      pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\\b|#pragma\\b/,\r\n    'class-name':\r\n      /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\r\n    function: /\\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\\b(?=\\s*\\()/,\r\n    constant: /\\b(?:euler|pi|tau)\\b|π|𝜏|ℇ/,\r\n    number: {\r\n      pattern:\r\n        /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\r\n      lookbehind: true\r\n    },\r\n    operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\r\n    punctuation: /[(){}\\[\\];,:.]/\r\n  }\r\n  Prism.languages.qasm = Prism.languages.openqasm\r\n}\r\n", "// @ts-nocheck\r\noz.displayName = 'oz'\r\noz.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function oz(Prism) {\r\n  Prism.languages.oz = {\r\n    comment: {\r\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\r\n      greedy: true\r\n    },\r\n    atom: {\r\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\r\n      greedy: true,\r\n      alias: 'builtin'\r\n    },\r\n    keyword:\r\n      /\\$|\\[\\]|\\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\r\n    function: [\r\n      /\\b[a-z][A-Za-z\\d]*(?=\\()/,\r\n      {\r\n        pattern: /(\\{)[A-Z][A-Za-z\\d]*\\b/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    number:\r\n      /\\b(?:0[bx][\\da-f]+|\\d+(?:\\.\\d*)?(?:e~?\\d+)?)\\b|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\r\n    variable: /`(?:[^`\\\\]|\\\\.)+`/,\r\n    'attr-name': /\\b\\w+(?=[ \\t]*:(?![:=]))/,\r\n    operator:\r\n      /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\r\n    punctuation: /[\\[\\](){}.:;?]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nparigp.displayName = 'parigp'\r\nparigp.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function parigp(Prism) {\r\n  Prism.languages.parigp = {\r\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\r\n    string: {\r\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\r\n      greedy: true\r\n    },\r\n    // PARI/GP does not care about white spaces at all\r\n    // so let's process the keywords to build an appropriate regexp\r\n    // (e.g. \"b *r *e *a *k\", etc.)\r\n    keyword: (function () {\r\n      var keywords = [\r\n        'breakpoint',\r\n        'break',\r\n        'dbg_down',\r\n        'dbg_err',\r\n        'dbg_up',\r\n        'dbg_x',\r\n        'forcomposite',\r\n        'fordiv',\r\n        'forell',\r\n        'forpart',\r\n        'forprime',\r\n        'forstep',\r\n        'forsubgroup',\r\n        'forvec',\r\n        'for',\r\n        'iferr',\r\n        'if',\r\n        'local',\r\n        'my',\r\n        'next',\r\n        'return',\r\n        'until',\r\n        'while'\r\n      ]\r\n      keywords = keywords\r\n        .map(function (keyword) {\r\n          return keyword.split('').join(' *')\r\n        })\r\n        .join('|')\r\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b')\r\n    })(),\r\n    function: /\\b\\w(?:[\\w ]*\\w)?(?= *\\()/,\r\n    number: {\r\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\r\n      pattern:\r\n        /((?:\\. *\\. *)?)(?:\\b\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *(?:[+-] *)?\\d(?: *\\d)*)?/i,\r\n      lookbehind: true\r\n    },\r\n    operator:\r\n      /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\r\n    punctuation: /[\\[\\]{}().,:;|]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkup from './markup.js'\r\nparser.displayName = 'parser'\r\nparser.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function parser(Prism) {\r\n  Prism.register(refractorMarkup)\r\n  ;(function (Prism) {\r\n    var parser = (Prism.languages.parser = Prism.languages.extend('markup', {\r\n      keyword: {\r\n        pattern:\r\n          /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\r\n        lookbehind: true\r\n      },\r\n      variable: {\r\n        pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /\\.|:+/\r\n        }\r\n      },\r\n      function: {\r\n        pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\r\n        lookbehind: true,\r\n        inside: {\r\n          keyword: {\r\n            pattern: /(^@)(?:GET_|SET_)/,\r\n            lookbehind: true\r\n          },\r\n          punctuation: /\\.|:+/\r\n        }\r\n      },\r\n      escape: {\r\n        pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\r\n        alias: 'builtin'\r\n      },\r\n      punctuation: /[\\[\\](){};]/\r\n    }))\r\n    parser = Prism.languages.insertBefore('parser', 'keyword', {\r\n      'parser-comment': {\r\n        pattern: /(\\s)#.*/,\r\n        lookbehind: true,\r\n        alias: 'comment'\r\n      },\r\n      expression: {\r\n        // Allow for 3 levels of depth\r\n        pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\r\n        greedy: true,\r\n        lookbehind: true,\r\n        inside: {\r\n          string: {\r\n            pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\r\n            lookbehind: true\r\n          },\r\n          keyword: parser.keyword,\r\n          variable: parser.variable,\r\n          function: parser.function,\r\n          boolean: /\\b(?:false|true)\\b/,\r\n          number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)\\b/i,\r\n          escape: parser.escape,\r\n          operator:\r\n            /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\r\n          punctuation: parser.punctuation\r\n        }\r\n      }\r\n    })\r\n    Prism.languages.insertBefore(\r\n      'inside',\r\n      'punctuation',\r\n      {\r\n        expression: parser.expression,\r\n        keyword: parser.keyword,\r\n        variable: parser.variable,\r\n        function: parser.function,\r\n        escape: parser.escape,\r\n        'parser-punctuation': {\r\n          pattern: parser.punctuation,\r\n          alias: 'punctuation'\r\n        }\r\n      },\r\n      parser['tag'].inside['attr-value']\r\n    )\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\npascal.displayName = 'pascal'\r\npascal.aliases = ['objectpascal']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function pascal(Prism) {\r\n  // Based on Free Pascal\r\n\r\n  /* TODO\r\nSupport inline asm ?\r\n*/\r\n\r\n  Prism.languages.pascal = {\r\n    directive: {\r\n      pattern: /\\{\\$[\\s\\S]*?\\}/,\r\n      greedy: true,\r\n      alias: ['marco', 'property']\r\n    },\r\n    comment: {\r\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\r\n      greedy: true\r\n    },\r\n    asm: {\r\n      pattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/i,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: null // see below\r\n    },\r\n\r\n    keyword: [\r\n      {\r\n        // Turbo Pascal\r\n        pattern:\r\n          /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // Free Pascal\r\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // Object Pascal\r\n        pattern:\r\n          /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // Modifiers\r\n        pattern:\r\n          /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    number: [\r\n      // Hexadecimal, octal and binary\r\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i,\r\n      // Decimal\r\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\r\n    ],\r\n    operator: [\r\n      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/,\r\n      {\r\n        pattern:\r\n          /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\r\n  }\r\n  Prism.languages.pascal.asm.inside = Prism.languages.extend('pascal', {\r\n    asm: undefined,\r\n    keyword: undefined,\r\n    operator: undefined\r\n  })\r\n  Prism.languages.objectpascal = Prism.languages.pascal\r\n}\r\n", "// @ts-nocheck\r\npascaligo.displayName = 'pascaligo'\r\npascaligo.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function pascaligo(Prism) {\r\n  ;(function (Prism) {\r\n    // Pascaligo is a layer 2 smart contract language for the tezos blockchain\r\n\r\n    var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source\r\n    var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(\r\n      /<braces>/g,\r\n      function () {\r\n        return braces\r\n      }\r\n    )\r\n    var pascaligo = (Prism.languages.pascaligo = {\r\n      comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\r\n      string: {\r\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\r\n        greedy: true\r\n      },\r\n      'class-name': [\r\n        {\r\n          pattern: RegExp(\r\n            /(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(\r\n              /<type>/g,\r\n              function () {\r\n                return type\r\n              }\r\n            ),\r\n            'i'\r\n          ),\r\n          lookbehind: true,\r\n          inside: null // see below\r\n        },\r\n        {\r\n          pattern: RegExp(\r\n            /<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () {\r\n              return type\r\n            }),\r\n            'i'\r\n          ),\r\n          inside: null // see below\r\n        },\r\n        {\r\n          pattern: RegExp(\r\n            /(:\\s*)<type>/.source.replace(/<type>/g, function () {\r\n              return type\r\n            })\r\n          ),\r\n          lookbehind: true,\r\n          inside: null // see below\r\n        }\r\n      ],\r\n\r\n      keyword: {\r\n        pattern:\r\n          /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\r\n        lookbehind: true\r\n      },\r\n      boolean: {\r\n        pattern: /(^|[^&])\\b(?:False|True)\\b/i,\r\n        lookbehind: true\r\n      },\r\n      builtin: {\r\n        pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\r\n        lookbehind: true\r\n      },\r\n      function: /\\b\\w+(?=\\s*\\()/,\r\n      number: [\r\n        // Hexadecimal, octal and binary\r\n        /%[01]+|&[0-7]+|\\$[a-f\\d]+/i,\r\n        // Decimal\r\n        /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\r\n      ],\r\n      operator:\r\n        /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\r\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\r\n    })\r\n    var classNameInside = [\r\n      'comment',\r\n      'keyword',\r\n      'builtin',\r\n      'operator',\r\n      'punctuation'\r\n    ].reduce(function (accum, key) {\r\n      accum[key] = pascaligo[key]\r\n      return accum\r\n    }, {})\r\n    pascaligo['class-name'].forEach(function (p) {\r\n      p.inside = classNameInside\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\npsl.displayName = 'psl'\r\npsl.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function psl(Prism) {\r\n  Prism.languages.psl = {\r\n    comment: {\r\n      pattern: /#.*/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\r\n      greedy: true,\r\n      inside: {\r\n        symbol: /\\\\[ntrbA-Z\"\\\\]/\r\n      }\r\n    },\r\n    'heredoc-string': {\r\n      pattern: /<<<([a-zA-Z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\1\\b/,\r\n      alias: 'string',\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\\b/,\r\n    constant:\r\n      /\\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\\b/,\r\n    boolean: /\\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\\b/,\r\n    variable: /\\b(?:PslDebug|errno|exit_status)\\b/,\r\n    builtin: {\r\n      pattern:\r\n        /\\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\\b/,\r\n      alias: 'builtin-function'\r\n    },\r\n    'foreach-variable': {\r\n      pattern:\r\n        /(\\bforeach\\s+(?:(?:\\w+\\b|\"(?:\\\\.|[^\\\\\"])*\")\\s+){0,2})[_a-zA-Z]\\w*(?=\\s*\\()/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    function: /\\b[_a-z]\\w*\\b(?=\\s*\\()/i,\r\n    number: /\\b(?:0x[0-9a-f]+|\\d+(?:\\.\\d+)?)\\b/i,\r\n    operator: /--|\\+\\+|&&=?|\\|\\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\\.|[:?]/,\r\n    punctuation: /[(){}\\[\\];,]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\npcaxis.displayName = 'pcaxis'\r\npcaxis.aliases = ['px']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function pcaxis(Prism) {\r\n  Prism.languages.pcaxis = {\r\n    string: /\"[^\"]*\"/,\r\n    keyword: {\r\n      pattern:\r\n        /((?:^|;)\\s*)[-A-Z\\d]+(?:\\s*\\[[-\\w]+\\])?(?:\\s*\\(\"[^\"]*\"(?:,\\s*\"[^\"]*\")*\\))?(?=\\s*=)/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: {\r\n        keyword: /^[-A-Z\\d]+/,\r\n        language: {\r\n          pattern: /^(\\s*)\\[[-\\w]+\\]/,\r\n          lookbehind: true,\r\n          inside: {\r\n            punctuation: /^\\[|\\]$/,\r\n            property: /[-\\w]+/\r\n          }\r\n        },\r\n        'sub-key': {\r\n          pattern: /^(\\s*)\\S[\\s\\S]*/,\r\n          lookbehind: true,\r\n          inside: {\r\n            parameter: {\r\n              pattern: /\"[^\"]*\"/,\r\n              alias: 'property'\r\n            },\r\n            punctuation: /^\\(|\\)$|,/\r\n          }\r\n        }\r\n      }\r\n    },\r\n    operator: /=/,\r\n    tlist: {\r\n      pattern:\r\n        /TLIST\\s*\\(\\s*\\w+(?:(?:\\s*,\\s*\"[^\"]*\")+|\\s*,\\s*\"[^\"]*\"-\"[^\"]*\")?\\s*\\)/,\r\n      greedy: true,\r\n      inside: {\r\n        function: /^TLIST/,\r\n        property: {\r\n          pattern: /^(\\s*\\(\\s*)\\w+/,\r\n          lookbehind: true\r\n        },\r\n        string: /\"[^\"]*\"/,\r\n        punctuation: /[(),]/,\r\n        operator: /-/\r\n      }\r\n    },\r\n    punctuation: /[;,]/,\r\n    number: {\r\n      pattern: /(^|\\s)\\d+(?:\\.\\d+)?(?!\\S)/,\r\n      lookbehind: true\r\n    },\r\n    boolean: /NO|YES/\r\n  }\r\n  Prism.languages.px = Prism.languages.pcaxis\r\n}\r\n", "// @ts-nocheck\r\npeoplecode.displayName = 'peoplecode'\r\npeoplecode.aliases = ['pcode']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function peoplecode(Prism) {\r\n  Prism.languages.peoplecode = {\r\n    comment: RegExp(\r\n      [\r\n        // C-style multiline comments\r\n        /\\/\\*[\\s\\S]*?\\*\\//.source,\r\n        // REM comments\r\n        /\\bREM[^;]*;/.source,\r\n        // Nested <* *> comments\r\n        /<\\*(?:[^<*]|\\*(?!>)|<(?!\\*)|<\\*(?:(?!\\*>)[\\s\\S])*\\*>)*\\*>/.source,\r\n        // /+ +/ comments\r\n        /\\/\\+[\\s\\S]*?\\+\\//.source\r\n      ].join('|')\r\n    ),\r\n    string: {\r\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\r\n      greedy: true\r\n    },\r\n    variable: /%\\w+/,\r\n    'function-definition': {\r\n      pattern: /((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,\r\n      lookbehind: true,\r\n      alias: 'function'\r\n    },\r\n    'class-name': {\r\n      pattern:\r\n        /((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,\r\n      lookbehind: true,\r\n      inside: {\r\n        punctuation: /:/\r\n      }\r\n    },\r\n    keyword:\r\n      /\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\r\n    'operator-keyword': {\r\n      pattern: /\\b(?:and|not|or)\\b/i,\r\n      alias: 'operator'\r\n    },\r\n    function: /[_a-z]\\w*(?=\\s*\\()/i,\r\n    boolean: /\\b(?:false|true)\\b/i,\r\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\r\n    operator: /<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,\r\n    punctuation: /[:.;,()[\\]]/\r\n  }\r\n  Prism.languages.pcode = Prism.languages.peoplecode\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJavadoclike from './javadoclike.js'\r\nimport refractorPhp from './php.js'\r\nphpdoc.displayName = 'phpdoc'\r\nphpdoc.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function phpdoc(Prism) {\r\n  Prism.register(refractorJavadoclike)\r\n  Prism.register(refractorPhp)\r\n  ;(function (Prism) {\r\n    var typeExpression = /(?:\\b[a-zA-Z]\\w*|[|\\\\[\\]])+/.source\r\n    Prism.languages.phpdoc = Prism.languages.extend('javadoclike', {\r\n      parameter: {\r\n        pattern: RegExp(\r\n          '(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:' +\r\n            typeExpression +\r\n            '\\\\s+)?)\\\\$\\\\w+'\r\n        ),\r\n        lookbehind: true\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('phpdoc', 'keyword', {\r\n      'class-name': [\r\n        {\r\n          pattern: RegExp(\r\n            '(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)' +\r\n              typeExpression\r\n          ),\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword:\r\n              /\\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\\b/,\r\n            punctuation: /[|\\\\[\\]()]/\r\n          }\r\n        }\r\n      ]\r\n    })\r\n    Prism.languages.javadoclike.addSupport('php', Prism.languages.phpdoc)\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorPhp from './php.js'\r\nphpExtras.displayName = 'php-extras'\r\nphpExtras.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function phpExtras(Prism) {\r\n  Prism.register(refractorPhp)\r\n  Prism.languages.insertBefore('php', 'variable', {\r\n    this: {\r\n      pattern: /\\$this\\b/,\r\n      alias: 'keyword'\r\n    },\r\n    global:\r\n      /\\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\\b/,\r\n    scope: {\r\n      pattern: /\\b[\\w\\\\]+::/,\r\n      inside: {\r\n        keyword: /\\b(?:parent|self|static)\\b/,\r\n        punctuation: /::|\\\\/\r\n      }\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nplantUml.displayName = 'plant-uml'\r\nplantUml.aliases = ['plantuml']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function plantUml(Prism) {\r\n  ;(function (Prism) {\r\n    var variable = /\\$\\w+|%[a-z]+%/\r\n    var arrowAttr = /\\[[^[\\]]*\\]/.source\r\n    var arrowDirection = /(?:[drlu]|do|down|le|left|ri|right|up)/.source\r\n    var arrowBody =\r\n      '(?:-+' +\r\n      arrowDirection +\r\n      '-+|\\\\.+' +\r\n      arrowDirection +\r\n      '\\\\.+|-+(?:' +\r\n      arrowAttr +\r\n      '-*)?|' +\r\n      arrowAttr +\r\n      '-+|\\\\.+(?:' +\r\n      arrowAttr +\r\n      '\\\\.*)?|' +\r\n      arrowAttr +\r\n      '\\\\.+)'\r\n    var arrowLeft = /(?:<{1,2}|\\/{1,2}|\\\\{1,2}|<\\||[#*^+}xo])/.source\r\n    var arrowRight = /(?:>{1,2}|\\/{1,2}|\\\\{1,2}|\\|>|[#*^+{xo])/.source\r\n    var arrowPrefix = /[[?]?[ox]?/.source\r\n    var arrowSuffix = /[ox]?[\\]?]?/.source\r\n    var arrow =\r\n      arrowPrefix +\r\n      '(?:' +\r\n      arrowBody +\r\n      arrowRight +\r\n      '|' +\r\n      arrowLeft +\r\n      arrowBody +\r\n      '(?:' +\r\n      arrowRight +\r\n      ')?' +\r\n      ')' +\r\n      arrowSuffix\r\n    Prism.languages['plant-uml'] = {\r\n      comment: {\r\n        pattern: /(^[ \\t]*)(?:'.*|\\/'[\\s\\S]*?'\\/)/m,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      preprocessor: {\r\n        pattern: /(^[ \\t]*)!.*/m,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'property',\r\n        inside: {\r\n          variable: variable\r\n        }\r\n      },\r\n      delimiter: {\r\n        pattern: /(^[ \\t]*)@(?:end|start)uml\\b/m,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'punctuation'\r\n      },\r\n      arrow: {\r\n        pattern: RegExp(\r\n          /(^|[^-.<>?|\\\\[\\]ox])/.source + arrow + /(?![-.<>?|\\\\\\]ox])/.source\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'operator',\r\n        inside: {\r\n          expression: {\r\n            pattern: /(\\[)[^[\\]]+(?=\\])/,\r\n            lookbehind: true,\r\n            inside: null // see below\r\n          },\r\n\r\n          punctuation: /\\[(?=$|\\])|^\\]/\r\n        }\r\n      },\r\n      string: {\r\n        pattern: /\"[^\"]*\"/,\r\n        greedy: true\r\n      },\r\n      text: {\r\n        pattern: /(\\[[ \\t]*[\\r\\n]+(?![\\r\\n]))[^\\]]*(?=\\])/,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'string'\r\n      },\r\n      keyword: [\r\n        {\r\n          pattern:\r\n            /^([ \\t]*)(?:abstract\\s+class|end\\s+(?:box|fork|group|merge|note|ref|split|title)|(?:fork|split)(?:\\s+again)?|activate|actor|agent|alt|annotation|artifact|autoactivate|autonumber|backward|binary|boundary|box|break|caption|card|case|circle|class|clock|cloud|collections|component|concise|control|create|critical|database|deactivate|destroy|detach|diamond|else|elseif|end|end[hr]note|endif|endswitch|endwhile|entity|enum|file|folder|footer|frame|group|[hr]?note|header|hexagon|hide|if|interface|label|legend|loop|map|namespace|network|newpage|node|nwdiag|object|opt|package|page|par|participant|person|queue|rectangle|ref|remove|repeat|restore|return|robust|scale|set|show|skinparam|stack|start|state|stop|storage|switch|title|together|usecase|usecase\\/|while)(?=\\s|$)/m,\r\n          lookbehind: true,\r\n          greedy: true\r\n        },\r\n        /\\b(?:elseif|equals|not|while)(?=\\s*\\()/,\r\n        /\\b(?:as|is|then)\\b/\r\n      ],\r\n      divider: {\r\n        pattern: /^==.+==$/m,\r\n        greedy: true,\r\n        alias: 'important'\r\n      },\r\n      time: {\r\n        pattern: /@(?:\\d+(?:[:/]\\d+){2}|[+-]?\\d+|:[a-z]\\w*(?:[+-]\\d+)?)\\b/i,\r\n        greedy: true,\r\n        alias: 'number'\r\n      },\r\n      color: {\r\n        pattern: /#(?:[a-z_]+|[a-fA-F0-9]+)\\b/,\r\n        alias: 'symbol'\r\n      },\r\n      variable: variable,\r\n      punctuation: /[:,;()[\\]{}]|\\.{3}/\r\n    }\r\n    Prism.languages['plant-uml'].arrow.inside.expression.inside =\r\n      Prism.languages['plant-uml']\r\n    Prism.languages['plantuml'] = Prism.languages['plant-uml']\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorSql from './sql.js'\r\nplsql.displayName = 'plsql'\r\nplsql.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function plsql(Prism) {\r\n  Prism.register(refractorSql)\r\n  Prism.languages.plsql = Prism.languages.extend('sql', {\r\n    comment: {\r\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|--.*/,\r\n      greedy: true\r\n    },\r\n    // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-reserved-words-keywords.html\r\n    keyword:\r\n      /\\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\\b/i,\r\n    // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-language-fundamentals.html#GUID-96A42F7C-7A71-4B90-8255-CA9C8BD9722E\r\n    operator: /:=?|=>|[<>^~!]=|\\.\\.|\\|\\||\\*\\*|[-+*/%<>=@]/\r\n  })\r\n  Prism.languages.insertBefore('plsql', 'operator', {\r\n    label: {\r\n      pattern: /<<\\s*\\w+\\s*>>/,\r\n      alias: 'symbol'\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\npowerquery.displayName = 'powerquery'\r\npowerquery.aliases = ['mscript', 'pq']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function powerquery(Prism) {\r\n  // https://docs.microsoft.com/en-us/powerquery-m/power-query-m-language-specification\r\n\r\n  Prism.languages.powerquery = {\r\n    comment: {\r\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    'quoted-identifier': {\r\n      pattern: /#\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /(?:#!)?\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\r\n      greedy: true\r\n    },\r\n    constant: [\r\n      /\\bDay\\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\\b/,\r\n      /\\bTraceLevel\\.(?:Critical|Error|Information|Verbose|Warning)\\b/,\r\n      /\\bOccurrence\\.(?:All|First|Last)\\b/,\r\n      /\\bOrder\\.(?:Ascending|Descending)\\b/,\r\n      /\\bRoundingMode\\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\\b/,\r\n      /\\bMissingField\\.(?:Error|Ignore|UseNull)\\b/,\r\n      /\\bQuoteStyle\\.(?:Csv|None)\\b/,\r\n      /\\bJoinKind\\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\\b/,\r\n      /\\bGroupKind\\.(?:Global|Local)\\b/,\r\n      /\\bExtraValues\\.(?:Error|Ignore|List)\\b/,\r\n      /\\bJoinAlgorithm\\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\\b/,\r\n      /\\bJoinSide\\.(?:Left|Right)\\b/,\r\n      /\\bPrecision\\.(?:Decimal|Double)\\b/,\r\n      /\\bRelativePosition\\.From(?:End|Start)\\b/,\r\n      /\\bTextEncoding\\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\\b/,\r\n      /\\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\\.Type\\b/,\r\n      /\\bnull\\b/\r\n    ],\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    keyword:\r\n      /\\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\\b/,\r\n    function: {\r\n      pattern: /(^|[^#\\w.])[a-z_][\\w.]*(?=\\s*\\()/i,\r\n      lookbehind: true\r\n    },\r\n    'data-type': {\r\n      pattern:\r\n        /\\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\\b/,\r\n      alias: 'class-name'\r\n    },\r\n    number: {\r\n      pattern:\r\n        /\\b0x[\\da-f]+\\b|(?:[+-]?(?:\\b\\d+\\.)?\\b\\d+|[+-]\\.\\d+|(^|[^.])\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\r\n      lookbehind: true\r\n    },\r\n    operator: /[-+*\\/&?@^]|<(?:=>?|>)?|>=?|=>?|\\.\\.\\.?/,\r\n    punctuation: /[,;\\[\\](){}]/\r\n  }\r\n  Prism.languages.pq = Prism.languages['powerquery']\r\n  Prism.languages.mscript = Prism.languages['powerquery']\r\n}\r\n", "// @ts-nocheck\r\npowershell.displayName = 'powershell'\r\npowershell.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function powershell(Prism) {\r\n  ;(function (Prism) {\r\n    var powershell = (Prism.languages.powershell = {\r\n      comment: [\r\n        {\r\n          pattern: /(^|[^`])<#[\\s\\S]*?#>/,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern: /(^|[^`])#.*/,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      string: [\r\n        {\r\n          pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\r\n          greedy: true,\r\n          inside: null // see below\r\n        },\r\n        {\r\n          pattern: /'(?:[^']|'')*'/,\r\n          greedy: true\r\n        }\r\n      ],\r\n      // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\r\n      // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\r\n      namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*\\]|[^\\[\\]])*\\]|[^\\[\\]])*\\]/i,\r\n      boolean: /\\$(?:false|true)\\b/i,\r\n      variable: /\\$\\w+\\b/,\r\n      // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\r\n      // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\r\n      // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\r\n      function: [\r\n        /\\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\\b/i,\r\n        /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\r\n      ],\r\n      // per http://technet.microsoft.com/en-us/library/hh847744.aspx\r\n      keyword:\r\n        /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\r\n      operator: {\r\n        pattern:\r\n          /(^|\\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\r\n        lookbehind: true\r\n      },\r\n      punctuation: /[|{}[\\];(),.]/\r\n    })\r\n\r\n    // Variable interpolation inside strings, and nested expressions\r\n    powershell.string[0].inside = {\r\n      function: {\r\n        // Allow for one level of nesting\r\n        pattern: /(^|[^`])\\$\\((?:\\$\\([^\\r\\n()]*\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\r\n        lookbehind: true,\r\n        inside: powershell\r\n      },\r\n      boolean: powershell.boolean,\r\n      variable: powershell.variable\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nprocessing.displayName = 'processing'\r\nprocessing.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function processing(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.processing = Prism.languages.extend('clike', {\r\n    keyword:\r\n      /\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\r\n    // Spaces are allowed between function name and parenthesis\r\n    function: /\\b\\w+(?=\\s*\\()/,\r\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\r\n  })\r\n  Prism.languages.insertBefore('processing', 'number', {\r\n    // Special case: XML is a type\r\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\r\n    type: {\r\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\r\n      alias: 'class-name'\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nprolog.displayName = 'prolog'\r\nprolog.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function prolog(Prism) {\r\n  Prism.languages.prolog = {\r\n    // Syntax depends on the implementation\r\n    comment: {\r\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\r\n      greedy: true\r\n    },\r\n    // Depending on the implementation, strings may allow escaped newlines and quote-escape\r\n    string: {\r\n      pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1(?!\\1)/,\r\n      greedy: true\r\n    },\r\n    builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\r\n    // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\r\n    function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\r\n    number: /\\b\\d+(?:\\.\\d*)?/,\r\n    // Custom operators are allowed\r\n    operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\r\n    punctuation: /[(){}\\[\\],]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\npromql.displayName = 'promql'\r\npromql.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function promql(Prism) {\r\n  // Thanks to: https://github.com/prometheus-community/monaco-promql/blob/master/src/promql/promql.ts\r\n  // As well as: https://kausal.co/blog/slate-prism-add-new-syntax-promql/\r\n\r\n  ;(function (Prism) {\r\n    // PromQL Aggregation Operators\r\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#aggregation-operators)\r\n    var aggregations = [\r\n      'sum',\r\n      'min',\r\n      'max',\r\n      'avg',\r\n      'group',\r\n      'stddev',\r\n      'stdvar',\r\n      'count',\r\n      'count_values',\r\n      'bottomk',\r\n      'topk',\r\n      'quantile'\r\n    ]\r\n\r\n    // PromQL vector matching + the by and without clauses\r\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#vector-matching)\r\n    var vectorMatching = [\r\n      'on',\r\n      'ignoring',\r\n      'group_right',\r\n      'group_left',\r\n      'by',\r\n      'without'\r\n    ]\r\n\r\n    // PromQL offset modifier\r\n    // (https://prometheus.io/docs/prometheus/latest/querying/basics/#offset-modifier)\r\n    var offsetModifier = ['offset']\r\n    var keywords = aggregations.concat(vectorMatching, offsetModifier)\r\n    Prism.languages.promql = {\r\n      comment: {\r\n        pattern: /(^[ \\t]*)#.*/m,\r\n        lookbehind: true\r\n      },\r\n      'vector-match': {\r\n        // Match the comma-separated label lists inside vector matching:\r\n        pattern: new RegExp(\r\n          '((?:' + vectorMatching.join('|') + ')\\\\s*)\\\\([^)]*\\\\)'\r\n        ),\r\n        lookbehind: true,\r\n        inside: {\r\n          'label-key': {\r\n            pattern: /\\b[^,]+\\b/,\r\n            alias: 'attr-name'\r\n          },\r\n          punctuation: /[(),]/\r\n        }\r\n      },\r\n      'context-labels': {\r\n        pattern: /\\{[^{}]*\\}/,\r\n        inside: {\r\n          'label-key': {\r\n            pattern: /\\b[a-z_]\\w*(?=\\s*(?:=|![=~]))/,\r\n            alias: 'attr-name'\r\n          },\r\n          'label-value': {\r\n            pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\r\n            greedy: true,\r\n            alias: 'attr-value'\r\n          },\r\n          punctuation: /\\{|\\}|=~?|![=~]|,/\r\n        }\r\n      },\r\n      'context-range': [\r\n        {\r\n          pattern: /\\[[\\w\\s:]+\\]/,\r\n          // [1m]\r\n          inside: {\r\n            punctuation: /\\[|\\]|:/,\r\n            'range-duration': {\r\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\r\n              alias: 'number'\r\n            }\r\n          }\r\n        },\r\n        {\r\n          pattern: /(\\boffset\\s+)\\w+/,\r\n          // offset 1m\r\n          lookbehind: true,\r\n          inside: {\r\n            'range-duration': {\r\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\r\n              alias: 'number'\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      keyword: new RegExp('\\\\b(?:' + keywords.join('|') + ')\\\\b', 'i'),\r\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n      number:\r\n        /[-+]?(?:(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[-+]?\\d+)?\\b|\\b(?:0x[0-9a-f]+|nan|inf)\\b)/i,\r\n      operator: /[\\^*/%+-]|==|!=|<=|<|>=|>|\\b(?:and|or|unless)\\b/i,\r\n      punctuation: /[{};()`,.[\\]]/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nproperties.displayName = 'properties'\r\nproperties.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function properties(Prism) {\r\n  Prism.languages.properties = {\r\n    comment: /^[ \\t]*[#!].*$/m,\r\n    value: {\r\n      pattern:\r\n        /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?: *[=:] *(?! )| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\r\n      lookbehind: true,\r\n      alias: 'attr-value'\r\n    },\r\n    key: {\r\n      pattern: /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?= *[=:]| )/m,\r\n      alias: 'attr-name'\r\n    },\r\n    punctuation: /[=:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nprotobuf.displayName = 'protobuf'\r\nprotobuf.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function protobuf(Prism) {\r\n  Prism.register(refractorClike)\r\n  ;(function (Prism) {\r\n    var builtinTypes =\r\n      /\\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\\b/\r\n    Prism.languages.protobuf = Prism.languages.extend('clike', {\r\n      'class-name': [\r\n        {\r\n          pattern:\r\n            /(\\b(?:enum|extend|message|service)\\s+)[A-Za-z_]\\w*(?=\\s*\\{)/,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern:\r\n            /(\\b(?:rpc\\s+\\w+|returns)\\s*\\(\\s*(?:stream\\s+)?)\\.?[A-Za-z_]\\w*(?:\\.[A-Za-z_]\\w*)*(?=\\s*\\))/,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      keyword:\r\n        /\\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\\s+\\w)|service|stream|syntax|to)\\b(?!\\s*=\\s*\\d)/,\r\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i\r\n    })\r\n    Prism.languages.insertBefore('protobuf', 'operator', {\r\n      map: {\r\n        pattern: /\\bmap<\\s*[\\w.]+\\s*,\\s*[\\w.]+\\s*>(?=\\s+[a-z_]\\w*\\s*[=;])/i,\r\n        alias: 'class-name',\r\n        inside: {\r\n          punctuation: /[<>.,]/,\r\n          builtin: builtinTypes\r\n        }\r\n      },\r\n      builtin: builtinTypes,\r\n      'positional-class-name': {\r\n        pattern: /(?:\\b|\\B\\.)[a-z_]\\w*(?:\\.[a-z_]\\w*)*(?=\\s+[a-z_]\\w*\\s*[=;])/i,\r\n        alias: 'class-name',\r\n        inside: {\r\n          punctuation: /\\./\r\n        }\r\n      },\r\n      annotation: {\r\n        pattern: /(\\[\\s*)[a-z_]\\w*(?=\\s*=)/i,\r\n        lookbehind: true\r\n      }\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nstylus.displayName = 'stylus'\r\nstylus.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function stylus(Prism) {\r\n  ;(function (Prism) {\r\n    var unit = {\r\n      pattern: /(\\b\\d+)(?:%|[a-z]+)/,\r\n      lookbehind: true\r\n    }\r\n    // 123 -123 .123 -.123 12.3 -12.3\r\n    var number = {\r\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\r\n      lookbehind: true\r\n    }\r\n    var inside = {\r\n      comment: {\r\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\r\n        lookbehind: true\r\n      },\r\n      url: {\r\n        pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\r\n        greedy: true\r\n      },\r\n      string: {\r\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\r\n        greedy: true\r\n      },\r\n      interpolation: null,\r\n      // See below\r\n      func: null,\r\n      // See below\r\n      important: /\\B!(?:important|optional)\\b/i,\r\n      keyword: {\r\n        pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\r\n        lookbehind: true\r\n      },\r\n      hexcode: /#[\\da-f]{3,6}/i,\r\n      color: [\r\n        /\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\r\n        {\r\n          pattern:\r\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\r\n          inside: {\r\n            unit: unit,\r\n            number: number,\r\n            function: /[\\w-]+(?=\\()/,\r\n            punctuation: /[(),]/\r\n          }\r\n        }\r\n      ],\r\n      entity: /\\\\[\\da-f]{1,8}/i,\r\n      unit: unit,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      operator: [\r\n        // We want non-word chars around \"-\" because it is\r\n        // accepted in property names.\r\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\r\n      ],\r\n      number: number,\r\n      punctuation: /[{}()\\[\\];:,]/\r\n    }\r\n    inside['interpolation'] = {\r\n      pattern: /\\{[^\\r\\n}:]+\\}/,\r\n      alias: 'variable',\r\n      inside: {\r\n        delimiter: {\r\n          pattern: /^\\{|\\}$/,\r\n          alias: 'punctuation'\r\n        },\r\n        rest: inside\r\n      }\r\n    }\r\n    inside['func'] = {\r\n      pattern: /[\\w-]+\\([^)]*\\).*/,\r\n      inside: {\r\n        function: /^[^(]+/,\r\n        rest: inside\r\n      }\r\n    }\r\n    Prism.languages.stylus = {\r\n      'atrule-declaration': {\r\n        pattern: /(^[ \\t]*)@.+/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          atrule: /^@[\\w-]+/,\r\n          rest: inside\r\n        }\r\n      },\r\n      'variable-declaration': {\r\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          variable: /^\\S+/,\r\n          rest: inside\r\n        }\r\n      },\r\n      statement: {\r\n        pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          keyword: /^\\S+/,\r\n          rest: inside\r\n        }\r\n      },\r\n      // A property/value pair cannot end with a comma or a brace\r\n      // It cannot have indented content unless it ended with a semicolon\r\n      'property-declaration': {\r\n        pattern:\r\n          /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          property: {\r\n            pattern: /^[^\\s:]+/,\r\n            inside: {\r\n              interpolation: inside.interpolation\r\n            }\r\n          },\r\n          rest: inside\r\n        }\r\n      },\r\n      // A selector can contain parentheses only as part of a pseudo-element\r\n      // It can span multiple lines.\r\n      // It must end with a comma or an accolade or have indented content.\r\n      selector: {\r\n        pattern:\r\n          /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          interpolation: inside.interpolation,\r\n          comment: inside.comment,\r\n          punctuation: /[{},]/\r\n        }\r\n      },\r\n      func: inside.func,\r\n      string: inside.string,\r\n      comment: {\r\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      interpolation: inside.interpolation,\r\n      punctuation: /[{}()\\[\\];:.]/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkupTemplating from './markup-templating.js'\r\ntwig.displayName = 'twig'\r\ntwig.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function twig(Prism) {\r\n  Prism.register(refractorMarkupTemplating)\r\n  Prism.languages.twig = {\r\n    comment: /^\\{#[\\s\\S]*?#\\}$/,\r\n    'tag-name': {\r\n      pattern: /(^\\{%-?\\s*)\\w+/,\r\n      lookbehind: true,\r\n      alias: 'keyword'\r\n    },\r\n    delimiter: {\r\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\r\n      alias: 'punctuation'\r\n    },\r\n    string: {\r\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      inside: {\r\n        punctuation: /^['\"]|['\"]$/\r\n      }\r\n    },\r\n    keyword: /\\b(?:even|if|odd)\\b/,\r\n    boolean: /\\b(?:false|null|true)\\b/,\r\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\r\n    operator: [\r\n      {\r\n        pattern:\r\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\r\n        lookbehind: true\r\n      },\r\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\r\n    ],\r\n    punctuation: /[()\\[\\]{}:.,]/\r\n  }\r\n  Prism.hooks.add('before-tokenize', function (env) {\r\n    if (env.language !== 'twig') {\r\n      return\r\n    }\r\n    var pattern = /\\{(?:#[\\s\\S]*?#|%[\\s\\S]*?%|\\{[\\s\\S]*?\\})\\}/g\r\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'twig', pattern)\r\n  })\r\n  Prism.hooks.add('after-tokenize', function (env) {\r\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'twig')\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJavascript from './javascript.js'\r\nimport refractorMarkup from './markup.js'\r\npug.displayName = 'pug'\r\npug.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function pug(Prism) {\r\n  Prism.register(refractorJavascript)\r\n  Prism.register(refractorMarkup)\r\n  ;(function (Prism) {\r\n    // TODO:\r\n    // - Add CSS highlighting inside <style> tags\r\n    // - Add support for multi-line code blocks\r\n    // - Add support for interpolation #{} and !{}\r\n    // - Add support for tag interpolation #[]\r\n    // - Add explicit support for plain text using |\r\n    // - Add support for markup embedded in plain text\r\n\r\n    Prism.languages.pug = {\r\n      // Multiline stuff should appear before the rest\r\n\r\n      // This handles both single-line and multi-line comments\r\n      comment: {\r\n        pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,\r\n        lookbehind: true\r\n      },\r\n      // All the tag-related part is in lookbehind\r\n      // so that it can be highlighted by the \"tag\" pattern\r\n      'multiline-script': {\r\n        pattern:\r\n          /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\r\n        lookbehind: true,\r\n        inside: Prism.languages.javascript\r\n      },\r\n      // See at the end of the file for known filters\r\n      filter: {\r\n        pattern:\r\n          /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          'filter-name': {\r\n            pattern: /^:[\\w-]+/,\r\n            alias: 'variable'\r\n          },\r\n          text: /\\S[\\s\\S]*/\r\n        }\r\n      },\r\n      'multiline-plain-text': {\r\n        pattern:\r\n          /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\r\n        lookbehind: true\r\n      },\r\n      markup: {\r\n        pattern: /(^[\\t ]*)<.+/m,\r\n        lookbehind: true,\r\n        inside: Prism.languages.markup\r\n      },\r\n      doctype: {\r\n        pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\r\n        lookbehind: true\r\n      },\r\n      // This handle all conditional and loop keywords\r\n      'flow-control': {\r\n        pattern:\r\n          /(^[\\t ]*)(?:case|default|each|else|if|unless|when|while)\\b(?: .+)?/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          each: {\r\n            pattern: /^each .+? in\\b/,\r\n            inside: {\r\n              keyword: /\\b(?:each|in)\\b/,\r\n              punctuation: /,/\r\n            }\r\n          },\r\n          branch: {\r\n            pattern: /^(?:case|default|else|if|unless|when|while)\\b/,\r\n            alias: 'keyword'\r\n          },\r\n          rest: Prism.languages.javascript\r\n        }\r\n      },\r\n      keyword: {\r\n        pattern: /(^[\\t ]*)(?:append|block|extends|include|prepend)\\b.+/m,\r\n        lookbehind: true\r\n      },\r\n      mixin: [\r\n        // Declaration\r\n        {\r\n          pattern: /(^[\\t ]*)mixin .+/m,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /^mixin/,\r\n            function: /\\w+(?=\\s*\\(|\\s*$)/,\r\n            punctuation: /[(),.]/\r\n          }\r\n        },\r\n        // Usage\r\n        {\r\n          pattern: /(^[\\t ]*)\\+.+/m,\r\n          lookbehind: true,\r\n          inside: {\r\n            name: {\r\n              pattern: /^\\+\\w+/,\r\n              alias: 'function'\r\n            },\r\n            rest: Prism.languages.javascript\r\n          }\r\n        }\r\n      ],\r\n      script: {\r\n        pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,\r\n        lookbehind: true,\r\n        inside: Prism.languages.javascript\r\n      },\r\n      'plain-text': {\r\n        pattern:\r\n          /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,\r\n        lookbehind: true\r\n      },\r\n      tag: {\r\n        pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          attributes: [\r\n            {\r\n              pattern: /&[^(]+\\([^)]+\\)/,\r\n              inside: Prism.languages.javascript\r\n            },\r\n            {\r\n              pattern: /\\([^)]+\\)/,\r\n              inside: {\r\n                'attr-value': {\r\n                  pattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\r\n                  lookbehind: true,\r\n                  inside: Prism.languages.javascript\r\n                },\r\n                'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\r\n                punctuation: /[!=(),]+/\r\n              }\r\n            }\r\n          ],\r\n          punctuation: /:/,\r\n          'attr-id': /#[\\w\\-]+/,\r\n          'attr-class': /\\.[\\w\\-]+/\r\n        }\r\n      },\r\n      code: [\r\n        {\r\n          pattern: /(^[\\t ]*(?:-|!?=)).+/m,\r\n          lookbehind: true,\r\n          inside: Prism.languages.javascript\r\n        }\r\n      ],\r\n      punctuation: /[.\\-!=|]+/\r\n    }\r\n    var filter_pattern =\r\n      /(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/\r\n        .source\r\n\r\n    // Non exhaustive list of available filters and associated languages\r\n    var filters = [\r\n      {\r\n        filter: 'atpl',\r\n        language: 'twig'\r\n      },\r\n      {\r\n        filter: 'coffee',\r\n        language: 'coffeescript'\r\n      },\r\n      'ejs',\r\n      'handlebars',\r\n      'less',\r\n      'livescript',\r\n      'markdown',\r\n      {\r\n        filter: 'sass',\r\n        language: 'scss'\r\n      },\r\n      'stylus'\r\n    ]\r\n    var all_filters = {}\r\n    for (var i = 0, l = filters.length; i < l; i++) {\r\n      var filter = filters[i]\r\n      filter =\r\n        typeof filter === 'string'\r\n          ? {\r\n              filter: filter,\r\n              language: filter\r\n            }\r\n          : filter\r\n      if (Prism.languages[filter.language]) {\r\n        all_filters['filter-' + filter.filter] = {\r\n          pattern: RegExp(\r\n            filter_pattern.replace('<filter_name>', function () {\r\n              return filter.filter\r\n            }),\r\n            'm'\r\n          ),\r\n          lookbehind: true,\r\n          inside: {\r\n            'filter-name': {\r\n              pattern: /^:[\\w-]+/,\r\n              alias: 'variable'\r\n            },\r\n            text: {\r\n              pattern: /\\S[\\s\\S]*/,\r\n              alias: [filter.language, 'language-' + filter.language],\r\n              inside: Prism.languages[filter.language]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    Prism.languages.insertBefore('pug', 'filter', all_filters)\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\npuppet.displayName = 'puppet'\r\npuppet.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function puppet(Prism) {\r\n  ;(function (Prism) {\r\n    Prism.languages.puppet = {\r\n      heredoc: [\r\n        // Matches the content of a quoted heredoc string (subject to interpolation)\r\n        {\r\n          pattern:\r\n            /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\r\n          lookbehind: true,\r\n          alias: 'string',\r\n          inside: {\r\n            // Matches the end tag\r\n            punctuation: /(?=\\S).*\\S(?= *$)/\r\n            // See interpolation below\r\n          }\r\n        },\r\n        // Matches the content of an unquoted heredoc string (no interpolation)\r\n        {\r\n          pattern:\r\n            /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          alias: 'string',\r\n          inside: {\r\n            // Matches the end tag\r\n            punctuation: /(?=\\S).*\\S(?= *$)/\r\n          }\r\n        },\r\n        // Matches the start tag of heredoc strings\r\n        {\r\n          pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\r\n          alias: 'string',\r\n          inside: {\r\n            punctuation: {\r\n              pattern: /(\\().+?(?=\\))/,\r\n              lookbehind: true\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      'multiline-comment': {\r\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'comment'\r\n      },\r\n      regex: {\r\n        // Must be prefixed with the keyword \"node\" or a non-word char\r\n        pattern:\r\n          /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          // Extended regexes must have the x flag. They can contain single-line comments.\r\n          'extended-regex': {\r\n            pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\r\n            inside: {\r\n              comment: /#.*/\r\n            }\r\n          }\r\n        }\r\n      },\r\n      comment: {\r\n        pattern: /(^|[^\\\\])#.*/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      string: {\r\n        // Allow for one nested level of double quotes inside interpolation\r\n        pattern:\r\n          /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\r\n        greedy: true,\r\n        inside: {\r\n          'double-quoted': {\r\n            pattern: /^\"[\\s\\S]*\"$/,\r\n            inside: {\r\n              // See interpolation below\r\n            }\r\n          }\r\n        }\r\n      },\r\n      variable: {\r\n        pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\r\n        inside: {\r\n          punctuation: /::/\r\n        }\r\n      },\r\n      'attr-name': /(?:\\b\\w+|\\*)(?=\\s*=>)/,\r\n      function: [\r\n        {\r\n          pattern: /(\\.)(?!\\d)\\w+/,\r\n          lookbehind: true\r\n        },\r\n        /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\r\n      ],\r\n      number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      // Includes words reserved for future use\r\n      keyword:\r\n        /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\r\n      datatype: {\r\n        pattern:\r\n          /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\r\n        alias: 'symbol'\r\n      },\r\n      operator:\r\n        /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\r\n      punctuation: /[\\[\\]{}().,;]|:+/\r\n    }\r\n    var interpolation = [\r\n      {\r\n        // Allow for one nested level of braces inside interpolation\r\n        pattern:\r\n          /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\r\n        lookbehind: true,\r\n        inside: {\r\n          'short-variable': {\r\n            // Negative look-ahead prevent wrong highlighting of functions\r\n            pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\r\n            lookbehind: true,\r\n            alias: 'variable',\r\n            inside: {\r\n              punctuation: /::/\r\n            }\r\n          },\r\n          delimiter: {\r\n            pattern: /^\\$/,\r\n            alias: 'variable'\r\n          },\r\n          rest: Prism.languages.puppet\r\n        }\r\n      },\r\n      {\r\n        pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\r\n        lookbehind: true,\r\n        alias: 'variable',\r\n        inside: {\r\n          punctuation: /::/\r\n        }\r\n      }\r\n    ]\r\n    Prism.languages.puppet['heredoc'][0].inside.interpolation = interpolation\r\n    Prism.languages.puppet['string'].inside[\r\n      'double-quoted'\r\n    ].inside.interpolation = interpolation\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\npure.displayName = 'pure'\r\npure.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function pure(Prism) {\r\n  ;(function (Prism) {\r\n    // https://agraef.github.io/pure-docs/pure.html#lexical-matters\r\n\r\n    Prism.languages.pure = {\r\n      comment: [\r\n        {\r\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\r\n          lookbehind: true\r\n        },\r\n        /#!.+/\r\n      ],\r\n      'inline-lang': {\r\n        pattern: /%<[\\s\\S]+?%>/,\r\n        greedy: true,\r\n        inside: {\r\n          lang: {\r\n            pattern: /(^%< *)-\\*-.+?-\\*-/,\r\n            lookbehind: true,\r\n            alias: 'comment'\r\n          },\r\n          delimiter: {\r\n            pattern: /^%<.*|%>$/,\r\n            alias: 'punctuation'\r\n          }\r\n        }\r\n      },\r\n      string: {\r\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\r\n        greedy: true\r\n      },\r\n      number: {\r\n        // The look-behind prevents wrong highlighting of the .. operator\r\n        pattern:\r\n          /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?L?)/i,\r\n        lookbehind: true\r\n      },\r\n      keyword:\r\n        /\\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\r\n      function:\r\n        /\\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\r\n      special: {\r\n        pattern: /\\b__[a-z]+__\\b/i,\r\n        alias: 'builtin'\r\n      },\r\n      // Any combination of operator chars can be an operator\r\n      // eslint-disable-next-line no-misleading-character-class\r\n      operator:\r\n        /(?:[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]|\\b_+\\b)+|\\b(?:and|div|mod|not|or)\\b/,\r\n      // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\r\n      punctuation: /[(){}\\[\\];,|]/\r\n    }\r\n    var inlineLanguages = [\r\n      'c',\r\n      {\r\n        lang: 'c++',\r\n        alias: 'cpp'\r\n      },\r\n      'fortran'\r\n    ]\r\n    var inlineLanguageRe = /%< *-\\*- *<lang>\\d* *-\\*-[\\s\\S]+?%>/.source\r\n    inlineLanguages.forEach(function (lang) {\r\n      var alias = lang\r\n      if (typeof lang !== 'string') {\r\n        alias = lang.alias\r\n        lang = lang.lang\r\n      }\r\n      if (Prism.languages[alias]) {\r\n        var o = {}\r\n        o['inline-lang-' + alias] = {\r\n          pattern: RegExp(\r\n            inlineLanguageRe.replace(\r\n              '<lang>',\r\n              lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')\r\n            ),\r\n            'i'\r\n          ),\r\n          inside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\r\n        }\r\n        o['inline-lang-' + alias].inside.rest = Prism.util.clone(\r\n          Prism.languages[alias]\r\n        )\r\n        Prism.languages.insertBefore('pure', 'inline-lang', o)\r\n      }\r\n    })\r\n\r\n    // C is the default inline language\r\n    if (Prism.languages.c) {\r\n      Prism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(\r\n        Prism.languages.c\r\n      )\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\npurebasic.displayName = 'purebasic'\r\npurebasic.aliases = ['pbfasm']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function purebasic(Prism) {\r\n  Prism.register(refractorClike)\r\n  /*\r\nOriginal Code by Bas Groothedde\r\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\r\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\r\nslightly changed to pass all tests\r\n*/\r\n\r\n  // PureBasic support, steal stuff from ansi-c\r\n  Prism.languages.purebasic = Prism.languages.extend('clike', {\r\n    comment: /;.*/,\r\n    keyword:\r\n      /\\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\\b/i,\r\n    function: /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\r\n    number: /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\r\n    operator:\r\n      /(?:@\\*?|\\?|\\*)\\w+\\$?|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\r\n  })\r\n  Prism.languages.insertBefore('purebasic', 'keyword', {\r\n    tag: /#\\w+\\$?/,\r\n    asm: {\r\n      pattern: /(^[\\t ]*)!.*/m,\r\n      lookbehind: true,\r\n      alias: 'tag',\r\n      inside: {\r\n        comment: /;.*/,\r\n        string: {\r\n          pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n          greedy: true\r\n        },\r\n        // Anonymous label references, i.e.: jmp @b\r\n        'label-reference-anonymous': {\r\n          pattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\r\n          lookbehind: true,\r\n          alias: 'fasm-label'\r\n        },\r\n        // Named label reference, i.e.: jne label1\r\n        'label-reference-addressed': {\r\n          pattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\r\n          lookbehind: true,\r\n          alias: 'fasm-label'\r\n        },\r\n        keyword: [\r\n          /\\b(?:extern|global)\\b[^;\\r\\n]*/i,\r\n          /\\b(?:CPU|DEFAULT|FLOAT)\\b.*/\r\n        ],\r\n        function: {\r\n          pattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\r\n          lookbehind: true\r\n        },\r\n        'function-inline': {\r\n          pattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\r\n          lookbehind: true,\r\n          alias: 'function'\r\n        },\r\n        label: {\r\n          pattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\r\n          lookbehind: true,\r\n          alias: 'fasm-label'\r\n        },\r\n        register:\r\n          /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\\d+)\\b/i,\r\n        number:\r\n          /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\r\n        operator: /[\\[\\]*+\\-/%<>=&|$!,.:]/\r\n      }\r\n    }\r\n  })\r\n  delete Prism.languages.purebasic['class-name']\r\n  delete Prism.languages.purebasic['boolean']\r\n  Prism.languages.pbfasm = Prism.languages['purebasic']\r\n}\r\n", "// @ts-nocheck\r\nimport refractorHaskell from './haskell.js'\r\npurescript.displayName = 'purescript'\r\npurescript.aliases = ['purs']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function purescript(Prism) {\r\n  Prism.register(refractorHaskell)\r\n  Prism.languages.purescript = Prism.languages.extend('haskell', {\r\n    keyword:\r\n      /\\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b|∀/,\r\n    'import-statement': {\r\n      // The imported or hidden names are not included in this import\r\n      // statement. This is because we want to highlight those exactly like\r\n      // we do for the names in the program.\r\n      pattern:\r\n        /(^[\\t ]*)import\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        keyword: /\\b(?:as|hiding|import)\\b/,\r\n        punctuation: /\\./\r\n      }\r\n    },\r\n    // These are builtin functions only. Constructors are highlighted later as a constant.\r\n    builtin:\r\n      /\\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\\b/,\r\n    operator: [\r\n      // Infix operators\r\n      Prism.languages.haskell.operator[0],\r\n      // ASCII operators\r\n      Prism.languages.haskell.operator[2],\r\n      // All UTF16 Unicode operator symbols\r\n      // This regex is equivalent to /(?=[\\x80-\\uFFFF])[\\p{gc=Math_Symbol}\\p{gc=Currency_Symbol}\\p{Modifier_Symbol}\\p{Other_Symbol}]/u\r\n      // See https://github.com/PrismJS/prism/issues/3006 for more details.\r\n      /[\\xa2-\\xa6\\xa8\\xa9\\xac\\xae-\\xb1\\xb4\\xb8\\xd7\\xf7\\u02c2-\\u02c5\\u02d2-\\u02df\\u02e5-\\u02eb\\u02ed\\u02ef-\\u02ff\\u0375\\u0384\\u0385\\u03f6\\u0482\\u058d-\\u058f\\u0606-\\u0608\\u060b\\u060e\\u060f\\u06de\\u06e9\\u06fd\\u06fe\\u07f6\\u07fe\\u07ff\\u09f2\\u09f3\\u09fa\\u09fb\\u0af1\\u0b70\\u0bf3-\\u0bfa\\u0c7f\\u0d4f\\u0d79\\u0e3f\\u0f01-\\u0f03\\u0f13\\u0f15-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcc\\u0fce\\u0fcf\\u0fd5-\\u0fd8\\u109e\\u109f\\u1390-\\u1399\\u166d\\u17db\\u1940\\u19de-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u1fbd\\u1fbf-\\u1fc1\\u1fcd-\\u1fcf\\u1fdd-\\u1fdf\\u1fed-\\u1fef\\u1ffd\\u1ffe\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u20a0-\\u20bf\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a\\u213b\\u2140-\\u2144\\u214a-\\u214d\\u214f\\u218a\\u218b\\u2190-\\u2307\\u230c-\\u2328\\u232b-\\u2426\\u2440-\\u244a\\u249c-\\u24e9\\u2500-\\u2767\\u2794-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2b73\\u2b76-\\u2b95\\u2b97-\\u2bff\\u2ce5-\\u2cea\\u2e50\\u2e51\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u2ffb\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303e\\u303f\\u309b\\u309c\\u3190\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3247\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua700-\\ua716\\ua720\\ua721\\ua789\\ua78a\\ua828-\\ua82b\\ua836-\\ua839\\uaa77-\\uaa79\\uab5b\\uab6a\\uab6b\\ufb29\\ufbb2-\\ufbc1\\ufdfc\\ufdfd\\ufe62\\ufe64-\\ufe66\\ufe69\\uff04\\uff0b\\uff1c-\\uff1e\\uff3e\\uff40\\uff5c\\uff5e\\uffe0-\\uffe6\\uffe8-\\uffee\\ufffc\\ufffd]/\r\n    ]\r\n  })\r\n  Prism.languages.purs = Prism.languages.purescript\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nqsharp.displayName = 'qsharp'\r\nqsharp.aliases = ['qs']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function qsharp(Prism) {\r\n  Prism.register(refractorClike)\r\n  ;(function (Prism) {\r\n    /**\r\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\r\n     *\r\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\r\n     *\r\n     * @param {string} pattern the given pattern.\r\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\r\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\r\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\r\n     */\r\n    function replace(pattern, replacements) {\r\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\r\n        return '(?:' + replacements[+index] + ')'\r\n      })\r\n    }\r\n    /**\r\n     * @param {string} pattern\r\n     * @param {string[]} replacements\r\n     * @param {string} [flags]\r\n     * @returns {RegExp}\r\n     */\r\n    function re(pattern, replacements, flags) {\r\n      return RegExp(replace(pattern, replacements), flags || '')\r\n    }\r\n\r\n    /**\r\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\r\n     *\r\n     * @param {string} pattern\r\n     * @param {number} depthLog2\r\n     * @returns {string}\r\n     */\r\n    function nested(pattern, depthLog2) {\r\n      for (var i = 0; i < depthLog2; i++) {\r\n        pattern = pattern.replace(/<<self>>/g, function () {\r\n          return '(?:' + pattern + ')'\r\n        })\r\n      }\r\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\r\n    }\r\n\r\n    // https://docs.microsoft.com/en-us/azure/quantum/user-guide/language/typesystem/\r\n    // https://github.com/microsoft/qsharp-language/tree/main/Specifications/Language/5_Grammar\r\n    var keywordKinds = {\r\n      // keywords which represent a return or variable type\r\n      type: 'Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero',\r\n      // all other keywords\r\n      other:\r\n        'Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within'\r\n    }\r\n    // keywords\r\n    function keywordsToPattern(words) {\r\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\r\n    }\r\n    var keywords = RegExp(\r\n      keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.other)\r\n    )\r\n\r\n    // types\r\n    var identifier = /\\b[A-Za-z_]\\w*\\b/.source\r\n    var qualifiedName = replace(/<<0>>(?:\\s*\\.\\s*<<0>>)*/.source, [identifier])\r\n    var typeInside = {\r\n      keyword: keywords,\r\n      punctuation: /[<>()?,.:[\\]]/\r\n    }\r\n\r\n    // strings\r\n    var regularString = /\"(?:\\\\.|[^\\\\\"])*\"/.source\r\n    Prism.languages.qsharp = Prism.languages.extend('clike', {\r\n      comment: /\\/\\/.*/,\r\n      string: [\r\n        {\r\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [regularString]),\r\n          lookbehind: true,\r\n          greedy: true\r\n        }\r\n      ],\r\n      'class-name': [\r\n        {\r\n          // open Microsoft.Quantum.Canon;\r\n          // open Microsoft.Quantum.Canon as CN;\r\n          pattern: re(/(\\b(?:as|open)\\s+)<<0>>(?=\\s*(?:;|as\\b))/.source, [\r\n            qualifiedName\r\n          ]),\r\n          lookbehind: true,\r\n          inside: typeInside\r\n        },\r\n        {\r\n          // namespace Quantum.App1;\r\n          pattern: re(/(\\bnamespace\\s+)<<0>>(?=\\s*\\{)/.source, [qualifiedName]),\r\n          lookbehind: true,\r\n          inside: typeInside\r\n        }\r\n      ],\r\n      keyword: keywords,\r\n      number:\r\n        /(?:\\b0(?:x[\\da-f]+|b[01]+|o[0-7]+)|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d*)?)(?:e[-+]?\\d+)?)l?\\b/i,\r\n      operator:\r\n        /\\band=|\\bor=|\\band\\b|\\bnot\\b|\\bor\\b|<[-=]|[-=]>|>>>=?|<<<=?|\\^\\^\\^=?|\\|\\|\\|=?|&&&=?|w\\/=?|~~~|[*\\/+\\-^=!%]=?/,\r\n      punctuation: /::|[{}[\\];(),.:]/\r\n    })\r\n    Prism.languages.insertBefore('qsharp', 'number', {\r\n      range: {\r\n        pattern: /\\.\\./,\r\n        alias: 'operator'\r\n      }\r\n    })\r\n\r\n    // single line\r\n    var interpolationExpr = nested(\r\n      replace(/\\{(?:[^\"{}]|<<0>>|<<self>>)*\\}/.source, [regularString]),\r\n      2\r\n    )\r\n    Prism.languages.insertBefore('qsharp', 'string', {\r\n      'interpolation-string': {\r\n        pattern: re(/\\$\"(?:\\\\.|<<0>>|[^\\\\\"{])*\"/.source, [interpolationExpr]),\r\n        greedy: true,\r\n        inside: {\r\n          interpolation: {\r\n            pattern: re(/((?:^|[^\\\\])(?:\\\\\\\\)*)<<0>>/.source, [\r\n              interpolationExpr\r\n            ]),\r\n            lookbehind: true,\r\n            inside: {\r\n              punctuation: /^\\{|\\}$/,\r\n              expression: {\r\n                pattern: /[\\s\\S]+/,\r\n                alias: 'language-qsharp',\r\n                inside: Prism.languages.qsharp\r\n              }\r\n            }\r\n          },\r\n          string: /[\\s\\S]+/\r\n        }\r\n      }\r\n    })\r\n  })(Prism)\r\n  Prism.languages.qs = Prism.languages.qsharp\r\n}\r\n", "// @ts-nocheck\r\nq.displayName = 'q'\r\nq.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function q(Prism) {\r\n  Prism.languages.q = {\r\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\r\n    comment: [\r\n      // From http://code.kx.com/wiki/Reference/Slash:\r\n      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\r\n      {\r\n        pattern: /([\\t )\\]}])\\/.*/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      // From http://code.kx.com/wiki/Reference/Slash:\r\n      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\r\n      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\r\n      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\r\n      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\r\n      {\r\n        pattern:\r\n          /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      // From http://code.kx.com/wiki/Reference/Slash:\r\n      // A \\ on a line by itself with no preceding matching / will comment to end of file.\r\n      {\r\n        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /^#!.+/m,\r\n        greedy: true\r\n      }\r\n    ],\r\n    symbol: /`(?::\\S+|[\\w.]*)/,\r\n    datetime: {\r\n      pattern:\r\n        /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\r\n      alias: 'number'\r\n    },\r\n    // The negative look-ahead prevents bad highlighting\r\n    // of verbs 0: and 1:\r\n    number:\r\n      /\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,\r\n    keyword:\r\n      /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\r\n    adverb: {\r\n      pattern: /['\\/\\\\]:?|\\beach\\b/,\r\n      alias: 'function'\r\n    },\r\n    verb: {\r\n      pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,\r\n      alias: 'operator'\r\n    },\r\n    punctuation: /[(){}\\[\\];.]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJavascript from './javascript.js'\r\nqml.displayName = 'qml'\r\nqml.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function qml(Prism) {\r\n  Prism.register(refractorJavascript)\r\n  ;(function (Prism) {\r\n    var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source\r\n    var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source\r\n    var jsExpr =\r\n      /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source\r\n        .replace(/<string>/g, function () {\r\n          return jsString\r\n        })\r\n        .replace(/<comment>/g, function () {\r\n          return jsComment\r\n        })\r\n\r\n    // the pattern will blow up, so only a few iterations\r\n    for (var i = 0; i < 2; i++) {\r\n      jsExpr = jsExpr.replace(/<expr>/g, function () {\r\n        return jsExpr\r\n      })\r\n    }\r\n    jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]')\r\n    Prism.languages.qml = {\r\n      comment: {\r\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\r\n        greedy: true\r\n      },\r\n      'javascript-function': {\r\n        pattern: RegExp(\r\n          /((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(\r\n            /<js>/g,\r\n            function () {\r\n              return jsExpr\r\n            }\r\n          ),\r\n          'm'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'language-javascript',\r\n        inside: Prism.languages.javascript\r\n      },\r\n      'class-name': {\r\n        pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\r\n        lookbehind: true\r\n      },\r\n      property: [\r\n        {\r\n          pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern:\r\n            /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\r\n          lookbehind: true,\r\n          inside: {\r\n            keyword: /^property/,\r\n            property: /\\w+(?:\\.\\w+)*/\r\n          }\r\n        }\r\n      ],\r\n      'javascript-expression': {\r\n        pattern: RegExp(\r\n          /(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(\r\n            /<js>/g,\r\n            function () {\r\n              return jsExpr\r\n            }\r\n          ),\r\n          'm'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'language-javascript',\r\n        inside: Prism.languages.javascript\r\n      },\r\n      string: {\r\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\r\n        greedy: true\r\n      },\r\n      keyword: /\\b(?:as|import|on)\\b/,\r\n      punctuation: /[{}[\\]:;,]/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nqore.displayName = 'qore'\r\nqore.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function qore(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.qore = Prism.languages.extend('clike', {\r\n    comment: {\r\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\r\n      lookbehind: true\r\n    },\r\n    // Overridden to allow unescaped multi-line strings\r\n    string: {\r\n      pattern: /(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/i,\r\n    function: /\\$?\\b(?!\\d)\\w+(?=\\()/,\r\n    number:\r\n      /\\b(?:0b[01]+|0x(?:[\\da-f]*\\.)?[\\da-fp\\-]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e\\d+)?[df]|(?:\\d+(?:\\.\\d+)?|\\.\\d+))\\b/i,\r\n    operator: {\r\n      pattern:\r\n        /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\r\n      lookbehind: true\r\n    },\r\n    variable: /\\$(?!\\d)\\w+\\b/\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nimport refractorScheme from './scheme.js'\r\nracket.displayName = 'racket'\r\nracket.aliases = ['rkt']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function racket(Prism) {\r\n  Prism.register(refractorScheme)\r\n  Prism.languages.racket = Prism.languages.extend('scheme', {\r\n    'lambda-parameter': {\r\n      // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\r\n      // this will just prevent false positives of the `function` pattern\r\n      pattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\r\n      lookbehind: true\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('racket', 'string', {\r\n    lang: {\r\n      pattern: /^#lang.+/m,\r\n      greedy: true,\r\n      alias: 'keyword'\r\n    }\r\n  })\r\n  Prism.languages.rkt = Prism.languages.racket\r\n}\r\n", "// @ts-nocheck\r\nimport refractorCsharp from './csharp.js'\r\nimport refractorMarkup from './markup.js'\r\ncshtml.displayName = 'cshtml'\r\ncshtml.aliases = ['razor']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function cshtml(Prism) {\r\n  Prism.register(refractorCsharp)\r\n  Prism.register(refractorMarkup)\r\n  // Docs:\r\n  // https://docs.microsoft.com/en-us/aspnet/core/razor-pages/?view=aspnetcore-5.0&tabs=visual-studio\r\n  // https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-5.0\r\n\r\n  ;(function (Prism) {\r\n    var commentLike = /\\/(?![/*])|\\/\\/.*[\\r\\n]|\\/\\*[^*]*(?:\\*(?!\\/)[^*]*)*\\*\\//\r\n      .source\r\n    var stringLike =\r\n      /@(?!\")|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|@\"(?:[^\\\\\"]|\"\"|\\\\[\\s\\S])*\"(?!\")/.source +\r\n      '|' +\r\n      /'(?:(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'|(?=[^\\\\](?!')))/.source\r\n\r\n    /**\r\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\r\n     *\r\n     * @param {string} pattern\r\n     * @param {number} depthLog2\r\n     * @returns {string}\r\n     */\r\n    function nested(pattern, depthLog2) {\r\n      for (var i = 0; i < depthLog2; i++) {\r\n        pattern = pattern.replace(/<self>/g, function () {\r\n          return '(?:' + pattern + ')'\r\n        })\r\n      }\r\n      return pattern\r\n        .replace(/<self>/g, '[^\\\\s\\\\S]')\r\n        .replace(/<str>/g, '(?:' + stringLike + ')')\r\n        .replace(/<comment>/g, '(?:' + commentLike + ')')\r\n    }\r\n    var round = nested(/\\((?:[^()'\"@/]|<str>|<comment>|<self>)*\\)/.source, 2)\r\n    var square = nested(/\\[(?:[^\\[\\]'\"@/]|<str>|<comment>|<self>)*\\]/.source, 1)\r\n    var curly = nested(/\\{(?:[^{}'\"@/]|<str>|<comment>|<self>)*\\}/.source, 2)\r\n    var angle = nested(/<(?:[^<>'\"@/]|<comment>|<self>)*>/.source, 1)\r\n    var inlineCs =\r\n      /@/.source +\r\n      /(?:await\\b\\s*)?/.source +\r\n      '(?:' +\r\n      /(?!await\\b)\\w+\\b/.source +\r\n      '|' +\r\n      round +\r\n      ')' +\r\n      '(?:' +\r\n      /[?!]?\\.\\w+\\b/.source +\r\n      '|' +\r\n      '(?:' +\r\n      angle +\r\n      ')?' +\r\n      round +\r\n      '|' +\r\n      square +\r\n      ')*' +\r\n      /(?![?!\\.(\\[]|<(?!\\/))/.source\r\n\r\n    // Note about the above bracket patterns:\r\n    // They all ignore HTML expressions that might be in the C# code. This is a problem because HTML (like strings and\r\n    // comments) is parsed differently. This is a huge problem because HTML might contain brackets and quotes which\r\n    // messes up the bracket and string counting implemented by the above patterns.\r\n    //\r\n    // This problem is not fixable because 1) HTML expression are highly context sensitive and very difficult to detect\r\n    // and 2) they require one capturing group at every nested level. See the `tagRegion` pattern to admire the\r\n    // complexity of an HTML expression.\r\n    //\r\n    // To somewhat alleviate the problem a bit, the patterns for characters (e.g. 'a') is very permissive, it also\r\n    // allows invalid characters to support HTML expressions like this: <p>That's it!</p>.\r\n\r\n    var tagAttrInlineCs = /@(?![\\w()])/.source + '|' + inlineCs\r\n    var tagAttrValue =\r\n      '(?:' +\r\n      /\"[^\"@]*\"|'[^'@]*'|[^\\s'\"@>=]+(?=[\\s>])/.source +\r\n      '|' +\r\n      '[\"\\'][^\"\\'@]*(?:(?:' +\r\n      tagAttrInlineCs +\r\n      ')[^\"\\'@]*)+[\"\\']' +\r\n      ')'\r\n    var tagAttrs =\r\n      /(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*<tagAttrValue>|(?=[\\s/>])))+)?/.source.replace(\r\n        /<tagAttrValue>/,\r\n        tagAttrValue\r\n      )\r\n    var tagContent = /(?!\\d)[^\\s>\\/=$<%]+/.source + tagAttrs + /\\s*\\/?>/.source\r\n    var tagRegion =\r\n      /\\B@?/.source +\r\n      '(?:' +\r\n      /<([a-zA-Z][\\w:]*)/.source +\r\n      tagAttrs +\r\n      /\\s*>/.source +\r\n      '(?:' +\r\n      (/[^<]/.source +\r\n        '|' +\r\n        // all tags that are not the start tag\r\n        // eslint-disable-next-line regexp/strict\r\n        /<\\/?(?!\\1\\b)/.source +\r\n        tagContent +\r\n        '|' +\r\n        // nested start tag\r\n        nested(\r\n          // eslint-disable-next-line regexp/strict\r\n          /<\\1/.source +\r\n            tagAttrs +\r\n            /\\s*>/.source +\r\n            '(?:' +\r\n            (/[^<]/.source +\r\n              '|' +\r\n              // all tags that are not the start tag\r\n              // eslint-disable-next-line regexp/strict\r\n              /<\\/?(?!\\1\\b)/.source +\r\n              tagContent +\r\n              '|' +\r\n              '<self>') +\r\n            ')*' +\r\n            // eslint-disable-next-line regexp/strict\r\n            /<\\/\\1\\s*>/.source,\r\n          2\r\n        )) +\r\n      ')*' +\r\n      // eslint-disable-next-line regexp/strict\r\n      /<\\/\\1\\s*>/.source +\r\n      '|' +\r\n      /</.source +\r\n      tagContent +\r\n      ')'\r\n\r\n    // Now for the actual language definition(s):\r\n    //\r\n    // Razor as a language has 2 parts:\r\n    //  1) CSHTML: A markup-like language that has been extended with inline C# code expressions and blocks.\r\n    //  2) C#+HTML: A variant of C# that can contain CSHTML tags as expressions.\r\n    //\r\n    // In the below code, both CSHTML and C#+HTML will be create as separate language definitions that reference each\r\n    // other. However, only CSHTML will be exported via `Prism.languages`.\r\n\r\n    Prism.languages.cshtml = Prism.languages.extend('markup', {})\r\n    var csharpWithHtml = Prism.languages.insertBefore(\r\n      'csharp',\r\n      'string',\r\n      {\r\n        html: {\r\n          pattern: RegExp(tagRegion),\r\n          greedy: true,\r\n          inside: Prism.languages.cshtml\r\n        }\r\n      },\r\n      {\r\n        csharp: Prism.languages.extend('csharp', {})\r\n      }\r\n    )\r\n    var cs = {\r\n      pattern: /\\S[\\s\\S]*/,\r\n      alias: 'language-csharp',\r\n      inside: csharpWithHtml\r\n    }\r\n    var inlineValue = {\r\n      pattern: RegExp(/(^|[^@])/.source + inlineCs),\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'variable',\r\n      inside: {\r\n        keyword: /^@/,\r\n        csharp: cs\r\n      }\r\n    }\r\n    Prism.languages.cshtml.tag.pattern = RegExp(/<\\/?/.source + tagContent)\r\n    Prism.languages.cshtml.tag.inside['attr-value'].pattern = RegExp(\r\n      /=\\s*/.source + tagAttrValue\r\n    )\r\n    Prism.languages.insertBefore(\r\n      'inside',\r\n      'punctuation',\r\n      {\r\n        value: inlineValue\r\n      },\r\n      Prism.languages.cshtml.tag.inside['attr-value']\r\n    )\r\n    Prism.languages.insertBefore('cshtml', 'prolog', {\r\n      'razor-comment': {\r\n        pattern: /@\\*[\\s\\S]*?\\*@/,\r\n        greedy: true,\r\n        alias: 'comment'\r\n      },\r\n      block: {\r\n        pattern: RegExp(\r\n          /(^|[^@])@/.source +\r\n            '(?:' +\r\n            [\r\n              // @{ ... }\r\n              curly,\r\n              // @code{ ... }\r\n              /(?:code|functions)\\s*/.source + curly,\r\n              // @for (...) { ... }\r\n              /(?:for|foreach|lock|switch|using|while)\\s*/.source +\r\n                round +\r\n                /\\s*/.source +\r\n                curly,\r\n              // @do { ... } while (...);\r\n              /do\\s*/.source +\r\n                curly +\r\n                /\\s*while\\s*/.source +\r\n                round +\r\n                /(?:\\s*;)?/.source,\r\n              // @try { ... } catch (...) { ... } finally { ... }\r\n              /try\\s*/.source +\r\n                curly +\r\n                /\\s*catch\\s*/.source +\r\n                round +\r\n                /\\s*/.source +\r\n                curly +\r\n                /\\s*finally\\s*/.source +\r\n                curly,\r\n              // @if (...) {...} else if (...) {...} else {...}\r\n              /if\\s*/.source +\r\n                round +\r\n                /\\s*/.source +\r\n                curly +\r\n                '(?:' +\r\n                /\\s*else/.source +\r\n                '(?:' +\r\n                /\\s+if\\s*/.source +\r\n                round +\r\n                ')?' +\r\n                /\\s*/.source +\r\n                curly +\r\n                ')*',\r\n              // @helper Ident(params) { ... }\r\n              /helper\\s+\\w+\\s*/.source + round + /\\s*/.source + curly\r\n            ].join('|') +\r\n            ')'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          keyword: /^@\\w*/,\r\n          csharp: cs\r\n        }\r\n      },\r\n      directive: {\r\n        pattern:\r\n          /^([ \\t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\\s).*/m,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          keyword: /^@\\w+/,\r\n          csharp: cs\r\n        }\r\n      },\r\n      value: inlineValue,\r\n      'delegate-operator': {\r\n        pattern: /(^|[^@])@(?=<)/,\r\n        lookbehind: true,\r\n        alias: 'operator'\r\n      }\r\n    })\r\n    Prism.languages.razor = Prism.languages.cshtml\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJavascript from './javascript.js'\r\nimport refractorMarkup from './markup.js'\r\njsx.displayName = 'jsx'\r\njsx.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function jsx(Prism) {\r\n  Prism.register(refractorJavascript)\r\n  Prism.register(refractorMarkup)\r\n  ;(function (Prism) {\r\n    var javascript = Prism.util.clone(Prism.languages.javascript)\r\n    var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source\r\n    var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source\r\n    var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source\r\n\r\n    /**\r\n     * @param {string} source\r\n     * @param {string} [flags]\r\n     */\r\n    function re(source, flags) {\r\n      source = source\r\n        .replace(/<S>/g, function () {\r\n          return space\r\n        })\r\n        .replace(/<BRACES>/g, function () {\r\n          return braces\r\n        })\r\n        .replace(/<SPREAD>/g, function () {\r\n          return spread\r\n        })\r\n      return RegExp(source, flags)\r\n    }\r\n    spread = re(spread).source\r\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript)\r\n    Prism.languages.jsx.tag.pattern = re(\r\n      /<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/\r\n        .source\r\n    )\r\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/\r\n    Prism.languages.jsx.tag.inside['attr-value'].pattern =\r\n      /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/\r\n    Prism.languages.jsx.tag.inside['tag'].inside['class-name'] =\r\n      /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/\r\n    Prism.languages.jsx.tag.inside['comment'] = javascript['comment']\r\n    Prism.languages.insertBefore(\r\n      'inside',\r\n      'attr-name',\r\n      {\r\n        spread: {\r\n          pattern: re(/<SPREAD>/.source),\r\n          inside: Prism.languages.jsx\r\n        }\r\n      },\r\n      Prism.languages.jsx.tag\r\n    )\r\n    Prism.languages.insertBefore(\r\n      'inside',\r\n      'special-attr',\r\n      {\r\n        script: {\r\n          // Allow for two levels of nesting\r\n          pattern: re(/=<BRACES>/.source),\r\n          alias: 'language-javascript',\r\n          inside: {\r\n            'script-punctuation': {\r\n              pattern: /^=(?=\\{)/,\r\n              alias: 'punctuation'\r\n            },\r\n            rest: Prism.languages.jsx\r\n          }\r\n        }\r\n      },\r\n      Prism.languages.jsx.tag\r\n    )\r\n\r\n    // The following will handle plain text inside tags\r\n    var stringifyToken = function (token) {\r\n      if (!token) {\r\n        return ''\r\n      }\r\n      if (typeof token === 'string') {\r\n        return token\r\n      }\r\n      if (typeof token.content === 'string') {\r\n        return token.content\r\n      }\r\n      return token.content.map(stringifyToken).join('')\r\n    }\r\n    var walkTokens = function (tokens) {\r\n      var openedTags = []\r\n      for (var i = 0; i < tokens.length; i++) {\r\n        var token = tokens[i]\r\n        var notTagNorBrace = false\r\n        if (typeof token !== 'string') {\r\n          if (\r\n            token.type === 'tag' &&\r\n            token.content[0] &&\r\n            token.content[0].type === 'tag'\r\n          ) {\r\n            // We found a tag, now find its kind\r\n\r\n            if (token.content[0].content[0].content === '</') {\r\n              // Closing tag\r\n              if (\r\n                openedTags.length > 0 &&\r\n                openedTags[openedTags.length - 1].tagName ===\r\n                  stringifyToken(token.content[0].content[1])\r\n              ) {\r\n                // Pop matching opening tag\r\n                openedTags.pop()\r\n              }\r\n            } else {\r\n              if (token.content[token.content.length - 1].content === '/>') {\r\n                // Autoclosed tag, ignore\r\n              } else {\r\n                // Opening tag\r\n                openedTags.push({\r\n                  tagName: stringifyToken(token.content[0].content[1]),\r\n                  openedBraces: 0\r\n                })\r\n              }\r\n            }\r\n          } else if (\r\n            openedTags.length > 0 &&\r\n            token.type === 'punctuation' &&\r\n            token.content === '{'\r\n          ) {\r\n            // Here we might have entered a JSX context inside a tag\r\n            openedTags[openedTags.length - 1].openedBraces++\r\n          } else if (\r\n            openedTags.length > 0 &&\r\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\r\n            token.type === 'punctuation' &&\r\n            token.content === '}'\r\n          ) {\r\n            // Here we might have left a JSX context inside a tag\r\n            openedTags[openedTags.length - 1].openedBraces--\r\n          } else {\r\n            notTagNorBrace = true\r\n          }\r\n        }\r\n        if (notTagNorBrace || typeof token === 'string') {\r\n          if (\r\n            openedTags.length > 0 &&\r\n            openedTags[openedTags.length - 1].openedBraces === 0\r\n          ) {\r\n            // Here we are inside a tag, and not inside a JSX context.\r\n            // That's plain text: drop any tokens matched.\r\n            var plainText = stringifyToken(token)\r\n\r\n            // And merge text with adjacent text\r\n            if (\r\n              i < tokens.length - 1 &&\r\n              (typeof tokens[i + 1] === 'string' ||\r\n                tokens[i + 1].type === 'plain-text')\r\n            ) {\r\n              plainText += stringifyToken(tokens[i + 1])\r\n              tokens.splice(i + 1, 1)\r\n            }\r\n            if (\r\n              i > 0 &&\r\n              (typeof tokens[i - 1] === 'string' ||\r\n                tokens[i - 1].type === 'plain-text')\r\n            ) {\r\n              plainText = stringifyToken(tokens[i - 1]) + plainText\r\n              tokens.splice(i - 1, 1)\r\n              i--\r\n            }\r\n            tokens[i] = new Prism.Token(\r\n              'plain-text',\r\n              plainText,\r\n              null,\r\n              plainText\r\n            )\r\n          }\r\n        }\r\n        if (token.content && typeof token.content !== 'string') {\r\n          walkTokens(token.content)\r\n        }\r\n      }\r\n    }\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\r\n        return\r\n      }\r\n      walkTokens(env.tokens)\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJsx from './jsx.js'\r\nimport refractorTypescript from './typescript.js'\r\ntsx.displayName = 'tsx'\r\ntsx.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function tsx(Prism) {\r\n  Prism.register(refractorJsx)\r\n  Prism.register(refractorTypescript)\r\n  ;(function (Prism) {\r\n    var typescript = Prism.util.clone(Prism.languages.typescript)\r\n    Prism.languages.tsx = Prism.languages.extend('jsx', typescript)\r\n\r\n    // doesn't work with TS because TS is too complex\r\n    delete Prism.languages.tsx['parameter']\r\n    delete Prism.languages.tsx['literal-property']\r\n\r\n    // This will prevent collisions between TSX tags and TS generic types.\r\n    // Idea by https://github.com/karlhorky\r\n    // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\r\n    var tag = Prism.languages.tsx.tag\r\n    tag.pattern = RegExp(\r\n      /(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')',\r\n      tag.pattern.flags\r\n    )\r\n    tag.lookbehind = true\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nreason.displayName = 'reason'\r\nreason.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function reason(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.reason = Prism.languages.extend('clike', {\r\n    string: {\r\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\r\n      greedy: true\r\n    },\r\n    // 'class-name' must be matched *after* 'constructor' defined below\r\n    'class-name': /\\b[A-Z]\\w*/,\r\n    keyword:\r\n      /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\r\n    operator:\r\n      /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\r\n  })\r\n  Prism.languages.insertBefore('reason', 'class-name', {\r\n    char: {\r\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\r\n      greedy: true\r\n    },\r\n    // Negative look-ahead prevents from matching things like String.capitalize\r\n    constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\r\n    label: {\r\n      pattern: /\\b[a-z]\\w*(?=::)/,\r\n      alias: 'symbol'\r\n    }\r\n  })\r\n\r\n  // We can't match functions property, so let's not even try.\r\n  delete Prism.languages.reason.function\r\n}\r\n", "// @ts-nocheck\r\nrego.displayName = 'rego'\r\nrego.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function rego(Prism) {\r\n  // https://www.openpolicyagent.org/docs/latest/policy-reference/\r\n\r\n  Prism.languages.rego = {\r\n    comment: /#.*/,\r\n    property: {\r\n      pattern:\r\n        /(^|[^\\\\.])(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`|\\b[a-z_]\\w*\\b)(?=\\s*:(?!=))/i,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:as|default|else|import|not|null|package|set(?=\\s*\\()|some|with)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    function: {\r\n      pattern: /\\b[a-z_]\\w*\\b(?:\\s*\\.\\s*\\b[a-z_]\\w*\\b)*(?=\\s*\\()/i,\r\n      inside: {\r\n        namespace: /\\b\\w+\\b(?=\\s*\\.)/,\r\n        punctuation: /\\./\r\n      }\r\n    },\r\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\r\n    operator: /[-+*/%|&]|[<>:=]=?|!=|\\b_\\b/,\r\n    punctuation: /[,;.\\[\\]{}()]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nrenpy.displayName = 'renpy'\r\nrenpy.aliases = ['rpy']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function renpy(Prism) {\r\n  Prism.languages.renpy = {\r\n    comment: {\r\n      pattern: /(^|[^\\\\])#.+/,\r\n      lookbehind: true\r\n    },\r\n    string: {\r\n      pattern:\r\n        /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\])*\\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,\r\n      greedy: true\r\n    },\r\n    function: /\\b[a-z_]\\w*(?=\\()/i,\r\n    property:\r\n      /\\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\\b/,\r\n    tag: /\\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\\b|\\$/,\r\n    keyword:\r\n      /\\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\\b/,\r\n    boolean: /\\b(?:[Ff]alse|[Tt]rue)\\b/,\r\n    number:\r\n      /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\r\n    operator:\r\n      /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:and|at|not|or|with)\\b/,\r\n    punctuation: /[{}[\\];(),.:]/\r\n  }\r\n  Prism.languages.rpy = Prism.languages.renpy\r\n}\r\n", "// @ts-nocheck\r\nrescript.displayName = 'rescript'\r\nrescript.aliases = ['res']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function rescript(Prism) {\r\n  Prism.languages.rescript = {\r\n    comment: {\r\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n      greedy: true\r\n    },\r\n    char: {\r\n      pattern: /'(?:[^\\r\\n\\\\]|\\\\(?:.|\\w+))'/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\r\n      greedy: true\r\n    },\r\n    'class-name': /\\b[A-Z]\\w*|@[a-z.]*|#[A-Za-z]\\w*|#\\d/,\r\n    function: {\r\n      pattern: /[a-zA-Z]\\w*(?=\\()|(\\.)[a-z]\\w*/,\r\n      lookbehind: true\r\n    },\r\n    number:\r\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    'attr-value': /[A-Za-z]\\w*(?==)/,\r\n    constant: {\r\n      pattern: /(\\btype\\s+)[a-z]\\w*/,\r\n      lookbehind: true\r\n    },\r\n    tag: {\r\n      pattern: /(<)[a-z]\\w*|(?:<\\/)[a-z]\\w*/,\r\n      lookbehind: true,\r\n      inside: {\r\n        operator: /<|>|\\//\r\n      }\r\n    },\r\n    keyword:\r\n      /\\b(?:and|as|assert|begin|bool|class|constraint|do|done|downto|else|end|exception|external|float|for|fun|function|if|in|include|inherit|initializer|int|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|string|switch|then|to|try|type|when|while|with)\\b/,\r\n    operator:\r\n      /\\.{3}|:[:=]?|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/,\r\n    punctuation: /[(){}[\\],;.]/\r\n  }\r\n  Prism.languages.insertBefore('rescript', 'string', {\r\n    'template-string': {\r\n      pattern:\r\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\r\n      greedy: true,\r\n      inside: {\r\n        'template-punctuation': {\r\n          pattern: /^`|`$/,\r\n          alias: 'string'\r\n        },\r\n        interpolation: {\r\n          pattern:\r\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\r\n          lookbehind: true,\r\n          inside: {\r\n            'interpolation-punctuation': {\r\n              pattern: /^\\$\\{|\\}$/,\r\n              alias: 'tag'\r\n            },\r\n            rest: Prism.languages.rescript\r\n          }\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    }\r\n  })\r\n  Prism.languages.res = Prism.languages.rescript\r\n}\r\n", "// @ts-nocheck\r\nrest.displayName = 'rest'\r\nrest.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function rest(Prism) {\r\n  Prism.languages.rest = {\r\n    table: [\r\n      {\r\n        pattern:\r\n          /(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\r\n        }\r\n      },\r\n      {\r\n        pattern:\r\n          /(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /[=-]+/\r\n        }\r\n      }\r\n    ],\r\n    // Directive-like patterns\r\n\r\n    'substitution-def': {\r\n      pattern: /(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        substitution: {\r\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\r\n          alias: 'attr-value',\r\n          inside: {\r\n            punctuation: /^\\||\\|$/\r\n          }\r\n        },\r\n        directive: {\r\n          pattern: /( )(?! )[^:]+::/,\r\n          lookbehind: true,\r\n          alias: 'function',\r\n          inside: {\r\n            punctuation: /::$/\r\n          }\r\n        }\r\n      }\r\n    },\r\n    'link-target': [\r\n      {\r\n        pattern: /(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,\r\n        lookbehind: true,\r\n        alias: 'string',\r\n        inside: {\r\n          punctuation: /^\\[|\\]$/\r\n        }\r\n      },\r\n      {\r\n        pattern: /(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\r\n        lookbehind: true,\r\n        alias: 'string',\r\n        inside: {\r\n          punctuation: /^_|:$/\r\n        }\r\n      }\r\n    ],\r\n    directive: {\r\n      pattern: /(^[\\t ]*\\.\\. )[^:]+::/m,\r\n      lookbehind: true,\r\n      alias: 'function',\r\n      inside: {\r\n        punctuation: /::$/\r\n      }\r\n    },\r\n    comment: {\r\n      // The two alternatives try to prevent highlighting of blank comments\r\n      pattern:\r\n        /(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\r\n      lookbehind: true\r\n    },\r\n    title: [\r\n      // Overlined and underlined\r\n      {\r\n        pattern:\r\n          /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\r\n        inside: {\r\n          punctuation:\r\n            /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\r\n          important: /.+/\r\n        }\r\n      },\r\n      // Underlined only\r\n      {\r\n        pattern:\r\n          /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\r\n          important: /.+/\r\n        }\r\n      }\r\n    ],\r\n    hr: {\r\n      pattern:\r\n        /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\r\n      lookbehind: true,\r\n      alias: 'punctuation'\r\n    },\r\n    field: {\r\n      pattern: /(^[\\t ]*):[^:\\r\\n]+:(?= )/m,\r\n      lookbehind: true,\r\n      alias: 'attr-name'\r\n    },\r\n    'command-line-option': {\r\n      pattern:\r\n        /(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\r\n      lookbehind: true,\r\n      alias: 'symbol'\r\n    },\r\n    'literal-block': {\r\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\r\n      inside: {\r\n        'literal-block-punctuation': {\r\n          pattern: /^::/,\r\n          alias: 'punctuation'\r\n        }\r\n      }\r\n    },\r\n    'quoted-literal-block': {\r\n      pattern:\r\n        /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\r\n      inside: {\r\n        'literal-block-punctuation': {\r\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\r\n          alias: 'punctuation'\r\n        }\r\n      }\r\n    },\r\n    'list-bullet': {\r\n      pattern:\r\n        /(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\r\n      lookbehind: true,\r\n      alias: 'punctuation'\r\n    },\r\n    'doctest-block': {\r\n      pattern: /(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        punctuation: /^>>>/\r\n      }\r\n    },\r\n    inline: [\r\n      {\r\n        pattern:\r\n          /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          bold: {\r\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\r\n            lookbehind: true\r\n          },\r\n          italic: {\r\n            pattern: /(^\\*).+(?=\\*$)/,\r\n            lookbehind: true\r\n          },\r\n          'inline-literal': {\r\n            pattern: /(^``).+(?=``$)/,\r\n            lookbehind: true,\r\n            alias: 'symbol'\r\n          },\r\n          role: {\r\n            pattern: /^:[^:]+:|:[^:]+:$/,\r\n            alias: 'function',\r\n            inside: {\r\n              punctuation: /^:|:$/\r\n            }\r\n          },\r\n          'interpreted-text': {\r\n            pattern: /(^`).+(?=`$)/,\r\n            lookbehind: true,\r\n            alias: 'attr-value'\r\n          },\r\n          substitution: {\r\n            pattern: /(^\\|).+(?=\\|$)/,\r\n            lookbehind: true,\r\n            alias: 'attr-value'\r\n          },\r\n          punctuation: /\\*\\*?|``?|\\|/\r\n        }\r\n      }\r\n    ],\r\n    link: [\r\n      {\r\n        pattern: /\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\r\n        alias: 'string',\r\n        inside: {\r\n          punctuation: /^\\[|\\]_$/\r\n        }\r\n      },\r\n      {\r\n        pattern:\r\n          /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\r\n        alias: 'string',\r\n        inside: {\r\n          punctuation: /^_?`|`$|`?_?_$/\r\n        }\r\n      }\r\n    ],\r\n    // Line block start,\r\n    // quote attribution,\r\n    // explicit markup start,\r\n    // and anonymous hyperlink target shortcut (__)\r\n    punctuation: {\r\n      pattern: /(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\r\n      lookbehind: true\r\n    }\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nrip.displayName = 'rip'\r\nrip.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function rip(Prism) {\r\n  Prism.languages.rip = {\r\n    comment: {\r\n      pattern: /#.*/,\r\n      greedy: true\r\n    },\r\n    char: {\r\n      pattern: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true\r\n    },\r\n    regex: {\r\n      pattern:\r\n        /(^|[^/])\\/(?!\\/)(?:\\[[^\\n\\r\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/(?=\\s*(?:$|[\\r\\n,.;})]))/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /(?:=>|->)|\\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\\b/,\r\n    builtin: /@|\\bSystem\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\r\n    time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\r\n    datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\r\n    symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\r\n    number: /[+-]?\\b(?:\\d+\\.\\d+|\\d+)\\b/,\r\n    punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\r\n    reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nroboconf.displayName = 'roboconf'\r\nroboconf.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function roboconf(Prism) {\r\n  Prism.languages.roboconf = {\r\n    comment: /#.*/,\r\n    keyword: {\r\n      pattern:\r\n        /(^|\\s)(?:(?:external|import)\\b|(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{))/,\r\n      lookbehind: true\r\n    },\r\n    component: {\r\n      pattern: /[\\w-]+(?=[ \\t]*\\{)/,\r\n      alias: 'variable'\r\n    },\r\n    property: /[\\w.-]+(?=[ \\t]*:)/,\r\n    value: {\r\n      pattern: /(=[ \\t]*(?![ \\t]))[^,;]+/,\r\n      lookbehind: true,\r\n      alias: 'attr-value'\r\n    },\r\n    optional: {\r\n      pattern: /\\(optional\\)/,\r\n      alias: 'builtin'\r\n    },\r\n    wildcard: {\r\n      pattern: /(\\.)\\*/,\r\n      lookbehind: true,\r\n      alias: 'operator'\r\n    },\r\n    punctuation: /[{},.;:=]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nrobotframework.displayName = 'robotframework'\r\nrobotframework.aliases = ['robot']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function robotframework(Prism) {\r\n  ;(function (Prism) {\r\n    var comment = {\r\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\r\n      lookbehind: true,\r\n      greedy: true\r\n    }\r\n    var variable = {\r\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\r\n      lookbehind: true,\r\n      inside: {\r\n        punctuation: /^[$@&%]\\{|\\}$/\r\n      }\r\n    }\r\n    function createSection(name, inside) {\r\n      var extendecInside = {}\r\n      extendecInside['section-header'] = {\r\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\r\n        alias: 'keyword'\r\n      }\r\n\r\n      // copy inside tokens\r\n      for (var token in inside) {\r\n        extendecInside[token] = inside[token]\r\n      }\r\n      extendecInside['tag'] = {\r\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /\\[|\\]/\r\n        }\r\n      }\r\n      extendecInside['variable'] = variable\r\n      extendecInside['comment'] = comment\r\n      return {\r\n        pattern: RegExp(\r\n          /^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(\r\n            /<name>/g,\r\n            function () {\r\n              return name\r\n            }\r\n          ),\r\n          'im'\r\n        ),\r\n        alias: 'section',\r\n        inside: extendecInside\r\n      }\r\n    }\r\n    var docTag = {\r\n      pattern:\r\n        /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\r\n      lookbehind: true,\r\n      alias: 'string'\r\n    }\r\n    var testNameLike = {\r\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\r\n      lookbehind: true,\r\n      alias: 'function',\r\n      inside: {\r\n        variable: variable\r\n      }\r\n    }\r\n    var testPropertyLike = {\r\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\r\n      lookbehind: true,\r\n      inside: {\r\n        variable: variable\r\n      }\r\n    }\r\n    Prism.languages['robotframework'] = {\r\n      settings: createSection('Settings', {\r\n        documentation: {\r\n          pattern:\r\n            /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\r\n          lookbehind: true,\r\n          alias: 'string'\r\n        },\r\n        property: {\r\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\r\n          lookbehind: true\r\n        }\r\n      }),\r\n      variables: createSection('Variables'),\r\n      'test-cases': createSection('Test Cases', {\r\n        'test-name': testNameLike,\r\n        documentation: docTag,\r\n        property: testPropertyLike\r\n      }),\r\n      keywords: createSection('Keywords', {\r\n        'keyword-name': testNameLike,\r\n        documentation: docTag,\r\n        property: testPropertyLike\r\n      }),\r\n      tasks: createSection('Tasks', {\r\n        'task-name': testNameLike,\r\n        documentation: docTag,\r\n        property: testPropertyLike\r\n      }),\r\n      comment: comment\r\n    }\r\n    Prism.languages.robot = Prism.languages['robotframework']\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nsas.displayName = 'sas'\r\nsas.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function sas(Prism) {\r\n  ;(function (Prism) {\r\n    var stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source\r\n    var number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i\r\n    var numericConstant = {\r\n      pattern: RegExp(stringPattern + '[bx]'),\r\n      alias: 'number'\r\n    }\r\n    var macroVariable = {\r\n      pattern: /&[a-z_]\\w*/i\r\n    }\r\n    var macroKeyword = {\r\n      pattern:\r\n        /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\r\n      lookbehind: true,\r\n      alias: 'keyword'\r\n    }\r\n    var step = {\r\n      pattern: /(^|\\s)(?:proc\\s+\\w+|data(?!=)|quit|run)\\b/i,\r\n      alias: 'keyword',\r\n      lookbehind: true\r\n    }\r\n    var comment = [\r\n      /\\/\\*[\\s\\S]*?\\*\\//,\r\n      {\r\n        pattern: /(^[ \\t]*|;\\s*)\\*[^;]*;/m,\r\n        lookbehind: true\r\n      }\r\n    ]\r\n    var string = {\r\n      pattern: RegExp(stringPattern),\r\n      greedy: true\r\n    }\r\n    var punctuation = /[$%@.(){}\\[\\];,\\\\]/\r\n    var func = {\r\n      pattern: /%?\\b\\w+(?=\\()/,\r\n      alias: 'keyword'\r\n    }\r\n    var args = {\r\n      function: func,\r\n      'arg-value': {\r\n        pattern: /(=\\s*)[A-Z\\.]+/i,\r\n        lookbehind: true\r\n      },\r\n      operator: /=/,\r\n      'macro-variable': macroVariable,\r\n      arg: {\r\n        pattern: /[A-Z]+/i,\r\n        alias: 'keyword'\r\n      },\r\n      number: number,\r\n      'numeric-constant': numericConstant,\r\n      punctuation: punctuation,\r\n      string: string\r\n    }\r\n    var format = {\r\n      pattern: /\\b(?:format|put)\\b=?[\\w'$.]+/i,\r\n      inside: {\r\n        keyword: /^(?:format|put)(?==)/i,\r\n        equals: /=/,\r\n        format: {\r\n          pattern: /(?:\\w|\\$\\d)+\\.\\d?/,\r\n          alias: 'number'\r\n        }\r\n      }\r\n    }\r\n    var altformat = {\r\n      pattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\r\n      inside: {\r\n        keyword: /^(?:format|put)/i,\r\n        format: {\r\n          pattern: /[\\w$]+\\.\\d?/,\r\n          alias: 'number'\r\n        }\r\n      }\r\n    }\r\n    var globalStatements = {\r\n      pattern:\r\n        /((?:^|\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\r\n      lookbehind: true,\r\n      alias: 'keyword'\r\n    }\r\n    var submitStatement = {\r\n      pattern: /(^|\\s)(?:submit(?:\\s+(?:load|norun|parseonly))?|endsubmit)\\b/i,\r\n      lookbehind: true,\r\n      alias: 'keyword'\r\n    }\r\n    var actionSets =\r\n      /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/\r\n        .source\r\n    var casActions = {\r\n      pattern: RegExp(\r\n        /(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(\r\n          /<act>/g,\r\n          function () {\r\n            return actionSets\r\n          }\r\n        ),\r\n        'i'\r\n      ),\r\n      lookbehind: true,\r\n      inside: {\r\n        keyword: RegExp(\r\n          /(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function () {\r\n            return actionSets\r\n          }),\r\n          'i'\r\n        ),\r\n        action: {\r\n          pattern: /(?:action)/i,\r\n          alias: 'keyword'\r\n        },\r\n        comment: comment,\r\n        function: func,\r\n        'arg-value': args['arg-value'],\r\n        operator: args.operator,\r\n        argument: args.arg,\r\n        number: number,\r\n        'numeric-constant': numericConstant,\r\n        punctuation: punctuation,\r\n        string: string\r\n      }\r\n    }\r\n    var keywords = {\r\n      pattern:\r\n        /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\\b/i,\r\n      lookbehind: true\r\n    }\r\n    Prism.languages.sas = {\r\n      datalines: {\r\n        pattern: /^([ \\t]*)(?:cards|(?:data)?lines);[\\s\\S]+?^[ \\t]*;/im,\r\n        lookbehind: true,\r\n        alias: 'string',\r\n        inside: {\r\n          keyword: {\r\n            pattern: /^(?:cards|(?:data)?lines)/i\r\n          },\r\n          punctuation: /;/\r\n        }\r\n      },\r\n      'proc-sql': {\r\n        pattern:\r\n          /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\r\n        lookbehind: true,\r\n        inside: {\r\n          sql: {\r\n            pattern: RegExp(\r\n              /^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(\r\n                /<str>/g,\r\n                function () {\r\n                  return stringPattern\r\n                }\r\n              ),\r\n              'im'\r\n            ),\r\n            alias: 'language-sql',\r\n            inside: Prism.languages.sql\r\n          },\r\n          'global-statements': globalStatements,\r\n          'sql-statements': {\r\n            pattern:\r\n              /(^|\\s)(?:disconnect\\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\\b/i,\r\n            lookbehind: true,\r\n            alias: 'keyword'\r\n          },\r\n          number: number,\r\n          'numeric-constant': numericConstant,\r\n          punctuation: punctuation,\r\n          string: string\r\n        }\r\n      },\r\n      'proc-groovy': {\r\n        pattern:\r\n          /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\r\n        lookbehind: true,\r\n        inside: {\r\n          comment: comment,\r\n          groovy: {\r\n            pattern: RegExp(\r\n              /(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\r\n                /<str>/g,\r\n                function () {\r\n                  return stringPattern\r\n                }\r\n              ),\r\n              'im'\r\n            ),\r\n            lookbehind: true,\r\n            alias: 'language-groovy',\r\n            inside: Prism.languages.groovy\r\n          },\r\n          keyword: keywords,\r\n          'submit-statement': submitStatement,\r\n          'global-statements': globalStatements,\r\n          number: number,\r\n          'numeric-constant': numericConstant,\r\n          punctuation: punctuation,\r\n          string: string\r\n        }\r\n      },\r\n      'proc-lua': {\r\n        pattern:\r\n          /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\r\n        lookbehind: true,\r\n        inside: {\r\n          comment: comment,\r\n          lua: {\r\n            pattern: RegExp(\r\n              /(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\r\n                /<str>/g,\r\n                function () {\r\n                  return stringPattern\r\n                }\r\n              ),\r\n              'im'\r\n            ),\r\n            lookbehind: true,\r\n            alias: 'language-lua',\r\n            inside: Prism.languages.lua\r\n          },\r\n          keyword: keywords,\r\n          'submit-statement': submitStatement,\r\n          'global-statements': globalStatements,\r\n          number: number,\r\n          'numeric-constant': numericConstant,\r\n          punctuation: punctuation,\r\n          string: string\r\n        }\r\n      },\r\n      'proc-cas': {\r\n        pattern:\r\n          /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\r\n        lookbehind: true,\r\n        inside: {\r\n          comment: comment,\r\n          'statement-var': {\r\n            pattern: /((?:^|\\s)=?)saveresult\\s[^;]+/im,\r\n            lookbehind: true,\r\n            inside: {\r\n              statement: {\r\n                pattern: /^saveresult\\s+\\S+/i,\r\n                inside: {\r\n                  keyword: /^(?:saveresult)/i\r\n                }\r\n              },\r\n              rest: args\r\n            }\r\n          },\r\n          'cas-actions': casActions,\r\n          statement: {\r\n            pattern:\r\n              /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\r\n            lookbehind: true,\r\n            inside: args\r\n          },\r\n          step: step,\r\n          keyword: keywords,\r\n          function: func,\r\n          format: format,\r\n          altformat: altformat,\r\n          'global-statements': globalStatements,\r\n          number: number,\r\n          'numeric-constant': numericConstant,\r\n          punctuation: punctuation,\r\n          string: string\r\n        }\r\n      },\r\n      'proc-args': {\r\n        pattern: RegExp(\r\n          /(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(\r\n            /<str>/g,\r\n            function () {\r\n              return stringPattern\r\n            }\r\n          ),\r\n          'im'\r\n        ),\r\n        lookbehind: true,\r\n        inside: args\r\n      },\r\n      /*Special keywords within macros*/\r\n      'macro-keyword': macroKeyword,\r\n      'macro-variable': macroVariable,\r\n      'macro-string-functions': {\r\n        pattern:\r\n          /((?:^|\\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\r\n        lookbehind: true,\r\n        inside: {\r\n          function: {\r\n            pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,\r\n            alias: 'keyword'\r\n          },\r\n          'macro-keyword': macroKeyword,\r\n          'macro-variable': macroVariable,\r\n          'escaped-char': {\r\n            pattern: /%['\"()<>=¬^~;,#]/\r\n          },\r\n          punctuation: punctuation\r\n        }\r\n      },\r\n      'macro-declaration': {\r\n        pattern: /^%macro[^;]+(?=;)/im,\r\n        inside: {\r\n          keyword: /%macro/i\r\n        }\r\n      },\r\n      'macro-end': {\r\n        pattern: /^%mend[^;]+(?=;)/im,\r\n        inside: {\r\n          keyword: /%mend/i\r\n        }\r\n      },\r\n      /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */\r\n      macro: {\r\n        pattern: /%_\\w+(?=\\()/,\r\n        alias: 'keyword'\r\n      },\r\n      input: {\r\n        pattern: /\\binput\\s[-\\w\\s/*.$&]+;/i,\r\n        inside: {\r\n          input: {\r\n            alias: 'keyword',\r\n            pattern: /^input/i\r\n          },\r\n          comment: comment,\r\n          number: number,\r\n          'numeric-constant': numericConstant\r\n        }\r\n      },\r\n      'options-args': {\r\n        pattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\r\n        lookbehind: true,\r\n        inside: args\r\n      },\r\n      'cas-actions': casActions,\r\n      comment: comment,\r\n      function: func,\r\n      format: format,\r\n      altformat: altformat,\r\n      'numeric-constant': numericConstant,\r\n      datetime: {\r\n        // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\r\n        pattern: RegExp(stringPattern + '(?:dt?|t)'),\r\n        alias: 'number'\r\n      },\r\n      string: string,\r\n      step: step,\r\n      keyword: keywords,\r\n      // In SAS Studio syntax highlighting, these operators are styled like keywords\r\n      'operator-keyword': {\r\n        pattern: /\\b(?:eq|ge|gt|in|le|lt|ne|not)\\b/i,\r\n        alias: 'operator'\r\n      },\r\n      // Decimal (1.2e23), hexadecimal (0c1x)\r\n      number: number,\r\n      operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/,\r\n      punctuation: punctuation\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorBash from './bash.js'\r\nshellSession.displayName = 'shell-session'\r\nshellSession.aliases = ['sh-session', 'shellsession']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function shellSession(Prism) {\r\n  Prism.register(refractorBash)\r\n  ;(function (Prism) {\r\n    // CAREFUL!\r\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\r\n\r\n    var strings = [\r\n      // normal string\r\n      /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,\r\n      /'[^']*'/.source,\r\n      /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source,\r\n      // here doc\r\n      // 2 capturing groups\r\n      /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source\r\n    ].join('|')\r\n    Prism.languages['shell-session'] = {\r\n      command: {\r\n        pattern: RegExp(\r\n          // user info\r\n          /^/.source +\r\n            '(?:' +\r\n            // <user> \":\" ( <path> )?\r\n            (/[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/\r\n              .source +\r\n              '|' +\r\n              // <path>\r\n              // Since the path pattern is quite general, we will require it to start with a special character to\r\n              // prevent false positives.\r\n              /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) +\r\n            ')?' +\r\n            // shell symbol\r\n            /[$#%](?=\\s)/.source +\r\n            // bash command\r\n            /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(\r\n              /<<str>>/g,\r\n              function () {\r\n                return strings\r\n              }\r\n            ),\r\n          'm'\r\n        ),\r\n        greedy: true,\r\n        inside: {\r\n          info: {\r\n            // foo@bar:~/files$ exit\r\n            // foo@bar$ exit\r\n            // ~/files$ exit\r\n            pattern: /^[^#$%]+/,\r\n            alias: 'punctuation',\r\n            inside: {\r\n              user: /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\r\n              punctuation: /:/,\r\n              path: /[\\s\\S]+/\r\n            }\r\n          },\r\n          bash: {\r\n            pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\r\n            lookbehind: true,\r\n            alias: 'language-bash',\r\n            inside: Prism.languages.bash\r\n          },\r\n          'shell-symbol': {\r\n            pattern: /^[$#%]/,\r\n            alias: 'important'\r\n          }\r\n        }\r\n      },\r\n      output: /.(?:.*(?:[\\r\\n]|.$))*/\r\n    }\r\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] =\r\n      Prism.languages['shell-session']\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nsmali.displayName = 'smali'\r\nsmali.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function smali(Prism) {\r\n  // Test files for the parser itself:\r\n  // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\r\n\r\n  Prism.languages.smali = {\r\n    comment: /#.*/,\r\n    string: {\r\n      pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\r\n      greedy: true\r\n    },\r\n    'class-name': {\r\n      pattern:\r\n        /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\r\n      lookbehind: true,\r\n      inside: {\r\n        'class-name': {\r\n          pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\r\n          lookbehind: true\r\n        },\r\n        namespace: {\r\n          pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\r\n          lookbehind: true,\r\n          inside: {\r\n            punctuation: /\\//\r\n          }\r\n        },\r\n        builtin: /^L/\r\n      }\r\n    },\r\n    builtin: [\r\n      {\r\n        // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\r\n        pattern: /([();\\[])[BCDFIJSVZ]+/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        // e.g. .field mWifiOnUid:I\r\n        pattern: /([\\w$>]:)[BCDFIJSVZ]/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    keyword: [\r\n      {\r\n        pattern: /(\\.end\\s+)[\\w-]+/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern:\r\n          /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    function: {\r\n      pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\r\n      lookbehind: true\r\n    },\r\n    field: {\r\n      pattern: /[\\w$]+(?=:)/,\r\n      alias: 'variable'\r\n    },\r\n    register: {\r\n      pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\r\n      lookbehind: true,\r\n      alias: 'variable'\r\n    },\r\n    boolean: {\r\n      pattern: /(^|[^\\w.-])(?:false|true)(?![\\w.-])/,\r\n      lookbehind: true\r\n    },\r\n    number: {\r\n      pattern:\r\n        /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\r\n      lookbehind: true\r\n    },\r\n    label: {\r\n      pattern: /(:)\\w+/,\r\n      lookbehind: true,\r\n      alias: 'property'\r\n    },\r\n    operator: /->|\\.\\.|[\\[=]/,\r\n    punctuation: /[{}(),;:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nsmalltalk.displayName = 'smalltalk'\r\nsmalltalk.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function smalltalk(Prism) {\r\n  Prism.languages.smalltalk = {\r\n    comment: {\r\n      pattern: /\"(?:\"\"|[^\"])*\"/,\r\n      greedy: true\r\n    },\r\n    char: {\r\n      pattern: /\\$./,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /'(?:''|[^'])*'/,\r\n      greedy: true\r\n    },\r\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\r\n    'block-arguments': {\r\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\r\n      lookbehind: true,\r\n      inside: {\r\n        variable: /:[\\da-z]+/i,\r\n        punctuation: /\\|/\r\n      }\r\n    },\r\n    'temporary-variables': {\r\n      pattern: /\\|[^|]+\\|/,\r\n      inside: {\r\n        variable: /[\\da-z]+/i,\r\n        punctuation: /\\|/\r\n      }\r\n    },\r\n    keyword: /\\b(?:new|nil|self|super)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    number: [\r\n      /\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\r\n      /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\r\n    ],\r\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\r\n    punctuation: /[.;:?\\[\\](){}]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkupTemplating from './markup-templating.js'\r\nsmarty.displayName = 'smarty'\r\nsmarty.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function smarty(Prism) {\r\n  Prism.register(refractorMarkupTemplating)\r\n  ;(function (Prism) {\r\n    Prism.languages.smarty = {\r\n      comment: {\r\n        pattern: /^\\{\\*[\\s\\S]*?\\*\\}/,\r\n        greedy: true\r\n      },\r\n      'embedded-php': {\r\n        pattern: /^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,\r\n        greedy: true,\r\n        inside: {\r\n          smarty: {\r\n            pattern: /^\\{php\\}|\\{\\/php\\}$/,\r\n            inside: null // see below\r\n          },\r\n\r\n          php: {\r\n            pattern: /[\\s\\S]+/,\r\n            alias: 'language-php',\r\n            inside: Prism.languages.php\r\n          }\r\n        }\r\n      },\r\n      string: [\r\n        {\r\n          pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\r\n          greedy: true,\r\n          inside: {\r\n            interpolation: {\r\n              pattern: /\\{[^{}]*\\}|`[^`]*`/,\r\n              inside: {\r\n                'interpolation-punctuation': {\r\n                  pattern: /^[{`]|[`}]$/,\r\n                  alias: 'punctuation'\r\n                },\r\n                expression: {\r\n                  pattern: /[\\s\\S]+/,\r\n                  inside: null // see below\r\n                }\r\n              }\r\n            },\r\n\r\n            variable: /\\$\\w+/\r\n          }\r\n        },\r\n        {\r\n          pattern: /'(?:\\\\.|[^'\\\\\\r\\n])*'/,\r\n          greedy: true\r\n        }\r\n      ],\r\n      keyword: {\r\n        pattern: /(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      delimiter: {\r\n        pattern: /^\\{\\/?|\\}$/,\r\n        greedy: true,\r\n        alias: 'punctuation'\r\n      },\r\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\r\n      variable: [\r\n        /\\$(?!\\d)\\w+/,\r\n        /#(?!\\d)\\w+#/,\r\n        {\r\n          pattern: /(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      function: {\r\n        pattern: /(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,\r\n        lookbehind: true\r\n      },\r\n      'attr-name': /\\b[a-z_]\\w*(?=\\s*=)/i,\r\n      boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\r\n      punctuation: /[\\[\\](){}.,:`]|->/,\r\n      operator: [\r\n        /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\r\n        /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\r\n        /\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/\r\n      ]\r\n    }\r\n    Prism.languages.smarty['embedded-php'].inside.smarty.inside =\r\n      Prism.languages.smarty\r\n    Prism.languages.smarty.string[0].inside.interpolation.inside.expression.inside =\r\n      Prism.languages.smarty\r\n    var string = /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/\r\n    var smartyPattern = RegExp(\r\n      // comments\r\n      /\\{\\*[\\s\\S]*?\\*\\}/.source +\r\n        '|' +\r\n        // php tags\r\n        /\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source +\r\n        '|' +\r\n        // smarty blocks\r\n        /\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source.replace(\r\n          /<str>/g,\r\n          function () {\r\n            return string.source\r\n          }\r\n        ),\r\n      'g'\r\n    )\r\n\r\n    // Tokenize all inline Smarty expressions\r\n    Prism.hooks.add('before-tokenize', function (env) {\r\n      var smartyLiteralStart = '{literal}'\r\n      var smartyLiteralEnd = '{/literal}'\r\n      var smartyLiteralMode = false\r\n      Prism.languages['markup-templating'].buildPlaceholders(\r\n        env,\r\n        'smarty',\r\n        smartyPattern,\r\n        function (match) {\r\n          // Smarty tags inside {literal} block are ignored\r\n          if (match === smartyLiteralEnd) {\r\n            smartyLiteralMode = false\r\n          }\r\n          if (!smartyLiteralMode) {\r\n            if (match === smartyLiteralStart) {\r\n              smartyLiteralMode = true\r\n            }\r\n            return true\r\n          }\r\n          return false\r\n        }\r\n      )\r\n    })\r\n\r\n    // Re-insert the tokens after tokenizing\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty')\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nsml.displayName = 'sml'\r\nsml.aliases = ['smlnj']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function sml(Prism) {\r\n  // https://smlfamily.github.io/sml97-defn.pdf\r\n  // https://people.mpi-sws.org/~rossberg/sml.html\r\n  ;(function (Prism) {\r\n    var keywords =\r\n      /\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i\r\n    Prism.languages.sml = {\r\n      // allow one level of nesting\r\n      comment:\r\n        /\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,\r\n      string: {\r\n        pattern: /#?\"(?:[^\"\\\\]|\\\\.)*\"/,\r\n        greedy: true\r\n      },\r\n      'class-name': [\r\n        {\r\n          // This is only an approximation since the real grammar is context-free\r\n          //\r\n          // Why the main loop so complex?\r\n          // The main loop is approximately the same as /(?:\\s*(?:[*,]|->)\\s*<TERMINAL>)*/ which is, obviously, a lot\r\n          // simpler. The difference is that if a comma is the last iteration of the loop, then the terminal must be\r\n          // followed by a long identifier.\r\n          pattern: RegExp(\r\n            /((?:^|[^:]):\\s*)<TERMINAL>(?:\\s*(?:(?:\\*|->)\\s*<TERMINAL>|,\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\s+<LONG-ID>)))*/.source\r\n              .replace(/<NOT-LAST>/g, function () {\r\n                return /\\s*(?:[*,]|->)/.source\r\n              })\r\n              .replace(/<TERMINAL>/g, function () {\r\n                return /(?:'[\\w']*|<LONG-ID>|\\((?:[^()]|\\([^()]*\\))*\\)|\\{(?:[^{}]|\\{[^{}]*\\})*\\})(?:\\s+<LONG-ID>)*/\r\n                  .source\r\n              })\r\n              .replace(/<LONG-ID>/g, function () {\r\n                return /(?!<KEYWORD>)[a-z\\d_][\\w'.]*/.source\r\n              })\r\n              .replace(/<KEYWORD>/g, function () {\r\n                return keywords.source\r\n              }),\r\n            'i'\r\n          ),\r\n          lookbehind: true,\r\n          greedy: true,\r\n          inside: null // see below\r\n        },\r\n        {\r\n          pattern:\r\n            /((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      function: {\r\n        pattern: /((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,\r\n        lookbehind: true\r\n      },\r\n      keyword: keywords,\r\n      variable: {\r\n        pattern: /(^|[^\\w'])'[\\w']*/,\r\n        lookbehind: true\r\n      },\r\n      number: /~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,\r\n      word: {\r\n        pattern: /\\b0w(?:\\d+|x[\\da-f]+)\\b/i,\r\n        alias: 'constant'\r\n      },\r\n      boolean: /\\b(?:false|true)\\b/i,\r\n      operator: /\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,\r\n      punctuation: /[(){}\\[\\].:,;]/\r\n    }\r\n    Prism.languages.sml['class-name'][0].inside = Prism.languages.sml\r\n    Prism.languages.smlnj = Prism.languages.sml\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nsolidity.displayName = 'solidity'\r\nsolidity.aliases = ['sol']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function solidity(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.solidity = Prism.languages.extend('clike', {\r\n    'class-name': {\r\n      pattern:\r\n        /(\\b(?:contract|enum|interface|library|new|struct|using)\\s+)(?!\\d)[\\w$]+/,\r\n      lookbehind: true\r\n    },\r\n    keyword:\r\n      /\\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\\b/,\r\n    operator: /=>|->|:=|=:|\\*\\*|\\+\\+|--|\\|\\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/\r\n  })\r\n  Prism.languages.insertBefore('solidity', 'keyword', {\r\n    builtin:\r\n      /\\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\\d|3[0-2])?)\\b/\r\n  })\r\n  Prism.languages.insertBefore('solidity', 'number', {\r\n    version: {\r\n      pattern: /([<>]=?|\\^)\\d+\\.\\d+\\.\\d+\\b/,\r\n      lookbehind: true,\r\n      alias: 'number'\r\n    }\r\n  })\r\n  Prism.languages.sol = Prism.languages.solidity\r\n}\r\n", "// @ts-nocheck\r\nsolutionFile.displayName = 'solution-file'\r\nsolutionFile.aliases = ['sln']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function solutionFile(Prism) {\r\n  ;(function (Prism) {\r\n    var guid = {\r\n      // https://en.wikipedia.org/wiki/Universally_unique_identifier#Format\r\n      pattern: /\\{[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}\\}/i,\r\n      alias: 'constant',\r\n      inside: {\r\n        punctuation: /[{}]/\r\n      }\r\n    }\r\n    Prism.languages['solution-file'] = {\r\n      comment: {\r\n        pattern: /#.*/,\r\n        greedy: true\r\n      },\r\n      string: {\r\n        pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\r\n        greedy: true,\r\n        inside: {\r\n          guid: guid\r\n        }\r\n      },\r\n      object: {\r\n        // Foo\r\n        //   Bar(\"abs\") = 9\r\n        //   EndBar\r\n        //   Prop = TRUE\r\n        // EndFoo\r\n        pattern:\r\n          /^([ \\t]*)(?:([A-Z]\\w*)\\b(?=.*(?:\\r\\n?|\\n)(?:\\1[ \\t].*(?:\\r\\n?|\\n))*\\1End\\2(?=[ \\t]*$))|End[A-Z]\\w*(?=[ \\t]*$))/m,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'keyword'\r\n      },\r\n      property: {\r\n        pattern: /^([ \\t]*)(?!\\s)[^\\r\\n\"#=()]*[^\\s\"#=()](?=\\s*=)/m,\r\n        lookbehind: true,\r\n        inside: {\r\n          guid: guid\r\n        }\r\n      },\r\n      guid: guid,\r\n      number: /\\b\\d+(?:\\.\\d+)*\\b/,\r\n      boolean: /\\b(?:FALSE|TRUE)\\b/,\r\n      operator: /=/,\r\n      punctuation: /[(),]/\r\n    }\r\n    Prism.languages['sln'] = Prism.languages['solution-file']\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkupTemplating from './markup-templating.js'\r\nsoy.displayName = 'soy'\r\nsoy.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function soy(Prism) {\r\n  Prism.register(refractorMarkupTemplating)\r\n  ;(function (Prism) {\r\n    var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\r\n    var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/\r\n    Prism.languages.soy = {\r\n      comment: [\r\n        /\\/\\*[\\s\\S]*?\\*\\//,\r\n        {\r\n          pattern: /(\\s)\\/\\/.*/,\r\n          lookbehind: true,\r\n          greedy: true\r\n        }\r\n      ],\r\n      'command-arg': {\r\n        pattern:\r\n          /(\\{+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\r\n        lookbehind: true,\r\n        alias: 'string',\r\n        inside: {\r\n          punctuation: /\\./\r\n        }\r\n      },\r\n      parameter: {\r\n        pattern: /(\\{+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\r\n        lookbehind: true,\r\n        alias: 'variable'\r\n      },\r\n      keyword: [\r\n        {\r\n          pattern:\r\n            /(\\{+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\r\n          lookbehind: true\r\n        },\r\n        /\\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\\b/\r\n      ],\r\n      delimiter: {\r\n        pattern: /^\\{+\\/?|\\/?\\}+$/,\r\n        alias: 'punctuation'\r\n      },\r\n      property: /\\w+(?==)/,\r\n      variable: {\r\n        pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+\\]))*/,\r\n        inside: {\r\n          string: {\r\n            pattern: stringPattern,\r\n            greedy: true\r\n          },\r\n          number: numberPattern,\r\n          punctuation: /[\\[\\].?]/\r\n        }\r\n      },\r\n      string: {\r\n        pattern: stringPattern,\r\n        greedy: true\r\n      },\r\n      function: [\r\n        /\\w+(?=\\()/,\r\n        {\r\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      number: numberPattern,\r\n      operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\r\n      punctuation: /[{}()\\[\\]|.,:]/\r\n    }\r\n\r\n    // Tokenize all inline Soy expressions\r\n    Prism.hooks.add('before-tokenize', function (env) {\r\n      var soyPattern = /\\{\\{.+?\\}\\}|\\{.+?\\}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g\r\n      var soyLitteralStart = '{literal}'\r\n      var soyLitteralEnd = '{/literal}'\r\n      var soyLitteralMode = false\r\n      Prism.languages['markup-templating'].buildPlaceholders(\r\n        env,\r\n        'soy',\r\n        soyPattern,\r\n        function (match) {\r\n          // Soy tags inside {literal} block are ignored\r\n          if (match === soyLitteralEnd) {\r\n            soyLitteralMode = false\r\n          }\r\n          if (!soyLitteralMode) {\r\n            if (match === soyLitteralStart) {\r\n              soyLitteralMode = true\r\n            }\r\n            return true\r\n          }\r\n          return false\r\n        }\r\n      )\r\n    })\r\n\r\n    // Re-insert the tokens after tokenizing\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy')\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nturtle.displayName = 'turtle'\r\nturtle.aliases = ['trig']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function turtle(Prism) {\r\n  Prism.languages.turtle = {\r\n    comment: {\r\n      pattern: /#.*/,\r\n      greedy: true\r\n    },\r\n    'multiline-string': {\r\n      pattern:\r\n        /\"\"\"(?:(?:\"\"?)?(?:[^\"\\\\]|\\\\.))*\"\"\"|'''(?:(?:''?)?(?:[^'\\\\]|\\\\.))*'''/,\r\n      greedy: true,\r\n      alias: 'string',\r\n      inside: {\r\n        comment: /#.*/\r\n      }\r\n    },\r\n    string: {\r\n      pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*'/,\r\n      greedy: true\r\n    },\r\n    url: {\r\n      pattern:\r\n        /<(?:[^\\x00-\\x20<>\"{}|^`\\\\]|\\\\(?:u[\\da-fA-F]{4}|U[\\da-fA-F]{8}))*>/,\r\n      greedy: true,\r\n      inside: {\r\n        punctuation: /[<>]/\r\n      }\r\n    },\r\n    function: {\r\n      pattern:\r\n        /(?:(?![-.\\d\\xB7])[-.\\w\\xB7\\xC0-\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\w\\xC0-\\uFFFD]|%[\\da-f]{2}|\\\\.)+)?/i,\r\n      inside: {\r\n        'local-name': {\r\n          pattern: /([^:]*:)[\\s\\S]+/,\r\n          lookbehind: true\r\n        },\r\n        prefix: {\r\n          pattern: /[\\s\\S]+/,\r\n          inside: {\r\n            punctuation: /:/\r\n          }\r\n        }\r\n      }\r\n    },\r\n    number: /[+-]?\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\r\n    punctuation: /[{}.,;()[\\]]|\\^\\^/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    keyword: [/(?:\\ba|@prefix|@base)\\b|=/, /\\b(?:base|graph|prefix)\\b/i],\r\n    tag: {\r\n      pattern: /@[a-z]+(?:-[a-z\\d]+)*/i,\r\n      inside: {\r\n        punctuation: /@/\r\n      }\r\n    }\r\n  }\r\n  Prism.languages.trig = Prism.languages['turtle']\r\n}\r\n", "// @ts-nocheck\r\nimport refractorTurtle from './turtle.js'\r\nsparql.displayName = 'sparql'\r\nsparql.aliases = ['rq']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function sparql(Prism) {\r\n  Prism.register(refractorTurtle)\r\n  Prism.languages.sparql = Prism.languages.extend('turtle', {\r\n    boolean: /\\b(?:false|true)\\b/i,\r\n    variable: {\r\n      pattern: /[?$]\\w+/,\r\n      greedy: true\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('sparql', 'punctuation', {\r\n    keyword: [\r\n      /\\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\\b/i,\r\n      /\\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\\b(?=\\s*\\()/i,\r\n      /\\b(?:BASE|GRAPH|PREFIX)\\b/i\r\n    ]\r\n  })\r\n  Prism.languages.rq = Prism.languages.sparql\r\n}\r\n", "// @ts-nocheck\r\nsplunkSpl.displayName = 'splunk-spl'\r\nsplunkSpl.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function splunkSpl(Prism) {\r\n  Prism.languages['splunk-spl'] = {\r\n    comment: /`comment\\(\"(?:\\\\.|[^\\\\\"])*\"\\)`/,\r\n    string: {\r\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\r\n      greedy: true\r\n    },\r\n    // https://docs.splunk.com/Documentation/Splunk/7.3.0/SearchReference/ListOfSearchCommands\r\n    keyword:\r\n      /\\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\\b/i,\r\n    'operator-word': {\r\n      pattern: /\\b(?:and|as|by|not|or|xor)\\b/i,\r\n      alias: 'operator'\r\n    },\r\n    function: /\\b\\w+(?=\\s*\\()/,\r\n    property: /\\b\\w+(?=\\s*=(?!=))/,\r\n    date: {\r\n      // MM/DD/YYYY(:HH:MM:SS)?\r\n      pattern: /\\b\\d{1,2}\\/\\d{1,2}\\/\\d{1,4}(?:(?::\\d{1,2}){3})?\\b/,\r\n      alias: 'number'\r\n    },\r\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\r\n    boolean: /\\b(?:f|false|t|true)\\b/i,\r\n    operator: /[<>=]=?|[-+*/%|]/,\r\n    punctuation: /[()[\\],]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nsqf.displayName = 'sqf'\r\nsqf.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function sqf(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.sqf = Prism.languages.extend('clike', {\r\n    string: {\r\n      pattern: /\"(?:(?:\"\")?[^\"])*\"(?!\")|'(?:[^'])*'/,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\\b/i,\r\n    boolean: /\\b(?:false|true)\\b/i,\r\n    function:\r\n      /\\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\\b/i,\r\n    number:\r\n      /(?:\\$|\\b0x)[\\da-f]+\\b|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+)?)(?:e[+-]?\\d+)?\\b/i,\r\n    operator: /##|>>|&&|\\|\\||[!=<>]=?|[-+*/%#^]|\\b(?:and|mod|not|or)\\b/i,\r\n    'magic-variable': {\r\n      pattern:\r\n        /\\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\\b/i,\r\n      alias: 'keyword'\r\n    },\r\n    constant: /\\bDIK(?:_[a-z\\d]+)+\\b/i\r\n  })\r\n  Prism.languages.insertBefore('sqf', 'string', {\r\n    macro: {\r\n      pattern: /(^[ \\t]*)#[a-z](?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'property',\r\n      inside: {\r\n        directive: {\r\n          pattern: /#[a-z]+\\b/i,\r\n          alias: 'keyword'\r\n        },\r\n        comment: Prism.languages.sqf.comment\r\n      }\r\n    }\r\n  })\r\n  delete Prism.languages.sqf['class-name']\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nsquirrel.displayName = 'squirrel'\r\nsquirrel.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function squirrel(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.squirrel = Prism.languages.extend('clike', {\r\n    comment: [\r\n      Prism.languages.clike['comment'][0],\r\n      {\r\n        pattern: /(^|[^\\\\:])(?:\\/\\/|#).*/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    string: {\r\n      pattern: /(^|[^\\\\\"'@])(?:@\"(?:[^\"]|\"\")*\"(?!\")|\"(?:[^\\\\\\r\\n\"]|\\\\.)*\")/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    'class-name': {\r\n      pattern: /(\\b(?:class|enum|extends|instanceof)\\s+)\\w+(?:\\.\\w+)*/,\r\n      lookbehind: true,\r\n      inside: {\r\n        punctuation: /\\./\r\n      }\r\n    },\r\n    keyword:\r\n      /\\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\\b/,\r\n    number: /\\b(?:0x[0-9a-fA-F]+|\\d+(?:\\.(?:\\d+|[eE][+-]?\\d+))?)\\b/,\r\n    operator: /\\+\\+|--|<=>|<[-<]|>>>?|&&?|\\|\\|?|[-+*/%!=<>]=?|[~^]|::?/,\r\n    punctuation: /[(){}\\[\\],;.]/\r\n  })\r\n  Prism.languages.insertBefore('squirrel', 'string', {\r\n    char: {\r\n      pattern: /(^|[^\\\\\"'])'(?:[^\\\\']|\\\\(?:[xuU][0-9a-fA-F]{0,8}|[\\s\\S]))'/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('squirrel', 'operator', {\r\n    'attribute-punctuation': {\r\n      pattern: /<\\/|\\/>/,\r\n      alias: 'important'\r\n    },\r\n    lambda: {\r\n      pattern: /@(?=\\()/,\r\n      alias: 'operator'\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nstan.displayName = 'stan'\r\nstan.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function stan(Prism) {\r\n  ;(function (Prism) {\r\n    // https://mc-stan.org/docs/2_28/reference-manual/bnf-grammars.html\r\n\r\n    var higherOrderFunctions =\r\n      /\\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\\b/\r\n    Prism.languages.stan = {\r\n      comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\r\n      string: {\r\n        // String literals can contain spaces and any printable ASCII characters except for \" and \\\r\n        // https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals\r\n        pattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\r\n        greedy: true\r\n      },\r\n      directive: {\r\n        pattern: /^([ \\t]*)#include\\b.*/m,\r\n        lookbehind: true,\r\n        alias: 'property'\r\n      },\r\n      'function-arg': {\r\n        pattern: RegExp(\r\n          '(' +\r\n            higherOrderFunctions.source +\r\n            /\\s*\\(\\s*/.source +\r\n            ')' +\r\n            /[a-zA-Z]\\w*/.source\r\n        ),\r\n        lookbehind: true,\r\n        alias: 'function'\r\n      },\r\n      constraint: {\r\n        pattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\r\n        lookbehind: true,\r\n        inside: {\r\n          expression: {\r\n            pattern: /(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,\r\n            lookbehind: true,\r\n            inside: null // see below\r\n          },\r\n\r\n          property: /\\b[a-z]\\w*(?=\\s*=)/i,\r\n          operator: /=/,\r\n          punctuation: /^<|>$|,/\r\n        }\r\n      },\r\n      keyword: [\r\n        {\r\n          pattern:\r\n            /\\bdata(?=\\s*\\{)|\\b(?:functions|generated|model|parameters|quantities|transformed)\\b/,\r\n          alias: 'program-block'\r\n        },\r\n        /\\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\\b/,\r\n        // these are functions that are known to take another function as their first argument.\r\n        higherOrderFunctions\r\n      ],\r\n      function: /\\b[a-z]\\w*(?=\\s*\\()/i,\r\n      number:\r\n        /(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:E[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      operator: /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\r\n      punctuation: /[()\\[\\]{},;]/\r\n    }\r\n    Prism.languages.stan.constraint.inside.expression.inside =\r\n      Prism.languages.stan\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorJava from './java.js'\r\nimport refractorMata from './mata.js'\r\nimport refractorPython from './python.js'\r\nstata.displayName = 'stata'\r\nstata.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function stata(Prism) {\r\n  Prism.register(refractorJava)\r\n  Prism.register(refractorMata)\r\n  Prism.register(refractorPython)\r\n  // https://www.stata.com/manuals/u.pdf\r\n  // https://www.stata.com/manuals/p.pdf\r\n\r\n  Prism.languages.stata = {\r\n    comment: [\r\n      {\r\n        pattern: /(^[ \\t]*)\\*.*/m,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /(^|\\s)\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    'string-literal': {\r\n      pattern: /\"[^\"\\r\\n]*\"|[‘`']\".*?\"[’`']/,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern: /\\$\\{[^{}]*\\}|[‘`']\\w[^’`'\\r\\n]*[’`']/,\r\n          inside: {\r\n            punctuation: /^\\$\\{|\\}$/,\r\n            expression: {\r\n              pattern: /[\\s\\S]+/,\r\n              inside: null // see below\r\n            }\r\n          }\r\n        },\r\n\r\n        string: /[\\s\\S]+/\r\n      }\r\n    },\r\n    mata: {\r\n      pattern: /(^[ \\t]*mata[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'language-mata',\r\n      inside: Prism.languages.mata\r\n    },\r\n    java: {\r\n      pattern: /(^[ \\t]*java[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'language-java',\r\n      inside: Prism.languages.java\r\n    },\r\n    python: {\r\n      pattern: /(^[ \\t]*python[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'language-python',\r\n      inside: Prism.languages.python\r\n    },\r\n    command: {\r\n      pattern:\r\n        /(^[ \\t]*(?:\\.[ \\t]+)?(?:(?:bayes|bootstrap|by|bysort|capture|collect|fmm|fp|frame|jackknife|mfp|mi|nestreg|noisily|permute|quietly|rolling|simulate|statsby|stepwise|svy|version|xi)\\b[^:\\r\\n]*:[ \\t]*|(?:capture|noisily|quietly|version)[ \\t]+)?)[a-zA-Z]\\w*/m,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'keyword'\r\n    },\r\n    variable: /\\$\\w+|[‘`']\\w[^’`'\\r\\n]*[’`']/,\r\n    keyword:\r\n      /\\b(?:bayes|bootstrap|by|bysort|capture|clear|collect|fmm|fp|frame|if|in|jackknife|mi[ \\t]+estimate|mfp|nestreg|noisily|of|permute|quietly|rolling|simulate|sort|statsby|stepwise|svy|varlist|version|xi)\\b/,\r\n    boolean: /\\b(?:off|on)\\b/,\r\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+/,\r\n    function: /\\b[a-z_]\\w*(?=\\()/i,\r\n    operator: /\\+\\+|--|##?|[<>!=~]=?|[+\\-*^&|/]/,\r\n    punctuation: /[(){}[\\],:]/\r\n  }\r\n  Prism.languages.stata[\r\n    'string-literal'\r\n  ].inside.interpolation.inside.expression.inside = Prism.languages.stata\r\n}\r\n", "// @ts-nocheck\r\niecst.displayName = 'iecst'\r\niecst.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function iecst(Prism) {\r\n  Prism.languages.iecst = {\r\n    comment: [\r\n      {\r\n        pattern:\r\n          /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\(\\*[\\s\\S]*?(?:\\*\\)|$)|\\{[\\s\\S]*?(?:\\}|$))/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    string: {\r\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true\r\n    },\r\n    keyword: [\r\n      /\\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\\b/i,\r\n      /\\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\\b/\r\n    ],\r\n    'class-name':\r\n      /\\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\\b/,\r\n    address: {\r\n      pattern: /%[IQM][XBWDL][\\d.]*|%[IQ][\\d.]*/,\r\n      alias: 'symbol'\r\n    },\r\n    number:\r\n      /\\b(?:16#[\\da-f]+|2#[01_]+|0x[\\da-f]+)\\b|\\b(?:D|DT|T|TOD)#[\\d_shmd:]*|\\b[A-Z]*#[\\d.,_]*|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\r\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/,\r\n    operator:\r\n      /S?R?:?=>?|&&?|\\*\\*?|<[=>]?|>=?|[-:^/+#]|\\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\\b/,\r\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n    punctuation: /[()[\\].,;]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nsupercollider.displayName = 'supercollider'\r\nsupercollider.aliases = ['sclang']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function supercollider(Prism) {\r\n  Prism.languages.supercollider = {\r\n    comment: {\r\n      pattern:\r\n        /\\/\\/.*|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\//,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    char: {\r\n      pattern: /\\$(?:[^\\\\\\r\\n]|\\\\.)/,\r\n      greedy: true\r\n    },\r\n    symbol: {\r\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'|\\\\\\w+/,\r\n      lookbehind: true,\r\n      greedy: true\r\n    },\r\n    keyword: /\\b(?:_|arg|classvar|const|nil|var|while)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    label: {\r\n      pattern: /\\b[a-z_]\\w*(?=\\s*:)/,\r\n      alias: 'property'\r\n    },\r\n    number:\r\n      /\\b(?:inf|pi|0x[0-9a-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(?:pi)?|\\d+r[0-9a-zA-Z]+(?:\\.[0-9a-zA-Z]+)?|\\d+[sb]{1,4}\\d*)\\b/,\r\n    'class-name': /\\b[A-Z]\\w*\\b/,\r\n    operator:\r\n      /\\.{2,3}|#(?![[{])|&&|[!=]==?|\\+>>|\\+{1,3}|-[->]|=>|>>|\\?\\?|@\\|?@|\\|(?:@|[!=]=)?\\||!\\?|<[!=>]|\\*{1,2}|<{2,3}\\*?|[-!%&/<>?@|=`]/,\r\n    punctuation: /[{}()[\\].:,;]|#[[{]/\r\n  }\r\n  Prism.languages.sclang = Prism.languages.supercollider\r\n}\r\n", "// @ts-nocheck\r\nsystemd.displayName = 'systemd'\r\nsystemd.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function systemd(Prism) {\r\n  // https://www.freedesktop.org/software/systemd/man/systemd.syntax.html\r\n\r\n  ;(function (Prism) {\r\n    var comment = {\r\n      pattern: /^[;#].*/m,\r\n      greedy: true\r\n    }\r\n    var quotesSource = /\"(?:[^\\r\\n\"\\\\]|\\\\(?:[^\\r]|\\r\\n?))*\"(?!\\S)/.source\r\n    Prism.languages.systemd = {\r\n      comment: comment,\r\n      section: {\r\n        pattern: /^\\[[^\\n\\r\\[\\]]*\\](?=[ \\t]*$)/m,\r\n        greedy: true,\r\n        inside: {\r\n          punctuation: /^\\[|\\]$/,\r\n          'section-name': {\r\n            pattern: /[\\s\\S]+/,\r\n            alias: 'selector'\r\n          }\r\n        }\r\n      },\r\n      key: {\r\n        pattern: /^[^\\s=]+(?=[ \\t]*=)/m,\r\n        greedy: true,\r\n        alias: 'attr-name'\r\n      },\r\n      value: {\r\n        // This pattern is quite complex because of two properties:\r\n        //  1) Quotes (strings) must be preceded by a space. Since we can't use lookbehinds, we have to \"resolve\"\r\n        //     the lookbehind. You will see this in the main loop where spaces are handled separately.\r\n        //  2) Line continuations.\r\n        //     After line continuations, empty lines and comments are ignored so we have to consume them.\r\n        pattern: RegExp(\r\n          /(=[ \\t]*(?!\\s))/.source +\r\n            // the value either starts with quotes or not\r\n            '(?:' +\r\n            quotesSource +\r\n            '|(?=[^\"\\r\\n]))' +\r\n            // main loop\r\n            '(?:' +\r\n            (/[^\\s\\\\]/.source +\r\n              // handle spaces separately because of quotes\r\n              '|' +\r\n              '[ \\t]+(?:(?![ \\t\"])|' +\r\n              quotesSource +\r\n              ')' +\r\n              // line continuation\r\n              '|' +\r\n              /\\\\[\\r\\n]+(?:[#;].*[\\r\\n]+)*(?![#;])/.source) +\r\n            ')*'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'attr-value',\r\n        inside: {\r\n          comment: comment,\r\n          quoted: {\r\n            pattern: RegExp(/(^|\\s)/.source + quotesSource),\r\n            lookbehind: true,\r\n            greedy: true\r\n          },\r\n          punctuation: /\\\\$/m,\r\n          boolean: {\r\n            pattern: /^(?:false|no|off|on|true|yes)$/,\r\n            greedy: true\r\n          }\r\n        }\r\n      },\r\n      punctuation: /=/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nt4Templating.displayName = 't4-templating'\r\nt4Templating.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function t4Templating(Prism) {\r\n  ;(function (Prism) {\r\n    function createBlock(prefix, inside, contentAlias) {\r\n      return {\r\n        pattern: RegExp('<#' + prefix + '[\\\\s\\\\S]*?#>'),\r\n        alias: 'block',\r\n        inside: {\r\n          delimiter: {\r\n            pattern: RegExp('^<#' + prefix + '|#>$'),\r\n            alias: 'important'\r\n          },\r\n          content: {\r\n            pattern: /[\\s\\S]+/,\r\n            inside: inside,\r\n            alias: contentAlias\r\n          }\r\n        }\r\n      }\r\n    }\r\n    function createT4(insideLang) {\r\n      var grammar = Prism.languages[insideLang]\r\n      var className = 'language-' + insideLang\r\n      return {\r\n        block: {\r\n          pattern: /<#[\\s\\S]+?#>/,\r\n          inside: {\r\n            directive: createBlock('@', {\r\n              'attr-value': {\r\n                pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\r\n                inside: {\r\n                  punctuation: /^=|^[\"']|[\"']$/\r\n                }\r\n              },\r\n              keyword: /\\b\\w+(?=\\s)/,\r\n              'attr-name': /\\b\\w+/\r\n            }),\r\n            expression: createBlock('=', grammar, className),\r\n            'class-feature': createBlock('\\\\+', grammar, className),\r\n            standard: createBlock('', grammar, className)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    Prism.languages['t4-templating'] = Object.defineProperty({}, 'createT4', {\r\n      value: createT4\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorCsharp from './csharp.js'\r\nimport refractorT4Templating from './t4-templating.js'\r\nt4Cs.displayName = 't4-cs'\r\nt4Cs.aliases = ['t4']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function t4Cs(Prism) {\r\n  Prism.register(refractorCsharp)\r\n  Prism.register(refractorT4Templating)\r\n  Prism.languages.t4 = Prism.languages['t4-cs'] =\r\n    Prism.languages['t4-templating'].createT4('csharp')\r\n}\r\n", "// @ts-nocheck\r\nimport refractorT4Templating from './t4-templating.js'\r\nimport refractorVbnet from './vbnet.js'\r\nt4Vb.displayName = 't4-vb'\r\nt4Vb.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function t4Vb(Prism) {\r\n  Prism.register(refractorT4Templating)\r\n  Prism.register(refractorVbnet)\r\n  Prism.languages['t4-vb'] = Prism.languages['t4-templating'].createT4('vbnet')\r\n}\r\n", "// @ts-nocheck\r\nimport refractorYaml from './yaml.js'\r\ntap.displayName = 'tap'\r\ntap.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function tap(Prism) {\r\n  Prism.register(refractorYaml)\r\n  // https://en.wikipedia.org/wiki/Test_Anything_Protocol\r\n\r\n  Prism.languages.tap = {\r\n    fail: /not ok[^#{\\n\\r]*/,\r\n    pass: /ok[^#{\\n\\r]*/,\r\n    pragma: /pragma [+-][a-z]+/,\r\n    bailout: /bail out!.*/i,\r\n    version: /TAP version \\d+/i,\r\n    plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\r\n    subtest: {\r\n      pattern: /# Subtest(?:: .*)?/,\r\n      greedy: true\r\n    },\r\n    punctuation: /[{}]/,\r\n    directive: /#.*/,\r\n    yamlish: {\r\n      pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\r\n      lookbehind: true,\r\n      inside: Prism.languages.yaml,\r\n      alias: 'language-yaml'\r\n    }\r\n  }\r\n}\r\n", "// @ts-nocheck\r\ntcl.displayName = 'tcl'\r\ntcl.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function tcl(Prism) {\r\n  Prism.languages.tcl = {\r\n    comment: {\r\n      pattern: /(^|[^\\\\])#.*/,\r\n      lookbehind: true\r\n    },\r\n    string: {\r\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\r\n      greedy: true\r\n    },\r\n    variable: [\r\n      {\r\n        pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(\\$)\\{[^}]+\\}/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(^[\\t ]*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\r\n        lookbehind: true\r\n      }\r\n    ],\r\n    function: {\r\n      pattern: /(^[\\t ]*proc[ \\t]+)\\S+/m,\r\n      lookbehind: true\r\n    },\r\n    builtin: [\r\n      {\r\n        pattern:\r\n          /(^[\\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\\b/m,\r\n        lookbehind: true\r\n      },\r\n      /\\b(?:else|elseif)\\b/\r\n    ],\r\n    scope: {\r\n      pattern: /(^[\\t ]*)(?:global|upvar|variable)\\b/m,\r\n      lookbehind: true,\r\n      alias: 'constant'\r\n    },\r\n    keyword: {\r\n      pattern:\r\n        /(^[\\t ]*|\\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\r\n      lookbehind: true\r\n    },\r\n    operator:\r\n      /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|in|ne|ni)\\b/,\r\n    punctuation: /[{}()\\[\\]]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nimport refractorMarkupTemplating from './markup-templating.js'\r\ntt2.displayName = 'tt2'\r\ntt2.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function tt2(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.register(refractorMarkupTemplating)\r\n  ;(function (Prism) {\r\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\r\n      comment: /#.*|\\[%#[\\s\\S]*?%\\]/,\r\n      keyword:\r\n        /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\\b/,\r\n      punctuation: /[[\\]{},()]/\r\n    })\r\n    Prism.languages.insertBefore('tt2', 'number', {\r\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|not|or)\\b/,\r\n      variable: {\r\n        pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('tt2', 'keyword', {\r\n      delimiter: {\r\n        pattern: /^(?:\\[%|%%)-?|-?%\\]$/,\r\n        alias: 'punctuation'\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('tt2', 'string', {\r\n      'single-quoted-string': {\r\n        pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\r\n        greedy: true,\r\n        alias: 'string'\r\n      },\r\n      'double-quoted-string': {\r\n        pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\r\n        greedy: true,\r\n        alias: 'string',\r\n        inside: {\r\n          variable: {\r\n            pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    // The different types of TT2 strings \"replace\" the C-like standard string\r\n    delete Prism.languages.tt2.string\r\n    Prism.hooks.add('before-tokenize', function (env) {\r\n      var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g\r\n      Prism.languages['markup-templating'].buildPlaceholders(\r\n        env,\r\n        'tt2',\r\n        tt2Pattern\r\n      )\r\n    })\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2')\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ntoml.displayName = 'toml'\r\ntoml.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function toml(Prism) {\r\n  ;(function (Prism) {\r\n    var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source\r\n\r\n    /**\r\n     * @param {string} pattern\r\n     */\r\n    function insertKey(pattern) {\r\n      return pattern.replace(/__/g, function () {\r\n        return key\r\n      })\r\n    }\r\n    Prism.languages.toml = {\r\n      comment: {\r\n        pattern: /#.*/,\r\n        greedy: true\r\n      },\r\n      table: {\r\n        pattern: RegExp(\r\n          insertKey(\r\n            /(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source\r\n          ),\r\n          'm'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'class-name'\r\n      },\r\n      key: {\r\n        pattern: RegExp(\r\n          insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source),\r\n          'm'\r\n        ),\r\n        lookbehind: true,\r\n        greedy: true,\r\n        alias: 'property'\r\n      },\r\n      string: {\r\n        pattern:\r\n          /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\r\n        greedy: true\r\n      },\r\n      date: [\r\n        {\r\n          // Offset Date-Time, Local Date-Time, Local Date\r\n          pattern:\r\n            /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\r\n          alias: 'number'\r\n        },\r\n        {\r\n          // Local Time\r\n          pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\r\n          alias: 'number'\r\n        }\r\n      ],\r\n      number:\r\n        /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      punctuation: /[.,=[\\]{}]/\r\n    }\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ntremor.displayName = 'tremor'\r\ntremor.aliases = ['trickle', 'troy']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function tremor(Prism) {\r\n  ;(function (Prism) {\r\n    Prism.languages.tremor = {\r\n      comment: {\r\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\r\n        lookbehind: true\r\n      },\r\n      'interpolated-string': null,\r\n      // see below\r\n      extractor: {\r\n        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\r\n        greedy: true,\r\n        inside: {\r\n          regex: {\r\n            pattern: /(^re)\\|[\\s\\S]+/,\r\n            lookbehind: true\r\n          },\r\n          function: /^\\w+/,\r\n          value: /\\|[\\s\\S]+/\r\n        }\r\n      },\r\n      identifier: {\r\n        pattern: /`[^`]*`/,\r\n        greedy: true\r\n      },\r\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\r\n      keyword:\r\n        /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\r\n      boolean: /\\b(?:false|null|true)\\b/i,\r\n      number:\r\n        /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\r\n      'pattern-punctuation': {\r\n        pattern: /%(?=[({[])/,\r\n        alias: 'punctuation'\r\n      },\r\n      operator:\r\n        /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\r\n      punctuation: /::|[;\\[\\]()\\{\\},.:]/\r\n    }\r\n    var interpolationPattern =\r\n      /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source\r\n    Prism.languages.tremor['interpolated-string'] = {\r\n      pattern: RegExp(\r\n        /(^|[^\\\\])/.source +\r\n          '(?:' +\r\n          '\"\"\"(?:' +\r\n          /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source +\r\n          '|' +\r\n          interpolationPattern +\r\n          ')*\"\"\"' +\r\n          '|' +\r\n          '\"(?:' +\r\n          /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source +\r\n          '|' +\r\n          interpolationPattern +\r\n          ')*\"' +\r\n          ')'\r\n      ),\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern: RegExp(interpolationPattern),\r\n          inside: {\r\n            punctuation: /^#\\{|\\}$/,\r\n            expression: {\r\n              pattern: /[\\s\\S]+/,\r\n              inside: Prism.languages.tremor\r\n            }\r\n          }\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    }\r\n    Prism.languages.troy = Prism.languages['tremor']\r\n    Prism.languages.trickle = Prism.languages['tremor']\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\ntyposcript.displayName = 'typoscript'\r\ntyposcript.aliases = ['tsconfig']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function typoscript(Prism) {\r\n  ;(function (Prism) {\r\n    var keywords =\r\n      /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/\r\n    Prism.languages.typoscript = {\r\n      comment: [\r\n        {\r\n          // multiline comments /* */\r\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          // double-slash comments - ignored when backslashes or colon is found in front\r\n          // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\r\n          pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\r\n          lookbehind: true,\r\n          greedy: true\r\n        },\r\n        {\r\n          // hash comments - ignored when leading quote is found for hex colors in strings\r\n          pattern: /(^|[^\"'])#.*/,\r\n          lookbehind: true,\r\n          greedy: true\r\n        }\r\n      ],\r\n      function: [\r\n        {\r\n          // old include style\r\n          pattern:\r\n            /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\r\n          inside: {\r\n            string: {\r\n              pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\r\n              inside: {\r\n                keyword: keywords\r\n              }\r\n            },\r\n            keyword: {\r\n              pattern: /INCLUDE_TYPOSCRIPT/\r\n            }\r\n          }\r\n        },\r\n        {\r\n          // new include style\r\n          pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\r\n          inside: {\r\n            string: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\r\n          }\r\n        }\r\n      ],\r\n      string: {\r\n        pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\r\n        lookbehind: true,\r\n        inside: {\r\n          function: /\\{\\$.*\\}/,\r\n          // constants include\r\n          keyword: keywords,\r\n          number: /^\\d+$/,\r\n          punctuation: /[,|:]/\r\n        }\r\n      },\r\n      keyword: keywords,\r\n      number: {\r\n        // special highlighting for indexes of arrays in tags\r\n        pattern: /\\b\\d+\\s*[.{=]/,\r\n        inside: {\r\n          operator: /[.{=]/\r\n        }\r\n      },\r\n      tag: {\r\n        pattern: /\\.?[-\\w\\\\]+\\.?/,\r\n        inside: {\r\n          punctuation: /\\./\r\n        }\r\n      },\r\n      punctuation: /[{}[\\];(),.:|]/,\r\n      operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\r\n    }\r\n    Prism.languages.tsconfig = Prism.languages.typoscript\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nunrealscript.displayName = 'unrealscript'\r\nunrealscript.aliases = ['uc', 'uscript']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function unrealscript(Prism) {\r\n  Prism.languages.unrealscript = {\r\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\r\n    string: {\r\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true\r\n    },\r\n    category: {\r\n      pattern:\r\n        /(\\b(?:(?:autoexpand|hide|show)categories|var)\\s*\\()[^()]+(?=\\))/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      alias: 'property'\r\n    },\r\n    metadata: {\r\n      pattern: /(\\w\\s*)<\\s*\\w+\\s*=[^<>|=\\r\\n]+(?:\\|\\s*\\w+\\s*=[^<>|=\\r\\n]+)*>/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: {\r\n        property: /\\b\\w+(?=\\s*=)/,\r\n        operator: /=/,\r\n        punctuation: /[<>|]/\r\n      }\r\n    },\r\n    macro: {\r\n      pattern: /`\\w+/,\r\n      alias: 'property'\r\n    },\r\n    'class-name': {\r\n      pattern:\r\n        /(\\b(?:class|enum|extends|interface|state(?:\\(\\))?|struct|within)\\s+)\\w+/,\r\n      lookbehind: true\r\n    },\r\n    keyword:\r\n      /\\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\\b/,\r\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\r\n    // https://docs.unrealengine.com/udk/Three/UnrealScriptExpressions.html\r\n    operator:\r\n      />>|<<|--|\\+\\+|\\*\\*|[-+*/~!=<>$@]=?|&&?|\\|\\|?|\\^\\^?|[?:%]|\\b(?:ClockwiseFrom|Cross|Dot)\\b/,\r\n    punctuation: /[()[\\]{};,.]/\r\n  }\r\n  Prism.languages.uc = Prism.languages.uscript = Prism.languages.unrealscript\r\n}\r\n", "// @ts-nocheck\r\nuorazor.displayName = 'uorazor'\r\nuorazor.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function uorazor(Prism) {\r\n  Prism.languages.uorazor = {\r\n    'comment-hash': {\r\n      pattern: /#.*/,\r\n      alias: 'comment',\r\n      greedy: true\r\n    },\r\n    'comment-slash': {\r\n      pattern: /\\/\\/.*/,\r\n      alias: 'comment',\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      inside: {\r\n        punctuation: /^['\"]|['\"]$/\r\n      },\r\n      greedy: true\r\n    },\r\n    'source-layers': {\r\n      pattern:\r\n        /\\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\\b/i,\r\n      alias: 'function'\r\n    },\r\n    'source-commands': {\r\n      pattern:\r\n        /\\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\\b/,\r\n      alias: 'function'\r\n    },\r\n    'tag-name': {\r\n      pattern: /(^\\{%-?\\s*)\\w+/,\r\n      lookbehind: true,\r\n      alias: 'keyword'\r\n    },\r\n    delimiter: {\r\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\r\n      alias: 'punctuation'\r\n    },\r\n    function:\r\n      /\\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\\b/,\r\n    keyword:\r\n      /\\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\\b/,\r\n    boolean: /\\b(?:false|null|true)\\b/,\r\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\r\n    operator: [\r\n      {\r\n        pattern:\r\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\r\n        lookbehind: true\r\n      },\r\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\r\n    ],\r\n    punctuation: /[()\\[\\]{}:.,]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nv.displayName = 'v'\r\nv.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function v(Prism) {\r\n  Prism.register(refractorClike)\r\n  ;(function (Prism) {\r\n    var interpolationExpr = {\r\n      pattern: /[\\s\\S]+/,\r\n      inside: null\r\n    }\r\n    Prism.languages.v = Prism.languages.extend('clike', {\r\n      string: {\r\n        pattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n        alias: 'quoted-string',\r\n        greedy: true,\r\n        inside: {\r\n          interpolation: {\r\n            pattern:\r\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\r\n            lookbehind: true,\r\n            inside: {\r\n              'interpolation-variable': {\r\n                pattern: /^\\$\\w[\\s\\S]*$/,\r\n                alias: 'variable'\r\n              },\r\n              'interpolation-punctuation': {\r\n                pattern: /^\\$\\{|\\}$/,\r\n                alias: 'punctuation'\r\n              },\r\n              'interpolation-expression': interpolationExpr\r\n            }\r\n          }\r\n        }\r\n      },\r\n      'class-name': {\r\n        pattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\r\n        lookbehind: true\r\n      },\r\n      keyword:\r\n        /(?:\\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:else|for|if)|#(?:flag|include))\\b/,\r\n      number:\r\n        /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\r\n      operator:\r\n        /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\r\n      builtin:\r\n        /\\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\r\n    })\r\n    interpolationExpr.inside = Prism.languages.v\r\n    Prism.languages.insertBefore('v', 'string', {\r\n      char: {\r\n        pattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/,\r\n        // using {1,2} instead of `u` flag for compatibility\r\n        alias: 'rune'\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('v', 'operator', {\r\n      attribute: {\r\n        pattern:\r\n          /(^[\\t ]*)\\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\\]/m,\r\n        lookbehind: true,\r\n        alias: 'annotation',\r\n        inside: {\r\n          punctuation: /[\\[\\]]/,\r\n          keyword: /\\w+/\r\n        }\r\n      },\r\n      generic: {\r\n        pattern: /<\\w+>(?=\\s*[\\)\\{])/,\r\n        inside: {\r\n          punctuation: /[<>]/,\r\n          'class-name': /\\w+/\r\n        }\r\n      }\r\n    })\r\n    Prism.languages.insertBefore('v', 'function', {\r\n      'generic-function': {\r\n        // e.g. foo<T>( ...\r\n        pattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\r\n        inside: {\r\n          function: /^\\w+/,\r\n          generic: {\r\n            pattern: /<\\w+>/,\r\n            inside: Prism.languages.v.generic.inside\r\n          }\r\n        }\r\n      }\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorClike from './clike.js'\r\nvala.displayName = 'vala'\r\nvala.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function vala(Prism) {\r\n  Prism.register(refractorClike)\r\n  Prism.languages.vala = Prism.languages.extend('clike', {\r\n    // Classes copied from prism-csharp\r\n    'class-name': [\r\n      {\r\n        // (Foo bar, Bar baz)\r\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\r\n        inside: {\r\n          punctuation: /\\./\r\n        }\r\n      },\r\n      {\r\n        // [Foo]\r\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /\\./\r\n        }\r\n      },\r\n      {\r\n        // class Foo : Bar\r\n        pattern:\r\n          /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /\\./\r\n        }\r\n      },\r\n      {\r\n        // class Foo\r\n        pattern:\r\n          /((?:\\b(?:class|enum|interface|new|struct)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\r\n        lookbehind: true,\r\n        inside: {\r\n          punctuation: /\\./\r\n        }\r\n      }\r\n    ],\r\n    keyword:\r\n      /\\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\\b/i,\r\n    function: /\\b\\w+(?=\\s*\\()/,\r\n    number:\r\n      /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\r\n    operator:\r\n      /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\r\n    punctuation: /[{}[\\];(),.:]/,\r\n    constant: /\\b[A-Z0-9_]+\\b/\r\n  })\r\n  Prism.languages.insertBefore('vala', 'string', {\r\n    'raw-string': {\r\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\r\n      greedy: true,\r\n      alias: 'string'\r\n    },\r\n    'template-string': {\r\n      pattern: /@\"[\\s\\S]*?\"/,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\r\n          inside: {\r\n            delimiter: {\r\n              pattern: /^\\$\\(?|\\)$/,\r\n              alias: 'punctuation'\r\n            },\r\n            rest: Prism.languages.vala\r\n          }\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    }\r\n  })\r\n  Prism.languages.insertBefore('vala', 'keyword', {\r\n    regex: {\r\n      pattern:\r\n        /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\r\n      greedy: true,\r\n      inside: {\r\n        'regex-source': {\r\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\r\n          lookbehind: true,\r\n          alias: 'language-regex',\r\n          inside: Prism.languages.regex\r\n        },\r\n        'regex-delimiter': /^\\//,\r\n        'regex-flags': /^[a-z]+$/\r\n      }\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkup from './markup.js'\r\nvelocity.displayName = 'velocity'\r\nvelocity.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function velocity(Prism) {\r\n  Prism.register(refractorMarkup)\r\n  ;(function (Prism) {\r\n    Prism.languages.velocity = Prism.languages.extend('markup', {})\r\n    var velocity = {\r\n      variable: {\r\n        pattern:\r\n          /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\r\n        lookbehind: true,\r\n        inside: {} // See below\r\n      },\r\n\r\n      string: {\r\n        pattern: /\"[^\"]*\"|'[^']*'/,\r\n        greedy: true\r\n      },\r\n      number: /\\b\\d+\\b/,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      operator:\r\n        /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\r\n      punctuation: /[(){}[\\]:,.]/\r\n    }\r\n    velocity.variable.inside = {\r\n      string: velocity['string'],\r\n      function: {\r\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\r\n        lookbehind: true\r\n      },\r\n      number: velocity['number'],\r\n      boolean: velocity['boolean'],\r\n      punctuation: velocity['punctuation']\r\n    }\r\n    Prism.languages.insertBefore('velocity', 'comment', {\r\n      unparsed: {\r\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\r\n        lookbehind: true,\r\n        greedy: true,\r\n        inside: {\r\n          punctuation: /^#\\[\\[|\\]\\]#$/\r\n        }\r\n      },\r\n      'velocity-comment': [\r\n        {\r\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          alias: 'comment'\r\n        },\r\n        {\r\n          pattern: /(^|[^\\\\])##.*/,\r\n          lookbehind: true,\r\n          greedy: true,\r\n          alias: 'comment'\r\n        }\r\n      ],\r\n      directive: {\r\n        pattern:\r\n          /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\r\n        lookbehind: true,\r\n        inside: {\r\n          keyword: {\r\n            pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\r\n            inside: {\r\n              punctuation: /[{}]/\r\n            }\r\n          },\r\n          rest: velocity\r\n        }\r\n      },\r\n      variable: velocity['variable']\r\n    })\r\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\r\n      Prism.languages.velocity\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nverilog.displayName = 'verilog'\r\nverilog.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function verilog(Prism) {\r\n  Prism.languages.verilog = {\r\n    comment: {\r\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\r\n      greedy: true\r\n    },\r\n    'kernel-function': {\r\n      // support for any kernel function (ex: $display())\r\n      pattern: /\\B\\$\\w+\\b/,\r\n      alias: 'property'\r\n    },\r\n    // support for user defined constants (ex: `define)\r\n    constant: /\\B`\\w+\\b/,\r\n    function: /\\b\\w+(?=\\()/,\r\n    // support for verilog and system verilog keywords\r\n    keyword:\r\n      /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\r\n    // bold highlighting for all verilog and system verilog logic blocks\r\n    important: /\\b(?:always|always_comb|always_ff|always_latch)\\b(?: *@)?/,\r\n    // support for time ticks, vectors, and real numbers\r\n    number:\r\n      /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b(?:\\d*[._])?\\d+(?:e[-+]?\\d+)?/i,\r\n    operator: /[-+{}^~%*\\/?=!<>&|]+/,\r\n    punctuation: /[[\\];(),.:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nvhdl.displayName = 'vhdl'\r\nvhdl.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function vhdl(Prism) {\r\n  Prism.languages.vhdl = {\r\n    comment: /--.+/,\r\n    // support for all logic vectors\r\n    'vhdl-vectors': {\r\n      pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\r\n      alias: 'number'\r\n    },\r\n    // support for operator overloading included\r\n    'quoted-function': {\r\n      pattern: /\"\\S+?\"(?=\\()/,\r\n      alias: 'function'\r\n    },\r\n    string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\r\n    attribute: {\r\n      pattern: /\\b'\\w+/,\r\n      alias: 'attr-name'\r\n    },\r\n    // support for predefined attributes included\r\n    keyword:\r\n      /\\b(?:access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|private|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|view|wait|when|while|with)\\b/i,\r\n    boolean: /\\b(?:false|true)\\b/i,\r\n    function: /\\w+(?=\\()/,\r\n    // decimal, based, physical, and exponential numbers supported\r\n    number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\r\n    operator:\r\n      /[<>]=?|:=|[-+*/&=]|\\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\\b/i,\r\n    punctuation: /[{}[\\];(),.:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nvim.displayName = 'vim'\r\nvim.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function vim(Prism) {\r\n  Prism.languages.vim = {\r\n    string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\r\n    comment: /\".*/,\r\n    function: /\\b\\w+(?=\\()/,\r\n    keyword:\r\n      /\\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\r\n    builtin:\r\n      /\\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\\b/,\r\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\r\n    operator:\r\n      /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\r\n    punctuation: /[{}[\\](),;:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nvisualBasic.displayName = 'visual-basic'\r\nvisualBasic.aliases = ['vb', 'vba']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function visualBasic(Prism) {\r\n  Prism.languages['visual-basic'] = {\r\n    comment: {\r\n      pattern: /(?:['‘’]|REM\\b)(?:[^\\r\\n_]|_(?:\\r\\n?|\\n)?)*/i,\r\n      inside: {\r\n        keyword: /^REM/i\r\n      }\r\n    },\r\n    directive: {\r\n      pattern:\r\n        /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\\b_[ \\t]*(?:\\r\\n?|\\n)|.)+/i,\r\n      alias: 'property',\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\\$?[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\r\n      greedy: true\r\n    },\r\n    date: {\r\n      pattern:\r\n        /#[ \\t]*(?:\\d+([/-])\\d+\\1\\d+(?:[ \\t]+(?:\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?))?|\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?)[ \\t]*#/i,\r\n      alias: 'number'\r\n    },\r\n    number:\r\n      /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:[FRD]|U?[ILS])?/i,\r\n    boolean: /\\b(?:False|Nothing|True)\\b/i,\r\n    keyword:\r\n      /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\r\n    operator: /[+\\-*/\\\\^<=>&#@$%!]|\\b_(?=[ \\t]*[\\r\\n])/,\r\n    punctuation: /[{}().,:?]/\r\n  }\r\n  Prism.languages.vb = Prism.languages['visual-basic']\r\n  Prism.languages.vba = Prism.languages['visual-basic']\r\n}\r\n", "// @ts-nocheck\r\nwarpscript.displayName = 'warpscript'\r\nwarpscript.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function warpscript(Prism) {\r\n  Prism.languages.warpscript = {\r\n    comment: /#.*|\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\r\n    string: {\r\n      pattern:\r\n        /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'|<'(?:[^\\\\']|'(?!>)|\\\\.)*'>/,\r\n      greedy: true\r\n    },\r\n    variable: /\\$\\S+/,\r\n    macro: {\r\n      pattern: /@\\S+/,\r\n      alias: 'property'\r\n    },\r\n    // WarpScript doesn't have any keywords, these are all functions under the control category\r\n    // https://www.warp10.io/tags/control\r\n    keyword:\r\n      /\\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\\b/,\r\n    number:\r\n      /[+-]?\\b(?:NaN|Infinity|\\d+(?:\\.\\d*)?(?:[Ee][+-]?\\d+)?|0x[\\da-fA-F]+|0b[01]+)\\b/,\r\n    boolean: /\\b(?:F|T|false|true)\\b/,\r\n    punctuation: /<%|%>|[{}[\\]()]/,\r\n    // Some operators from the \"operators\" category\r\n    // https://www.warp10.io/tags/operators\r\n    operator:\r\n      /==|&&?|\\|\\|?|\\*\\*?|>>>?|<<|[<>!~]=?|[-/%^]|\\+!?|\\b(?:AND|NOT|OR)\\b/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nwasm.displayName = 'wasm'\r\nwasm.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function wasm(Prism) {\r\n  Prism.languages.wasm = {\r\n    comment: [\r\n      /\\(;[\\s\\S]*?;\\)/,\r\n      {\r\n        pattern: /;;.*/,\r\n        greedy: true\r\n      }\r\n    ],\r\n    string: {\r\n      pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\r\n      greedy: true\r\n    },\r\n    keyword: [\r\n      {\r\n        pattern: /\\b(?:align|offset)=/,\r\n        inside: {\r\n          operator: /=/\r\n        }\r\n      },\r\n      {\r\n        pattern:\r\n          /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\r\n        inside: {\r\n          punctuation: /\\./\r\n        }\r\n      },\r\n      /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\r\n    ],\r\n    variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\r\n    number:\r\n      /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\r\n    punctuation: /[()]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nwebIdl.displayName = 'web-idl'\r\nwebIdl.aliases = ['webidl']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function webIdl(Prism) {\r\n  ;(function (Prism) {\r\n    var id = /(?:\\B-|\\b_|\\b)[A-Za-z][\\w-]*(?![\\w-])/.source\r\n    var type =\r\n      '(?:' +\r\n      /\\b(?:unsigned\\s+)?long\\s+long(?![\\w-])/.source +\r\n      '|' +\r\n      /\\b(?:unrestricted|unsigned)\\s+[a-z]+(?![\\w-])/.source +\r\n      '|' +\r\n      /(?!(?:unrestricted|unsigned)\\b)/.source +\r\n      id +\r\n      /(?:\\s*<(?:[^<>]|<[^<>]*>)*>)?/.source +\r\n      ')' +\r\n      /(?:\\s*\\?)?/.source\r\n    var typeInside = {}\r\n    Prism.languages['web-idl'] = {\r\n      comment: {\r\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\r\n        greedy: true\r\n      },\r\n      string: {\r\n        pattern: /\"[^\"]*\"/,\r\n        greedy: true\r\n      },\r\n      namespace: {\r\n        pattern: RegExp(/(\\bnamespace\\s+)/.source + id),\r\n        lookbehind: true\r\n      },\r\n      'class-name': [\r\n        {\r\n          pattern:\r\n            /(^|[^\\w-])(?:iterable|maplike|setlike)\\s*<(?:[^<>]|<[^<>]*>)*>/,\r\n          lookbehind: true,\r\n          inside: typeInside\r\n        },\r\n        {\r\n          pattern: RegExp(\r\n            /(\\b(?:attribute|const|deleter|getter|optional|setter)\\s+)/.source +\r\n              type\r\n          ),\r\n          lookbehind: true,\r\n          inside: typeInside\r\n        },\r\n        {\r\n          // callback return type\r\n          pattern: RegExp(\r\n            '(' + /\\bcallback\\s+/.source + id + /\\s*=\\s*/.source + ')' + type\r\n          ),\r\n          lookbehind: true,\r\n          inside: typeInside\r\n        },\r\n        {\r\n          // typedef\r\n          pattern: RegExp(/(\\btypedef\\b\\s*)/.source + type),\r\n          lookbehind: true,\r\n          inside: typeInside\r\n        },\r\n        {\r\n          pattern: RegExp(\r\n            /(\\b(?:callback|dictionary|enum|interface(?:\\s+mixin)?)\\s+)(?!(?:interface|mixin)\\b)/\r\n              .source + id\r\n          ),\r\n          lookbehind: true\r\n        },\r\n        {\r\n          // inheritance\r\n          pattern: RegExp(/(:\\s*)/.source + id),\r\n          lookbehind: true\r\n        },\r\n        // includes and implements\r\n        RegExp(id + /(?=\\s+(?:implements|includes)\\b)/.source),\r\n        {\r\n          pattern: RegExp(/(\\b(?:implements|includes)\\s+)/.source + id),\r\n          lookbehind: true\r\n        },\r\n        {\r\n          // function return type, parameter types, and dictionary members\r\n          pattern: RegExp(\r\n            type +\r\n              '(?=' +\r\n              /\\s*(?:\\.{3}\\s*)?/.source +\r\n              id +\r\n              /\\s*[(),;=]/.source +\r\n              ')'\r\n          ),\r\n          inside: typeInside\r\n        }\r\n      ],\r\n      builtin:\r\n        /\\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\\b/,\r\n      keyword: [\r\n        /\\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\\b/,\r\n        // type keywords\r\n        /\\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\\b/\r\n      ],\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      number: {\r\n        pattern:\r\n          /(^|[^\\w-])-?(?:0x[0-9a-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|NaN|Infinity)(?![\\w-])/i,\r\n        lookbehind: true\r\n      },\r\n      operator: /\\.{3}|[=:?<>-]/,\r\n      punctuation: /[(){}[\\].,;]/\r\n    }\r\n    for (var key in Prism.languages['web-idl']) {\r\n      if (key !== 'class-name') {\r\n        typeInside[key] = Prism.languages['web-idl'][key]\r\n      }\r\n    }\r\n    Prism.languages['webidl'] = Prism.languages['web-idl']\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nwgsl.displayName = 'wgsl'\r\nwgsl.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function wgsl(Prism) {\r\n  Prism.languages.wgsl = {\r\n    comment: {\r\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n      greedy: true\r\n    },\r\n    'builtin-attribute': {\r\n      pattern: /(@)builtin\\(.*?\\)/,\r\n      lookbehind: true,\r\n      inside: {\r\n        attribute: {\r\n          pattern: /^builtin/,\r\n          alias: 'attr-name'\r\n        },\r\n        punctuation: /[(),]/,\r\n        'built-in-values': {\r\n          pattern:\r\n            /\\b(?:frag_depth|front_facing|global_invocation_id|instance_index|local_invocation_id|local_invocation_index|num_workgroups|position|sample_index|sample_mask|vertex_index|workgroup_id)\\b/,\r\n          alias: 'attr-value'\r\n        }\r\n      }\r\n    },\r\n    attributes: {\r\n      pattern:\r\n        /(@)(?:align|binding|compute|const|fragment|group|id|interpolate|invariant|location|size|vertex|workgroup_size)/i,\r\n      lookbehind: true,\r\n      alias: 'attr-name'\r\n    },\r\n    functions: {\r\n      pattern: /\\b(fn\\s+)[_a-zA-Z]\\w*(?=[(<])/,\r\n      lookbehind: true,\r\n      alias: 'function'\r\n    },\r\n    keyword:\r\n      /\\b(?:bitcast|break|case|const|continue|continuing|default|discard|else|enable|fallthrough|fn|for|function|if|let|loop|private|return|storage|struct|switch|type|uniform|var|while|workgroup)\\b/,\r\n    builtin:\r\n      /\\b(?:abs|acos|acosh|all|any|array|asin|asinh|atan|atan2|atanh|atomic|atomicAdd|atomicAnd|atomicCompareExchangeWeak|atomicExchange|atomicLoad|atomicMax|atomicMin|atomicOr|atomicStore|atomicSub|atomicXor|bool|ceil|clamp|cos|cosh|countLeadingZeros|countOneBits|countTrailingZeros|cross|degrees|determinant|distance|dot|dpdx|dpdxCoarse|dpdxFine|dpdy|dpdyCoarse|dpdyFine|exp|exp2|extractBits|f32|f64|faceForward|firstLeadingBit|floor|fma|fract|frexp|fwidth|fwidthCoarse|fwidthFine|i32|i64|insertBits|inverseSqrt|ldexp|length|log|log2|mat[2-4]x[2-4]|max|min|mix|modf|normalize|override|pack2x16float|pack2x16snorm|pack2x16unorm|pack4x8snorm|pack4x8unorm|pow|ptr|quantizeToF16|radians|reflect|refract|reverseBits|round|sampler|sampler_comparison|select|shiftLeft|shiftRight|sign|sin|sinh|smoothstep|sqrt|staticAssert|step|storageBarrier|tan|tanh|textureDimensions|textureGather|textureGatherCompare|textureLoad|textureNumLayers|textureNumLevels|textureNumSamples|textureSample|textureSampleBias|textureSampleCompare|textureSampleCompareLevel|textureSampleGrad|textureSampleLevel|textureStore|texture_1d|texture_2d|texture_2d_array|texture_3d|texture_cube|texture_cube_array|texture_depth_2d|texture_depth_2d_array|texture_depth_cube|texture_depth_cube_array|texture_depth_multisampled_2d|texture_multisampled_2d|texture_storage_1d|texture_storage_2d|texture_storage_2d_array|texture_storage_3d|transpose|trunc|u32|u64|unpack2x16float|unpack2x16snorm|unpack2x16unorm|unpack4x8snorm|unpack4x8unorm|vec[2-4]|workgroupBarrier)\\b/,\r\n    'function-calls': {\r\n      pattern: /\\b[_a-z]\\w*(?=\\()/i,\r\n      alias: 'function'\r\n    },\r\n    'class-name': /\\b(?:[A-Z][A-Za-z0-9]*)\\b/,\r\n    'bool-literal': {\r\n      pattern: /\\b(?:false|true)\\b/,\r\n      alias: 'boolean'\r\n    },\r\n    'hex-int-literal': {\r\n      pattern: /\\b0[xX][0-9a-fA-F]+[iu]?\\b(?![.pP])/,\r\n      alias: 'number'\r\n    },\r\n    'hex-float-literal': {\r\n      pattern: /\\b0[xX][0-9a-fA-F]*(?:\\.[0-9a-fA-F]*)?(?:[pP][+-]?\\d+[fh]?)?/,\r\n      alias: 'number'\r\n    },\r\n    'decimal-float-literal': [\r\n      {\r\n        pattern: /\\d*\\.\\d+(?:[eE](?:\\+|-)?\\d+)?[fh]?/,\r\n        alias: 'number'\r\n      },\r\n      {\r\n        pattern: /\\d+\\.\\d*(?:[eE](?:\\+|-)?\\d+)?[fh]?/,\r\n        alias: 'number'\r\n      },\r\n      {\r\n        pattern: /\\d+[eE](?:\\+|-)?\\d+[fh]?/,\r\n        alias: 'number'\r\n      },\r\n      {\r\n        pattern: /\\b\\d+[fh]\\b/,\r\n        alias: 'number'\r\n      }\r\n    ],\r\n    'int-literal': {\r\n      pattern: /\\b\\d+[iu]?\\b/,\r\n      alias: 'number'\r\n    },\r\n    operator: [\r\n      {\r\n        pattern: /(?:\\^|~|\\|(?!\\|)|\\|\\||&&|<<|>>|!)(?!=)/\r\n      },\r\n      {\r\n        pattern: /&(?![&=])/\r\n      },\r\n      {\r\n        pattern: /(?:\\+=|-=|\\*=|\\/=|%=|\\^=|&=|\\|=|<<=|>>=)/\r\n      },\r\n      {\r\n        pattern: /(^|[^<>=!])=(?![=>])/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(?:==|!=|<=|\\+\\+|--|(^|[^=])>=)/,\r\n        lookbehind: true\r\n      },\r\n      {\r\n        pattern: /(?:(?:[+%]|(?:\\*(?!\\w)))(?!=))|(?:-(?!>))|(?:\\/(?!\\/))/\r\n      },\r\n      {\r\n        pattern: /->/\r\n      }\r\n    ],\r\n    punctuation: /[@(){}[\\],;<>:.]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkup from './markup.js'\r\nwiki.displayName = 'wiki'\r\nwiki.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function wiki(Prism) {\r\n  Prism.register(refractorMarkup)\r\n  Prism.languages.wiki = Prism.languages.extend('markup', {\r\n    'block-comment': {\r\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\r\n      lookbehind: true,\r\n      alias: 'comment'\r\n    },\r\n    heading: {\r\n      pattern: /^(=+)[^=\\r\\n].*?\\1/m,\r\n      inside: {\r\n        punctuation: /^=+|=+$/,\r\n        important: /.+/\r\n      }\r\n    },\r\n    emphasis: {\r\n      // TODO Multi-line\r\n      pattern: /('{2,5}).+?\\1/,\r\n      inside: {\r\n        'bold-italic': {\r\n          pattern: /(''''').+?(?=\\1)/,\r\n          lookbehind: true,\r\n          alias: ['bold', 'italic']\r\n        },\r\n        bold: {\r\n          pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\r\n          lookbehind: true\r\n        },\r\n        italic: {\r\n          pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\r\n          lookbehind: true\r\n        },\r\n        punctuation: /^''+|''+$/\r\n      }\r\n    },\r\n    hr: {\r\n      pattern: /^-{4,}/m,\r\n      alias: 'punctuation'\r\n    },\r\n    url: [\r\n      /ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:PMID|RFC) +\\d+/i,\r\n      /\\[\\[.+?\\]\\]|\\[.+?\\]/\r\n    ],\r\n    variable: [\r\n      /__[A-Z]+__/,\r\n      // FIXME Nested structures should be handled\r\n      // {{formatnum:{{#expr:{{{3}}}}}}}\r\n      /\\{{3}.+?\\}{3}/,\r\n      /\\{\\{.+?\\}\\}/\r\n    ],\r\n    symbol: [/^#redirect/im, /~{3,5}/],\r\n    // Handle table attrs:\r\n    // {|\r\n    // ! style=\"text-align:left;\"| Item\r\n    // |}\r\n    'table-tag': {\r\n      pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\r\n      lookbehind: true,\r\n      inside: {\r\n        'table-bar': {\r\n          pattern: /\\|$/,\r\n          alias: 'punctuation'\r\n        },\r\n        rest: Prism.languages.markup['tag'].inside\r\n      }\r\n    },\r\n    punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\r\n  })\r\n  Prism.languages.insertBefore('wiki', 'tag', {\r\n    // Prevent highlighting inside <nowiki>, <source> and <pre> tags\r\n    nowiki: {\r\n      pattern: /<(nowiki|pre|source)\\b[^>]*>[\\s\\S]*?<\\/\\1>/i,\r\n      inside: {\r\n        tag: {\r\n          pattern: /<(?:nowiki|pre|source)\\b[^>]*>|<\\/(?:nowiki|pre|source)>/i,\r\n          inside: Prism.languages.markup['tag'].inside\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n", "// @ts-nocheck\r\nwolfram.displayName = 'wolfram'\r\nwolfram.aliases = ['mathematica', 'nb', 'wl']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function wolfram(Prism) {\r\n  Prism.languages.wolfram = {\r\n    comment:\r\n      // Allow one level of nesting - note: regex taken from applescipt\r\n      /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\r\n    string: {\r\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\\b/,\r\n    context: {\r\n      pattern: /\\b\\w+`+\\w*/,\r\n      alias: 'class-name'\r\n    },\r\n    blank: {\r\n      pattern: /\\b\\w+_\\b/,\r\n      alias: 'regex'\r\n    },\r\n    'global-variable': {\r\n      pattern: /\\$\\w+/,\r\n      alias: 'variable'\r\n    },\r\n    boolean: /\\b(?:False|True)\\b/,\r\n    number:\r\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\r\n    operator:\r\n      /\\/\\.|;|=\\.|\\^=|\\^:=|:=|<<|>>|<\\||\\|>|:>|\\|->|->|<-|@@@|@@|@|\\/@|=!=|===|==|=|\\+|-|\\[\\/-+%=\\]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\r\n    punctuation: /[{}[\\];(),.:]/\r\n  }\r\n  Prism.languages.mathematica = Prism.languages.wolfram\r\n  Prism.languages.wl = Prism.languages.wolfram\r\n  Prism.languages.nb = Prism.languages.wolfram\r\n}\r\n", "// @ts-nocheck\r\nwren.displayName = 'wren'\r\nwren.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function wren(Prism) {\r\n  // https://wren.io/\r\n\r\n  Prism.languages.wren = {\r\n    // Multiline comments in Wren can have nested multiline comments\r\n    // Comments: // and /* */\r\n    comment: [\r\n      {\r\n        // support 3 levels of nesting\r\n        // regex: \\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\/\r\n        pattern:\r\n          /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*))*\\*\\/)*\\*\\/)*\\*\\//,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      }\r\n    ],\r\n    // Triple quoted strings are multiline but cannot have interpolation (raw strings)\r\n    // Based on prism-python.js\r\n    'triple-quoted-string': {\r\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\r\n      greedy: true,\r\n      alias: 'string'\r\n    },\r\n    // see below\r\n    'string-literal': null,\r\n    // #!/usr/bin/env wren on the first line\r\n    hashbang: {\r\n      pattern: /^#!\\/.+/,\r\n      greedy: true,\r\n      alias: 'comment'\r\n    },\r\n    // Attributes are special keywords to add meta data to classes\r\n    attribute: {\r\n      // #! attributes are stored in class properties\r\n      // #!myvar = true\r\n      // #attributes are not stored and dismissed at compilation\r\n      pattern: /#!?[ \\t\\u3000]*\\w+/,\r\n      alias: 'keyword'\r\n    },\r\n    'class-name': [\r\n      {\r\n        // class definition\r\n        // class Meta {}\r\n        pattern: /(\\bclass\\s+)\\w+/,\r\n        lookbehind: true\r\n      },\r\n      // A class must always start with an uppercase.\r\n      // File.read\r\n      /\\b[A-Z][a-z\\d_]*\\b/\r\n    ],\r\n    // A constant can be a variable, class, property or method. Just named in all uppercase letters\r\n    constant: /\\b[A-Z][A-Z\\d_]*\\b/,\r\n    null: {\r\n      pattern: /\\bnull\\b/,\r\n      alias: 'keyword'\r\n    },\r\n    keyword:\r\n      /\\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\\b/,\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\r\n    // Functions can be Class.method()\r\n    function: /\\b[a-z_]\\w*(?=\\s*[({])/i,\r\n    operator: /<<|>>|[=!<>]=?|&&|\\|\\||[-+*/%~^&|?:]|\\.{2,3}/,\r\n    punctuation: /[\\[\\](){}.,;]/\r\n  }\r\n  Prism.languages.wren['string-literal'] = {\r\n    // A single quote string is multiline and can have interpolation (similar to JS backticks ``)\r\n    pattern:\r\n      /(^|[^\\\\\"])\"(?:[^\\\\\"%]|\\\\[\\s\\S]|%(?!\\()|%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\))*\"/,\r\n    lookbehind: true,\r\n    greedy: true,\r\n    inside: {\r\n      interpolation: {\r\n        // \"%(interpolation)\"\r\n        pattern:\r\n          /((?:^|[^\\\\])(?:\\\\{2})*)%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\)/,\r\n        lookbehind: true,\r\n        inside: {\r\n          expression: {\r\n            pattern: /^(%\\()[\\s\\S]+(?=\\)$)/,\r\n            lookbehind: true,\r\n            inside: Prism.languages.wren\r\n          },\r\n          'interpolation-punctuation': {\r\n            pattern: /^%\\(|\\)$/,\r\n            alias: 'punctuation'\r\n          }\r\n        }\r\n      },\r\n      string: /[\\s\\S]+/\r\n    }\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkup from './markup.js'\r\nxeora.displayName = 'xeora'\r\nxeora.aliases = ['xeoracube']\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function xeora(Prism) {\r\n  Prism.register(refractorMarkup)\r\n  ;(function (Prism) {\r\n    Prism.languages.xeora = Prism.languages.extend('markup', {\r\n      constant: {\r\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\r\n        inside: {\r\n          punctuation: {\r\n            pattern: /\\$/\r\n          }\r\n        }\r\n      },\r\n      variable: {\r\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\r\n        inside: {\r\n          punctuation: {\r\n            pattern: /[$.]/\r\n          },\r\n          operator: {\r\n            pattern: /#+|[-+*~=^@]/\r\n          }\r\n        }\r\n      },\r\n      'function-inline': {\r\n        pattern:\r\n          /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\r\n        inside: {\r\n          variable: {\r\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\r\n            inside: {\r\n              punctuation: {\r\n                pattern: /[,.|]/\r\n              },\r\n              operator: {\r\n                pattern: /#+|[-+*~=^@]/\r\n              }\r\n            }\r\n          },\r\n          punctuation: {\r\n            pattern: /\\$\\w:|[$:?.,|]/\r\n          }\r\n        },\r\n        alias: 'function'\r\n      },\r\n      'function-block': {\r\n        pattern:\r\n          /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\r\n        inside: {\r\n          punctuation: {\r\n            pattern: /[$:{}?.,|]/\r\n          }\r\n        },\r\n        alias: 'function'\r\n      },\r\n      'directive-inline': {\r\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\r\n        inside: {\r\n          punctuation: {\r\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\r\n            inside: {\r\n              tag: {\r\n                pattern: /#\\d/\r\n              }\r\n            }\r\n          }\r\n        },\r\n        alias: 'function'\r\n      },\r\n      'directive-block-open': {\r\n        pattern:\r\n          /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\r\n        inside: {\r\n          punctuation: {\r\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\r\n            inside: {\r\n              tag: {\r\n                pattern: /#\\d/\r\n              }\r\n            }\r\n          },\r\n          attribute: {\r\n            pattern: /![A-Z]+$/,\r\n            inside: {\r\n              punctuation: {\r\n                pattern: /!/\r\n              }\r\n            },\r\n            alias: 'keyword'\r\n          }\r\n        },\r\n        alias: 'function'\r\n      },\r\n      'directive-block-separator': {\r\n        pattern: /\\}:[-\\w.]+:\\{/,\r\n        inside: {\r\n          punctuation: {\r\n            pattern: /[:{}]/\r\n          }\r\n        },\r\n        alias: 'function'\r\n      },\r\n      'directive-block-close': {\r\n        pattern: /\\}:[-\\w.]+\\$/,\r\n        inside: {\r\n          punctuation: {\r\n            pattern: /[:{}$]/\r\n          }\r\n        },\r\n        alias: 'function'\r\n      }\r\n    })\r\n    Prism.languages.insertBefore(\r\n      'inside',\r\n      'punctuation',\r\n      {\r\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\r\n      },\r\n      Prism.languages.xeora['function-block']\r\n    )\r\n    Prism.languages.xeoracube = Prism.languages.xeora\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkup from './markup.js'\r\nxmlDoc.displayName = 'xml-doc'\r\nxmlDoc.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function xmlDoc(Prism) {\r\n  Prism.register(refractorMarkup)\r\n  ;(function (Prism) {\r\n    /**\r\n     * If the given language is present, it will insert the given doc comment grammar token into it.\r\n     *\r\n     * @param {string} lang\r\n     * @param {any} docComment\r\n     */\r\n    function insertDocComment(lang, docComment) {\r\n      if (Prism.languages[lang]) {\r\n        Prism.languages.insertBefore(lang, 'comment', {\r\n          'doc-comment': docComment\r\n        })\r\n      }\r\n    }\r\n    var tag = Prism.languages.markup.tag\r\n    var slashDocComment = {\r\n      pattern: /\\/\\/\\/.*/,\r\n      greedy: true,\r\n      alias: 'comment',\r\n      inside: {\r\n        tag: tag\r\n      }\r\n    }\r\n    var tickDocComment = {\r\n      pattern: /'''.*/,\r\n      greedy: true,\r\n      alias: 'comment',\r\n      inside: {\r\n        tag: tag\r\n      }\r\n    }\r\n    insertDocComment('csharp', slashDocComment)\r\n    insertDocComment('fsharp', slashDocComment)\r\n    insertDocComment('vbnet', tickDocComment)\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nxojo.displayName = 'xojo'\r\nxojo.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function xojo(Prism) {\r\n  Prism.languages.xojo = {\r\n    comment: {\r\n      pattern: /(?:'|\\/\\/|Rem\\b).+/i,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"(?:\"\"|[^\"])*\"/,\r\n      greedy: true\r\n    },\r\n    number: [/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\r\n    directive: {\r\n      pattern: /#(?:Else|ElseIf|Endif|If|Pragma)\\b/i,\r\n      alias: 'property'\r\n    },\r\n    keyword:\r\n      /\\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\\b/i,\r\n    operator:\r\n      /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\\b/i,\r\n    punctuation: /[.,;:()]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nimport refractorMarkup from './markup.js'\r\nxquery.displayName = 'xquery'\r\nxquery.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function xquery(Prism) {\r\n  Prism.register(refractorMarkup)\r\n  ;(function (Prism) {\r\n    Prism.languages.xquery = Prism.languages.extend('markup', {\r\n      'xquery-comment': {\r\n        pattern: /\\(:[\\s\\S]*?:\\)/,\r\n        greedy: true,\r\n        alias: 'comment'\r\n      },\r\n      string: {\r\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\r\n        greedy: true\r\n      },\r\n      extension: {\r\n        pattern: /\\(#.+?#\\)/,\r\n        alias: 'symbol'\r\n      },\r\n      variable: /\\$[-\\w:]+/,\r\n      axis: {\r\n        pattern:\r\n          /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\r\n        lookbehind: true,\r\n        alias: 'operator'\r\n      },\r\n      'keyword-operator': {\r\n        pattern:\r\n          /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\r\n        lookbehind: true,\r\n        alias: 'operator'\r\n      },\r\n      keyword: {\r\n        pattern:\r\n          /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\r\n        lookbehind: true\r\n      },\r\n      function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\r\n      'xquery-element': {\r\n        pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\r\n        lookbehind: true,\r\n        alias: 'tag'\r\n      },\r\n      'xquery-attribute': {\r\n        pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\r\n        lookbehind: true,\r\n        alias: 'attr-name'\r\n      },\r\n      builtin: {\r\n        pattern:\r\n          /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\r\n        lookbehind: true\r\n      },\r\n      number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\r\n      operator: [\r\n        /[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/,\r\n        {\r\n          pattern: /(\\s)-(?=\\s)/,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      punctuation: /[[\\](){},;:/]/\r\n    })\r\n    Prism.languages.xquery.tag.pattern =\r\n      /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/\r\n    Prism.languages.xquery['tag'].inside['attr-value'].pattern =\r\n      /=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/\r\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['punctuation'] =\r\n      /^=\"|\"$/\r\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['expression'] = {\r\n      // Allow for two levels of nesting\r\n      pattern: /\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}/,\r\n      inside: Prism.languages.xquery,\r\n      alias: 'language-xquery'\r\n    }\r\n\r\n    // The following will handle plain text inside tags\r\n    var stringifyToken = function (token) {\r\n      if (typeof token === 'string') {\r\n        return token\r\n      }\r\n      if (typeof token.content === 'string') {\r\n        return token.content\r\n      }\r\n      return token.content.map(stringifyToken).join('')\r\n    }\r\n    var walkTokens = function (tokens) {\r\n      var openedTags = []\r\n      for (var i = 0; i < tokens.length; i++) {\r\n        var token = tokens[i]\r\n        var notTagNorBrace = false\r\n        if (typeof token !== 'string') {\r\n          if (\r\n            token.type === 'tag' &&\r\n            token.content[0] &&\r\n            token.content[0].type === 'tag'\r\n          ) {\r\n            // We found a tag, now find its kind\r\n\r\n            if (token.content[0].content[0].content === '</') {\r\n              // Closing tag\r\n              if (\r\n                openedTags.length > 0 &&\r\n                openedTags[openedTags.length - 1].tagName ===\r\n                  stringifyToken(token.content[0].content[1])\r\n              ) {\r\n                // Pop matching opening tag\r\n                openedTags.pop()\r\n              }\r\n            } else {\r\n              if (token.content[token.content.length - 1].content === '/>') {\r\n                // Autoclosed tag, ignore\r\n              } else {\r\n                // Opening tag\r\n                openedTags.push({\r\n                  tagName: stringifyToken(token.content[0].content[1]),\r\n                  openedBraces: 0\r\n                })\r\n              }\r\n            }\r\n          } else if (\r\n            openedTags.length > 0 &&\r\n            token.type === 'punctuation' &&\r\n            token.content === '{' &&\r\n            // Ignore `{{`\r\n            (!tokens[i + 1] ||\r\n              tokens[i + 1].type !== 'punctuation' ||\r\n              tokens[i + 1].content !== '{') &&\r\n            (!tokens[i - 1] ||\r\n              tokens[i - 1].type !== 'plain-text' ||\r\n              tokens[i - 1].content !== '{')\r\n          ) {\r\n            // Here we might have entered an XQuery expression inside a tag\r\n            openedTags[openedTags.length - 1].openedBraces++\r\n          } else if (\r\n            openedTags.length > 0 &&\r\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\r\n            token.type === 'punctuation' &&\r\n            token.content === '}'\r\n          ) {\r\n            // Here we might have left an XQuery expression inside a tag\r\n            openedTags[openedTags.length - 1].openedBraces--\r\n          } else if (token.type !== 'comment') {\r\n            notTagNorBrace = true\r\n          }\r\n        }\r\n        if (notTagNorBrace || typeof token === 'string') {\r\n          if (\r\n            openedTags.length > 0 &&\r\n            openedTags[openedTags.length - 1].openedBraces === 0\r\n          ) {\r\n            // Here we are inside a tag, and not inside an XQuery expression.\r\n            // That's plain text: drop any tokens matched.\r\n            var plainText = stringifyToken(token)\r\n\r\n            // And merge text with adjacent text\r\n            if (\r\n              i < tokens.length - 1 &&\r\n              (typeof tokens[i + 1] === 'string' ||\r\n                tokens[i + 1].type === 'plain-text')\r\n            ) {\r\n              plainText += stringifyToken(tokens[i + 1])\r\n              tokens.splice(i + 1, 1)\r\n            }\r\n            if (\r\n              i > 0 &&\r\n              (typeof tokens[i - 1] === 'string' ||\r\n                tokens[i - 1].type === 'plain-text')\r\n            ) {\r\n              plainText = stringifyToken(tokens[i - 1]) + plainText\r\n              tokens.splice(i - 1, 1)\r\n              i--\r\n            }\r\n            if (/^\\s+$/.test(plainText)) {\r\n              tokens[i] = plainText\r\n            } else {\r\n              tokens[i] = new Prism.Token(\r\n                'plain-text',\r\n                plainText,\r\n                null,\r\n                plainText\r\n              )\r\n            }\r\n          }\r\n        }\r\n        if (token.content && typeof token.content !== 'string') {\r\n          walkTokens(token.content)\r\n        }\r\n      }\r\n    }\r\n    Prism.hooks.add('after-tokenize', function (env) {\r\n      if (env.language !== 'xquery') {\r\n        return\r\n      }\r\n      walkTokens(env.tokens)\r\n    })\r\n  })(Prism)\r\n}\r\n", "// @ts-nocheck\r\nyang.displayName = 'yang'\r\nyang.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function yang(Prism) {\r\n  Prism.languages.yang = {\r\n    // https://tools.ietf.org/html/rfc6020#page-34\r\n    // http://www.yang-central.org/twiki/bin/view/Main/YangExamples\r\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\r\n    string: {\r\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"|'[^']*'/,\r\n      greedy: true\r\n    },\r\n    keyword: {\r\n      pattern: /(^|[{};\\r\\n][ \\t]*)[a-z_][\\w.-]*/i,\r\n      lookbehind: true\r\n    },\r\n    namespace: {\r\n      pattern: /(\\s)[a-z_][\\w.-]*(?=:)/i,\r\n      lookbehind: true\r\n    },\r\n    boolean: /\\b(?:false|true)\\b/,\r\n    operator: /\\+/,\r\n    punctuation: /[{};:]/\r\n  }\r\n}\r\n", "// @ts-nocheck\r\nzig.displayName = 'zig'\r\nzig.aliases = []\r\n\r\n/** @type {import('../core.js').Syntax} */\r\nexport default function zig(Prism) {\r\n  ;(function (Prism) {\r\n    function literal(str) {\r\n      return function () {\r\n        return str\r\n      }\r\n    }\r\n    var keyword =\r\n      /\\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\\b/\r\n    var IDENTIFIER = '\\\\b(?!' + keyword.source + ')(?!\\\\d)\\\\w+\\\\b'\r\n    var ALIGN = /align\\s*\\((?:[^()]|\\([^()]*\\))*\\)/.source\r\n    var PREFIX_TYPE_OP =\r\n      /(?:\\?|\\bpromise->|(?:\\[[^[\\]]*\\]|\\*(?!\\*)|\\*\\*)(?:\\s*<ALIGN>|\\s*const\\b|\\s*volatile\\b|\\s*allowzero\\b)*)/.source.replace(\r\n        /<ALIGN>/g,\r\n        literal(ALIGN)\r\n      )\r\n    var SUFFIX_EXPR =\r\n      /(?:\\bpromise\\b|(?:\\berror\\.)?<ID>(?:\\.<ID>)*(?!\\s+<ID>))/.source.replace(\r\n        /<ID>/g,\r\n        literal(IDENTIFIER)\r\n      )\r\n    var TYPE =\r\n      '(?!\\\\s)(?:!?\\\\s*(?:' + PREFIX_TYPE_OP + '\\\\s*)*' + SUFFIX_EXPR + ')+'\r\n\r\n    /*\r\n     * A simplified grammar for Zig compile time type literals:\r\n     *\r\n     * TypeExpr = ( \"!\"? PREFIX_TYPE_OP* SUFFIX_EXPR )+\r\n     *\r\n     * SUFFIX_EXPR = ( \\b \"promise\" \\b | ( \\b \"error\" \".\" )? IDENTIFIER ( \".\" IDENTIFIER )* (?! \\s+ IDENTIFIER ) )\r\n     *\r\n     * PREFIX_TYPE_OP = \"?\"\r\n     *                | \\b \"promise\" \"->\"\r\n     *                | ( \"[\" [^\\[\\]]* \"]\" | \"*\" | \"**\" ) ( ALIGN | \"const\" \\b | \"volatile\" \\b | \"allowzero\" \\b )*\r\n     *\r\n     * ALIGN = \"align\" \"(\" ( [^()] | \"(\" [^()]* \")\" )* \")\"\r\n     *\r\n     * IDENTIFIER = \\b (?! KEYWORD ) [a-zA-Z_] \\w* \\b\r\n     *\r\n     */\r\n\r\n    Prism.languages.zig = {\r\n      comment: [\r\n        {\r\n          pattern: /\\/\\/[/!].*/,\r\n          alias: 'doc-comment'\r\n        },\r\n        /\\/{2}.*/\r\n      ],\r\n      string: [\r\n        {\r\n          // \"string\" and c\"string\"\r\n          pattern: /(^|[^\\\\@])c?\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\r\n          lookbehind: true,\r\n          greedy: true\r\n        },\r\n        {\r\n          // multiline strings and c-strings\r\n          pattern: /([\\r\\n])([ \\t]+c?\\\\{2}).*(?:(?:\\r\\n?|\\n)\\2.*)*/,\r\n          lookbehind: true,\r\n          greedy: true\r\n        }\r\n      ],\r\n      char: {\r\n        // characters 'a', '\\n', '\\xFF', '\\u{10FFFF}'\r\n        pattern:\r\n          /(^|[^\\\\])'(?:[^'\\\\\\r\\n]|[\\uD800-\\uDFFF]{2}|\\\\(?:.|x[a-fA-F\\d]{2}|u\\{[a-fA-F\\d]{1,6}\\}))'/,\r\n        lookbehind: true,\r\n        greedy: true\r\n      },\r\n      builtin: /\\B@(?!\\d)\\w+(?=\\s*\\()/,\r\n      label: {\r\n        pattern:\r\n          /(\\b(?:break|continue)\\s*:\\s*)\\w+\\b|\\b(?!\\d)\\w+\\b(?=\\s*:\\s*(?:\\{|while\\b))/,\r\n        lookbehind: true\r\n      },\r\n      'class-name': [\r\n        // const Foo = struct {};\r\n        /\\b(?!\\d)\\w+(?=\\s*=\\s*(?:(?:extern|packed)\\s+)?(?:enum|struct|union)\\s*[({])/,\r\n        {\r\n          // const x: i32 = 9;\r\n          // var x: Bar;\r\n          // fn foo(x: bool, y: f32) void {}\r\n          pattern: RegExp(\r\n            /(:\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?[=;,)])|<TYPE>(?=\\s*(?:<ALIGN>\\s*)?\\{)/.source\r\n              .replace(/<TYPE>/g, literal(TYPE))\r\n              .replace(/<ALIGN>/g, literal(ALIGN))\r\n          ),\r\n          lookbehind: true,\r\n          inside: null // see below\r\n        },\r\n        {\r\n          // extern fn foo(x: f64) f64; (optional alignment)\r\n          pattern: RegExp(\r\n            /(\\)\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?;)/.source\r\n              .replace(/<TYPE>/g, literal(TYPE))\r\n              .replace(/<ALIGN>/g, literal(ALIGN))\r\n          ),\r\n          lookbehind: true,\r\n          inside: null // see below\r\n        }\r\n      ],\r\n\r\n      'builtin-type': {\r\n        pattern:\r\n          /\\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\\b/,\r\n        alias: 'keyword'\r\n      },\r\n      keyword: keyword,\r\n      function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\r\n      number:\r\n        /\\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\\d]+(?:\\.[a-fA-F\\d]*)?(?:[pP][+-]?[a-fA-F\\d]+)?|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b/,\r\n      boolean: /\\b(?:false|true)\\b/,\r\n      operator:\r\n        /\\.[*?]|\\.{2,3}|[-=]>|\\*\\*|\\+\\+|\\|\\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,\r\n      punctuation: /[.:,;(){}[\\]]/\r\n    }\r\n    Prism.languages.zig['class-name'].forEach(function (obj) {\r\n      if (obj.inside === null) {\r\n        obj.inside = Prism.languages.zig\r\n      }\r\n    })\r\n  })(Prism)\r\n}\r\n", "/**\r\n * @typedef {import('./core.js').RefractorRoot} RefractorRoot\r\n * @typedef {import('./core.js').RefractorElement} RefractorElement\r\n * @typedef {import('./core.js').Text} Text\r\n * @typedef {import('./core.js').Grammar} Grammar\r\n * @typedef {import('./core.js').Syntax} Syntax\r\n */\r\nimport markup from '../lang/markup.js'\r\nimport css from '../lang/css.js'\r\nimport clike from '../lang/clike.js'\r\nimport regex from '../lang/regex.js'\r\nimport javascript from '../lang/javascript.js'\r\nimport abap from '../lang/abap.js'\r\nimport abnf from '../lang/abnf.js'\r\nimport actionscript from '../lang/actionscript.js'\r\nimport ada from '../lang/ada.js'\r\nimport agda from '../lang/agda.js'\r\nimport al from '../lang/al.js'\r\nimport antlr4 from '../lang/antlr4.js'\r\nimport apacheconf from '../lang/apacheconf.js'\r\nimport sql from '../lang/sql.js'\r\nimport apex from '../lang/apex.js'\r\nimport apl from '../lang/apl.js'\r\nimport applescript from '../lang/applescript.js'\r\nimport aql from '../lang/aql.js'\r\nimport c from '../lang/c.js'\r\nimport cpp from '../lang/cpp.js'\r\nimport arduino from '../lang/arduino.js'\r\nimport arff from '../lang/arff.js'\r\nimport armasm from '../lang/armasm.js'\r\nimport bash from '../lang/bash.js'\r\nimport yaml from '../lang/yaml.js'\r\nimport markdown from '../lang/markdown.js'\r\nimport arturo from '../lang/arturo.js'\r\nimport asciidoc from '../lang/asciidoc.js'\r\nimport csharp from '../lang/csharp.js'\r\nimport aspnet from '../lang/aspnet.js'\r\nimport asm6502 from '../lang/asm6502.js'\r\nimport asmatmel from '../lang/asmatmel.js'\r\nimport autohotkey from '../lang/autohotkey.js'\r\nimport autoit from '../lang/autoit.js'\r\nimport avisynth from '../lang/avisynth.js'\r\nimport avroIdl from '../lang/avro-idl.js'\r\nimport awk from '../lang/awk.js'\r\nimport basic from '../lang/basic.js'\r\nimport batch from '../lang/batch.js'\r\nimport bbcode from '../lang/bbcode.js'\r\nimport bbj from '../lang/bbj.js'\r\nimport bicep from '../lang/bicep.js'\r\nimport birb from '../lang/birb.js'\r\nimport bison from '../lang/bison.js'\r\nimport bnf from '../lang/bnf.js'\r\nimport bqn from '../lang/bqn.js'\r\nimport brainfuck from '../lang/brainfuck.js'\r\nimport brightscript from '../lang/brightscript.js'\r\nimport bro from '../lang/bro.js'\r\nimport bsl from '../lang/bsl.js'\r\nimport cfscript from '../lang/cfscript.js'\r\nimport chaiscript from '../lang/chaiscript.js'\r\nimport cil from '../lang/cil.js'\r\nimport cilkc from '../lang/cilkc.js'\r\nimport cilkcpp from '../lang/cilkcpp.js'\r\nimport clojure from '../lang/clojure.js'\r\nimport cmake from '../lang/cmake.js'\r\nimport cobol from '../lang/cobol.js'\r\nimport coffeescript from '../lang/coffeescript.js'\r\nimport concurnas from '../lang/concurnas.js'\r\nimport csp from '../lang/csp.js'\r\nimport cooklang from '../lang/cooklang.js'\r\nimport coq from '../lang/coq.js'\r\nimport ruby from '../lang/ruby.js'\r\nimport crystal from '../lang/crystal.js'\r\nimport cssExtras from '../lang/css-extras.js'\r\nimport csv from '../lang/csv.js'\r\nimport cue from '../lang/cue.js'\r\nimport cypher from '../lang/cypher.js'\r\nimport d from '../lang/d.js'\r\nimport dart from '../lang/dart.js'\r\nimport dataweave from '../lang/dataweave.js'\r\nimport dax from '../lang/dax.js'\r\nimport dhall from '../lang/dhall.js'\r\nimport diff from '../lang/diff.js'\r\nimport markupTemplating from '../lang/markup-templating.js'\r\nimport django from '../lang/django.js'\r\nimport dnsZoneFile from '../lang/dns-zone-file.js'\r\nimport docker from '../lang/docker.js'\r\nimport dot from '../lang/dot.js'\r\nimport ebnf from '../lang/ebnf.js'\r\nimport editorconfig from '../lang/editorconfig.js'\r\nimport eiffel from '../lang/eiffel.js'\r\nimport ejs from '../lang/ejs.js'\r\nimport elixir from '../lang/elixir.js'\r\nimport elm from '../lang/elm.js'\r\nimport lua from '../lang/lua.js'\r\nimport etlua from '../lang/etlua.js'\r\nimport erb from '../lang/erb.js'\r\nimport erlang from '../lang/erlang.js'\r\nimport excelFormula from '../lang/excel-formula.js'\r\nimport fsharp from '../lang/fsharp.js'\r\nimport factor from '../lang/factor.js'\r\nimport $false from '../lang/false.js'\r\nimport firestoreSecurityRules from '../lang/firestore-security-rules.js'\r\nimport flow from '../lang/flow.js'\r\nimport fortran from '../lang/fortran.js'\r\nimport ftl from '../lang/ftl.js'\r\nimport gml from '../lang/gml.js'\r\nimport gap from '../lang/gap.js'\r\nimport gcode from '../lang/gcode.js'\r\nimport gdscript from '../lang/gdscript.js'\r\nimport gedcom from '../lang/gedcom.js'\r\nimport gettext from '../lang/gettext.js'\r\nimport gherkin from '../lang/gherkin.js'\r\nimport git from '../lang/git.js'\r\nimport glsl from '../lang/glsl.js'\r\nimport gn from '../lang/gn.js'\r\nimport linkerScript from '../lang/linker-script.js'\r\nimport go from '../lang/go.js'\r\nimport goModule from '../lang/go-module.js'\r\nimport gradle from '../lang/gradle.js'\r\nimport graphql from '../lang/graphql.js'\r\nimport groovy from '../lang/groovy.js'\r\nimport less from '../lang/less.js'\r\nimport scss from '../lang/scss.js'\r\nimport textile from '../lang/textile.js'\r\nimport haml from '../lang/haml.js'\r\nimport handlebars from '../lang/handlebars.js'\r\nimport haskell from '../lang/haskell.js'\r\nimport haxe from '../lang/haxe.js'\r\nimport hcl from '../lang/hcl.js'\r\nimport hlsl from '../lang/hlsl.js'\r\nimport hoon from '../lang/hoon.js'\r\nimport hpkp from '../lang/hpkp.js'\r\nimport hsts from '../lang/hsts.js'\r\nimport json from '../lang/json.js'\r\nimport uri from '../lang/uri.js'\r\nimport http from '../lang/http.js'\r\nimport ichigojam from '../lang/ichigojam.js'\r\nimport icon from '../lang/icon.js'\r\nimport icuMessageFormat from '../lang/icu-message-format.js'\r\nimport idris from '../lang/idris.js'\r\nimport ignore from '../lang/ignore.js'\r\nimport inform7 from '../lang/inform7.js'\r\nimport ini from '../lang/ini.js'\r\nimport io from '../lang/io.js'\r\nimport j from '../lang/j.js'\r\nimport java from '../lang/java.js'\r\nimport php from '../lang/php.js'\r\nimport javadoclike from '../lang/javadoclike.js'\r\nimport scala from '../lang/scala.js'\r\nimport javadoc from '../lang/javadoc.js'\r\nimport javastacktrace from '../lang/javastacktrace.js'\r\nimport jexl from '../lang/jexl.js'\r\nimport jolie from '../lang/jolie.js'\r\nimport jq from '../lang/jq.js'\r\nimport jsTemplates from '../lang/js-templates.js'\r\nimport typescript from '../lang/typescript.js'\r\nimport jsdoc from '../lang/jsdoc.js'\r\nimport n4js from '../lang/n4js.js'\r\nimport jsExtras from '../lang/js-extras.js'\r\nimport json5 from '../lang/json5.js'\r\nimport jsonp from '../lang/jsonp.js'\r\nimport jsstacktrace from '../lang/jsstacktrace.js'\r\nimport julia from '../lang/julia.js'\r\nimport keepalived from '../lang/keepalived.js'\r\nimport keyman from '../lang/keyman.js'\r\nimport kotlin from '../lang/kotlin.js'\r\nimport kumir from '../lang/kumir.js'\r\nimport kusto from '../lang/kusto.js'\r\nimport latex from '../lang/latex.js'\r\nimport latte from '../lang/latte.js'\r\nimport scheme from '../lang/scheme.js'\r\nimport lilypond from '../lang/lilypond.js'\r\nimport liquid from '../lang/liquid.js'\r\nimport lisp from '../lang/lisp.js'\r\nimport livescript from '../lang/livescript.js'\r\nimport llvm from '../lang/llvm.js'\r\nimport log from '../lang/log.js'\r\nimport lolcode from '../lang/lolcode.js'\r\nimport magma from '../lang/magma.js'\r\nimport makefile from '../lang/makefile.js'\r\nimport mata from '../lang/mata.js'\r\nimport matlab from '../lang/matlab.js'\r\nimport maxscript from '../lang/maxscript.js'\r\nimport mel from '../lang/mel.js'\r\nimport mermaid from '../lang/mermaid.js'\r\nimport metafont from '../lang/metafont.js'\r\nimport mizar from '../lang/mizar.js'\r\nimport mongodb from '../lang/mongodb.js'\r\nimport monkey from '../lang/monkey.js'\r\nimport moonscript from '../lang/moonscript.js'\r\nimport n1ql from '../lang/n1ql.js'\r\nimport nand2tetrisHdl from '../lang/nand2tetris-hdl.js'\r\nimport naniscript from '../lang/naniscript.js'\r\nimport nasm from '../lang/nasm.js'\r\nimport neon from '../lang/neon.js'\r\nimport nevod from '../lang/nevod.js'\r\nimport nginx from '../lang/nginx.js'\r\nimport nim from '../lang/nim.js'\r\nimport nix from '../lang/nix.js'\r\nimport nsis from '../lang/nsis.js'\r\nimport objectivec from '../lang/objectivec.js'\r\nimport ocaml from '../lang/ocaml.js'\r\nimport odin from '../lang/odin.js'\r\nimport opencl from '../lang/opencl.js'\r\nimport openqasm from '../lang/openqasm.js'\r\nimport oz from '../lang/oz.js'\r\nimport parigp from '../lang/parigp.js'\r\nimport parser from '../lang/parser.js'\r\nimport pascal from '../lang/pascal.js'\r\nimport pascaligo from '../lang/pascaligo.js'\r\nimport psl from '../lang/psl.js'\r\nimport pcaxis from '../lang/pcaxis.js'\r\nimport peoplecode from '../lang/peoplecode.js'\r\nimport perl from '../lang/perl.js'\r\nimport phpdoc from '../lang/phpdoc.js'\r\nimport phpExtras from '../lang/php-extras.js'\r\nimport plantUml from '../lang/plant-uml.js'\r\nimport plsql from '../lang/plsql.js'\r\nimport powerquery from '../lang/powerquery.js'\r\nimport powershell from '../lang/powershell.js'\r\nimport processing from '../lang/processing.js'\r\nimport prolog from '../lang/prolog.js'\r\nimport promql from '../lang/promql.js'\r\nimport properties from '../lang/properties.js'\r\nimport protobuf from '../lang/protobuf.js'\r\nimport stylus from '../lang/stylus.js'\r\nimport twig from '../lang/twig.js'\r\nimport pug from '../lang/pug.js'\r\nimport puppet from '../lang/puppet.js'\r\nimport pure from '../lang/pure.js'\r\nimport purebasic from '../lang/purebasic.js'\r\nimport purescript from '../lang/purescript.js'\r\nimport python from '../lang/python.js'\r\nimport qsharp from '../lang/qsharp.js'\r\nimport q from '../lang/q.js'\r\nimport qml from '../lang/qml.js'\r\nimport qore from '../lang/qore.js'\r\nimport r from '../lang/r.js'\r\nimport racket from '../lang/racket.js'\r\nimport cshtml from '../lang/cshtml.js'\r\nimport jsx from '../lang/jsx.js'\r\nimport tsx from '../lang/tsx.js'\r\nimport reason from '../lang/reason.js'\r\nimport rego from '../lang/rego.js'\r\nimport renpy from '../lang/renpy.js'\r\nimport rescript from '../lang/rescript.js'\r\nimport rest from '../lang/rest.js'\r\nimport rip from '../lang/rip.js'\r\nimport roboconf from '../lang/roboconf.js'\r\nimport robotframework from '../lang/robotframework.js'\r\nimport rust from '../lang/rust.js'\r\nimport sas from '../lang/sas.js'\r\nimport sass from '../lang/sass.js'\r\nimport shellSession from '../lang/shell-session.js'\r\nimport smali from '../lang/smali.js'\r\nimport smalltalk from '../lang/smalltalk.js'\r\nimport smarty from '../lang/smarty.js'\r\nimport sml from '../lang/sml.js'\r\nimport solidity from '../lang/solidity.js'\r\nimport solutionFile from '../lang/solution-file.js'\r\nimport soy from '../lang/soy.js'\r\nimport turtle from '../lang/turtle.js'\r\nimport sparql from '../lang/sparql.js'\r\nimport splunkSpl from '../lang/splunk-spl.js'\r\nimport sqf from '../lang/sqf.js'\r\nimport squirrel from '../lang/squirrel.js'\r\nimport stan from '../lang/stan.js'\r\nimport stata from '../lang/stata.js'\r\nimport iecst from '../lang/iecst.js'\r\nimport supercollider from '../lang/supercollider.js'\r\nimport swift from '../lang/swift.js'\r\nimport systemd from '../lang/systemd.js'\r\nimport t4Templating from '../lang/t4-templating.js'\r\nimport t4Cs from '../lang/t4-cs.js'\r\nimport vbnet from '../lang/vbnet.js'\r\nimport t4Vb from '../lang/t4-vb.js'\r\nimport tap from '../lang/tap.js'\r\nimport tcl from '../lang/tcl.js'\r\nimport tt2 from '../lang/tt2.js'\r\nimport toml from '../lang/toml.js'\r\nimport tremor from '../lang/tremor.js'\r\nimport typoscript from '../lang/typoscript.js'\r\nimport unrealscript from '../lang/unrealscript.js'\r\nimport uorazor from '../lang/uorazor.js'\r\nimport v from '../lang/v.js'\r\nimport vala from '../lang/vala.js'\r\nimport velocity from '../lang/velocity.js'\r\nimport verilog from '../lang/verilog.js'\r\nimport vhdl from '../lang/vhdl.js'\r\nimport vim from '../lang/vim.js'\r\nimport visualBasic from '../lang/visual-basic.js'\r\nimport warpscript from '../lang/warpscript.js'\r\nimport wasm from '../lang/wasm.js'\r\nimport webIdl from '../lang/web-idl.js'\r\nimport wgsl from '../lang/wgsl.js'\r\nimport wiki from '../lang/wiki.js'\r\nimport wolfram from '../lang/wolfram.js'\r\nimport wren from '../lang/wren.js'\r\nimport xeora from '../lang/xeora.js'\r\nimport xmlDoc from '../lang/xml-doc.js'\r\nimport xojo from '../lang/xojo.js'\r\nimport xquery from '../lang/xquery.js'\r\nimport yang from '../lang/yang.js'\r\nimport zig from '../lang/zig.js'\r\nimport {refractor} from './core.js'\r\n\r\nrefractor.register(markup)\r\nrefractor.register(css)\r\nrefractor.register(clike)\r\nrefractor.register(regex)\r\nrefractor.register(javascript)\r\nrefractor.register(abap)\r\nrefractor.register(abnf)\r\nrefractor.register(actionscript)\r\nrefractor.register(ada)\r\nrefractor.register(agda)\r\nrefractor.register(al)\r\nrefractor.register(antlr4)\r\nrefractor.register(apacheconf)\r\nrefractor.register(sql)\r\nrefractor.register(apex)\r\nrefractor.register(apl)\r\nrefractor.register(applescript)\r\nrefractor.register(aql)\r\nrefractor.register(c)\r\nrefractor.register(cpp)\r\nrefractor.register(arduino)\r\nrefractor.register(arff)\r\nrefractor.register(armasm)\r\nrefractor.register(bash)\r\nrefractor.register(yaml)\r\nrefractor.register(markdown)\r\nrefractor.register(arturo)\r\nrefractor.register(asciidoc)\r\nrefractor.register(csharp)\r\nrefractor.register(aspnet)\r\nrefractor.register(asm6502)\r\nrefractor.register(asmatmel)\r\nrefractor.register(autohotkey)\r\nrefractor.register(autoit)\r\nrefractor.register(avisynth)\r\nrefractor.register(avroIdl)\r\nrefractor.register(awk)\r\nrefractor.register(basic)\r\nrefractor.register(batch)\r\nrefractor.register(bbcode)\r\nrefractor.register(bbj)\r\nrefractor.register(bicep)\r\nrefractor.register(birb)\r\nrefractor.register(bison)\r\nrefractor.register(bnf)\r\nrefractor.register(bqn)\r\nrefractor.register(brainfuck)\r\nrefractor.register(brightscript)\r\nrefractor.register(bro)\r\nrefractor.register(bsl)\r\nrefractor.register(cfscript)\r\nrefractor.register(chaiscript)\r\nrefractor.register(cil)\r\nrefractor.register(cilkc)\r\nrefractor.register(cilkcpp)\r\nrefractor.register(clojure)\r\nrefractor.register(cmake)\r\nrefractor.register(cobol)\r\nrefractor.register(coffeescript)\r\nrefractor.register(concurnas)\r\nrefractor.register(csp)\r\nrefractor.register(cooklang)\r\nrefractor.register(coq)\r\nrefractor.register(ruby)\r\nrefractor.register(crystal)\r\nrefractor.register(cssExtras)\r\nrefractor.register(csv)\r\nrefractor.register(cue)\r\nrefractor.register(cypher)\r\nrefractor.register(d)\r\nrefractor.register(dart)\r\nrefractor.register(dataweave)\r\nrefractor.register(dax)\r\nrefractor.register(dhall)\r\nrefractor.register(diff)\r\nrefractor.register(markupTemplating)\r\nrefractor.register(django)\r\nrefractor.register(dnsZoneFile)\r\nrefractor.register(docker)\r\nrefractor.register(dot)\r\nrefractor.register(ebnf)\r\nrefractor.register(editorconfig)\r\nrefractor.register(eiffel)\r\nrefractor.register(ejs)\r\nrefractor.register(elixir)\r\nrefractor.register(elm)\r\nrefractor.register(lua)\r\nrefractor.register(etlua)\r\nrefractor.register(erb)\r\nrefractor.register(erlang)\r\nrefractor.register(excelFormula)\r\nrefractor.register(fsharp)\r\nrefractor.register(factor)\r\nrefractor.register($false)\r\nrefractor.register(firestoreSecurityRules)\r\nrefractor.register(flow)\r\nrefractor.register(fortran)\r\nrefractor.register(ftl)\r\nrefractor.register(gml)\r\nrefractor.register(gap)\r\nrefractor.register(gcode)\r\nrefractor.register(gdscript)\r\nrefractor.register(gedcom)\r\nrefractor.register(gettext)\r\nrefractor.register(gherkin)\r\nrefractor.register(git)\r\nrefractor.register(glsl)\r\nrefractor.register(gn)\r\nrefractor.register(linkerScript)\r\nrefractor.register(go)\r\nrefractor.register(goModule)\r\nrefractor.register(gradle)\r\nrefractor.register(graphql)\r\nrefractor.register(groovy)\r\nrefractor.register(less)\r\nrefractor.register(scss)\r\nrefractor.register(textile)\r\nrefractor.register(haml)\r\nrefractor.register(handlebars)\r\nrefractor.register(haskell)\r\nrefractor.register(haxe)\r\nrefractor.register(hcl)\r\nrefractor.register(hlsl)\r\nrefractor.register(hoon)\r\nrefractor.register(hpkp)\r\nrefractor.register(hsts)\r\nrefractor.register(json)\r\nrefractor.register(uri)\r\nrefractor.register(http)\r\nrefractor.register(ichigojam)\r\nrefractor.register(icon)\r\nrefractor.register(icuMessageFormat)\r\nrefractor.register(idris)\r\nrefractor.register(ignore)\r\nrefractor.register(inform7)\r\nrefractor.register(ini)\r\nrefractor.register(io)\r\nrefractor.register(j)\r\nrefractor.register(java)\r\nrefractor.register(php)\r\nrefractor.register(javadoclike)\r\nrefractor.register(scala)\r\nrefractor.register(javadoc)\r\nrefractor.register(javastacktrace)\r\nrefractor.register(jexl)\r\nrefractor.register(jolie)\r\nrefractor.register(jq)\r\nrefractor.register(jsTemplates)\r\nrefractor.register(typescript)\r\nrefractor.register(jsdoc)\r\nrefractor.register(n4js)\r\nrefractor.register(jsExtras)\r\nrefractor.register(json5)\r\nrefractor.register(jsonp)\r\nrefractor.register(jsstacktrace)\r\nrefractor.register(julia)\r\nrefractor.register(keepalived)\r\nrefractor.register(keyman)\r\nrefractor.register(kotlin)\r\nrefractor.register(kumir)\r\nrefractor.register(kusto)\r\nrefractor.register(latex)\r\nrefractor.register(latte)\r\nrefractor.register(scheme)\r\nrefractor.register(lilypond)\r\nrefractor.register(liquid)\r\nrefractor.register(lisp)\r\nrefractor.register(livescript)\r\nrefractor.register(llvm)\r\nrefractor.register(log)\r\nrefractor.register(lolcode)\r\nrefractor.register(magma)\r\nrefractor.register(makefile)\r\nrefractor.register(mata)\r\nrefractor.register(matlab)\r\nrefractor.register(maxscript)\r\nrefractor.register(mel)\r\nrefractor.register(mermaid)\r\nrefractor.register(metafont)\r\nrefractor.register(mizar)\r\nrefractor.register(mongodb)\r\nrefractor.register(monkey)\r\nrefractor.register(moonscript)\r\nrefractor.register(n1ql)\r\nrefractor.register(nand2tetrisHdl)\r\nrefractor.register(naniscript)\r\nrefractor.register(nasm)\r\nrefractor.register(neon)\r\nrefractor.register(nevod)\r\nrefractor.register(nginx)\r\nrefractor.register(nim)\r\nrefractor.register(nix)\r\nrefractor.register(nsis)\r\nrefractor.register(objectivec)\r\nrefractor.register(ocaml)\r\nrefractor.register(odin)\r\nrefractor.register(opencl)\r\nrefractor.register(openqasm)\r\nrefractor.register(oz)\r\nrefractor.register(parigp)\r\nrefractor.register(parser)\r\nrefractor.register(pascal)\r\nrefractor.register(pascaligo)\r\nrefractor.register(psl)\r\nrefractor.register(pcaxis)\r\nrefractor.register(peoplecode)\r\nrefractor.register(perl)\r\nrefractor.register(phpdoc)\r\nrefractor.register(phpExtras)\r\nrefractor.register(plantUml)\r\nrefractor.register(plsql)\r\nrefractor.register(powerquery)\r\nrefractor.register(powershell)\r\nrefractor.register(processing)\r\nrefractor.register(prolog)\r\nrefractor.register(promql)\r\nrefractor.register(properties)\r\nrefractor.register(protobuf)\r\nrefractor.register(stylus)\r\nrefractor.register(twig)\r\nrefractor.register(pug)\r\nrefractor.register(puppet)\r\nrefractor.register(pure)\r\nrefractor.register(purebasic)\r\nrefractor.register(purescript)\r\nrefractor.register(python)\r\nrefractor.register(qsharp)\r\nrefractor.register(q)\r\nrefractor.register(qml)\r\nrefractor.register(qore)\r\nrefractor.register(r)\r\nrefractor.register(racket)\r\nrefractor.register(cshtml)\r\nrefractor.register(jsx)\r\nrefractor.register(tsx)\r\nrefractor.register(reason)\r\nrefractor.register(rego)\r\nrefractor.register(renpy)\r\nrefractor.register(rescript)\r\nrefractor.register(rest)\r\nrefractor.register(rip)\r\nrefractor.register(roboconf)\r\nrefractor.register(robotframework)\r\nrefractor.register(rust)\r\nrefractor.register(sas)\r\nrefractor.register(sass)\r\nrefractor.register(shellSession)\r\nrefractor.register(smali)\r\nrefractor.register(smalltalk)\r\nrefractor.register(smarty)\r\nrefractor.register(sml)\r\nrefractor.register(solidity)\r\nrefractor.register(solutionFile)\r\nrefractor.register(soy)\r\nrefractor.register(turtle)\r\nrefractor.register(sparql)\r\nrefractor.register(splunkSpl)\r\nrefractor.register(sqf)\r\nrefractor.register(squirrel)\r\nrefractor.register(stan)\r\nrefractor.register(stata)\r\nrefractor.register(iecst)\r\nrefractor.register(supercollider)\r\nrefractor.register(swift)\r\nrefractor.register(systemd)\r\nrefractor.register(t4Templating)\r\nrefractor.register(t4Cs)\r\nrefractor.register(vbnet)\r\nrefractor.register(t4Vb)\r\nrefractor.register(tap)\r\nrefractor.register(tcl)\r\nrefractor.register(tt2)\r\nrefractor.register(toml)\r\nrefractor.register(tremor)\r\nrefractor.register(typoscript)\r\nrefractor.register(unrealscript)\r\nrefractor.register(uorazor)\r\nrefractor.register(v)\r\nrefractor.register(vala)\r\nrefractor.register(velocity)\r\nrefractor.register(verilog)\r\nrefractor.register(vhdl)\r\nrefractor.register(vim)\r\nrefractor.register(visualBasic)\r\nrefractor.register(warpscript)\r\nrefractor.register(wasm)\r\nrefractor.register(webIdl)\r\nrefractor.register(wgsl)\r\nrefractor.register(wiki)\r\nrefractor.register(wolfram)\r\nrefractor.register(wren)\r\nrefractor.register(xeora)\r\nrefractor.register(xmlDoc)\r\nrefractor.register(xojo)\r\nrefractor.register(xquery)\r\nrefractor.register(yang)\r\nrefractor.register(zig)\r\n\r\nexport {refractor} from './core.js'\r\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef Options options\n *   Configuration.\n * @property {boolean} [showLineNumbers]\n *   Set `showLineNumbers` to `true` to always display line number\n * @property {boolean} [ignoreMissing]\n *   Set `ignoreMissing` to `true` to ignore unsupported languages and line highlighting when no language is specified\n * @property {string} [defaultLanguage]\n *   Uses the specified language as the default if none is specified. Takes precedence over `ignoreMissing`.\n *   Note: The language must be registered with refractor.\n */\n\nimport { visit } from 'unist-util-visit'\nimport { toString } from 'hast-util-to-string'\nimport { filter } from 'unist-util-filter'\nimport rangeParser from 'parse-numeric-range'\n\nconst getLanguage = (node) => {\n  const className = node.properties.className\n  //@ts-ignore\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase()\n    }\n  }\n  return null\n}\n\n/**\n * @param {import('refractor/lib/core').Refractor} refractor\n * @param {string} defaultLanguage\n * @return {void}\n */\nconst checkIfLanguageIsRegistered = (refractor, defaultLanguage) => {\n  if (defaultLanguage && !refractor.registered(defaultLanguage)) {\n    throw new Error(`The default language \"${defaultLanguage}\" is not registered with refractor.`)\n  }\n}\n\n/**\n * Create a closure that determines if we have to highlight the given index\n *\n * @param {string} meta\n * @return { (index:number) => boolean }\n */\nconst calculateLinesToHighlight = (meta) => {\n  const RE = /{([\\d,-]+)}/\n  // Remove space between {} e.g. {1, 3}\n  const parsedMeta = meta\n    .split(',')\n    .map((str) => str.trim())\n    .join()\n  if (RE.test(parsedMeta)) {\n    const strlineNumbers = RE.exec(parsedMeta)[1]\n    const lineNumbers = rangeParser(strlineNumbers)\n    return (index) => lineNumbers.includes(index + 1)\n  } else {\n    return () => false\n  }\n}\n\n/**\n * Check if we want to start the line numbering from a given number or 1\n * showLineNumbers=5, will start the numbering from 5\n * @param {string} meta\n * @returns {number}\n */\nconst calculateStartingLine = (meta) => {\n  const RE = /showLineNumbers=(?<lines>\\d+)/i\n  // pick the line number after = using a named capturing group\n  if (RE.test(meta)) {\n    const {\n      groups: { lines },\n    } = RE.exec(meta)\n    return Number(lines)\n  }\n  return 1\n}\n\n/**\n * Create container AST for node lines\n *\n * @param {number} number\n * @return {Element[]}\n */\nconst createLineNodes = (number) => {\n  const a = new Array(number)\n  for (let i = 0; i < number; i++) {\n    a[i] = {\n      type: 'element',\n      tagName: 'span',\n      properties: { className: [] },\n      children: [],\n    }\n  }\n  return a\n}\n\n/**\n * Split multiline text nodes into individual nodes with positioning\n * Add a node start and end line position information for each text node\n *\n * @return { (ast:Element['children']) => Element['children'] }\n *\n */\nconst addNodePositionClosure = () => {\n  let startLineNum = 1\n  /**\n   * @param {Element['children']} ast\n   * @return {Element['children']}\n   */\n  const addNodePosition = (ast) => {\n    return ast.reduce((result, node) => {\n      if (node.type === 'text') {\n        const value = /** @type {string} */ (node.value)\n        const numLines = (value.match(/\\n/g) || '').length\n        if (numLines === 0) {\n          node.position = {\n            // column: 1 is needed to avoid error with @next/mdx\n            // https://github.com/timlrx/rehype-prism-plus/issues/44\n            start: { line: startLineNum, column: 1 },\n            end: { line: startLineNum, column: 1 },\n          }\n          result.push(node)\n        } else {\n          const lines = value.split('\\n')\n          for (const [i, line] of lines.entries()) {\n            result.push({\n              type: 'text',\n              value: i === lines.length - 1 ? line : line + '\\n',\n              position: {\n                start: { line: startLineNum + i, column: 1 },\n                end: { line: startLineNum + i, column: 1 },\n              },\n            })\n          }\n        }\n        startLineNum = startLineNum + numLines\n\n        return result\n      }\n\n      if (Object.prototype.hasOwnProperty.call(node, 'children')) {\n        const initialLineNum = startLineNum\n        // @ts-ignore\n        node.children = addNodePosition(node.children, startLineNum)\n        result.push(node)\n        node.position = {\n          start: { line: initialLineNum, column: 1 },\n          end: { line: startLineNum, column: 1 },\n        }\n        return result\n      }\n\n      result.push(node)\n      return result\n    }, [])\n  }\n  return addNodePosition\n}\n\n/**\n * Rehype prism plugin generator that highlights code blocks with refractor (prismjs)\n *\n * Pass in your own refractor object with the required languages registered:\n * https://github.com/wooorm/refractor#refractorregistersyntax\n *\n * @param {import('refractor/lib/core').Refractor} refractor\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypePrismGenerator = (refractor) => {\n  return (options = {}) => {\n    checkIfLanguageIsRegistered(refractor, options.defaultLanguage)\n    return (tree) => {\n      visit(tree, 'element', visitor)\n    }\n\n    /**\n     * @param {Element} node\n     * @param {number} index\n     * @param {Element} parent\n     */\n    function visitor(node, index, parent) {\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      // @ts-ignore meta is a custom code block property\n      let meta = /** @type {string} */ (node?.data?.meta || node?.properties?.metastring || '')\n      // Coerce className to array\n      if (node.properties.className) {\n        if (typeof node.properties.className === 'boolean') {\n          node.properties.className = []\n        } else if (!Array.isArray(node.properties.className)) {\n          node.properties.className = [node.properties.className]\n        }\n      } else {\n        node.properties.className = []\n      }\n\n      let lang = getLanguage(node)\n      // If no language is set on the code block, use defaultLanguage if specified\n      if (!lang && options.defaultLanguage) {\n        lang = options.defaultLanguage\n        node.properties.className.push(`language-${lang}`)\n      }\n      node.properties.className.push('code-highlight')\n\n      /** @type {Element} */\n      let refractorRoot\n\n      // Syntax highlight\n      if (lang) {\n        try {\n          let rootLang\n          if (lang?.includes('diff-')) {\n            rootLang = lang.split('-')[1]\n          } else {\n            rootLang = lang\n          }\n          // @ts-ignore\n          refractorRoot = refractor.highlight(toString(node), rootLang)\n          // @ts-ignore className is already an array\n          parent.properties.className = (parent.properties.className || []).concat(\n            'language-' + rootLang\n          )\n        } catch (err) {\n          if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n            refractorRoot = node\n          } else {\n            throw err\n          }\n        }\n      } else {\n        refractorRoot = node\n      }\n\n      refractorRoot.children = addNodePositionClosure()(refractorRoot.children)\n\n      // Add position info to root\n      if (refractorRoot.children.length > 0) {\n        refractorRoot.position = {\n          start: { line: refractorRoot.children[0].position.start.line, column: 0 },\n          end: {\n            line: refractorRoot.children[refractorRoot.children.length - 1].position.end.line,\n            column: 0,\n          },\n        }\n      } else {\n        refractorRoot.position = {\n          start: { line: 0, column: 0 },\n          end: { line: 0, column: 0 },\n        }\n      }\n\n      const shouldHighlightLine = calculateLinesToHighlight(meta)\n      const startingLineNumber = calculateStartingLine(meta)\n      const codeLineArray = createLineNodes(refractorRoot.position.end.line)\n\n      const falseShowLineNumbersStr = [\n        'showlinenumbers=false',\n        'showlinenumbers=\"false\"',\n        'showlinenumbers={false}',\n      ]\n      for (const [i, line] of codeLineArray.entries()) {\n        // Default class name for each line\n        line.properties.className = ['code-line']\n\n        // Syntax highlight\n        const treeExtract = filter(\n          refractorRoot,\n          (node) => node.position.start.line <= i + 1 && node.position.end.line >= i + 1\n        )\n        line.children = treeExtract.children\n\n        // Line number\n        if (\n          (meta.toLowerCase().includes('showLineNumbers'.toLowerCase()) ||\n            options.showLineNumbers) &&\n          !falseShowLineNumbersStr.some((str) => meta.toLowerCase().includes(str))\n        ) {\n          line.properties.line = [(i + startingLineNumber).toString()]\n          line.properties.className.push('line-number')\n        }\n\n        // Line highlight\n        if (shouldHighlightLine(i)) {\n          line.properties.className.push('highlight-line')\n        }\n\n        // Diff classes\n        if (\n          (lang === 'diff' || lang?.includes('diff-')) &&\n          toString(line).substring(0, 1) === '-'\n        ) {\n          line.properties.className.push('deleted')\n        } else if (\n          (lang === 'diff' || lang?.includes('diff-')) &&\n          toString(line).substring(0, 1) === '+'\n        ) {\n          line.properties.className.push('inserted')\n        }\n      }\n\n      // Remove possible trailing line when splitting by \\n which results in empty array\n      if (\n        codeLineArray.length > 0 &&\n        toString(codeLineArray[codeLineArray.length - 1]).trim() === ''\n      ) {\n        codeLineArray.pop()\n      }\n\n      node.children = codeLineArray\n    }\n  }\n}\n\nexport default rehypePrismGenerator\n", "import { refractor as refractorCommon } from 'refractor/lib/common.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * Supported languages: https://github.com/wooorm/refractor#data\n *\n * Consider using rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismCommon = rehypePrismGenerator(refractorCommon)\n\nexport default rehypePrismCommon\n", "import { refractor as refractorAll } from 'refractor/lib/all.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * This supports all the languages and should be used on the server side.\n *\n * Consider using rehypePrismCommon or rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismAll = rehypePrismGenerator(refractorAll)\n\nexport default rehypePrismAll\n", "export var emptyMulticharIndex = {};\r\nexport var emptyRegularIndex = {};\r\nfunction extendIndex(item, index) {\r\n    var currentIndex = index;\r\n    for (var pos = 0; pos < item.length; pos++) {\r\n        var isLast = pos === item.length - 1;\r\n        var char = item.charAt(pos);\r\n        var charIndex = currentIndex[char] || (currentIndex[char] = { chars: {} });\r\n        if (isLast) {\r\n            charIndex.self = item;\r\n        }\r\n        currentIndex = charIndex.chars;\r\n    }\r\n}\r\nexport function createMulticharIndex(items) {\r\n    if (items.length === 0) {\r\n        return emptyMulticharIndex;\r\n    }\r\n    var index = {};\r\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\r\n        var item = items_1[_i];\r\n        extendIndex(item, index);\r\n    }\r\n    return index;\r\n}\r\nexport function createRegularIndex(items) {\r\n    if (items.length === 0) {\r\n        return emptyRegularIndex;\r\n    }\r\n    var result = {};\r\n    for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\r\n        var item = items_2[_i];\r\n        result[item] = true;\r\n    }\r\n    return result;\r\n}\r\n", "export var emptyPseudoSignatures = {};\r\nexport var defaultPseudoSignature = {\r\n    type: 'String',\r\n    optional: true\r\n};\r\nfunction calculatePseudoSignature(types) {\r\n    var result = {\r\n        type: 'NoArgument',\r\n        optional: false\r\n    };\r\n    function setResultType(type) {\r\n        if (result.type && result.type !== type && result.type !== 'NoArgument') {\r\n            throw new Error(\"Conflicting pseudo-class argument type: \\\"\".concat(result.type, \"\\\" vs \\\"\").concat(type, \"\\\".\"));\r\n        }\r\n        result.type = type;\r\n    }\r\n    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\r\n        var type = types_1[_i];\r\n        if (type === 'NoArgument') {\r\n            result.optional = true;\r\n        }\r\n        if (type === 'Formula') {\r\n            setResultType('Formula');\r\n        }\r\n        if (type === 'FormulaOfSelector') {\r\n            setResultType('Formula');\r\n            result.ofSelector = true;\r\n        }\r\n        if (type === 'String') {\r\n            setResultType('String');\r\n        }\r\n        if (type === 'Selector') {\r\n            setResultType('Selector');\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function inverseCategories(obj) {\r\n    var result = {};\r\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\r\n        var category = _a[_i];\r\n        var items = obj[category];\r\n        if (items) {\r\n            for (var _b = 0, _c = items; _b < _c.length; _b++) {\r\n                var item = _c[_b];\r\n                (result[item] || (result[item] = [])).push(category);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function calculatePseudoSignatures(definitions) {\r\n    var pseudoClassesToArgumentTypes = inverseCategories(definitions);\r\n    var result = {};\r\n    for (var _i = 0, _a = Object.keys(pseudoClassesToArgumentTypes); _i < _a.length; _i++) {\r\n        var pseudoClass = _a[_i];\r\n        var argumentTypes = pseudoClassesToArgumentTypes[pseudoClass];\r\n        if (argumentTypes) {\r\n            result[pseudoClass] = calculatePseudoSignature(argumentTypes);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n", "var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar emptyXmlOptions = {};\r\nvar defaultXmlOptions = { wildcard: true };\r\nexport function getXmlOptions(param) {\r\n    if (param) {\r\n        if (typeof param === 'boolean') {\r\n            return defaultXmlOptions;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    else {\r\n        return emptyXmlOptions;\r\n    }\r\n}\r\nfunction withMigration(migration, merge) {\r\n    return function (base, extension) { return merge(migration(base), migration(extension)); };\r\n}\r\nfunction withNoNegative(merge) {\r\n    return function (base, extension) {\r\n        var result = merge(base, extension);\r\n        if (!result) {\r\n            throw new Error(\"Syntax definition cannot be null or undefined.\");\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction withPositive(positive, merge) {\r\n    return function (base, extension) {\r\n        if (extension === true) {\r\n            return positive;\r\n        }\r\n        return merge(base === true ? positive : base, extension);\r\n    };\r\n}\r\nfunction mergeSection(values) {\r\n    return function (base, extension) {\r\n        if (!extension || !base) {\r\n            return extension;\r\n        }\r\n        if (typeof extension !== 'object' || extension === null) {\r\n            throw new Error(\"Unexpected syntax definition extension type: \".concat(extension, \".\"));\r\n        }\r\n        var result = __assign({}, base);\r\n        for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\r\n            var _b = _a[_i], key = _b[0], value = _b[1];\r\n            var mergeSchema = values[key];\r\n            result[key] = mergeSchema(base[key], value);\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction replaceValueIfSpecified(base, extension) {\r\n    if (extension !== undefined) {\r\n        return extension;\r\n    }\r\n    return base;\r\n}\r\nfunction concatArray(base, extension) {\r\n    if (!extension) {\r\n        return base;\r\n    }\r\n    if (!base) {\r\n        return extension;\r\n    }\r\n    return base.concat(extension);\r\n}\r\nfunction mergeDefinitions(base, extension) {\r\n    if (!extension) {\r\n        return base;\r\n    }\r\n    if (!base) {\r\n        return extension;\r\n    }\r\n    var result = __assign({}, base);\r\n    for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\r\n        var _b = _a[_i], key = _b[0], value = _b[1];\r\n        if (!value) {\r\n            delete result[key];\r\n            continue;\r\n        }\r\n        var baseValue = base[key];\r\n        if (!baseValue) {\r\n            result[key] = value;\r\n            continue;\r\n        }\r\n        result[key] = baseValue.concat(value);\r\n    }\r\n    return result;\r\n}\r\nexport var extendSyntaxDefinition = withNoNegative(mergeSection({\r\n    baseSyntax: replaceValueIfSpecified,\r\n    tag: withPositive(defaultXmlOptions, mergeSection({\r\n        wildcard: replaceValueIfSpecified\r\n    })),\r\n    ids: replaceValueIfSpecified,\r\n    classNames: replaceValueIfSpecified,\r\n    namespace: withPositive(defaultXmlOptions, mergeSection({\r\n        wildcard: replaceValueIfSpecified\r\n    })),\r\n    combinators: concatArray,\r\n    attributes: mergeSection({\r\n        operators: concatArray,\r\n        caseSensitivityModifiers: concatArray,\r\n        unknownCaseSensitivityModifiers: replaceValueIfSpecified\r\n    }),\r\n    pseudoClasses: mergeSection({\r\n        unknown: replaceValueIfSpecified,\r\n        definitions: mergeDefinitions\r\n    }),\r\n    pseudoElements: mergeSection({\r\n        unknown: replaceValueIfSpecified,\r\n        notation: replaceValueIfSpecified,\r\n        definitions: withMigration(function (definitions) { return (Array.isArray(definitions) ? { NoArgument: definitions } : definitions); }, mergeDefinitions)\r\n    })\r\n}));\r\nvar css1SyntaxDefinition = {\r\n    tag: {},\r\n    ids: true,\r\n    classNames: true,\r\n    combinators: [],\r\n    pseudoElements: {\r\n        unknown: 'reject',\r\n        notation: 'singleColon',\r\n        definitions: ['first-letter', 'first-line']\r\n    },\r\n    pseudoClasses: {\r\n        unknown: 'reject',\r\n        definitions: {\r\n            NoArgument: ['link', 'visited', 'active']\r\n        }\r\n    }\r\n};\r\nvar css2SyntaxDefinition = extendSyntaxDefinition(css1SyntaxDefinition, {\r\n    tag: { wildcard: true },\r\n    combinators: ['>', '+'],\r\n    attributes: {\r\n        unknownCaseSensitivityModifiers: 'reject',\r\n        operators: ['=', '~=', '|=']\r\n    },\r\n    pseudoElements: {\r\n        definitions: ['before', 'after']\r\n    },\r\n    pseudoClasses: {\r\n        unknown: 'reject',\r\n        definitions: {\r\n            NoArgument: ['hover', 'focus', 'first-child'],\r\n            String: ['lang']\r\n        }\r\n    }\r\n});\r\nvar selectors3SyntaxDefinition = extendSyntaxDefinition(css2SyntaxDefinition, {\r\n    namespace: {\r\n        wildcard: true\r\n    },\r\n    combinators: ['~'],\r\n    attributes: {\r\n        operators: ['^=', '$=', '*=']\r\n    },\r\n    pseudoElements: {\r\n        notation: 'both'\r\n    },\r\n    pseudoClasses: {\r\n        definitions: {\r\n            NoArgument: [\r\n                'root',\r\n                'last-child',\r\n                'first-of-type',\r\n                'last-of-type',\r\n                'only-child',\r\n                'only-of-type',\r\n                'empty',\r\n                'target',\r\n                'enabled',\r\n                'disabled',\r\n                'checked',\r\n                'indeterminate'\r\n            ],\r\n            Formula: ['nth-child', 'nth-last-child', 'nth-of-type', 'nth-last-of-type'],\r\n            Selector: ['not']\r\n        }\r\n    }\r\n});\r\nvar selectors4SyntaxDefinition = extendSyntaxDefinition(selectors3SyntaxDefinition, {\r\n    combinators: ['||'],\r\n    attributes: {\r\n        caseSensitivityModifiers: ['i', 'I', 's', 'S']\r\n    },\r\n    pseudoClasses: {\r\n        definitions: {\r\n            NoArgument: [\r\n                'any-link',\r\n                'local-link',\r\n                'target-within',\r\n                'scope',\r\n                'current',\r\n                'past',\r\n                'future',\r\n                'focus-within',\r\n                'focus-visible',\r\n                'read-write',\r\n                'read-only',\r\n                'placeholder-shown',\r\n                'default',\r\n                'valid',\r\n                'invalid',\r\n                'in-range',\r\n                'out-of-range',\r\n                'required',\r\n                'optional',\r\n                'blank',\r\n                'user-invalid'\r\n            ],\r\n            Formula: ['nth-col', 'nth-last-col'],\r\n            String: ['dir'],\r\n            FormulaOfSelector: ['nth-child', 'nth-last-child'],\r\n            Selector: ['current', 'is', 'where', 'has']\r\n        }\r\n    }\r\n});\r\nvar progressiveSyntaxDefinition = extendSyntaxDefinition(selectors4SyntaxDefinition, {\r\n    pseudoElements: {\r\n        unknown: 'accept'\r\n    },\r\n    pseudoClasses: {\r\n        unknown: 'accept'\r\n    },\r\n    attributes: {\r\n        unknownCaseSensitivityModifiers: 'accept'\r\n    }\r\n});\r\nexport var cssSyntaxDefinitions = {\r\n    css1: css1SyntaxDefinition,\r\n    css2: css2SyntaxDefinition,\r\n    css3: selectors3SyntaxDefinition,\r\n    'selectors-3': selectors3SyntaxDefinition,\r\n    'selectors-4': selectors4SyntaxDefinition,\r\n    latest: selectors4SyntaxDefinition,\r\n    progressive: progressiveSyntaxDefinition\r\n};\r\n", "export function isIdentStart(c) {\r\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '-' || c === '_' || c === '\\\\' || c >= '\\u00a0';\r\n}\r\nexport function isIdent(c) {\r\n    return ((c >= 'a' && c <= 'z') ||\r\n        (c >= 'A' && c <= 'Z') ||\r\n        (c >= '0' && c <= '9') ||\r\n        c === '-' ||\r\n        c === '_' ||\r\n        c >= '\\u00a0');\r\n}\r\nexport function isHex(c) {\r\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\r\n}\r\nexport var identEscapeChars = {\r\n    '!': true,\r\n    '\"': true,\r\n    '#': true,\r\n    $: true,\r\n    '%': true,\r\n    '&': true,\r\n    \"'\": true,\r\n    '(': true,\r\n    ')': true,\r\n    '*': true,\r\n    '+': true,\r\n    ',': true,\r\n    '.': true,\r\n    '/': true,\r\n    ';': true,\r\n    '<': true,\r\n    '=': true,\r\n    '>': true,\r\n    '?': true,\r\n    '@': true,\r\n    '[': true,\r\n    '\\\\': true,\r\n    ']': true,\r\n    '^': true,\r\n    '`': true,\r\n    '{': true,\r\n    '|': true,\r\n    '}': true,\r\n    '~': true\r\n};\r\nexport var stringRenderEscapeChars = {\r\n    '\\n': true,\r\n    '\\r': true,\r\n    '\\t': true,\r\n    '\\f': true,\r\n    '\\v': true\r\n};\r\nexport var whitespaceChars = {\r\n    ' ': true,\r\n    '\\t': true,\r\n    '\\n': true,\r\n    '\\r': true,\r\n    '\\f': true\r\n};\r\nexport var quoteChars = {\r\n    '\"': true,\r\n    \"'\": true\r\n};\r\nexport var digitsChars = {\r\n    0: true,\r\n    1: true,\r\n    2: true,\r\n    3: true,\r\n    4: true,\r\n    5: true,\r\n    6: true,\r\n    7: true,\r\n    8: true,\r\n    9: true\r\n};\r\nexport var maxHexLength = 6;\r\nexport function escapeIdentifier(s) {\r\n    var len = s.length;\r\n    var result = '';\r\n    var i = 0;\r\n    while (i < len) {\r\n        var chr = s.charAt(i);\r\n        if (identEscapeChars[chr] || (chr === '-' && i === 1 && s.charAt(0) === '-')) {\r\n            result += '\\\\' + chr;\r\n        }\r\n        else {\r\n            if (chr === '-' ||\r\n                chr === '_' ||\r\n                (chr >= 'A' && chr <= 'Z') ||\r\n                (chr >= 'a' && chr <= 'z') ||\r\n                (chr >= '0' && chr <= '9' && i !== 0 && !(i === 1 && s.charAt(0) === '-'))) {\r\n                result += chr;\r\n            }\r\n            else {\r\n                var charCode = chr.charCodeAt(0);\r\n                if ((charCode & 0xf800) === 0xd800) {\r\n                    var extraCharCode = s.charCodeAt(i++);\r\n                    if ((charCode & 0xfc00) !== 0xd800 || (extraCharCode & 0xfc00) !== 0xdc00) {\r\n                        throw Error('UCS-2(decode): illegal sequence');\r\n                    }\r\n                    charCode = ((charCode & 0x3ff) << 10) + (extraCharCode & 0x3ff) + 0x10000;\r\n                }\r\n                result += '\\\\' + charCode.toString(16) + ' ';\r\n            }\r\n        }\r\n        i++;\r\n    }\r\n    return result.trim();\r\n}\r\nexport function escapeString(s) {\r\n    var len = s.length;\r\n    var result = '';\r\n    var i = 0;\r\n    while (i < len) {\r\n        var chr = s.charAt(i);\r\n        if (chr === '\"') {\r\n            chr = '\\\\\"';\r\n        }\r\n        else if (chr === '\\\\') {\r\n            chr = '\\\\\\\\';\r\n        }\r\n        else if (stringRenderEscapeChars[chr]) {\r\n            chr = '\\\\' + chr.charCodeAt(0).toString(16) + (i === len - 1 ? '' : ' ');\r\n        }\r\n        result += chr;\r\n        i++;\r\n    }\r\n    return \"\\\"\".concat(result, \"\\\"\");\r\n}\r\n", "import { createMulticharIndex, createRegularIndex, emptyMulticharIndex, emptyRegularIndex } from './indexes.js';\r\nimport { calculatePseudoSignatures, defaultPseudoSignature, emptyPseudoSignatures } from './pseudo-signatures.js';\r\nimport { cssSyntaxDefinitions, extendSyntaxDefinition, getXmlOptions } from './syntax-definitions.js';\r\nimport { digitsChars, isHex, isIdent, isIdentStart, maxHexLength, quoteChars, whitespaceChars } from './utils.js';\r\nvar errorPrefix = \"css-selector-parser parse error: \";\r\n/**\r\n * Creates a parse function to be used later to parse CSS selectors.\r\n */\r\nexport function createParser(options) {\r\n    if (options === void 0) { options = {}; }\r\n    var _a = options.syntax, syntax = _a === void 0 ? 'latest' : _a, substitutes = options.substitutes, _b = options.strict, strict = _b === void 0 ? true : _b;\r\n    var syntaxDefinition = typeof syntax === 'object' ? syntax : cssSyntaxDefinitions[syntax];\r\n    if (syntaxDefinition.baseSyntax) {\r\n        syntaxDefinition = extendSyntaxDefinition(cssSyntaxDefinitions[syntaxDefinition.baseSyntax], syntaxDefinition);\r\n    }\r\n    var _c = syntaxDefinition.tag\r\n        ? [true, Boolean(getXmlOptions(syntaxDefinition.tag).wildcard)]\r\n        : [false, false], tagNameEnabled = _c[0], tagNameWildcardEnabled = _c[1];\r\n    var idEnabled = Boolean(syntaxDefinition.ids);\r\n    var classNamesEnabled = Boolean(syntaxDefinition.classNames);\r\n    var namespaceEnabled = Boolean(syntaxDefinition.namespace);\r\n    var namespaceWildcardEnabled = syntaxDefinition.namespace &&\r\n        (syntaxDefinition.namespace === true || syntaxDefinition.namespace.wildcard === true);\r\n    if (namespaceEnabled && !tagNameEnabled) {\r\n        throw new Error(\"\".concat(errorPrefix, \"Namespaces cannot be enabled while tags are disabled.\"));\r\n    }\r\n    var substitutesEnabled = Boolean(substitutes);\r\n    var combinatorsIndex = syntaxDefinition.combinators\r\n        ? createMulticharIndex(syntaxDefinition.combinators)\r\n        : emptyMulticharIndex;\r\n    var _d = syntaxDefinition.attributes\r\n        ? [\r\n            true,\r\n            syntaxDefinition.attributes.operators\r\n                ? createMulticharIndex(syntaxDefinition.attributes.operators)\r\n                : emptyMulticharIndex,\r\n            syntaxDefinition.attributes.caseSensitivityModifiers\r\n                ? createRegularIndex(syntaxDefinition.attributes.caseSensitivityModifiers)\r\n                : emptyRegularIndex,\r\n            syntaxDefinition.attributes.unknownCaseSensitivityModifiers === 'accept'\r\n        ]\r\n        : [false, emptyMulticharIndex, emptyRegularIndex, false], attributesEnabled = _d[0], attributesOperatorsIndex = _d[1], attributesCaseSensitivityModifiers = _d[2], attributesAcceptUnknownCaseSensitivityModifiers = _d[3];\r\n    var attributesCaseSensitivityModifiersEnabled = attributesAcceptUnknownCaseSensitivityModifiers || Object.keys(attributesCaseSensitivityModifiers).length > 0;\r\n    var _e = syntaxDefinition.pseudoClasses\r\n        ? [\r\n            true,\r\n            syntaxDefinition.pseudoClasses.definitions\r\n                ? calculatePseudoSignatures(syntaxDefinition.pseudoClasses.definitions)\r\n                : emptyPseudoSignatures,\r\n            syntaxDefinition.pseudoClasses.unknown === 'accept'\r\n        ]\r\n        : [false, emptyPseudoSignatures, false], pseudoClassesEnabled = _e[0], pseudoClassesDefinitions = _e[1], pseudoClassesAcceptUnknown = _e[2];\r\n    var _f = syntaxDefinition.pseudoElements\r\n        ? [\r\n            true,\r\n            syntaxDefinition.pseudoElements.notation === 'singleColon' ||\r\n                syntaxDefinition.pseudoElements.notation === 'both',\r\n            !syntaxDefinition.pseudoElements.notation ||\r\n                syntaxDefinition.pseudoElements.notation === 'doubleColon' ||\r\n                syntaxDefinition.pseudoElements.notation === 'both',\r\n            syntaxDefinition.pseudoElements.definitions\r\n                ? calculatePseudoSignatures(Array.isArray(syntaxDefinition.pseudoElements.definitions)\r\n                    ? { NoArgument: syntaxDefinition.pseudoElements.definitions }\r\n                    : syntaxDefinition.pseudoElements.definitions)\r\n                : emptyPseudoSignatures,\r\n            syntaxDefinition.pseudoElements.unknown === 'accept'\r\n        ]\r\n        : [false, false, false, emptyPseudoSignatures, false], pseudoElementsEnabled = _f[0], pseudoElementsSingleColonNotationEnabled = _f[1], pseudoElementsDoubleColonNotationEnabled = _f[2], pseudoElementsDefinitions = _f[3], pseudoElementsAcceptUnknown = _f[4];\r\n    var str = '';\r\n    var l = str.length;\r\n    var pos = 0;\r\n    var chr = '';\r\n    var is = function (comparison) { return chr === comparison; };\r\n    var isTagStart = function () { return is('*') || isIdentStart(chr); };\r\n    var rewind = function (newPos) {\r\n        pos = newPos;\r\n        chr = str.charAt(pos);\r\n    };\r\n    var next = function () {\r\n        pos++;\r\n        chr = str.charAt(pos);\r\n    };\r\n    var readAndNext = function () {\r\n        var current = chr;\r\n        pos++;\r\n        chr = str.charAt(pos);\r\n        return current;\r\n    };\r\n    /** @throws ParserError */\r\n    function fail(errorMessage) {\r\n        var position = Math.min(l - 1, pos);\r\n        var error = new Error(\"\".concat(errorPrefix).concat(errorMessage, \" Pos: \").concat(position, \".\"));\r\n        error.position = position;\r\n        error.name = 'ParserError';\r\n        throw error;\r\n    }\r\n    function assert(condition, errorMessage) {\r\n        if (!condition) {\r\n            return fail(errorMessage);\r\n        }\r\n    }\r\n    var assertNonEof = function () {\r\n        assert(pos < l, 'Unexpected end of input.');\r\n    };\r\n    var isEof = function () { return pos >= l; };\r\n    var pass = function (character) {\r\n        assert(pos < l, \"Expected \\\"\".concat(character, \"\\\" but end of input reached.\"));\r\n        assert(chr === character, \"Expected \\\"\".concat(character, \"\\\" but \\\"\").concat(chr, \"\\\" found.\"));\r\n        pos++;\r\n        chr = str.charAt(pos);\r\n    };\r\n    function matchMulticharIndex(index) {\r\n        var match = matchMulticharIndexPos(index, pos);\r\n        if (match) {\r\n            pos += match.length;\r\n            chr = str.charAt(pos);\r\n            return match;\r\n        }\r\n    }\r\n    function matchMulticharIndexPos(index, subPos) {\r\n        var char = str.charAt(subPos);\r\n        var charIndex = index[char];\r\n        if (charIndex) {\r\n            var subMatch = matchMulticharIndexPos(charIndex.chars, subPos + 1);\r\n            if (subMatch) {\r\n                return subMatch;\r\n            }\r\n            if (charIndex.self) {\r\n                return charIndex.self;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @see https://www.w3.org/TR/css-syntax/#hex-digit-diagram\r\n     */\r\n    function parseHex() {\r\n        var hex = readAndNext();\r\n        var count = 1;\r\n        while (isHex(chr) && count < maxHexLength) {\r\n            hex += readAndNext();\r\n            count++;\r\n        }\r\n        skipSingleWhitespace();\r\n        return String.fromCharCode(parseInt(hex, 16));\r\n    }\r\n    /**\r\n     * @see https://www.w3.org/TR/css-syntax/#string-token-diagram\r\n     */\r\n    function parseString(quote) {\r\n        var result = '';\r\n        pass(quote);\r\n        while (pos < l) {\r\n            if (is(quote)) {\r\n                next();\r\n                return result;\r\n            }\r\n            else if (is('\\\\')) {\r\n                next();\r\n                if (is(quote)) {\r\n                    result += quote;\r\n                    next();\r\n                }\r\n                else if (chr === '\\n' || chr === '\\f') {\r\n                    next();\r\n                }\r\n                else if (chr === '\\r') {\r\n                    next();\r\n                    if (is('\\n')) {\r\n                        next();\r\n                    }\r\n                }\r\n                else if (isHex(chr)) {\r\n                    result += parseHex();\r\n                }\r\n                else {\r\n                    result += chr;\r\n                    next();\r\n                }\r\n            }\r\n            else {\r\n                result += chr;\r\n                next();\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * @see https://www.w3.org/TR/css-syntax/#ident-token-diagram\r\n     */\r\n    function parseIdentifier() {\r\n        if (!isIdentStart(chr)) {\r\n            return null;\r\n        }\r\n        var result = '';\r\n        while (is('-')) {\r\n            result += chr;\r\n            next();\r\n        }\r\n        if (result === '-' && !isIdent(chr) && !is('\\\\')) {\r\n            fail('Identifiers cannot consist of a single hyphen.');\r\n        }\r\n        if (strict && result.length >= 2) {\r\n            // Checking this only for strict mode since browsers work fine with these identifiers.\r\n            fail('Identifiers cannot start with two hyphens with strict mode on.');\r\n        }\r\n        if (digitsChars[chr]) {\r\n            fail('Identifiers cannot start with hyphens followed by digits.');\r\n        }\r\n        while (pos < l) {\r\n            if (isIdent(chr)) {\r\n                result += readAndNext();\r\n            }\r\n            else if (is('\\\\')) {\r\n                next();\r\n                assertNonEof();\r\n                if (isHex(chr)) {\r\n                    result += parseHex();\r\n                }\r\n                else {\r\n                    result += readAndNext();\r\n                }\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function parsePseudoClassString() {\r\n        var result = '';\r\n        while (pos < l) {\r\n            if (is(')')) {\r\n                break;\r\n            }\r\n            else if (is('\\\\')) {\r\n                next();\r\n                if (isEof() && !strict) {\r\n                    return (result + '\\\\').trim();\r\n                }\r\n                assertNonEof();\r\n                if (isHex(chr)) {\r\n                    result += parseHex();\r\n                }\r\n                else {\r\n                    result += readAndNext();\r\n                }\r\n            }\r\n            else {\r\n                result += readAndNext();\r\n            }\r\n        }\r\n        return result.trim();\r\n    }\r\n    function skipSingleWhitespace() {\r\n        if (chr === ' ' || chr === '\\t' || chr === '\\f' || chr === '\\n') {\r\n            next();\r\n            return;\r\n        }\r\n        if (chr === '\\r') {\r\n            next();\r\n        }\r\n        if (chr === '\\n') {\r\n            next();\r\n        }\r\n    }\r\n    function skipWhitespace() {\r\n        while (whitespaceChars[chr]) {\r\n            next();\r\n        }\r\n    }\r\n    function parseSelector(relative) {\r\n        if (relative === void 0) { relative = false; }\r\n        skipWhitespace();\r\n        var rules = [parseRule(relative)];\r\n        while (is(',')) {\r\n            next();\r\n            skipWhitespace();\r\n            rules.push(parseRule(relative));\r\n        }\r\n        return {\r\n            type: 'Selector',\r\n            rules: rules\r\n        };\r\n    }\r\n    function parseAttribute() {\r\n        pass('[');\r\n        skipWhitespace();\r\n        var attr;\r\n        if (is('|')) {\r\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\r\n            next();\r\n            var name_1 = parseIdentifier();\r\n            assert(name_1, 'Expected attribute name.');\r\n            attr = {\r\n                type: 'Attribute',\r\n                name: name_1,\r\n                namespace: { type: 'NoNamespace' }\r\n            };\r\n        }\r\n        else if (is('*')) {\r\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\r\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\r\n            next();\r\n            pass('|');\r\n            var name_2 = parseIdentifier();\r\n            assert(name_2, 'Expected attribute name.');\r\n            attr = {\r\n                type: 'Attribute',\r\n                name: name_2,\r\n                namespace: { type: 'WildcardNamespace' }\r\n            };\r\n        }\r\n        else {\r\n            var identifier = parseIdentifier();\r\n            assert(identifier, 'Expected attribute name.');\r\n            attr = {\r\n                type: 'Attribute',\r\n                name: identifier\r\n            };\r\n            if (is('|')) {\r\n                var savedPos = pos;\r\n                next();\r\n                if (isIdentStart(chr)) {\r\n                    assert(namespaceEnabled, 'Namespaces are not enabled.');\r\n                    var name_3 = parseIdentifier();\r\n                    assert(name_3, 'Expected attribute name.');\r\n                    attr = {\r\n                        type: 'Attribute',\r\n                        name: name_3,\r\n                        namespace: { type: 'NamespaceName', name: identifier }\r\n                    };\r\n                }\r\n                else {\r\n                    rewind(savedPos);\r\n                }\r\n            }\r\n        }\r\n        assert(attr.name, 'Expected attribute name.');\r\n        skipWhitespace();\r\n        if (isEof() && !strict) {\r\n            return attr;\r\n        }\r\n        if (is(']')) {\r\n            next();\r\n        }\r\n        else {\r\n            attr.operator = matchMulticharIndex(attributesOperatorsIndex);\r\n            assert(attr.operator, 'Expected a valid attribute selector operator.');\r\n            skipWhitespace();\r\n            assertNonEof();\r\n            if (quoteChars[chr]) {\r\n                attr.value = {\r\n                    type: 'String',\r\n                    value: parseString(chr)\r\n                };\r\n            }\r\n            else if (substitutesEnabled && is('$')) {\r\n                next();\r\n                var name_4 = parseIdentifier();\r\n                assert(name_4, 'Expected substitute name.');\r\n                attr.value = {\r\n                    type: 'Substitution',\r\n                    name: name_4\r\n                };\r\n            }\r\n            else {\r\n                var value = parseIdentifier();\r\n                assert(value, 'Expected attribute value.');\r\n                attr.value = {\r\n                    type: 'String',\r\n                    value: value\r\n                };\r\n            }\r\n            skipWhitespace();\r\n            if (isEof() && !strict) {\r\n                return attr;\r\n            }\r\n            if (!is(']')) {\r\n                var caseSensitivityModifier = parseIdentifier();\r\n                assert(caseSensitivityModifier, 'Expected end of attribute selector.');\r\n                attr.caseSensitivityModifier = caseSensitivityModifier;\r\n                assert(attributesCaseSensitivityModifiersEnabled, 'Attribute case sensitivity modifiers are not enabled.');\r\n                assert(attributesAcceptUnknownCaseSensitivityModifiers ||\r\n                    attributesCaseSensitivityModifiers[attr.caseSensitivityModifier], 'Unknown attribute case sensitivity modifier.');\r\n                skipWhitespace();\r\n                if (isEof() && !strict) {\r\n                    return attr;\r\n                }\r\n            }\r\n            pass(']');\r\n        }\r\n        return attr;\r\n    }\r\n    function parseNumber() {\r\n        var result = '';\r\n        while (digitsChars[chr]) {\r\n            result += readAndNext();\r\n        }\r\n        assert(result !== '', 'Formula parse error.');\r\n        return parseInt(result);\r\n    }\r\n    var isNumberStart = function () { return is('-') || is('+') || digitsChars[chr]; };\r\n    function parseFormula() {\r\n        if (is('e') || is('o')) {\r\n            var ident = parseIdentifier();\r\n            if (ident === 'even') {\r\n                skipWhitespace();\r\n                return [2, 0];\r\n            }\r\n            if (ident === 'odd') {\r\n                skipWhitespace();\r\n                return [2, 1];\r\n            }\r\n        }\r\n        var firstNumber = null;\r\n        var firstNumberMultiplier = 1;\r\n        if (is('-')) {\r\n            next();\r\n            firstNumberMultiplier = -1;\r\n        }\r\n        if (isNumberStart()) {\r\n            if (is('+')) {\r\n                next();\r\n            }\r\n            firstNumber = parseNumber();\r\n            if (!is('\\\\') && !is('n')) {\r\n                return [0, firstNumber * firstNumberMultiplier];\r\n            }\r\n        }\r\n        if (firstNumber === null) {\r\n            firstNumber = 1;\r\n        }\r\n        firstNumber *= firstNumberMultiplier;\r\n        var identifier;\r\n        if (is('\\\\')) {\r\n            next();\r\n            if (isHex(chr)) {\r\n                identifier = parseHex();\r\n            }\r\n            else {\r\n                identifier = readAndNext();\r\n            }\r\n        }\r\n        else {\r\n            identifier = readAndNext();\r\n        }\r\n        assert(identifier === 'n', 'Formula parse error: expected \"n\".');\r\n        skipWhitespace();\r\n        if (is('+') || is('-')) {\r\n            var sign = is('+') ? 1 : -1;\r\n            next();\r\n            skipWhitespace();\r\n            return [firstNumber, sign * parseNumber()];\r\n        }\r\n        else {\r\n            return [firstNumber, 0];\r\n        }\r\n    }\r\n    function parsePseudoArgument(pseudoName, type, signature) {\r\n        var argument;\r\n        if (is('(')) {\r\n            next();\r\n            skipWhitespace();\r\n            if (substitutesEnabled && is('$')) {\r\n                next();\r\n                var name_5 = parseIdentifier();\r\n                assert(name_5, 'Expected substitute name.');\r\n                argument = {\r\n                    type: 'Substitution',\r\n                    name: name_5\r\n                };\r\n            }\r\n            else if (signature.type === 'String') {\r\n                argument = {\r\n                    type: 'String',\r\n                    value: parsePseudoClassString()\r\n                };\r\n                assert(argument.value, \"Expected \".concat(type, \" argument value.\"));\r\n            }\r\n            else if (signature.type === 'Selector') {\r\n                argument = parseSelector(true);\r\n            }\r\n            else if (signature.type === 'Formula') {\r\n                var _a = parseFormula(), a = _a[0], b = _a[1];\r\n                argument = {\r\n                    type: 'Formula',\r\n                    a: a,\r\n                    b: b\r\n                };\r\n                if (signature.ofSelector) {\r\n                    skipWhitespace();\r\n                    if (is('o') || is('\\\\')) {\r\n                        var ident = parseIdentifier();\r\n                        assert(ident === 'of', 'Formula of selector parse error.');\r\n                        skipWhitespace();\r\n                        argument = {\r\n                            type: 'FormulaOfSelector',\r\n                            a: a,\r\n                            b: b,\r\n                            selector: parseRule()\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return fail(\"Invalid \".concat(type, \" signature.\"));\r\n            }\r\n            skipWhitespace();\r\n            if (isEof() && !strict) {\r\n                return argument;\r\n            }\r\n            pass(')');\r\n        }\r\n        else {\r\n            assert(signature.optional, \"Argument is required for \".concat(type, \" \\\"\").concat(pseudoName, \"\\\".\"));\r\n        }\r\n        return argument;\r\n    }\r\n    function parseTagName() {\r\n        if (is('*')) {\r\n            assert(tagNameWildcardEnabled, 'Wildcard tag name is not enabled.');\r\n            next();\r\n            return { type: 'WildcardTag' };\r\n        }\r\n        else if (isIdentStart(chr)) {\r\n            assert(tagNameEnabled, 'Tag names are not enabled.');\r\n            var name_6 = parseIdentifier();\r\n            assert(name_6, 'Expected tag name.');\r\n            return {\r\n                type: 'TagName',\r\n                name: name_6\r\n            };\r\n        }\r\n        else {\r\n            return fail('Expected tag name.');\r\n        }\r\n    }\r\n    function parseTagNameWithNamespace() {\r\n        if (is('*')) {\r\n            var savedPos = pos;\r\n            next();\r\n            if (!is('|')) {\r\n                rewind(savedPos);\r\n                return parseTagName();\r\n            }\r\n            next();\r\n            if (!isTagStart()) {\r\n                rewind(savedPos);\r\n                return parseTagName();\r\n            }\r\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\r\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\r\n            var tagName = parseTagName();\r\n            tagName.namespace = { type: 'WildcardNamespace' };\r\n            return tagName;\r\n        }\r\n        else if (is('|')) {\r\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\r\n            next();\r\n            var tagName = parseTagName();\r\n            tagName.namespace = { type: 'NoNamespace' };\r\n            return tagName;\r\n        }\r\n        else if (isIdentStart(chr)) {\r\n            var identifier = parseIdentifier();\r\n            assert(identifier, 'Expected tag name.');\r\n            if (!is('|')) {\r\n                assert(tagNameEnabled, 'Tag names are not enabled.');\r\n                return {\r\n                    type: 'TagName',\r\n                    name: identifier\r\n                };\r\n            }\r\n            var savedPos = pos;\r\n            next();\r\n            if (!isTagStart()) {\r\n                rewind(savedPos);\r\n                return {\r\n                    type: 'TagName',\r\n                    name: identifier\r\n                };\r\n            }\r\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\r\n            var tagName = parseTagName();\r\n            tagName.namespace = { type: 'NamespaceName', name: identifier };\r\n            return tagName;\r\n        }\r\n        else {\r\n            return fail('Expected tag name.');\r\n        }\r\n    }\r\n    function parseRule(relative) {\r\n        var _a, _b;\r\n        if (relative === void 0) { relative = false; }\r\n        var rule = { type: 'Rule', items: [] };\r\n        if (relative) {\r\n            var combinator = matchMulticharIndex(combinatorsIndex);\r\n            if (combinator) {\r\n                rule.combinator = combinator;\r\n                skipWhitespace();\r\n            }\r\n        }\r\n        while (pos < l) {\r\n            if (isTagStart()) {\r\n                assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\r\n                rule.items.push(parseTagNameWithNamespace());\r\n            }\r\n            else if (is('|')) {\r\n                var savedPos = pos;\r\n                next();\r\n                if (isTagStart()) {\r\n                    assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\r\n                    rewind(savedPos);\r\n                    rule.items.push(parseTagNameWithNamespace());\r\n                }\r\n                else {\r\n                    rewind(savedPos);\r\n                    break;\r\n                }\r\n            }\r\n            else if (is('.')) {\r\n                assert(classNamesEnabled, 'Class names are not enabled.');\r\n                next();\r\n                var className = parseIdentifier();\r\n                assert(className, 'Expected class name.');\r\n                rule.items.push({ type: 'ClassName', name: className });\r\n            }\r\n            else if (is('#')) {\r\n                assert(idEnabled, 'IDs are not enabled.');\r\n                next();\r\n                var idName = parseIdentifier();\r\n                assert(idName, 'Expected ID name.');\r\n                rule.items.push({ type: 'Id', name: idName });\r\n            }\r\n            else if (is('[')) {\r\n                assert(attributesEnabled, 'Attributes are not enabled.');\r\n                rule.items.push(parseAttribute());\r\n            }\r\n            else if (is(':')) {\r\n                var isDoubleColon = false;\r\n                var isPseudoElement = false;\r\n                next();\r\n                if (is(':')) {\r\n                    assert(pseudoElementsEnabled, 'Pseudo elements are not enabled.');\r\n                    assert(pseudoElementsDoubleColonNotationEnabled, 'Pseudo elements double colon notation is not enabled.');\r\n                    isDoubleColon = true;\r\n                    next();\r\n                }\r\n                var pseudoName = parseIdentifier();\r\n                assert(isDoubleColon || pseudoName, 'Expected pseudo-class name.');\r\n                assert(!isDoubleColon || pseudoName, 'Expected pseudo-element name.');\r\n                assert(pseudoName, 'Expected pseudo-class name.');\r\n                assert(!isDoubleColon ||\r\n                    pseudoElementsAcceptUnknown ||\r\n                    Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName), \"Unknown pseudo-element \\\"\".concat(pseudoName, \"\\\".\"));\r\n                isPseudoElement =\r\n                    pseudoElementsEnabled &&\r\n                        (isDoubleColon ||\r\n                            (!isDoubleColon &&\r\n                                pseudoElementsSingleColonNotationEnabled &&\r\n                                Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName)));\r\n                if (isPseudoElement) {\r\n                    var signature = (_a = pseudoElementsDefinitions[pseudoName]) !== null && _a !== void 0 ? _a : (pseudoElementsAcceptUnknown && defaultPseudoSignature);\r\n                    var pseudoElement = {\r\n                        type: 'PseudoElement',\r\n                        name: pseudoName\r\n                    };\r\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-element', signature);\r\n                    if (argument) {\r\n                        assert(argument.type !== 'Formula' && argument.type !== 'FormulaOfSelector', 'Pseudo-elements cannot have formula argument.');\r\n                        pseudoElement.argument = argument;\r\n                    }\r\n                    rule.items.push(pseudoElement);\r\n                }\r\n                else {\r\n                    assert(pseudoClassesEnabled, 'Pseudo-classes are not enabled.');\r\n                    var signature = (_b = pseudoClassesDefinitions[pseudoName]) !== null && _b !== void 0 ? _b : (pseudoClassesAcceptUnknown && defaultPseudoSignature);\r\n                    assert(signature, \"Unknown pseudo-class: \\\"\".concat(pseudoName, \"\\\".\"));\r\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-class', signature);\r\n                    var pseudoClass = {\r\n                        type: 'PseudoClass',\r\n                        name: pseudoName\r\n                    };\r\n                    if (argument) {\r\n                        pseudoClass.argument = argument;\r\n                    }\r\n                    rule.items.push(pseudoClass);\r\n                }\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        if (rule.items.length === 0) {\r\n            if (isEof()) {\r\n                return fail('Expected rule but end of input reached.');\r\n            }\r\n            else {\r\n                return fail(\"Expected rule but \\\"\".concat(chr, \"\\\" found.\"));\r\n            }\r\n        }\r\n        skipWhitespace();\r\n        if (!isEof() && !is(',') && !is(')')) {\r\n            var combinator = matchMulticharIndex(combinatorsIndex);\r\n            skipWhitespace();\r\n            rule.nestedRule = parseRule();\r\n            rule.nestedRule.combinator = combinator;\r\n        }\r\n        return rule;\r\n    }\r\n    return function (input) {\r\n        // noinspection SuspiciousTypeOfGuard\r\n        if (typeof input !== 'string') {\r\n            throw new Error(\"\".concat(errorPrefix, \"Expected string input.\"));\r\n        }\r\n        str = input;\r\n        l = str.length;\r\n        pos = 0;\r\n        chr = str.charAt(0);\r\n        return parseSelector();\r\n    };\r\n}\r\n", "var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nfunction astMethods(type) {\r\n    return function (generatorName, checkerName) {\r\n        var _a;\r\n        return (_a = {},\r\n            _a[generatorName] = function (props) { return (__assign({ type: type }, props)); },\r\n            _a[checkerName] = function (entity) {\r\n                return typeof entity === 'object' && entity !== null && entity.type === type;\r\n            },\r\n            _a);\r\n    };\r\n}\r\n/**\r\n * AST structure generators and matchers.\r\n * For instance, `ast.selector({rules: [...]})` creates AstSelector and `ast.isSelector(...)` checks if\r\n * AstSelector was specified.\r\n *\r\n * @example\r\n *\r\n * // Represents CSS selector: ns|div#user-34.user.user-active[role=\"button\"]:lang(en)::before > *\r\n * const selector = ast.selector({\r\n *     rules: [\r\n *         ast.rule({\r\n *             items: [\r\n *                 ast.tagName({name: 'div', namespace: ast.namespaceName({name: 'ns'})}),\r\n *                 ast.id({name: 'user-34'}),\r\n *                 ast.className({name: 'user'}),\r\n *                 ast.className({name: 'user-active'}),\r\n *                 ast.attribute({\r\n *                     name: 'role',\r\n *                     operator: '=',\r\n *                     value: ast.string({value: 'button'})\r\n *                 }),\r\n *                 ast.pseudoClass({\r\n *                     name: 'lang',\r\n *                     argument: ast.string({value: 'en'})\r\n *                 }),\r\n *                 ast.pseudoElement({name: 'before'})\r\n *             ],\r\n *             nestedRule: ast.rule({combinator: '>', items: [ast.wildcardTag()]})\r\n *         })\r\n *     ]\r\n * });\r\n * console.log(ast.isSelector(selector)); // prints true\r\n * console.log(ast.isRule(selector)); // prints false\r\n */\r\nexport var ast = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, astMethods('Selector')('selector', 'isSelector')), astMethods('Rule')('rule', 'isRule')), astMethods('TagName')('tagName', 'isTagName')), astMethods('Id')('id', 'isId')), astMethods('ClassName')('className', 'isClassName')), astMethods('WildcardTag')('wildcardTag', 'isWildcardTag')), astMethods('NamespaceName')('namespaceName', 'isNamespaceName')), astMethods('WildcardNamespace')('wildcardNamespace', 'isWildcardNamespace')), astMethods('NoNamespace')('noNamespace', 'isNoNamespace')), astMethods('Attribute')('attribute', 'isAttribute')), astMethods('PseudoClass')('pseudoClass', 'isPseudoClass')), astMethods('PseudoElement')('pseudoElement', 'isPseudoElement')), astMethods('String')('string', 'isString')), astMethods('Formula')('formula', 'isFormula')), astMethods('FormulaOfSelector')('formulaOfSelector', 'isFormulaOfSelector')), astMethods('Substitution')('substitution', 'isSubstitution'));\r\n", "/**\r\n * @typedef {import('css-selector-parser').AstSelector} AstSelector\r\n */\r\n\r\nimport {createParser} from 'css-selector-parser'\r\n\r\nconst cssSelectorParse = createParser({syntax: 'selectors-4'})\r\n\r\n/**\r\n * @param {string} selector\r\n *   Selector to parse.\r\n * @returns {AstSelector}\r\n *   Parsed selector.\r\n */\r\nexport function parse(selector) {\r\n  if (typeof selector !== 'string') {\r\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\r\n  }\r\n\r\n  return cssSelectorParse(selector)\r\n}\r\n", "const rtlRange = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\r\nconst ltrRange =\r\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\r\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\r\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\r\n\r\n/* eslint-disable no-misleading-character-class */\r\nconst rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']')\r\nconst ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']')\r\n/* eslint-enable no-misleading-character-class */\r\n\r\n/**\r\n * Detect the direction of text: left-to-right, right-to-left, or neutral\r\n *\r\n * @param {string} value\r\n * @returns {'rtl'|'ltr'|'neutral'}\r\n */\r\nexport function direction(value) {\r\n  const source = String(value || '')\r\n  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral'\r\n}\r\n", "/**\r\n * @typedef {import('hast').ElementContent} ElementContent\r\n * @typedef {import('hast').Nodes} Nodes\r\n *\r\n * @typedef {import('unist-util-visit').Visitor<ElementContent>} Visitor\r\n *\r\n * @typedef {import('./index.js').Direction} Direction\r\n * @typedef {import('./index.js').State} State\r\n */\r\n\r\nimport {direction} from 'direction'\r\nimport {toString} from 'hast-util-to-string'\r\nimport {svg} from 'property-information'\r\nimport {EXIT, SKIP, visit} from 'unist-util-visit'\r\n\r\n/**\r\n * Enter a node.\r\n *\r\n * The caller is responsible for calling the return value `exit`.\r\n *\r\n * @param {State} state\r\n *   Current state.\r\n *\r\n *   Will be mutated: `exit` undos the changes.\r\n * @param {Nodes} node\r\n *   Node to enter.\r\n * @returns {() => undefined}\r\n *   Call to exit.\r\n */\r\n// eslint-disable-next-line complexity\r\nexport function enterState(state, node) {\r\n  const schema = state.schema\r\n  const language = state.language\r\n  const currentDirection = state.direction\r\n  const editableOrEditingHost = state.editableOrEditingHost\r\n  /** @type {Direction | undefined} */\r\n  let dirInferred\r\n\r\n  if (node.type === 'element') {\r\n    const lang = node.properties.xmlLang || node.properties.lang\r\n    const type = node.properties.type || 'text'\r\n    const dir = dirProperty(node)\r\n\r\n    if (lang !== null && lang !== undefined) {\r\n      state.language = String(lang)\r\n    }\r\n\r\n    if (schema && schema.space === 'html') {\r\n      if (node.properties.contentEditable === 'true') {\r\n        state.editableOrEditingHost = true\r\n      }\r\n\r\n      if (node.tagName === 'svg') {\r\n        state.schema = svg\r\n      }\r\n\r\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\r\n      // Explicit `[dir=rtl]`.\r\n      if (dir === 'rtl') {\r\n        dirInferred = dir\r\n      } else if (\r\n        // Explicit `[dir=ltr]`.\r\n        dir === 'ltr' ||\r\n        // HTML with an invalid or no `[dir]`.\r\n        (dir !== 'auto' && node.tagName === 'html') ||\r\n        // `input[type=tel]` with an invalid or no `[dir]`.\r\n        (dir !== 'auto' && node.tagName === 'input' && type === 'tel')\r\n      ) {\r\n        dirInferred = 'ltr'\r\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\r\n      } else if (dir === 'auto' || node.tagName === 'bdi') {\r\n        if (node.tagName === 'textarea') {\r\n          // Check contents of `<textarea>`.\r\n          dirInferred = dirBidi(toString(node))\r\n        } else if (\r\n          node.tagName === 'input' &&\r\n          (type === 'email' ||\r\n            type === 'search' ||\r\n            type === 'tel' ||\r\n            type === 'text')\r\n        ) {\r\n          // Check value of `<input>`.\r\n          dirInferred = node.properties.value\r\n            ? dirBidi(String(node.properties.value))\r\n            : 'ltr'\r\n        } else {\r\n          // Check text nodes in `node`.\r\n          visit(node, inferDirectionality)\r\n        }\r\n      }\r\n\r\n      if (dirInferred) {\r\n        state.direction = dirInferred\r\n      }\r\n    }\r\n    // Turn off editing mode in non-HTML spaces.\r\n    else if (state.editableOrEditingHost) {\r\n      state.editableOrEditingHost = false\r\n    }\r\n  }\r\n\r\n  return reset\r\n\r\n  /**\r\n   * @returns {undefined}\r\n   *   Nothing.\r\n   */\r\n  function reset() {\r\n    state.schema = schema\r\n    state.language = language\r\n    state.direction = currentDirection\r\n    state.editableOrEditingHost = editableOrEditingHost\r\n  }\r\n\r\n  /** @type {Visitor} */\r\n  function inferDirectionality(child) {\r\n    if (child.type === 'text') {\r\n      dirInferred = dirBidi(child.value)\r\n      return dirInferred ? EXIT : undefined\r\n    }\r\n\r\n    if (\r\n      child !== node &&\r\n      child.type === 'element' &&\r\n      (child.tagName === 'bdi' ||\r\n        child.tagName === 'script' ||\r\n        child.tagName === 'style' ||\r\n        child.tagName === 'textare' ||\r\n        dirProperty(child))\r\n    ) {\r\n      return SKIP\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * See `wooorm/direction`.\r\n *\r\n * @param {string} value\r\n *   Value to check.\r\n * @returns {Exclude<Direction, 'auto'> | undefined}\r\n *   Directionality.\r\n */\r\nfunction dirBidi(value) {\r\n  const result = direction(value)\r\n  return result === 'neutral' ? undefined : result\r\n}\r\n\r\n/**\r\n * @param {ElementContent} node\r\n *   Node to check.\r\n * @returns {Direction | undefined}\r\n *   Directionality.\r\n */\r\nfunction dirProperty(node) {\r\n  const value =\r\n    node.type === 'element' && typeof node.properties.dir === 'string'\r\n      ? node.properties.dir.toLowerCase()\r\n      : undefined\r\n\r\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\r\n    ? value\r\n    : undefined\r\n}\r\n", "/**\r\n * @typedef {import('css-selector-parser').AstAttribute} AstAttribute\r\n *\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Properties} Properties\r\n *\r\n * @typedef {import('property-information').Info} Info\r\n * @typedef {import('property-information').Schema} Schema\r\n */\r\n\r\nimport {stringify as commas} from 'comma-separated-tokens'\r\nimport {ok as assert} from 'devlop'\r\nimport {find} from 'property-information'\r\nimport * as spaces from 'space-separated-tokens'\r\n\r\n/**\r\n * @param {AstAttribute} query\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @param {Schema} schema\r\n *   Schema of element.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nexport function attribute(query, element, schema) {\r\n  const info = find(schema, query.name)\r\n  const propertyValue = element.properties[info.property]\r\n  let value = normalizeValue(propertyValue, info)\r\n\r\n  // Exists.\r\n  if (!query.value) {\r\n    return value !== undefined\r\n  }\r\n\r\n  assert(query.value.type === 'String', 'expected plain string')\r\n  let key = query.value.value\r\n\r\n  // Case-sensitivity.\r\n  if (query.caseSensitivityModifier === 'i') {\r\n    key = key.toLowerCase()\r\n\r\n    if (value) {\r\n      value = value.toLowerCase()\r\n    }\r\n  }\r\n\r\n  if (value !== undefined) {\r\n    switch (query.operator) {\r\n      // Exact.\r\n      case '=': {\r\n        return key === value\r\n      }\r\n\r\n      // Ends.\r\n      case '$=': {\r\n        return key === value.slice(-key.length)\r\n      }\r\n\r\n      // Contains.\r\n      case '*=': {\r\n        return value.includes(key)\r\n      }\r\n\r\n      // Begins.\r\n      case '^=': {\r\n        return key === value.slice(0, key.length)\r\n      }\r\n\r\n      // Exact or prefix.\r\n      case '|=': {\r\n        return (\r\n          key === value ||\r\n          (key === value.slice(0, key.length) &&\r\n            value.charAt(key.length) === '-')\r\n        )\r\n      }\r\n\r\n      // Space-separated list.\r\n      case '~=': {\r\n        return (\r\n          // For all other values (including comma-separated lists), return whether this\r\n          // is an exact match.\r\n          key === value ||\r\n          // If this is a space-separated list, and the query is contained in it, return\r\n          // true.\r\n          spaces.parse(value).includes(key)\r\n        )\r\n      }\r\n      // Other values are not yet supported by CSS.\r\n      // No default\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n *\r\n * @param {Properties[keyof Properties]} value\r\n * @param {Info} info\r\n * @returns {string | undefined}\r\n */\r\nfunction normalizeValue(value, info) {\r\n  if (value === null || value === undefined) {\r\n    // Empty.\r\n  } else if (typeof value === 'boolean') {\r\n    if (value) {\r\n      return info.attribute\r\n    }\r\n  } else if (Array.isArray(value)) {\r\n    if (value.length > 0) {\r\n      return (info.commaSeparated ? commas : spaces.stringify)(value)\r\n    }\r\n  } else {\r\n    return String(value)\r\n  }\r\n}\r\n", "/**\r\n * @typedef {import('css-selector-parser').AstClassName} AstClassName\r\n * @typedef {import('hast').Element} Element\r\n */\r\n\r\n/** @type {Array<never>} */\r\nconst emptyClassNames = []\r\n\r\n/**\r\n * Check whether an element has all class names.\r\n *\r\n * @param {AstClassName} query\r\n *   AST rule (with `classNames`).\r\n * @param {Element} element\r\n *   Element.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nexport function className(query, element) {\r\n  // Assume array.\r\n  const value = /** @type {Readonly<Array<string>>} */ (\r\n    element.properties.className || emptyClassNames\r\n  )\r\n\r\n  return value.includes(query.name)\r\n}\r\n", "/**\r\n * @typedef {import('css-selector-parser').AstId} AstId\r\n *\r\n * @typedef {import('hast').Element} Element\r\n */\r\n\r\n// Workaround to show references to above types in VS Code.\r\n''\r\n\r\n/**\r\n * Check whether an element has an ID.\r\n *\r\n * @param {AstId} query\r\n *   AST rule (with `ids`).\r\n * @param {Element} element\r\n *   Element.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nexport function id(query, element) {\r\n  return element.properties.id === query.name\r\n}\r\n", "/**\r\n * @typedef {import('css-selector-parser').AstTagName} AstTagName\r\n *\r\n * @typedef {import('hast').Element} Element\r\n */\r\n\r\n// Workaround to show references to above types in VS Code.\r\n''\r\n\r\n/**\r\n * Check whether an element has a tag name.\r\n *\r\n * @param {AstTagName} query\r\n *   AST rule (with `tag`).\r\n * @param {Element} element\r\n *   Element.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nexport function name(query, element) {\r\n  return query.name === element.tagName\r\n}\r\n", "/**\r\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\r\n * for more info on the algorithms.\r\n */\r\n\r\n/**\r\n * @typedef {string} Tag\r\n *   BCP-47 tag.\r\n * @typedef {Array<Tag>} Tags\r\n *   List of BCP-47 tags.\r\n * @typedef {string} Range\r\n *   RFC 4647 range.\r\n * @typedef {Array<Range>} Ranges\r\n *   List of RFC 4647 range.\r\n *\r\n * @callback Check\r\n *   An internal check.\r\n * @param {Tag} tag\r\n *   BCP-47 tag.\r\n * @param {Range} range\r\n *   RFC 4647 range.\r\n * @returns {boolean}\r\n *   Whether the range matches the tag.\r\n *\r\n * @typedef {FilterOrLookup<true>} Filter\r\n *   Filter: yields all tags that match a range.\r\n * @typedef {FilterOrLookup<false>} Lookup\r\n *   Lookup: yields the best tag that matches a range.\r\n */\r\n\r\n/**\r\n * @template {boolean} IsFilter\r\n *   Whether to filter or perform a lookup.\r\n * @callback FilterOrLookup\r\n *   A check.\r\n * @param {Tag|Tags} tags\r\n *   One or more BCP-47 tags.\r\n * @param {Range|Ranges|undefined} [ranges='*']\r\n *   One or more RFC 4647 ranges.\r\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\r\n *   Result.\r\n */\r\n\r\n/**\r\n * Factory to perform a filter or a lookup.\r\n *\r\n * This factory creates a function that accepts a list of tags and a list of\r\n * ranges, and contains logic to exit early for lookups.\r\n * `check` just has to deal with one tag and one range.\r\n * This match function iterates over ranges, and for each range,\r\n * iterates over tags.\r\n * That way, earlier ranges matching any tag have precedence over later ranges.\r\n *\r\n * @template {boolean} IsFilter\r\n * @param {Check} check\r\n *   A check.\r\n * @param {IsFilter} filter\r\n *   Whether to filter or perform a lookup.\r\n * @returns {FilterOrLookup<IsFilter>}\r\n *   Filter or lookup.\r\n */\r\nfunction factory(check, filter) {\r\n  /**\r\n   * @param {Tag|Tags} tags\r\n   *   One or more BCP-47 tags.\r\n   * @param {Range|Ranges|undefined} [ranges='*']\r\n   *   One or more RFC 4647 ranges.\r\n   * @returns {IsFilter extends true ? Tags : Tag|undefined}\r\n   *   Result.\r\n   */\r\n  return function (tags, ranges) {\r\n    let left = cast(tags, 'tag')\r\n    const right = cast(\r\n      ranges === null || ranges === undefined ? '*' : ranges,\r\n      'range'\r\n    )\r\n    /** @type {Tags} */\r\n    const matches = []\r\n    let rightIndex = -1\r\n\r\n    while (++rightIndex < right.length) {\r\n      const range = right[rightIndex].toLowerCase()\r\n\r\n      // Ignore wildcards in lookup mode.\r\n      if (!filter && range === '*') continue\r\n\r\n      let leftIndex = -1\r\n      /** @type {Tags} */\r\n      const next = []\r\n\r\n      while (++leftIndex < left.length) {\r\n        if (check(left[leftIndex].toLowerCase(), range)) {\r\n          // Exit if this is a lookup and we have a match.\r\n          if (!filter) {\r\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\r\n              left[leftIndex]\r\n            )\r\n          }\r\n\r\n          matches.push(left[leftIndex])\r\n        } else {\r\n          next.push(left[leftIndex])\r\n        }\r\n      }\r\n\r\n      left = next\r\n    }\r\n\r\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\r\n    // a match, so return `undefined`.\r\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\r\n      filter ? matches : undefined\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\r\n * of basic language ranges (Section 2.1) to sets of language tags.\r\n *\r\n * @param {Tag|Tags} tags\r\n *   One or more BCP-47 tags.\r\n * @param {Range|Ranges|undefined} [ranges='*']\r\n *   One or more RFC 4647 ranges.\r\n * @returns {Tags}\r\n *   List of BCP-47 tags.\r\n */\r\nexport const basicFilter = factory(function (tag, range) {\r\n  return range === '*' || tag === range || tag.includes(range + '-')\r\n}, true)\r\n\r\n/**\r\n * Extended Filtering (Section 3.3.2) matches a language priority list\r\n * consisting of extended language ranges (Section 2.2) to sets of language\r\n * tags.\r\n *\r\n * @param {Tag|Tags} tags\r\n *   One or more BCP-47 tags.\r\n * @param {Range|Ranges|undefined} [ranges='*']\r\n *   One or more RFC 4647 ranges.\r\n * @returns {Tags}\r\n *   List of BCP-47 tags.\r\n */\r\nexport const extendedFilter = factory(function (tag, range) {\r\n  // 3.3.2.1\r\n  const left = tag.split('-')\r\n  const right = range.split('-')\r\n  let leftIndex = 0\r\n  let rightIndex = 0\r\n\r\n  // 3.3.2.2\r\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\r\n    return false\r\n  }\r\n\r\n  leftIndex++\r\n  rightIndex++\r\n\r\n  // 3.3.2.3\r\n  while (rightIndex < right.length) {\r\n    // 3.3.2.3.A\r\n    if (right[rightIndex] === '*') {\r\n      rightIndex++\r\n      continue\r\n    }\r\n\r\n    // 3.3.2.3.B\r\n    if (!left[leftIndex]) return false\r\n\r\n    // 3.3.2.3.C\r\n    if (left[leftIndex] === right[rightIndex]) {\r\n      leftIndex++\r\n      rightIndex++\r\n      continue\r\n    }\r\n\r\n    // 3.3.2.3.D\r\n    if (left[leftIndex].length === 1) return false\r\n\r\n    // 3.3.2.3.E\r\n    leftIndex++\r\n  }\r\n\r\n  // 3.3.2.4\r\n  return true\r\n}, true)\r\n\r\n/**\r\n * Lookup (Section 3.4) matches a language priority list consisting of basic\r\n * language ranges to sets of language tags to find the one exact language tag\r\n * that best matches the range.\r\n *\r\n * @param {Tag|Tags} tags\r\n *   One or more BCP-47 tags.\r\n * @param {Range|Ranges|undefined} [ranges='*']\r\n *   One or more RFC 4647 ranges.\r\n * @returns {Tag|undefined}\r\n *   BCP-47 tag.\r\n */\r\nexport const lookup = factory(function (tag, range) {\r\n  let right = range\r\n\r\n  /* eslint-disable-next-line no-constant-condition */\r\n  while (true) {\r\n    if (right === '*' || tag === right) return true\r\n\r\n    let index = right.lastIndexOf('-')\r\n\r\n    if (index < 0) return false\r\n\r\n    if (right.charAt(index - 2) === '-') index -= 2\r\n\r\n    right = right.slice(0, index)\r\n  }\r\n}, false)\r\n\r\n/**\r\n * Validate tags or ranges, and cast them to arrays.\r\n *\r\n * @param {string|Array<string>} values\r\n * @param {string} name\r\n * @returns {Array<string>}\r\n */\r\nfunction cast(values, name) {\r\n  const value = values && typeof values === 'string' ? [values] : values\r\n\r\n  if (!value || typeof value !== 'object' || !('length' in value)) {\r\n    throw new Error(\r\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\r\n    )\r\n  }\r\n\r\n  return value\r\n}\r\n", "/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Nodes} Nodes\r\n */\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * Check if `node` is an element and has a `name` property.\r\n *\r\n * @template {string} Key\r\n *   Type of key.\r\n * @param {Nodes} node\r\n *   Node to check (typically `Element`).\r\n * @param {Key} name\r\n *   Property name to check.\r\n * @returns {node is Element & {properties: Record<Key, Array<number | string> | number | string | true>}}}\r\n *   Whether `node` is an element that has a `name` property.\r\n *\r\n *   Note: see <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/27c9274/types/hast/index.d.ts#L37C29-L37C98>.\r\n */\r\nexport function hasProperty(node, name) {\r\n  const value =\r\n    node.type === 'element' &&\r\n    own.call(node.properties, name) &&\r\n    node.properties[name]\r\n\r\n  return value !== null && value !== undefined && value !== false\r\n}\r\n", null, null, null, "/**\r\n * @typedef {import('css-selector-parser').AstPseudoClass} AstPseudoClass\r\n *\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').ElementContent} ElementContent\r\n * @typedef {import('hast').Parents} Parents\r\n *\r\n * @typedef {import('./index.js').State} State\r\n */\r\n\r\nimport {extendedFilter} from 'bcp-47-match'\r\nimport {parse as commas} from 'comma-separated-tokens'\r\nimport {ok as assert, unreachable} from 'devlop'\r\nimport {hasProperty} from 'hast-util-has-property'\r\nimport {whitespace} from 'hast-util-whitespace'\r\nimport fauxEsmNthCheck from 'nth-check'\r\nimport {zwitch} from 'zwitch'\r\nimport {walk} from './walk.js'\r\n\r\n/** @type {import('nth-check').default} */\r\n// @ts-expect-error: types are broken.\r\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\r\n\r\n/** @type {(rule: AstPseudoClass, element: Element, index: number | undefined, parent: Parents | undefined, state: State) => boolean} */\r\nexport const pseudo = zwitch('name', {\r\n  handlers: {\r\n    'any-link': anyLink,\r\n    blank,\r\n    checked,\r\n    dir,\r\n    disabled,\r\n    empty,\r\n    enabled,\r\n    'first-child': firstChild,\r\n    'first-of-type': firstOfType,\r\n    has,\r\n    is,\r\n    lang,\r\n    'last-child': lastChild,\r\n    'last-of-type': lastOfType,\r\n    not,\r\n    'nth-child': nthChild,\r\n    'nth-last-child': nthLastChild,\r\n    'nth-last-of-type': nthLastOfType,\r\n    'nth-of-type': nthOfType,\r\n    'only-child': onlyChild,\r\n    'only-of-type': onlyOfType,\r\n    optional,\r\n    'read-only': readOnly,\r\n    'read-write': readWrite,\r\n    required,\r\n    root,\r\n    scope\r\n  },\r\n  invalid: invalidPseudo,\r\n  unknown: unknownPseudo\r\n})\r\n\r\n/**\r\n * Check whether an element matches an `:any-link` pseudo.\r\n *\r\n * @param {AstPseudoClass} _\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction anyLink(_, element) {\r\n  return (\r\n    (element.tagName === 'a' ||\r\n      element.tagName === 'area' ||\r\n      element.tagName === 'link') &&\r\n    hasProperty(element, 'href')\r\n  )\r\n}\r\n\r\n/**\r\n * @param {State} state\r\n *   State.\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n */\r\nfunction assertDeep(state, query) {\r\n  if (state.shallow) {\r\n    throw new Error('Cannot use `:' + query.name + '` without parent')\r\n  }\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:blank` pseudo.\r\n *\r\n * @param {AstPseudoClass} _\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction blank(_, element) {\r\n  return !someChildren(element, check)\r\n\r\n  /**\r\n   * @param {ElementContent} child\r\n   * @returns {boolean}\r\n   */\r\n  function check(child) {\r\n    return (\r\n      child.type === 'element' || (child.type === 'text' && !whitespace(child))\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:checked` pseudo.\r\n *\r\n * @param {AstPseudoClass} _\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction checked(_, element) {\r\n  if (element.tagName === 'input' || element.tagName === 'menuitem') {\r\n    return Boolean(\r\n      (element.properties.type === 'checkbox' ||\r\n        element.properties.type === 'radio') &&\r\n        hasProperty(element, 'checked')\r\n    )\r\n  }\r\n\r\n  if (element.tagName === 'option') {\r\n    return hasProperty(element, 'selected')\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:dir()` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} _1\r\n *   Element.\r\n * @param {number | undefined} _2\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _3\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction dir(query, _1, _2, _3, state) {\r\n  assert(query.argument, 'expected `argument`')\r\n  assert(query.argument.type === 'String', 'expected plain text')\r\n  return state.direction === query.argument.value\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:disabled` pseudo.\r\n *\r\n * @param {AstPseudoClass} _\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction disabled(_, element) {\r\n  return (\r\n    (element.tagName === 'button' ||\r\n      element.tagName === 'input' ||\r\n      element.tagName === 'select' ||\r\n      element.tagName === 'textarea' ||\r\n      element.tagName === 'optgroup' ||\r\n      element.tagName === 'option' ||\r\n      element.tagName === 'menuitem' ||\r\n      element.tagName === 'fieldset') &&\r\n    hasProperty(element, 'disabled')\r\n  )\r\n}\r\n\r\n/**\r\n * Check whether an element matches an `:empty` pseudo.\r\n *\r\n * @param {AstPseudoClass} _\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction empty(_, element) {\r\n  return !someChildren(element, check)\r\n\r\n  /**\r\n   * @param {ElementContent} child\r\n   * @returns {boolean}\r\n   */\r\n  function check(child) {\r\n    return child.type === 'element' || child.type === 'text'\r\n  }\r\n}\r\n\r\n/**\r\n * Check whether an element matches an `:enabled` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction enabled(query, element) {\r\n  return !disabled(query, element)\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:first-child` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} _1\r\n *   Element.\r\n * @param {number | undefined} _2\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _3\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction firstChild(query, _1, _2, _3, state) {\r\n  assertDeep(state, query)\r\n  return state.elementIndex === 0\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:first-of-type` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} _1\r\n *   Element.\r\n * @param {number | undefined} _2\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _3\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction firstOfType(query, _1, _2, _3, state) {\r\n  assertDeep(state, query)\r\n  return state.typeIndex === 0\r\n}\r\n\r\n/**\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @returns {(value: number) => boolean}\r\n *   N.\r\n */\r\nfunction getCachedNthCheck(query) {\r\n  /** @type {(value: number) => boolean} */\r\n  // @ts-expect-error: cache.\r\n  let fn = query._cachedFn\r\n\r\n  if (!fn) {\r\n    const value = query.argument\r\n    assert(value, 'expected `argument`')\r\n\r\n    if (value.type !== 'Formula') {\r\n      throw new Error(\r\n        'Expected `nth` formula, such as `even` or `2n+1` (`of` is not yet supported)'\r\n      )\r\n    }\r\n\r\n    fn = nthCheck(value.a + 'n+' + value.b)\r\n    // @ts-expect-error: cache.\r\n    query._cachedFn = fn\r\n  }\r\n\r\n  return fn\r\n}\r\n\r\n/**\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @param {number | undefined} _1\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _2\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction has(query, element, _1, _2, state) {\r\n  assert(query.argument, 'expected `argument`')\r\n  assert(query.argument.type === 'Selector', 'expected selector')\r\n\r\n  /** @type {State} */\r\n  const childState = {\r\n    ...state,\r\n    // Not found yet.\r\n    found: false,\r\n    // One result is enough.\r\n    one: true,\r\n    results: [],\r\n    rootQuery: query.argument,\r\n    scopeElements: [element],\r\n    // Do walk deep.\r\n    shallow: false\r\n  }\r\n\r\n  walk(childState, {type: 'root', children: element.children})\r\n\r\n  return childState.results.length > 0\r\n}\r\n\r\n// Shouldn’t be called, parser gives correct data.\r\n/* c8 ignore next 3 */\r\nfunction invalidPseudo() {\r\n  unreachable('Invalid pseudo-selector')\r\n}\r\n\r\n/**\r\n * Check whether an element `:is` further selectors.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @param {number | undefined} _1\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _2\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction is(query, element, _1, _2, state) {\r\n  assert(query.argument, 'expected `argument`')\r\n  assert(query.argument.type === 'Selector', 'expected selector')\r\n\r\n  /** @type {State} */\r\n  const childState = {\r\n    ...state,\r\n    // Not found yet.\r\n    found: false,\r\n    // One result is enough.\r\n    one: true,\r\n    results: [],\r\n    rootQuery: query.argument,\r\n    scopeElements: [element],\r\n    // Do walk deep.\r\n    shallow: false\r\n  }\r\n\r\n  walk(childState, element)\r\n\r\n  return childState.results[0] === element\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:lang()` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} _1\r\n *   Element.\r\n * @param {number | undefined} _2\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _3\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction lang(query, _1, _2, _3, state) {\r\n  assert(query.argument, 'expected `argument`')\r\n  assert(query.argument.type === 'String', 'expected string')\r\n\r\n  return (\r\n    state.language !== '' &&\r\n    state.language !== undefined &&\r\n    extendedFilter(state.language, commas(query.argument.value)).length > 0\r\n  )\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:last-child` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} _1\r\n *   Element.\r\n * @param {number | undefined} _2\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _3\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction lastChild(query, _1, _2, _3, state) {\r\n  assertDeep(state, query)\r\n  return Boolean(\r\n    state.elementCount && state.elementIndex === state.elementCount - 1\r\n  )\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:last-of-type` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} _1\r\n *   Element.\r\n * @param {number | undefined} _2\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _3\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction lastOfType(query, _1, _2, _3, state) {\r\n  assertDeep(state, query)\r\n  return (\r\n    typeof state.typeIndex === 'number' &&\r\n    typeof state.typeCount === 'number' &&\r\n    state.typeIndex === state.typeCount - 1\r\n  )\r\n}\r\n\r\n/**\r\n * Check whether an element does `:not` match further selectors.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} parent\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction not(query, element, index, parent, state) {\r\n  return !is(query, element, index, parent, state)\r\n}\r\n\r\n/**\r\n * Check whether an element matches an `:nth-child` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} _1\r\n *   Element.\r\n * @param {number | undefined} _2\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _3\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction nthChild(query, _1, _2, _3, state) {\r\n  const fn = getCachedNthCheck(query)\r\n  assertDeep(state, query)\r\n  return typeof state.elementIndex === 'number' && fn(state.elementIndex)\r\n}\r\n\r\n/**\r\n * Check whether an element matches an `:nth-last-child` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} _1\r\n *   Element.\r\n * @param {number | undefined} _2\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _3\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction nthLastChild(query, _1, _2, _3, state) {\r\n  const fn = getCachedNthCheck(query)\r\n  assertDeep(state, query)\r\n  return Boolean(\r\n    typeof state.elementCount === 'number' &&\r\n      typeof state.elementIndex === 'number' &&\r\n      fn(state.elementCount - state.elementIndex - 1)\r\n  )\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:nth-last-of-type` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} _1\r\n *   Element.\r\n * @param {number | undefined} _2\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _3\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction nthLastOfType(query, _1, _2, _3, state) {\r\n  const fn = getCachedNthCheck(query)\r\n  assertDeep(state, query)\r\n  return (\r\n    typeof state.typeCount === 'number' &&\r\n    typeof state.typeIndex === 'number' &&\r\n    fn(state.typeCount - 1 - state.typeIndex)\r\n  )\r\n}\r\n\r\n/**\r\n * Check whether an element matches an `:nth-of-type` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} _1\r\n *   Element.\r\n * @param {number | undefined} _2\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _3\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction nthOfType(query, _1, _2, _3, state) {\r\n  const fn = getCachedNthCheck(query)\r\n  assertDeep(state, query)\r\n  return typeof state.typeIndex === 'number' && fn(state.typeIndex)\r\n}\r\n\r\n/**\r\n * Check whether an element matches an `:only-child` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} _1\r\n *   Element.\r\n * @param {number | undefined} _2\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _3\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction onlyChild(query, _1, _2, _3, state) {\r\n  assertDeep(state, query)\r\n  return state.elementCount === 1\r\n}\r\n\r\n/**\r\n * Check whether an element matches an `:only-of-type` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} _1\r\n *   Element.\r\n * @param {number | undefined} _2\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _3\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction onlyOfType(query, _1, _2, _3, state) {\r\n  assertDeep(state, query)\r\n  return state.typeCount === 1\r\n}\r\n\r\n/**\r\n * Check whether an element matches an `:optional` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction optional(query, element) {\r\n  return !required(query, element)\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:read-only` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} parent\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction readOnly(query, element, index, parent, state) {\r\n  return !readWrite(query, element, index, parent, state)\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:read-write` pseudo.\r\n *\r\n * @param {AstPseudoClass} _\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @param {number | undefined} _1\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _2\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction readWrite(_, element, _1, _2, state) {\r\n  return element.tagName === 'input' || element.tagName === 'textarea'\r\n    ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled')\r\n    : Boolean(state.editableOrEditingHost)\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:required` pseudo.\r\n *\r\n * @param {AstPseudoClass} _\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction required(_, element) {\r\n  return (\r\n    (element.tagName === 'input' ||\r\n      element.tagName === 'textarea' ||\r\n      element.tagName === 'select') &&\r\n    hasProperty(element, 'required')\r\n  )\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:root` pseudo.\r\n *\r\n * @param {AstPseudoClass} _1\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @param {number | undefined} _2\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} parent\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction root(_1, element, _2, parent, state) {\r\n  return Boolean(\r\n    (!parent || parent.type === 'root') &&\r\n      state.schema &&\r\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\r\n      (element.tagName === 'html' || element.tagName === 'svg')\r\n  )\r\n}\r\n\r\n/**\r\n * Check whether an element matches a `:scope` pseudo.\r\n *\r\n * @param {AstPseudoClass} _1\r\n *   Query.\r\n * @param {Element} element\r\n *   Element.\r\n * @param {number | undefined} _2\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} _3\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nfunction scope(_1, element, _2, _3, state) {\r\n  return state.scopeElements.includes(element)\r\n}\r\n\r\n/**\r\n * Check children.\r\n *\r\n * @param {Element} element\r\n *   Element.\r\n * @param {(child: ElementContent) => boolean} check\r\n *   Check.\r\n * @returns {boolean}\r\n *   Whether a child of `element` matches `check`.\r\n */\r\nfunction someChildren(element, check) {\r\n  const children = element.children\r\n  let index = -1\r\n\r\n  while (++index < children.length) {\r\n    if (check(children[index])) return true\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * @param {unknown} query_\r\n *   Query-like value.\r\n * @returns {never}\r\n *   Nothing.\r\n * @throws\r\n *   Exception.\r\n */\r\nfunction unknownPseudo(query_) {\r\n  // Runtime JS guarantees it has a `name`.\r\n  const query = /** @type {AstPseudoClass} */ (query_)\r\n  throw new Error('Unknown pseudo-selector `' + query.name + '`')\r\n}\r\n", "/**\r\n * @typedef {import('css-selector-parser').AstRule} AstRule\r\n *\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Parents} Parents\r\n *\r\n * @typedef {import('./index.js').State} State\r\n */\r\n\r\nimport {attribute} from './attribute.js'\r\nimport {className} from './class-name.js'\r\nimport {id} from './id.js'\r\nimport {name} from './name.js'\r\nimport {pseudo} from './pseudo.js'\r\n\r\n/**\r\n * Test a rule.\r\n *\r\n * @param {AstRule} query\r\n *   AST rule (with `pseudoClasses`).\r\n * @param {Element} element\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of `element` in `parent`.\r\n * @param {Parents | undefined} parent\r\n *   Parent of `element`.\r\n * @param {State} state\r\n *   State.\r\n * @returns {boolean}\r\n *   Whether `element` matches `query`.\r\n */\r\nexport function test(query, element, index, parent, state) {\r\n  for (const item of query.items) {\r\n    // eslint-disable-next-line unicorn/prefer-switch\r\n    if (item.type === 'Attribute') {\r\n      if (!attribute(item, element, state.schema)) return false\r\n    } else if (item.type === 'Id') {\r\n      if (!id(item, element)) return false\r\n    } else if (item.type === 'ClassName') {\r\n      if (!className(item, element)) return false\r\n    } else if (item.type === 'PseudoClass') {\r\n      if (!pseudo(item, element, index, parent, state)) return false\r\n    } else if (item.type === 'PseudoElement') {\r\n      throw new Error('Invalid selector: `::' + item.name + '`')\r\n    } else if (item.type === 'TagName') {\r\n      if (!name(item, element)) return false\r\n    } else {\r\n      // Otherwise `item.type` is `WildcardTag`, which matches.\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n", "/**\r\n * @typedef {import('css-selector-parser').AstRule} AstRule\r\n *\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Nodes} Nodes\r\n * @typedef {import('hast').Parents} Parents\r\n *\r\n * @typedef {import('./index.js').State} State\r\n */\r\n\r\n/**\r\n * @typedef Counts\r\n *   Info on elements in a parent.\r\n * @property {number} count\r\n *   Number of elements.\r\n * @property {Map<string, number>} types\r\n *   Number of elements by tag name.\r\n *\r\n * @typedef Nest\r\n *   Rule sets by nesting.\r\n * @property {Array<AstRule> | undefined} adjacentSibling\r\n *   `a + b`\r\n * @property {Array<AstRule> | undefined} descendant\r\n *   `a b`\r\n * @property {Array<AstRule> | undefined} directChild\r\n *   `a > b`\r\n * @property {Array<AstRule> | undefined} generalSibling\r\n *   `a ~ b`\r\n */\r\n\r\nimport {enterState} from './enter-state.js'\r\nimport {test} from './test.js'\r\n\r\n/** @type {Array<never>} */\r\nconst empty = []\r\n\r\n/**\r\n * Walk a tree.\r\n *\r\n * @param {State} state\r\n *   State.\r\n * @param {Nodes | undefined} tree\r\n *   Tree.\r\n */\r\nexport function walk(state, tree) {\r\n  if (tree) {\r\n    one(state, [], tree, undefined, undefined, tree)\r\n  }\r\n}\r\n\r\n/**\r\n * Add a rule to a nesting map.\r\n *\r\n * @param {Nest} nest\r\n *   Nesting.\r\n * @param {keyof Nest} field\r\n *   Field.\r\n * @param {AstRule} rule\r\n *   Rule.\r\n */\r\nfunction add(nest, field, rule) {\r\n  const list = nest[field]\r\n  if (list) {\r\n    list.push(rule)\r\n  } else {\r\n    nest[field] = [rule]\r\n  }\r\n}\r\n\r\n/**\r\n * Check in a parent.\r\n *\r\n * @param {State} state\r\n *   State.\r\n * @param {Nest} nest\r\n *   Nesting.\r\n * @param {Parents} node\r\n *   Parent.\r\n * @param {Nodes} tree\r\n *   Tree.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction all(state, nest, node, tree) {\r\n  const fromParent = combine(nest.descendant, nest.directChild)\r\n  /** @type {Array<AstRule> | undefined} */\r\n  let fromSibling\r\n  let index = -1\r\n  /**\r\n   * Total counts.\r\n   * @type {Counts}\r\n   */\r\n  const total = {count: 0, types: new Map()}\r\n  /**\r\n   * Counts of previous siblings.\r\n   * @type {Counts}\r\n   */\r\n  const before = {count: 0, types: new Map()}\r\n\r\n  while (++index < node.children.length) {\r\n    count(total, node.children[index])\r\n  }\r\n\r\n  index = -1\r\n\r\n  while (++index < node.children.length) {\r\n    const child = node.children[index]\r\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\r\n    // Normalize because HTML is insensitive.\r\n    const name =\r\n      child.type === 'element' ? child.tagName.toUpperCase() : undefined\r\n    // Before counting further elements:\r\n    state.elementIndex = before.count\r\n    state.typeIndex = name ? before.types.get(name) || 0 : 0\r\n    // After counting all elements.\r\n    state.elementCount = total.count\r\n    state.typeCount = name ? total.types.get(name) : 0\r\n\r\n    // Only apply if this is a parent, this should be an element, but we check\r\n    // for parents so that we delve into custom nodes too.\r\n    if ('children' in child) {\r\n      const forSibling = combine(fromParent, fromSibling)\r\n      const nest = one(\r\n        state,\r\n        forSibling,\r\n        node.children[index],\r\n        index,\r\n        node,\r\n        tree\r\n      )\r\n      fromSibling = combine(nest.generalSibling, nest.adjacentSibling)\r\n    }\r\n\r\n    // We found one thing, and one is enough.\r\n    if (state.one && state.found) {\r\n      break\r\n    }\r\n\r\n    count(before, node.children[index])\r\n  }\r\n}\r\n\r\n/**\r\n * Apply selectors to an element.\r\n *\r\n * @param {State} state\r\n *   Current state.\r\n * @param {Array<AstRule>} rules\r\n *   Rules to apply.\r\n * @param {Element} node\r\n *   Element to apply rules to.\r\n * @param {number | undefined} index\r\n *   Index of `node` in `parent`.\r\n * @param {Parents | undefined} parent\r\n *   Parent of `node`.\r\n * @returns {Nest}\r\n *   Further rules.\r\n */\r\nfunction applySelectors(state, rules, node, index, parent) {\r\n  /** @type {Nest} */\r\n  const nestResult = {\r\n    adjacentSibling: undefined,\r\n    descendant: undefined,\r\n    directChild: undefined,\r\n    generalSibling: undefined\r\n  }\r\n  let selectorIndex = -1\r\n\r\n  while (++selectorIndex < rules.length) {\r\n    const rule = rules[selectorIndex]\r\n\r\n    // We found one thing, and one is enough.\r\n    if (state.one && state.found) {\r\n      break\r\n    }\r\n\r\n    // When shallow, we don’t allow nested rules.\r\n    // Idea: we could allow a stack of parents?\r\n    // Might get quite complex though.\r\n    if (state.shallow && rule.nestedRule) {\r\n      throw new Error('Expected selector without nesting')\r\n    }\r\n\r\n    // If this rule matches:\r\n    if (test(rule, node, index, parent, state)) {\r\n      const nest = rule.nestedRule\r\n\r\n      // Are there more?\r\n      if (nest) {\r\n        /** @type {keyof Nest} */\r\n        const label =\r\n          nest.combinator === '+'\r\n            ? 'adjacentSibling'\r\n            : nest.combinator === '~'\r\n            ? 'generalSibling'\r\n            : nest.combinator === '>'\r\n            ? 'directChild'\r\n            : 'descendant'\r\n        add(nestResult, label, nest)\r\n      } else {\r\n        // We have a match!\r\n        state.found = true\r\n\r\n        if (!state.results.includes(node)) {\r\n          state.results.push(node)\r\n        }\r\n      }\r\n    }\r\n\r\n    // Descendant.\r\n    if (rule.combinator === undefined) {\r\n      add(nestResult, 'descendant', rule)\r\n    }\r\n    // Adjacent.\r\n    else if (rule.combinator === '~') {\r\n      add(nestResult, 'generalSibling', rule)\r\n    }\r\n    // Drop direct child (`>`), adjacent sibling (`+`).\r\n  }\r\n\r\n  return nestResult\r\n}\r\n\r\n/**\r\n * Combine two lists, if needed.\r\n *\r\n * This is optimized to create as few lists as possible.\r\n *\r\n * @param {Array<AstRule> | undefined} left\r\n *   Rules.\r\n * @param {Array<AstRule> | undefined} right\r\n *   Rules.\r\n * @returns {Array<AstRule>}\r\n *   Rules.\r\n */\r\nfunction combine(left, right) {\r\n  return left && right && left.length > 0 && right.length > 0\r\n    ? [...left, ...right]\r\n    : left && left.length > 0\r\n    ? left\r\n    : right && right.length > 0\r\n    ? right\r\n    : empty\r\n}\r\n\r\n/**\r\n * Count a node.\r\n *\r\n * @param {Counts} counts\r\n *   Counts.\r\n * @param {Nodes} node\r\n *   Node (we’re looking for elements).\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction count(counts, node) {\r\n  if (node.type === 'element') {\r\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\r\n    // Normalize because HTML is insensitive.\r\n    const name = node.tagName.toUpperCase()\r\n    const count = (counts.types.get(name) || 0) + 1\r\n    counts.count++\r\n    counts.types.set(name, count)\r\n  }\r\n}\r\n\r\n/**\r\n * Check a node.\r\n *\r\n * @param {State} state\r\n *   State.\r\n * @param {Array<AstRule>} currentRules\r\n *   Rules.\r\n * @param {Nodes} node\r\n *   Node.\r\n * @param {number | undefined} index\r\n *   Index of `node` in `parent`.\r\n * @param {Parents | undefined} parent\r\n *   Parent of `node`.\r\n * @param {Nodes} tree\r\n *   Tree.\r\n * @returns {Nest}\r\n *   Nesting.\r\n */\r\nfunction one(state, currentRules, node, index, parent, tree) {\r\n  /** @type {Nest} */\r\n  let nestResult = {\r\n    adjacentSibling: undefined,\r\n    descendant: undefined,\r\n    directChild: undefined,\r\n    generalSibling: undefined\r\n  }\r\n\r\n  const exit = enterState(state, node)\r\n\r\n  if (node.type === 'element') {\r\n    let rootRules = state.rootQuery.rules\r\n\r\n    // Remove direct child rules if this is the root.\r\n    // This only happens for a `:has()` rule, which can be like\r\n    // `a:has(> b)`.\r\n    if (parent && parent !== tree) {\r\n      rootRules = state.rootQuery.rules.filter(\r\n        (d) =>\r\n          d.combinator === undefined ||\r\n          (d.combinator === '>' && parent === tree)\r\n      )\r\n    }\r\n\r\n    nestResult = applySelectors(\r\n      state,\r\n      // Try the root rules for this element too.\r\n      combine(currentRules, rootRules),\r\n      node,\r\n      index,\r\n      parent\r\n    )\r\n  }\r\n\r\n  // If this is a parent, and we want to delve into them, and we haven’t found\r\n  // our single result yet.\r\n  if ('children' in node && !state.shallow && !(state.one && state.found)) {\r\n    all(state, nestResult, node, tree)\r\n  }\r\n\r\n  exit()\r\n\r\n  return nestResult\r\n}\r\n", "/**\r\n * @typedef {import('css-selector-parser').AstSelector} AstSelector\r\n *\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Nodes} Nodes\r\n * @typedef {import('hast').RootContent} RootContent\r\n *\r\n * @typedef {import('property-information').Schema} Schema\r\n */\r\n\r\n/**\r\n * @typedef {'html' | 'svg'} Space\r\n *   Name of namespace.\r\n *\r\n * @typedef {'auto' | 'ltr' | 'rtl'} Direction\r\n *   Direction.\r\n *\r\n * @typedef State\r\n *   Current state.\r\n * @property {Direction} direction\r\n *   Current direction.\r\n * @property {boolean} editableOrEditingHost\r\n *   Whether we’re in `contentEditable`.\r\n * @property {number | undefined} elementCount\r\n *   Track siblings: there are `n` siblings.\r\n * @property {number | undefined} elementIndex\r\n *   Track siblings: this current element has `n` elements before it.\r\n * @property {boolean} found\r\n *   Whether we found at least one match.\r\n * @property {string | undefined} language\r\n *   Current language.\r\n * @property {boolean} one\r\n *   Whether we can stop looking after we found one element.\r\n * @property {Array<Element>} results\r\n *   Matches.\r\n * @property {AstSelector} rootQuery\r\n *   Original root selectors.\r\n * @property {Schema} schema\r\n *   Current schema.\r\n * @property {Array<RootContent>} scopeElements\r\n *   Elements in scope.\r\n * @property {boolean} shallow\r\n *   Whether we only allow selectors without nesting.\r\n * @property {number | undefined} typeCount\r\n *   Track siblings: there are `n` siblings with this element’s tag name.\r\n * @property {number | undefined} typeIndex\r\n *   Track siblings: this current element has `n` elements with its tag name\r\n *   before it.\r\n */\r\n\r\nimport {html, svg} from 'property-information'\r\nimport {parse} from './parse.js'\r\nimport {walk} from './walk.js'\r\n\r\n/**\r\n * Check that the given `node` matches `selector`.\r\n *\r\n * This only checks the element itself, not the surrounding tree.\r\n * Thus, nesting in selectors is not supported (`p b`, `p > b`), neither are\r\n * selectors like `:first-child`, etc.\r\n * This only checks that the given element matches the selector.\r\n *\r\n * @param {string} selector\r\n *   CSS selector, such as (`h1`, `a, b`).\r\n * @param {Nodes | null | undefined} [node]\r\n *   Node that might match `selector`, should be an element (optional).\r\n * @param {Space | null | undefined} [space='html']\r\n *   Name of namespace (default: `'html'`).\r\n * @returns {boolean}\r\n *   Whether `node` matches `selector`.\r\n */\r\nexport function matches(selector, node, space) {\r\n  const state = createState(selector, node, space)\r\n  state.one = true\r\n  state.shallow = true\r\n  walk(state, node || undefined)\r\n  return state.results.length > 0\r\n}\r\n\r\n/**\r\n * Select the first element that matches `selector` in the given `tree`.\r\n * Searches the tree in *preorder*.\r\n *\r\n * @param {string} selector\r\n *   CSS selector, such as (`h1`, `a, b`).\r\n * @param {Nodes | null | undefined} [tree]\r\n *   Tree to search (optional).\r\n * @param {Space | null | undefined} [space='html']\r\n *   Name of namespace (default: `'html'`).\r\n * @returns {Element | undefined}\r\n *   First element in `tree` that matches `selector` or `undefined` if nothing\r\n *   is found; this could be `tree` itself.\r\n */\r\nexport function select(selector, tree, space) {\r\n  const state = createState(selector, tree, space)\r\n  state.one = true\r\n  walk(state, tree || undefined)\r\n  return state.results[0]\r\n}\r\n\r\n/**\r\n * Select all elements that match `selector` in the given `tree`.\r\n * Searches the tree in *preorder*.\r\n *\r\n * @param {string} selector\r\n *   CSS selector, such as (`h1`, `a, b`).\r\n * @param {Nodes | null | undefined} [tree]\r\n *   Tree to search (optional).\r\n * @param {Space | null | undefined} [space='html']\r\n *   Name of namespace (default: `'html'`).\r\n * @returns {Array<Element>}\r\n *   Elements in `tree` that match `selector`.\r\n *   This could include `tree` itself.\r\n */\r\nexport function selectAll(selector, tree, space) {\r\n  const state = createState(selector, tree, space)\r\n  walk(state, tree || undefined)\r\n  return state.results\r\n}\r\n\r\n/**\r\n * @param {string} selector\r\n *   CSS selector, such as (`h1`, `a, b`).\r\n * @param {Nodes | null | undefined} [tree]\r\n *   Tree to search (optional).\r\n * @param {Space | null | undefined} [space='html']\r\n *   Name of namespace (default: `'html'`).\r\n * @returns {State} State\r\n *   State.\r\n */\r\nfunction createState(selector, tree, space) {\r\n  return {\r\n    direction: 'ltr',\r\n    editableOrEditingHost: false,\r\n    elementCount: undefined,\r\n    elementIndex: undefined,\r\n    found: false,\r\n    language: undefined,\r\n    one: false,\r\n    // State of the query.\r\n    results: [],\r\n    rootQuery: parse(selector),\r\n    schema: space === 'svg' ? svg : html,\r\n    scopeElements: tree ? (tree.type === 'root' ? tree.children : [tree]) : [],\r\n    shallow: false,\r\n    typeIndex: undefined,\r\n    typeCount: undefined\r\n  }\r\n}\r\n", "import { Plugin } from 'unified';\r\nimport { Root, Element, ElementContent, RootContent } from 'hast';\r\nimport { visit } from 'unist-util-visit';\r\nimport { selectAll } from 'hast-util-select';\r\nimport { Test } from 'unist-util-is';\r\n\r\n/** Get the node tree source code string */\r\nexport const getCodeString = (data: ElementContent[] = [], code: string = '') => {\r\n  data.forEach((node) => {\r\n    if (node.type === 'text') {\r\n      code += node.value;\r\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\r\n      code += getCodeString(node.children);\r\n    }\r\n  });\r\n  return code;\r\n};\r\n\r\nexport type RehypeRewriteOptions = {\r\n  /**\r\n   * Select an element to be wrapped. Expects a string selector that can be passed to hast-util-select ([supported selectors](https://github.com/syntax-tree/hast-util-select/blob/master/readme.md#support)).\r\n   * If `selector` is not set then wrap will check for a body all elements.\r\n   */\r\n  selector?: string;\r\n  /** Rewrite Element. */\r\n  rewrite(node: Root | RootContent, index?: number, parent?: Root | Element): void;\r\n}\r\n\r\nconst remarkRewrite: Plugin<[RehypeRewriteOptions?], Root> = (options) => {\r\n  const { selector, rewrite } = options || {};\r\n  return (tree) => {\r\n    if (!rewrite || typeof rewrite !== 'function') return;\r\n    if (selector && typeof selector === 'string') {\r\n      const selected = selectAll(selector, tree);\r\n      if (selected && selected.length > 0) {\r\n        visit(tree, selected as unknown as Test, (node: Element, index, parent) => {\r\n          rewrite(node, index, parent);\r\n        });\r\n      }\r\n      return;\r\n    }\r\n\r\n    visit(tree, (node: Root | RootContent, index, parent) => {\r\n      rewrite(node, index, parent);\r\n    });\r\n  }\r\n}\r\n\r\nexport default remarkRewrite;\r\n", "import type { Element, Comment, Literal, ElementContent, RootContent, Properties } from 'hast';\r\nimport type { RehypeAttrsOptions } from './index.js';\r\n\r\nexport const getURLParameters = (url: string = '') =>\r\n  ((url.match(/([^?=&]+)(=([^&]*))/g) || []) as string[]).reduce(\r\n      (a: Record<string, string | number | boolean>, v: string) => (\r\n        (a[v.slice(0, v.indexOf('=')) as keyof typeof a] = v.slice(v.indexOf('=') + 1)), a\r\n      ),\r\n      {}\r\n    )\r\n\r\nexport const prevChild = (data: Literal[] = [], index: number): Comment | undefined => {\r\n  let i = index;\r\n  while (i > -1) {\r\n    i--;\r\n    if (!data[i]) return\r\n    if ((data[i] && data[i].value && (data[i].value as string).replace(/(\\n|\\s)/g, '') !== '') || data[i].type !== 'text') {\r\n      if (!/^rehype:/.test(data[i].value as string) || (data[i].type as string) !== 'comment') return;\r\n      return data[i] as unknown as Comment;\r\n    }\r\n  }\r\n  return;\r\n}\r\n\r\nexport const nextChild = (data: RootContent[] | ElementContent[] = [], index: number, tagName?: string, codeBlockParames?: boolean): ElementContent | undefined => {\r\n  let i = index;\r\n  while (i < data.length) {\r\n    i++;\r\n    if (tagName) {\r\n      const element = data[i] as Literal & Element;\r\n      if (element && element.value && (element.value as string).replace(/(\\n|\\s)/g, '') !== '' || data[i] && (data[i].type as string) === 'element') {\r\n        return element.tagName === tagName ? element : undefined\r\n      }\r\n    } else {\r\n      const element = data[i] as ElementContent & Literal;\r\n      if (!element || element.type === 'element') return;\r\n      if (element.type === 'text' && element.value.replace(/(\\n|\\s)/g, '') !== '') return;\r\n      if (element.type && /^(comment|raw)$/ig.test(element.type)) {\r\n        if (element.value && !/^rehype:/.test(element.value.replace(/^(\\s+)?<!--(.*?)-->/, '$2') || '')) {\r\n          return\r\n        };\r\n        if (codeBlockParames) {\r\n          const nextNode = nextChild(data, i, 'pre', codeBlockParames)\r\n          if (nextNode) return;\r\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\r\n          return element;\r\n        } else {\r\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\r\n          return element;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return\r\n}\r\n\r\n/**\r\n * 获取代码注视的位置\r\n * @param data 数据\r\n * @param index 当前数据所在的位置\r\n * @returns 返回 当前参数数据 Object，`{}`\r\n */\r\nexport const getCommentObject = ({ value = '' }: Comment): Properties => {\r\n  const param = getURLParameters(value.replace(/^<!--(.*?)-->/, '$1').replace(/^rehype:/, ''));\r\n  Object.keys(param).forEach((keyName: string) => {\r\n    if (param[keyName] === 'true') {\r\n      param[keyName] = true;\r\n    }\r\n    if (param[keyName] === 'false') {\r\n      param[keyName] = false;\r\n    }\r\n    if (typeof param[keyName] === 'string' && !/^0/.test(param[keyName] as string) && !isNaN(+param[keyName])) {\r\n      param[keyName] = +param[keyName];\r\n    }\r\n  })\r\n  return param;\r\n}\r\n\r\nexport type DataConfig = {\r\n  'data-config': Properties\r\n}\r\n\r\nexport const propertiesHandle = (defaultAttrs?: Properties | null, attrs?: Properties, type?: RehypeAttrsOptions['properties']): Properties | DataConfig => {\r\n  if (type === 'string') {\r\n    return { ...defaultAttrs, 'data-config': JSON.stringify({ ...attrs, rehyp: true })}\r\n  } else if (type === 'attr') {\r\n    return { ...defaultAttrs, ...attrs}\r\n  }\r\n  return { ...defaultAttrs, 'data-config': { ...attrs, rehyp: true }}\r\n}", "import type { Plugin } from 'unified';\r\nimport type { Root, Element, Comment, Properties, Literal } from 'hast';\r\nimport { visit } from 'unist-util-visit';\r\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils.js';\r\n\r\nexport type RehypeAttrsOptions = {\r\n  /**\r\n   * ## `data`\r\n   * \r\n   * ```markdown\r\n   * text\r\n   * <!--rehype:title=Rehype Attrs&abc=2-->\r\n   * ```\r\n   * 👇👇👇👇👇\r\n   * ```html\r\n   * <p data-config=\"data-config='[object Object]'\">text</p>\r\n   * ```\r\n   * \r\n   * ## `string`\r\n   * \r\n   * ```markdown\r\n   * text\r\n   * <!--rehype:title=Rehype Attrs-->\r\n   * ```\r\n   * \r\n   * 👇👇👇👇👇\r\n   * \r\n   * ```html\r\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\r\n   * ```\r\n   * \r\n   * ## attr\r\n   * \r\n   * ```markdown\r\n   * text\r\n   * <!--rehype:title=Rehype Attrs-->\r\n   * ```\r\n   * 👇👇👇👇👇\r\n   * ```html\r\n   * <p title=\"Rehype Attrs\">text</p>\r\n   * ```\r\n   * @default `data`\r\n   */\r\n  properties?: 'data' | 'string' | 'attr';\r\n  /**\r\n   * Code block passing parameters\r\n   */\r\n  codeBlockParames?: boolean;\r\n}\r\n\r\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options = {}) => {\r\n  const { properties = 'data', codeBlockParames = true } = options;\r\n  return (tree) => {\r\n    visit(tree, 'element', (node, index, parent) => {\r\n      if (codeBlockParames && node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\r\n        const firstChild = node.children[0] as Element;\r\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\r\n          const child = prevChild(parent.children as Literal[], index);\r\n          if (child) {\r\n            const attr = getCommentObject(child);\r\n            if (Object.keys(attr).length > 0) {\r\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\r\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, properties) as Properties\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\r\n        const child = nextChild(parent.children, index, '', codeBlockParames)\r\n        if (child) {\r\n          const attr = getCommentObject(child as Comment)\r\n          if (Object.keys(attr).length > 0) {\r\n            node.properties = propertiesHandle(node.properties, attr, properties) as Properties\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default rehypeAttrs\r\n", "/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Properties} Properties\r\n */\r\n\r\n/**\r\n * @template {string} SimpleSelector\r\n *   Selector type.\r\n * @template {string} DefaultTagName\r\n *   Default tag name.\r\n * @typedef {(\r\n *   SimpleSelector extends ''\r\n *     ? DefaultTagName\r\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\r\n *     ? ExtractTagName<TagName, DefaultTagName>\r\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\r\n *     ? ExtractTagName<TagName, DefaultTagName>\r\n *     : SimpleSelector extends string\r\n *     ? SimpleSelector\r\n *     : DefaultTagName\r\n * )} ExtractTagName\r\n *   Extract tag name from a simple selector.\r\n */\r\n\r\nconst search = /[#.]/g\r\n\r\n/**\r\n * Create a hast element from a simple CSS selector.\r\n *\r\n * @template {string} Selector\r\n *   Type of selector.\r\n * @template {string} [DefaultTagName='div']\r\n *   Type of default tag name (default: `'div'`).\r\n * @param {Selector | null | undefined} [selector]\r\n *   Simple CSS selector (optional).\r\n *\r\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\r\n *   Multiple classes are allowed.\r\n *   Uses the last ID if multiple IDs are found.\r\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\r\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\r\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\r\n *   Built element.\r\n */\r\nexport function parseSelector(selector, defaultTagName) {\r\n  const value = selector || ''\r\n  /** @type {Properties} */\r\n  const props = {}\r\n  let start = 0\r\n  /** @type {string | undefined} */\r\n  let previous\r\n  /** @type {string | undefined} */\r\n  let tagName\r\n\r\n  while (start < value.length) {\r\n    search.lastIndex = start\r\n    const match = search.exec(value)\r\n    const subvalue = value.slice(start, match ? match.index : value.length)\r\n\r\n    if (subvalue) {\r\n      if (!previous) {\r\n        tagName = subvalue\r\n      } else if (previous === '#') {\r\n        props.id = subvalue\r\n      } else if (Array.isArray(props.className)) {\r\n        props.className.push(subvalue)\r\n      } else {\r\n        props.className = [subvalue]\r\n      }\r\n\r\n      start += subvalue.length\r\n    }\r\n\r\n    if (match) {\r\n      previous = match[0]\r\n      start++\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: 'element',\r\n    // @ts-expect-error: tag name is parsed.\r\n    tagName: tagName || defaultTagName || 'div',\r\n    properties: props,\r\n    children: []\r\n  }\r\n}\r\n", "/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Nodes} Nodes\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').RootContent} RootContent\r\n *\r\n * @typedef {import('property-information').Info} Info\r\n * @typedef {import('property-information').Schema} Schema\r\n */\r\n\r\n/**\r\n * @typedef {Element | Root} Result\r\n *   Result from a `h` (or `s`) call.\r\n *\r\n * @typedef {number | string} StyleValue\r\n *   Value for a CSS style field.\r\n * @typedef {Record<string, StyleValue>} Style\r\n *   Supported value of a `style` prop.\r\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\r\n *   Primitive property value.\r\n * @typedef {Array<number | string>} ArrayValue\r\n *   List of property values for space- or comma separated values (such as `className`).\r\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\r\n *   Primitive value or list value.\r\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\r\n *   Acceptable value for element properties.\r\n *\r\n * @typedef {number | string | null | undefined} PrimitiveChild\r\n *   Primitive children, either ignored (nullish), or turned into text nodes.\r\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\r\n *   List of children.\r\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\r\n *   List of children (deep).\r\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\r\n *   Acceptable child value.\r\n */\r\n\r\nimport {parse as commas} from 'comma-separated-tokens'\r\nimport {parseSelector} from 'hast-util-parse-selector'\r\nimport {find, normalize} from 'property-information'\r\nimport {parse as spaces} from 'space-separated-tokens'\r\n\r\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * @param {Schema} schema\r\n *   Schema to use.\r\n * @param {string} defaultTagName\r\n *   Default tag name.\r\n * @param {Array<string> | undefined} [caseSensitive]\r\n *   Case-sensitive tag names (default: `undefined`).\r\n * @returns\r\n *   `h`.\r\n */\r\nexport function createH(schema, defaultTagName, caseSensitive) {\r\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\r\n\r\n  /**\r\n   * Hyperscript compatible DSL for creating virtual hast trees.\r\n   *\r\n   * @overload\r\n   * @param {null | undefined} [selector]\r\n   * @param {...Child} children\r\n   * @returns {Root}\r\n   *\r\n   * @overload\r\n   * @param {string} selector\r\n   * @param {Properties} properties\r\n   * @param {...Child} children\r\n   * @returns {Element}\r\n   *\r\n   * @overload\r\n   * @param {string} selector\r\n   * @param {...Child} children\r\n   * @returns {Element}\r\n   *\r\n   * @param {string | null | undefined} [selector]\r\n   *   Selector.\r\n   * @param {Child | Properties | null | undefined} [properties]\r\n   *   Properties (or first child) (default: `undefined`).\r\n   * @param {...Child} children\r\n   *   Children.\r\n   * @returns {Result}\r\n   *   Result.\r\n   */\r\n  function h(selector, properties, ...children) {\r\n    let index = -1\r\n    /** @type {Result} */\r\n    let node\r\n\r\n    if (selector === undefined || selector === null) {\r\n      node = {type: 'root', children: []}\r\n      // Properties are not supported for roots.\r\n      const child = /** @type {Child} */ (properties)\r\n      children.unshift(child)\r\n    } else {\r\n      node = parseSelector(selector, defaultTagName)\r\n      // Normalize the name.\r\n      node.tagName = node.tagName.toLowerCase()\r\n      if (adjust && own.call(adjust, node.tagName)) {\r\n        node.tagName = adjust[node.tagName]\r\n      }\r\n\r\n      // Handle props.\r\n      if (isProperties(properties, node.tagName)) {\r\n        /** @type {string} */\r\n        let key\r\n\r\n        for (key in properties) {\r\n          if (own.call(properties, key)) {\r\n            addProperty(schema, node.properties, key, properties[key])\r\n          }\r\n        }\r\n      } else {\r\n        children.unshift(properties)\r\n      }\r\n    }\r\n\r\n    // Handle children.\r\n    while (++index < children.length) {\r\n      addChild(node.children, children[index])\r\n    }\r\n\r\n    if (node.type === 'element' && node.tagName === 'template') {\r\n      node.content = {type: 'root', children: node.children}\r\n      node.children = []\r\n    }\r\n\r\n    return node\r\n  }\r\n\r\n  return h\r\n}\r\n\r\n/**\r\n * Check if something is properties or a child.\r\n *\r\n * @param {Child | Properties} value\r\n *   Value to check.\r\n * @param {string} name\r\n *   Tag name.\r\n * @returns {value is Properties}\r\n *   Whether `value` is a properties object.\r\n */\r\nfunction isProperties(value, name) {\r\n  if (\r\n    value === null ||\r\n    value === undefined ||\r\n    typeof value !== 'object' ||\r\n    Array.isArray(value)\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\r\n    return true\r\n  }\r\n\r\n  if ('children' in value && Array.isArray(value.children)) {\r\n    return false\r\n  }\r\n\r\n  if (name === 'button') {\r\n    return buttonTypes.has(value.type.toLowerCase())\r\n  }\r\n\r\n  return !('value' in value)\r\n}\r\n\r\n/**\r\n * @param {Schema} schema\r\n *   Schema.\r\n * @param {Properties} properties\r\n *   Properties object.\r\n * @param {string} key\r\n *   Property name.\r\n * @param {PropertyValue | Style} value\r\n *   Property value.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction addProperty(schema, properties, key, value) {\r\n  const info = find(schema, key)\r\n  let index = -1\r\n  /** @type {PropertyValue} */\r\n  let result\r\n\r\n  // Ignore nullish and NaN values.\r\n  if (value === undefined || value === null) return\r\n\r\n  if (typeof value === 'number') {\r\n    // Ignore NaN.\r\n    if (Number.isNaN(value)) return\r\n\r\n    result = value\r\n  }\r\n  // Booleans.\r\n  else if (typeof value === 'boolean') {\r\n    result = value\r\n  }\r\n  // Handle list values.\r\n  else if (typeof value === 'string') {\r\n    if (info.spaceSeparated) {\r\n      result = spaces(value)\r\n    } else if (info.commaSeparated) {\r\n      result = commas(value)\r\n    } else if (info.commaOrSpaceSeparated) {\r\n      result = spaces(commas(value).join(' '))\r\n    } else {\r\n      result = parsePrimitive(info, info.property, value)\r\n    }\r\n  } else if (Array.isArray(value)) {\r\n    result = value.concat()\r\n  } else {\r\n    result = info.property === 'style' ? style(value) : String(value)\r\n  }\r\n\r\n  if (Array.isArray(result)) {\r\n    /** @type {Array<number | string>} */\r\n    const finalResult = []\r\n\r\n    while (++index < result.length) {\r\n      // Assume no booleans in array.\r\n      const value = /** @type {number | string} */ (\r\n        parsePrimitive(info, info.property, result[index])\r\n      )\r\n      finalResult[index] = value\r\n    }\r\n\r\n    result = finalResult\r\n  }\r\n\r\n  // Class names (which can be added both on the `selector` and here).\r\n  if (info.property === 'className' && Array.isArray(properties.className)) {\r\n    // Assume no booleans in `className`.\r\n    const value = /** @type {number | string} */ (result)\r\n    result = properties.className.concat(value)\r\n  }\r\n\r\n  properties[info.property] = result\r\n}\r\n\r\n/**\r\n * @param {Array<RootContent>} nodes\r\n *   Children.\r\n * @param {Child} value\r\n *   Child.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction addChild(nodes, value) {\r\n  let index = -1\r\n\r\n  if (value === undefined || value === null) {\r\n    // Empty.\r\n  } else if (typeof value === 'string' || typeof value === 'number') {\r\n    nodes.push({type: 'text', value: String(value)})\r\n  } else if (Array.isArray(value)) {\r\n    while (++index < value.length) {\r\n      addChild(nodes, value[index])\r\n    }\r\n  } else if (typeof value === 'object' && 'type' in value) {\r\n    if (value.type === 'root') {\r\n      addChild(nodes, value.children)\r\n    } else {\r\n      nodes.push(value)\r\n    }\r\n  } else {\r\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a single primitives.\r\n *\r\n * @param {Info} info\r\n *   Property information.\r\n * @param {string} name\r\n *   Property name.\r\n * @param {PrimitiveValue} value\r\n *   Property value.\r\n * @returns {PrimitiveValue}\r\n *   Property value.\r\n */\r\nfunction parsePrimitive(info, name, value) {\r\n  if (typeof value === 'string') {\r\n    if (info.number && value && !Number.isNaN(Number(value))) {\r\n      return Number(value)\r\n    }\r\n\r\n    if (\r\n      (info.boolean || info.overloadedBoolean) &&\r\n      (value === '' || normalize(value) === normalize(name))\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return value\r\n}\r\n\r\n/**\r\n * Serialize a `style` object as a string.\r\n *\r\n * @param {Style} value\r\n *   Style object.\r\n * @returns {string}\r\n *   CSS string.\r\n */\r\nfunction style(value) {\r\n  /** @type {Array<string>} */\r\n  const result = []\r\n  /** @type {string} */\r\n  let key\r\n\r\n  for (key in value) {\r\n    if (own.call(value, key)) {\r\n      result.push([key, value[key]].join(': '))\r\n    }\r\n  }\r\n\r\n  return result.join('; ')\r\n}\r\n\r\n/**\r\n * Create a map to adjust casing.\r\n *\r\n * @param {Array<string>} values\r\n *   List of properly cased keys.\r\n * @returns {Record<string, string>}\r\n *   Map of lowercase keys to uppercase keys.\r\n */\r\nfunction createAdjustMap(values) {\r\n  /** @type {Record<string, string>} */\r\n  const result = {}\r\n  let index = -1\r\n\r\n  while (++index < values.length) {\r\n    result[values[index].toLowerCase()] = values[index]\r\n  }\r\n\r\n  return result\r\n}\r\n", "export const svgCaseSensitiveTagNames = [\r\n  'altGlyph',\r\n  'altGlyphDef',\r\n  'altGlyphItem',\r\n  'animateColor',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'clipPath',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'foreignObject',\r\n  'glyphRef',\r\n  'linearGradient',\r\n  'radialGradient',\r\n  'solidColor',\r\n  'textArea',\r\n  'textPath'\r\n]\r\n", "/**\r\n * @typedef {import('./create-h.js').Child} Child\r\n *   Acceptable child value.\r\n * @typedef {import('./create-h.js').Properties} Properties\r\n *   Acceptable value for element properties.\r\n * @typedef {import('./create-h.js').Result} Result\r\n *   Result from a `h` (or `s`) call.\r\n */\r\n\r\n// Register the JSX namespace on `h`.\r\n/**\r\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\r\n */\r\n\r\n// Register the JSX namespace on `s`.\r\n/**\r\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\r\n */\r\n\r\nimport {html, svg} from 'property-information'\r\nimport {createH} from './create-h.js'\r\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\r\n\r\n// Note: this explicit type is needed, otherwise TS creates broken types.\r\n/** @type {ReturnType<createH>} */\r\nexport const h = createH(html, 'div')\r\n\r\n// Note: this explicit type is needed, otherwise TS creates broken types.\r\n/** @type {ReturnType<createH>} */\r\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\r\n", "/**\r\n * @import {VFile, Value} from 'vfile'\r\n * @import {Location} from 'vfile-location'\r\n */\r\n\r\n/**\r\n * Create an index of the given document to translate between line/column and\r\n * offset based positional info.\r\n *\r\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\r\n *\r\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\r\n *\r\n * @param {VFile | Value} file\r\n *   File to index.\r\n * @returns {Location}\r\n *   Accessors for index.\r\n */\r\nexport function location(file) {\r\n  const value = String(file)\r\n  /**\r\n   * List, where each index is a line number (0-based), and each value is the\r\n   * byte index *after* where the line ends.\r\n   *\r\n   * @type {Array<number>}\r\n   */\r\n  const indices = []\r\n\r\n  return {toOffset, toPoint}\r\n\r\n  /** @type {Location['toPoint']} */\r\n  function toPoint(offset) {\r\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\r\n      let index = 0\r\n\r\n      while (true) {\r\n        let end = indices[index]\r\n\r\n        if (end === undefined) {\r\n          const eol = next(value, indices[index - 1])\r\n          end = eol === -1 ? value.length + 1 : eol + 1\r\n          indices[index] = end\r\n        }\r\n\r\n        if (end > offset) {\r\n          return {\r\n            line: index + 1,\r\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\r\n            offset\r\n          }\r\n        }\r\n\r\n        index++\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @type {Location['toOffset']} */\r\n  function toOffset(point) {\r\n    if (\r\n      point &&\r\n      typeof point.line === 'number' &&\r\n      typeof point.column === 'number' &&\r\n      !Number.isNaN(point.line) &&\r\n      !Number.isNaN(point.column)\r\n    ) {\r\n      while (indices.length < point.line) {\r\n        const from = indices[indices.length - 1]\r\n        const eol = next(value, from)\r\n        const end = eol === -1 ? value.length + 1 : eol + 1\r\n        if (from === end) break\r\n        indices.push(end)\r\n      }\r\n\r\n      const offset =\r\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\r\n      // The given `column` could not exist on this line.\r\n      if (offset < indices[point.line - 1]) return offset\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n * @param {number} from\r\n */\r\nfunction next(value, from) {\r\n  const cr = value.indexOf('\\r', from)\r\n  const lf = value.indexOf('\\n', from)\r\n  if (lf === -1) return cr\r\n  if (cr === -1 || cr + 1 === lf) return lf\r\n  return cr < lf ? cr : lf\r\n}\r\n", "/**\r\n * Map of web namespaces.\r\n *\r\n * @type {Record<string, string>}\r\n */\r\nexport const webNamespaces = {\r\n  html: 'http://www.w3.org/1999/xhtml',\r\n  mathml: 'http://www.w3.org/1998/Math/MathML',\r\n  svg: 'http://www.w3.org/2000/svg',\r\n  xlink: 'http://www.w3.org/1999/xlink',\r\n  xml: 'http://www.w3.org/XML/1998/namespace',\r\n  xmlns: 'http://www.w3.org/2000/xmlns/'\r\n}\r\n", "/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').ElementData} ElementData\r\n * @typedef {import('hast').Nodes} Nodes\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').RootContent} RootContent\r\n *\r\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\r\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\r\n * @typedef {import('parse5').Token.Location} P5Location\r\n *\r\n * @typedef {import('property-information').Schema} Schema\r\n *\r\n * @typedef {import('unist').Point} Point\r\n * @typedef {import('unist').Position} Position\r\n *\r\n * @typedef {import('vfile').VFile} VFile\r\n */\r\n\r\n/**\r\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\r\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\r\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\r\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\r\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\r\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\r\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\r\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\r\n */\r\n\r\n/**\r\n * @typedef Options\r\n *   Configuration.\r\n * @property {Space | null | undefined} [space='html']\r\n *   Which space the document is in (default: `'html'`).\r\n *\r\n *   When an `<svg>` element is found in the HTML space, this package already\r\n *   automatically switches to and from the SVG space when entering and exiting\r\n *   it.\r\n * @property {VFile | null | undefined} [file]\r\n *   File used to add positional info to nodes (optional).\r\n *\r\n *   If given, the file should represent the original HTML source.\r\n * @property {boolean | null | undefined} [verbose=false]\r\n *   Whether to add extra positional info about starting tags, closing tags,\r\n *   and attributes to elements (default: `false`).\r\n *\r\n *   > 👉 **Note**: only used when `file` is given.\r\n *\r\n * @typedef {'html' | 'svg'} Space\r\n *   Namespace.\r\n *\r\n * @typedef State\r\n *   Info passed around about the current state.\r\n * @property {VFile | undefined} file\r\n *   Corresponding file.\r\n * @property {boolean} location\r\n *   Whether location info was found.\r\n * @property {Schema} schema\r\n *   Current schema.\r\n * @property {boolean | undefined} verbose\r\n *   Add extra positional info.\r\n */\r\n\r\nimport {ok as assert} from 'devlop'\r\nimport {h, s} from 'hastscript'\r\nimport {find, html, svg} from 'property-information'\r\nimport {location} from 'vfile-location'\r\nimport {webNamespaces} from 'web-namespaces'\r\n\r\nconst own = {}.hasOwnProperty\r\n/** @type {unknown} */\r\n// type-coverage:ignore-next-line\r\nconst proto = Object.prototype\r\n\r\n/**\r\n * Transform a `parse5` AST to hast.\r\n *\r\n * @param {P5Node} tree\r\n *   `parse5` tree to transform.\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {Nodes}\r\n *   hast tree.\r\n */\r\nexport function fromParse5(tree, options) {\r\n  const settings = options || {}\r\n\r\n  return one(\r\n    {\r\n      file: settings.file || undefined,\r\n      location: false,\r\n      schema: settings.space === 'svg' ? svg : html,\r\n      verbose: settings.verbose || false\r\n    },\r\n    tree\r\n  )\r\n}\r\n\r\n/**\r\n * Transform a node.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {P5Node} node\r\n *   p5 node.\r\n * @returns {Nodes}\r\n *   hast node.\r\n */\r\nfunction one(state, node) {\r\n  /** @type {Nodes} */\r\n  let result\r\n\r\n  switch (node.nodeName) {\r\n    case '#comment': {\r\n      const reference = /** @type {P5Comment} */ (node)\r\n      result = {type: 'comment', value: reference.data}\r\n      patch(state, reference, result)\r\n      return result\r\n    }\r\n\r\n    case '#document':\r\n    case '#document-fragment': {\r\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\r\n      const quirksMode =\r\n        'mode' in reference\r\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\r\n          : false\r\n\r\n      result = {\r\n        type: 'root',\r\n        children: all(state, node.childNodes),\r\n        data: {quirksMode}\r\n      }\r\n\r\n      if (state.file && state.location) {\r\n        const doc = String(state.file)\r\n        const loc = location(doc)\r\n        const start = loc.toPoint(0)\r\n        const end = loc.toPoint(doc.length)\r\n        // Always defined as we give valid input.\r\n        assert(start, 'expected `start`')\r\n        assert(end, 'expected `end`')\r\n        result.position = {start, end}\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n    case '#documentType': {\r\n      const reference = /** @type {P5DocumentType} */ (node)\r\n      result = {type: 'doctype'}\r\n      patch(state, reference, result)\r\n      return result\r\n    }\r\n\r\n    case '#text': {\r\n      const reference = /** @type {P5Text} */ (node)\r\n      result = {type: 'text', value: reference.value}\r\n      patch(state, reference, result)\r\n      return result\r\n    }\r\n\r\n    // Element.\r\n    default: {\r\n      const reference = /** @type {P5Element} */ (node)\r\n      result = element(state, reference)\r\n      return result\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Transform children.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {Array<P5Node>} nodes\r\n *   Nodes.\r\n * @returns {Array<RootContent>}\r\n *   hast nodes.\r\n */\r\nfunction all(state, nodes) {\r\n  let index = -1\r\n  /** @type {Array<RootContent>} */\r\n  const results = []\r\n\r\n  while (++index < nodes.length) {\r\n    // Assume no roots in `nodes`.\r\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\r\n    results.push(result)\r\n  }\r\n\r\n  return results\r\n}\r\n\r\n/**\r\n * Transform an element.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {P5Element} node\r\n *   `parse5` node to transform.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction element(state, node) {\r\n  const schema = state.schema\r\n\r\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\r\n\r\n  // Props.\r\n  let index = -1\r\n  /** @type {Record<string, string>} */\r\n  const props = {}\r\n\r\n  while (++index < node.attrs.length) {\r\n    const attribute = node.attrs[index]\r\n    const name =\r\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\r\n    if (!own.call(proto, name)) {\r\n      props[name] = attribute.value\r\n    }\r\n  }\r\n\r\n  // Build.\r\n  const fn = state.schema.space === 'svg' ? s : h\r\n  const result = fn(node.tagName, props, all(state, node.childNodes))\r\n  patch(state, node, result)\r\n\r\n  // Switch content.\r\n  if (result.tagName === 'template') {\r\n    const reference = /** @type {P5Template} */ (node)\r\n    const pos = reference.sourceCodeLocation\r\n    const startTag = pos && pos.startTag && position(pos.startTag)\r\n    const endTag = pos && pos.endTag && position(pos.endTag)\r\n\r\n    // Root in, root out.\r\n    const content = /** @type {Root} */ (one(state, reference.content))\r\n\r\n    if (startTag && endTag && state.file) {\r\n      content.position = {start: startTag.end, end: endTag.start}\r\n    }\r\n\r\n    result.content = content\r\n  }\r\n\r\n  state.schema = schema\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Patch positional info from `from` onto `to`.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {P5Node} from\r\n *   p5 node.\r\n * @param {Nodes} to\r\n *   hast node.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction patch(state, from, to) {\r\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\r\n    const position = createLocation(state, to, from.sourceCodeLocation)\r\n\r\n    if (position) {\r\n      state.location = true\r\n      to.position = position\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Create clean positional information.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {Nodes} node\r\n *   hast node.\r\n * @param {P5ElementLocation} location\r\n *   p5 location info.\r\n * @returns {Position | undefined}\r\n *   Position, or nothing.\r\n */\r\nfunction createLocation(state, node, location) {\r\n  const result = position(location)\r\n\r\n  if (node.type === 'element') {\r\n    const tail = node.children[node.children.length - 1]\r\n\r\n    // Bug for unclosed with children.\r\n    // See: <https://github.com/inikulin/parse5/issues/109>.\r\n    if (\r\n      result &&\r\n      !location.endTag &&\r\n      tail &&\r\n      tail.position &&\r\n      tail.position.end\r\n    ) {\r\n      result.end = Object.assign({}, tail.position.end)\r\n    }\r\n\r\n    if (state.verbose) {\r\n      /** @type {Record<string, Position | undefined>} */\r\n      const props = {}\r\n      /** @type {string} */\r\n      let key\r\n\r\n      if (location.attrs) {\r\n        for (key in location.attrs) {\r\n          if (own.call(location.attrs, key)) {\r\n            props[find(state.schema, key).property] = position(\r\n              location.attrs[key]\r\n            )\r\n          }\r\n        }\r\n      }\r\n\r\n      assert(location.startTag, 'a start tag should exist')\r\n      const opening = position(location.startTag)\r\n      const closing = location.endTag ? position(location.endTag) : undefined\r\n      /** @type {ElementData['position']} */\r\n      const data = {opening}\r\n      if (closing) data.closing = closing\r\n      data.properties = props\r\n\r\n      node.data = {position: data}\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Turn a p5 location into a position.\r\n *\r\n * @param {P5Location} loc\r\n *   Location.\r\n * @returns {Position | undefined}\r\n *   Position or nothing.\r\n */\r\nfunction position(loc) {\r\n  const start = point({\r\n    line: loc.startLine,\r\n    column: loc.startCol,\r\n    offset: loc.startOffset\r\n  })\r\n  const end = point({\r\n    line: loc.endLine,\r\n    column: loc.endCol,\r\n    offset: loc.endOffset\r\n  })\r\n\r\n  // @ts-expect-error: we do use `undefined` for points if one or the other\r\n  // exists.\r\n  return start || end ? {start, end} : undefined\r\n}\r\n\r\n/**\r\n * Filter out invalid points.\r\n *\r\n * @param {Point} point\r\n *   Point with potentially `undefined` values.\r\n * @returns {Point | undefined}\r\n *   Point or nothing.\r\n */\r\nfunction point(point) {\r\n  return point.line && point.column ? point : undefined\r\n}\r\n", "/**\r\n * @typedef {import('hast').Comment} Comment\r\n * @typedef {import('hast').Doctype} Doctype\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Nodes} Nodes\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').RootContent} RootContent\r\n * @typedef {import('hast').Text} Text\r\n *\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\r\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\r\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\r\n *\r\n * @typedef {import('property-information').Schema} Schema\r\n */\r\n\r\n/**\r\n * @typedef Options\r\n *   Configuration.\r\n * @property {Space | null | undefined} [space='html']\r\n *   Which space the document is in (default: `'html'`).\r\n *\r\n *   When an `<svg>` element is found in the HTML space, this package already\r\n *   automatically switches to and from the SVG space when entering and exiting\r\n *   it.\r\n *\r\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\r\n *\r\n * @typedef {'html' | 'svg'} Space\r\n */\r\n\r\nimport {stringify as commas} from 'comma-separated-tokens'\r\nimport {ok as assert} from 'devlop'\r\nimport {find, html, svg} from 'property-information'\r\nimport {stringify as spaces} from 'space-separated-tokens'\r\nimport {webNamespaces} from 'web-namespaces'\r\nimport {zwitch} from 'zwitch'\r\n\r\n/** @type {Options} */\r\nconst emptyOptions = {}\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\r\n\r\n/**\r\n * Transform a hast tree to a `parse5` AST.\r\n *\r\n * @param {Nodes} tree\r\n *   Tree to transform.\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {Parse5Nodes}\r\n *   `parse5` node.\r\n */\r\nexport function toParse5(tree, options) {\r\n  const settings = options || emptyOptions\r\n  const space = settings.space\r\n  return one(tree, space === 'svg' ? svg : html)\r\n}\r\n\r\n/**\r\n * @param {Root} node\r\n *   Node (hast) to transform.\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @returns {Parse5Document}\r\n *   Parse5 node.\r\n */\r\nfunction root(node, schema) {\r\n  /** @type {Parse5Document} */\r\n  const result = {\r\n    nodeName: '#document',\r\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\r\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\r\n    childNodes: []\r\n  }\r\n  result.childNodes = all(node.children, result, schema)\r\n  patch(node, result)\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Root} node\r\n *   Node (hast) to transform.\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @returns {Parse5Fragment}\r\n *   Parse5 node.\r\n */\r\nfunction fragment(node, schema) {\r\n  /** @type {Parse5Fragment} */\r\n  const result = {nodeName: '#document-fragment', childNodes: []}\r\n  result.childNodes = all(node.children, result, schema)\r\n  patch(node, result)\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Doctype} node\r\n *   Node (hast) to transform.\r\n * @returns {Parse5Doctype}\r\n *   Parse5 node.\r\n */\r\nfunction doctype(node) {\r\n  /** @type {Parse5Doctype} */\r\n  const result = {\r\n    nodeName: '#documentType',\r\n    name: 'html',\r\n    publicId: '',\r\n    systemId: '',\r\n    parentNode: null\r\n  }\r\n\r\n  patch(node, result)\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Text} node\r\n *   Node (hast) to transform.\r\n * @returns {Parse5Text}\r\n *   Parse5 node.\r\n */\r\nfunction text(node) {\r\n  /** @type {Parse5Text} */\r\n  const result = {\r\n    nodeName: '#text',\r\n    value: node.value,\r\n    parentNode: null\r\n  }\r\n  patch(node, result)\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Comment} node\r\n *   Node (hast) to transform.\r\n * @returns {Parse5Comment}\r\n *   Parse5 node.\r\n */\r\nfunction comment(node) {\r\n  /** @type {Parse5Comment} */\r\n  const result = {\r\n    nodeName: '#comment',\r\n    data: node.value,\r\n    parentNode: null\r\n  }\r\n\r\n  patch(node, result)\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * @param {Element} node\r\n *   Node (hast) to transform.\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @returns {Parse5Element}\r\n *   Parse5 node.\r\n */\r\nfunction element(node, schema) {\r\n  const parentSchema = schema\r\n  let currentSchema = parentSchema\r\n\r\n  if (\r\n    node.type === 'element' &&\r\n    node.tagName.toLowerCase() === 'svg' &&\r\n    parentSchema.space === 'html'\r\n  ) {\r\n    currentSchema = svg\r\n  }\r\n\r\n  /** @type {Array<Parse5Attribute>} */\r\n  const attrs = []\r\n  /** @type {string} */\r\n  let prop\r\n\r\n  if (node.properties) {\r\n    for (prop in node.properties) {\r\n      if (prop !== 'children' && own.call(node.properties, prop)) {\r\n        const result = createProperty(\r\n          currentSchema,\r\n          prop,\r\n          node.properties[prop]\r\n        )\r\n\r\n        if (result) {\r\n          attrs.push(result)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const space = currentSchema.space\r\n  // `html` and `svg` both have a space.\r\n  assert(space)\r\n\r\n  /** @type {Parse5Element} */\r\n  const result = {\r\n    nodeName: node.tagName,\r\n    tagName: node.tagName,\r\n    attrs,\r\n    // @ts-expect-error: `parse5` types are wrong.\r\n    namespaceURI: webNamespaces[space],\r\n    childNodes: [],\r\n    parentNode: null\r\n  }\r\n  result.childNodes = all(node.children, result, currentSchema)\r\n  patch(node, result)\r\n\r\n  if (node.tagName === 'template' && node.content) {\r\n    // @ts-expect-error: `parse5` types are wrong.\r\n    result.content = fragment(node.content, currentSchema)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Handle a property.\r\n *\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @param {string} prop\r\n *   Key.\r\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\r\n *   hast property value.\r\n * @returns {Parse5Attribute | undefined}\r\n *   Field for runtime, optional.\r\n */\r\nfunction createProperty(schema, prop, value) {\r\n  const info = find(schema, prop)\r\n\r\n  // Ignore nullish and `NaN` values.\r\n  if (\r\n    value === false ||\r\n    value === null ||\r\n    value === undefined ||\r\n    (typeof value === 'number' && Number.isNaN(value)) ||\r\n    (!value && info.boolean)\r\n  ) {\r\n    return\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    // Accept `array`.\r\n    // Most props are space-separated.\r\n    value = info.commaSeparated ? commas(value) : spaces(value)\r\n  }\r\n\r\n  /** @type {Parse5Attribute} */\r\n  const attribute = {\r\n    name: info.attribute,\r\n    value: value === true ? '' : String(value)\r\n  }\r\n\r\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\r\n    const index = attribute.name.indexOf(':')\r\n\r\n    if (index < 0) {\r\n      attribute.prefix = ''\r\n    } else {\r\n      attribute.name = attribute.name.slice(index + 1)\r\n      attribute.prefix = info.attribute.slice(0, index)\r\n    }\r\n\r\n    attribute.namespace = webNamespaces[info.space]\r\n  }\r\n\r\n  return attribute\r\n}\r\n\r\n/**\r\n * Transform all hast nodes.\r\n *\r\n * @param {Array<RootContent>} children\r\n *   List of children.\r\n * @param {Parse5Parent} parentNode\r\n *   `parse5` parent node.\r\n * @param {Schema} schema\r\n *   Current schema.\r\n * @returns {Array<Parse5Content>}\r\n *   Transformed children.\r\n */\r\nfunction all(children, parentNode, schema) {\r\n  let index = -1\r\n  /** @type {Array<Parse5Content>} */\r\n  const results = []\r\n\r\n  if (children) {\r\n    while (++index < children.length) {\r\n      /** @type {Parse5Content} */\r\n      const child = one(children[index], schema)\r\n\r\n      child.parentNode = parentNode\r\n\r\n      results.push(child)\r\n    }\r\n  }\r\n\r\n  return results\r\n}\r\n\r\n/**\r\n * Add position info from `from` to `to`.\r\n *\r\n * @param {Nodes} from\r\n *   hast node.\r\n * @param {Parse5Nodes} to\r\n *   `parse5` node.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction patch(from, to) {\r\n  const position = from.position\r\n\r\n  if (position && position.start && position.end) {\r\n    assert(typeof position.start.offset === 'number')\r\n    assert(typeof position.end.offset === 'number')\r\n\r\n    to.sourceCodeLocation = {\r\n      startLine: position.start.line,\r\n      startCol: position.start.column,\r\n      startOffset: position.start.offset,\r\n      endLine: position.end.line,\r\n      endCol: position.end.column,\r\n      endOffset: position.end.offset\r\n    }\r\n  }\r\n}\r\n", "/**\r\n * List of HTML void tag names.\r\n *\r\n * @type {Array<string>}\r\n */\r\nexport const htmlVoidElements = [\r\n  'area',\r\n  'base',\r\n  'basefont',\r\n  'bgsound',\r\n  'br',\r\n  'col',\r\n  'command',\r\n  'embed',\r\n  'frame',\r\n  'hr',\r\n  'image',\r\n  'img',\r\n  'input',\r\n  'keygen',\r\n  'link',\r\n  'meta',\r\n  'param',\r\n  'source',\r\n  'track',\r\n  'wbr'\r\n]\r\n", "const UNDEFINED_CODE_POINTS = new Set([\r\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\r\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\r\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\r\n    1048575, 1114110, 1114111,\r\n]);\r\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\r\nexport var CODE_POINTS;\r\n(function (CODE_POINTS) {\r\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\r\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\r\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\r\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\r\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\r\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\r\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\r\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\r\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\r\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\r\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\r\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\r\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\r\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\r\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\r\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\r\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\r\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\r\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\r\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\r\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\r\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\r\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\r\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\r\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\r\nexport const SEQUENCES = {\r\n    DASH_DASH: '--',\r\n    CDATA_START: '[CDATA[',\r\n    DOCTYPE: 'doctype',\r\n    SCRIPT: 'script',\r\n    PUBLIC: 'public',\r\n    SYSTEM: 'system',\r\n};\r\n//Surrogates\r\nexport function isSurrogate(cp) {\r\n    return cp >= 55296 && cp <= 57343;\r\n}\r\nexport function isSurrogatePair(cp) {\r\n    return cp >= 56320 && cp <= 57343;\r\n}\r\nexport function getSurrogatePairCodePoint(cp1, cp2) {\r\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\r\n}\r\n//NOTE: excluding NULL and ASCII whitespace\r\nexport function isControlCodePoint(cp) {\r\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\r\n        (cp >= 0x7f && cp <= 0x9f));\r\n}\r\nexport function isUndefinedCodePoint(cp) {\r\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\r\n}\r\n//# sourceMappingURL=unicode.js.map", "export var ERR;\r\n(function (ERR) {\r\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\r\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\r\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\r\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\r\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\r\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\r\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\r\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\r\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\r\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\r\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\r\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\r\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\r\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\r\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\r\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\r\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\r\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\r\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\r\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\r\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\r\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\r\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\r\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\r\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\r\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\r\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\r\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\r\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\r\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\r\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\r\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\r\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\r\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\r\n    ERR[\"nestedComment\"] = \"nested-comment\";\r\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\r\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\r\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\r\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\r\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\r\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\r\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\r\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\r\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\r\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\r\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\r\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\r\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\r\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\r\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\r\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\r\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\r\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\r\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\r\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\r\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\r\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\r\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\r\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\r\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\r\n})(ERR = ERR || (ERR = {}));\r\n//# sourceMappingURL=error-codes.js.map", "import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\r\nimport { ERR } from '../common/error-codes.js';\r\n//Const\r\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\r\n//Preprocessor\r\n//NOTE: HTML input preprocessing\r\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\r\nexport class Preprocessor {\r\n    constructor(handler) {\r\n        this.handler = handler;\r\n        this.html = '';\r\n        this.pos = -1;\r\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\r\n        this.lastGapPos = -2;\r\n        this.gapStack = [];\r\n        this.skipNextNewLine = false;\r\n        this.lastChunkWritten = false;\r\n        this.endOfChunkHit = false;\r\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\r\n        this.isEol = false;\r\n        this.lineStartPos = 0;\r\n        this.droppedBufferSize = 0;\r\n        this.line = 1;\r\n        //NOTE: avoid reporting errors twice on advance/retreat\r\n        this.lastErrOffset = -1;\r\n    }\r\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\r\n    get col() {\r\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\r\n    }\r\n    get offset() {\r\n        return this.droppedBufferSize + this.pos;\r\n    }\r\n    getError(code) {\r\n        const { line, col, offset } = this;\r\n        return {\r\n            code,\r\n            startLine: line,\r\n            endLine: line,\r\n            startCol: col,\r\n            endCol: col,\r\n            startOffset: offset,\r\n            endOffset: offset,\r\n        };\r\n    }\r\n    _err(code) {\r\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\r\n            this.lastErrOffset = this.offset;\r\n            this.handler.onParseError(this.getError(code));\r\n        }\r\n    }\r\n    _addGap() {\r\n        this.gapStack.push(this.lastGapPos);\r\n        this.lastGapPos = this.pos;\r\n    }\r\n    _processSurrogate(cp) {\r\n        //NOTE: try to peek a surrogate pair\r\n        if (this.pos !== this.html.length - 1) {\r\n            const nextCp = this.html.charCodeAt(this.pos + 1);\r\n            if (isSurrogatePair(nextCp)) {\r\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\r\n                this.pos++;\r\n                //NOTE: add a gap that should be avoided during retreat\r\n                this._addGap();\r\n                return getSurrogatePairCodePoint(cp, nextCp);\r\n            }\r\n        }\r\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\r\n        else if (!this.lastChunkWritten) {\r\n            this.endOfChunkHit = true;\r\n            return $.EOF;\r\n        }\r\n        //NOTE: isolated surrogate\r\n        this._err(ERR.surrogateInInputStream);\r\n        return cp;\r\n    }\r\n    willDropParsedChunk() {\r\n        return this.pos > this.bufferWaterline;\r\n    }\r\n    dropParsedChunk() {\r\n        if (this.willDropParsedChunk()) {\r\n            this.html = this.html.substring(this.pos);\r\n            this.lineStartPos -= this.pos;\r\n            this.droppedBufferSize += this.pos;\r\n            this.pos = 0;\r\n            this.lastGapPos = -2;\r\n            this.gapStack.length = 0;\r\n        }\r\n    }\r\n    write(chunk, isLastChunk) {\r\n        if (this.html.length > 0) {\r\n            this.html += chunk;\r\n        }\r\n        else {\r\n            this.html = chunk;\r\n        }\r\n        this.endOfChunkHit = false;\r\n        this.lastChunkWritten = isLastChunk;\r\n    }\r\n    insertHtmlAtCurrentPos(chunk) {\r\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\r\n        this.endOfChunkHit = false;\r\n    }\r\n    startsWith(pattern, caseSensitive) {\r\n        // Check if our buffer has enough characters\r\n        if (this.pos + pattern.length > this.html.length) {\r\n            this.endOfChunkHit = !this.lastChunkWritten;\r\n            return false;\r\n        }\r\n        if (caseSensitive) {\r\n            return this.html.startsWith(pattern, this.pos);\r\n        }\r\n        for (let i = 0; i < pattern.length; i++) {\r\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\r\n            if (cp !== pattern.charCodeAt(i)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    peek(offset) {\r\n        const pos = this.pos + offset;\r\n        if (pos >= this.html.length) {\r\n            this.endOfChunkHit = !this.lastChunkWritten;\r\n            return $.EOF;\r\n        }\r\n        const code = this.html.charCodeAt(pos);\r\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\r\n    }\r\n    advance() {\r\n        this.pos++;\r\n        //NOTE: LF should be in the last column of the line\r\n        if (this.isEol) {\r\n            this.isEol = false;\r\n            this.line++;\r\n            this.lineStartPos = this.pos;\r\n        }\r\n        if (this.pos >= this.html.length) {\r\n            this.endOfChunkHit = !this.lastChunkWritten;\r\n            return $.EOF;\r\n        }\r\n        let cp = this.html.charCodeAt(this.pos);\r\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\r\n        if (cp === $.CARRIAGE_RETURN) {\r\n            this.isEol = true;\r\n            this.skipNextNewLine = true;\r\n            return $.LINE_FEED;\r\n        }\r\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\r\n        //must be ignored.\r\n        if (cp === $.LINE_FEED) {\r\n            this.isEol = true;\r\n            if (this.skipNextNewLine) {\r\n                // `line` will be bumped again in the recursive call.\r\n                this.line--;\r\n                this.skipNextNewLine = false;\r\n                this._addGap();\r\n                return this.advance();\r\n            }\r\n        }\r\n        this.skipNextNewLine = false;\r\n        if (isSurrogate(cp)) {\r\n            cp = this._processSurrogate(cp);\r\n        }\r\n        //OPTIMIZATION: first check if code point is in the common allowed\r\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\r\n        //before going into detailed performance cost validation.\r\n        const isCommonValidRange = this.handler.onParseError === null ||\r\n            (cp > 0x1f && cp < 0x7f) ||\r\n            cp === $.LINE_FEED ||\r\n            cp === $.CARRIAGE_RETURN ||\r\n            (cp > 0x9f && cp < 64976);\r\n        if (!isCommonValidRange) {\r\n            this._checkForProblematicCharacters(cp);\r\n        }\r\n        return cp;\r\n    }\r\n    _checkForProblematicCharacters(cp) {\r\n        if (isControlCodePoint(cp)) {\r\n            this._err(ERR.controlCharacterInInputStream);\r\n        }\r\n        else if (isUndefinedCodePoint(cp)) {\r\n            this._err(ERR.noncharacterInInputStream);\r\n        }\r\n    }\r\n    retreat(count) {\r\n        this.pos -= count;\r\n        while (this.pos < this.lastGapPos) {\r\n            this.lastGapPos = this.gapStack.pop();\r\n            this.pos--;\r\n        }\r\n        this.isEol = false;\r\n    }\r\n}\r\n//# sourceMappingURL=preprocessor.js.map", "export var TokenType;\r\n(function (TokenType) {\r\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\r\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\r\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\r\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\r\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\r\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\r\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\r\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\r\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\r\n})(TokenType = TokenType || (TokenType = {}));\r\nexport function getTokenAttr(token, attrName) {\r\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\r\n        if (token.attrs[i].name === attrName) {\r\n            return token.attrs[i].value;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=token.js.map", null, null, null, null, "/** All valid namespaces in HTML. */\r\nexport var NS;\r\n(function (NS) {\r\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\r\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\r\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\r\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\r\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\r\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\r\n})(NS = NS || (NS = {}));\r\nexport var ATTRS;\r\n(function (ATTRS) {\r\n    ATTRS[\"TYPE\"] = \"type\";\r\n    ATTRS[\"ACTION\"] = \"action\";\r\n    ATTRS[\"ENCODING\"] = \"encoding\";\r\n    ATTRS[\"PROMPT\"] = \"prompt\";\r\n    ATTRS[\"NAME\"] = \"name\";\r\n    ATTRS[\"COLOR\"] = \"color\";\r\n    ATTRS[\"FACE\"] = \"face\";\r\n    ATTRS[\"SIZE\"] = \"size\";\r\n})(ATTRS = ATTRS || (ATTRS = {}));\r\n/**\r\n * The mode of the document.\r\n *\r\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\r\n */\r\nexport var DOCUMENT_MODE;\r\n(function (DOCUMENT_MODE) {\r\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\r\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\r\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\r\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\r\nexport var TAG_NAMES;\r\n(function (TAG_NAMES) {\r\n    TAG_NAMES[\"A\"] = \"a\";\r\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\r\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\r\n    TAG_NAMES[\"APPLET\"] = \"applet\";\r\n    TAG_NAMES[\"AREA\"] = \"area\";\r\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\r\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\r\n    TAG_NAMES[\"B\"] = \"b\";\r\n    TAG_NAMES[\"BASE\"] = \"base\";\r\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\r\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\r\n    TAG_NAMES[\"BIG\"] = \"big\";\r\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\r\n    TAG_NAMES[\"BODY\"] = \"body\";\r\n    TAG_NAMES[\"BR\"] = \"br\";\r\n    TAG_NAMES[\"BUTTON\"] = \"button\";\r\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\r\n    TAG_NAMES[\"CENTER\"] = \"center\";\r\n    TAG_NAMES[\"CODE\"] = \"code\";\r\n    TAG_NAMES[\"COL\"] = \"col\";\r\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\r\n    TAG_NAMES[\"DD\"] = \"dd\";\r\n    TAG_NAMES[\"DESC\"] = \"desc\";\r\n    TAG_NAMES[\"DETAILS\"] = \"details\";\r\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\r\n    TAG_NAMES[\"DIR\"] = \"dir\";\r\n    TAG_NAMES[\"DIV\"] = \"div\";\r\n    TAG_NAMES[\"DL\"] = \"dl\";\r\n    TAG_NAMES[\"DT\"] = \"dt\";\r\n    TAG_NAMES[\"EM\"] = \"em\";\r\n    TAG_NAMES[\"EMBED\"] = \"embed\";\r\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\r\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\r\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\r\n    TAG_NAMES[\"FONT\"] = \"font\";\r\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\r\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\r\n    TAG_NAMES[\"FORM\"] = \"form\";\r\n    TAG_NAMES[\"FRAME\"] = \"frame\";\r\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\r\n    TAG_NAMES[\"H1\"] = \"h1\";\r\n    TAG_NAMES[\"H2\"] = \"h2\";\r\n    TAG_NAMES[\"H3\"] = \"h3\";\r\n    TAG_NAMES[\"H4\"] = \"h4\";\r\n    TAG_NAMES[\"H5\"] = \"h5\";\r\n    TAG_NAMES[\"H6\"] = \"h6\";\r\n    TAG_NAMES[\"HEAD\"] = \"head\";\r\n    TAG_NAMES[\"HEADER\"] = \"header\";\r\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\r\n    TAG_NAMES[\"HR\"] = \"hr\";\r\n    TAG_NAMES[\"HTML\"] = \"html\";\r\n    TAG_NAMES[\"I\"] = \"i\";\r\n    TAG_NAMES[\"IMG\"] = \"img\";\r\n    TAG_NAMES[\"IMAGE\"] = \"image\";\r\n    TAG_NAMES[\"INPUT\"] = \"input\";\r\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\r\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\r\n    TAG_NAMES[\"LABEL\"] = \"label\";\r\n    TAG_NAMES[\"LI\"] = \"li\";\r\n    TAG_NAMES[\"LINK\"] = \"link\";\r\n    TAG_NAMES[\"LISTING\"] = \"listing\";\r\n    TAG_NAMES[\"MAIN\"] = \"main\";\r\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\r\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\r\n    TAG_NAMES[\"MATH\"] = \"math\";\r\n    TAG_NAMES[\"MENU\"] = \"menu\";\r\n    TAG_NAMES[\"META\"] = \"meta\";\r\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\r\n    TAG_NAMES[\"MI\"] = \"mi\";\r\n    TAG_NAMES[\"MO\"] = \"mo\";\r\n    TAG_NAMES[\"MN\"] = \"mn\";\r\n    TAG_NAMES[\"MS\"] = \"ms\";\r\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\r\n    TAG_NAMES[\"NAV\"] = \"nav\";\r\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\r\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\r\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\r\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\r\n    TAG_NAMES[\"OBJECT\"] = \"object\";\r\n    TAG_NAMES[\"OL\"] = \"ol\";\r\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\r\n    TAG_NAMES[\"OPTION\"] = \"option\";\r\n    TAG_NAMES[\"P\"] = \"p\";\r\n    TAG_NAMES[\"PARAM\"] = \"param\";\r\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\r\n    TAG_NAMES[\"PRE\"] = \"pre\";\r\n    TAG_NAMES[\"RB\"] = \"rb\";\r\n    TAG_NAMES[\"RP\"] = \"rp\";\r\n    TAG_NAMES[\"RT\"] = \"rt\";\r\n    TAG_NAMES[\"RTC\"] = \"rtc\";\r\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\r\n    TAG_NAMES[\"S\"] = \"s\";\r\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\r\n    TAG_NAMES[\"SECTION\"] = \"section\";\r\n    TAG_NAMES[\"SELECT\"] = \"select\";\r\n    TAG_NAMES[\"SOURCE\"] = \"source\";\r\n    TAG_NAMES[\"SMALL\"] = \"small\";\r\n    TAG_NAMES[\"SPAN\"] = \"span\";\r\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\r\n    TAG_NAMES[\"STRONG\"] = \"strong\";\r\n    TAG_NAMES[\"STYLE\"] = \"style\";\r\n    TAG_NAMES[\"SUB\"] = \"sub\";\r\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\r\n    TAG_NAMES[\"SUP\"] = \"sup\";\r\n    TAG_NAMES[\"TABLE\"] = \"table\";\r\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\r\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\r\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\r\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\r\n    TAG_NAMES[\"TD\"] = \"td\";\r\n    TAG_NAMES[\"TH\"] = \"th\";\r\n    TAG_NAMES[\"THEAD\"] = \"thead\";\r\n    TAG_NAMES[\"TITLE\"] = \"title\";\r\n    TAG_NAMES[\"TR\"] = \"tr\";\r\n    TAG_NAMES[\"TRACK\"] = \"track\";\r\n    TAG_NAMES[\"TT\"] = \"tt\";\r\n    TAG_NAMES[\"U\"] = \"u\";\r\n    TAG_NAMES[\"UL\"] = \"ul\";\r\n    TAG_NAMES[\"SVG\"] = \"svg\";\r\n    TAG_NAMES[\"VAR\"] = \"var\";\r\n    TAG_NAMES[\"WBR\"] = \"wbr\";\r\n    TAG_NAMES[\"XMP\"] = \"xmp\";\r\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\r\n/**\r\n * Tag IDs are numeric IDs for known tag names.\r\n *\r\n * We use tag IDs to improve the performance of tag name comparisons.\r\n */\r\nexport var TAG_ID;\r\n(function (TAG_ID) {\r\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\r\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\r\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\r\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\r\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\r\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\r\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\r\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\r\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\r\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\r\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\r\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\r\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\r\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\r\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\r\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\r\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\r\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\r\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\r\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\r\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\r\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\r\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\r\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\r\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\r\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\r\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\r\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\r\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\r\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\r\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\r\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\r\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\r\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\r\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\r\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\r\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\r\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\r\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\r\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\r\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\r\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\r\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\r\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\r\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\r\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\r\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\r\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\r\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\r\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\r\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\r\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\r\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\r\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\r\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\r\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\r\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\r\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\r\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\r\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\r\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\r\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\r\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\r\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\r\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\r\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\r\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\r\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\r\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\r\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\r\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\r\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\r\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\r\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\r\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\r\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\r\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\r\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\r\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\r\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\r\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\r\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\r\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\r\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\r\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\r\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\r\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\r\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\r\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\r\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\r\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\r\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\r\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\r\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\r\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\r\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\r\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\r\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\r\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\r\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\r\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\r\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\r\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\r\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\r\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\r\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\r\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\r\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\r\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\r\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\r\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\r\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\r\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\r\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\r\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\r\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\r\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\r\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\r\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\r\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\r\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\r\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\r\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\r\nconst TAG_NAME_TO_ID = new Map([\r\n    [TAG_NAMES.A, TAG_ID.A],\r\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\r\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\r\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\r\n    [TAG_NAMES.AREA, TAG_ID.AREA],\r\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\r\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\r\n    [TAG_NAMES.B, TAG_ID.B],\r\n    [TAG_NAMES.BASE, TAG_ID.BASE],\r\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\r\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\r\n    [TAG_NAMES.BIG, TAG_ID.BIG],\r\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\r\n    [TAG_NAMES.BODY, TAG_ID.BODY],\r\n    [TAG_NAMES.BR, TAG_ID.BR],\r\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\r\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\r\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\r\n    [TAG_NAMES.CODE, TAG_ID.CODE],\r\n    [TAG_NAMES.COL, TAG_ID.COL],\r\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\r\n    [TAG_NAMES.DD, TAG_ID.DD],\r\n    [TAG_NAMES.DESC, TAG_ID.DESC],\r\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\r\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\r\n    [TAG_NAMES.DIR, TAG_ID.DIR],\r\n    [TAG_NAMES.DIV, TAG_ID.DIV],\r\n    [TAG_NAMES.DL, TAG_ID.DL],\r\n    [TAG_NAMES.DT, TAG_ID.DT],\r\n    [TAG_NAMES.EM, TAG_ID.EM],\r\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\r\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\r\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\r\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\r\n    [TAG_NAMES.FONT, TAG_ID.FONT],\r\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\r\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\r\n    [TAG_NAMES.FORM, TAG_ID.FORM],\r\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\r\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\r\n    [TAG_NAMES.H1, TAG_ID.H1],\r\n    [TAG_NAMES.H2, TAG_ID.H2],\r\n    [TAG_NAMES.H3, TAG_ID.H3],\r\n    [TAG_NAMES.H4, TAG_ID.H4],\r\n    [TAG_NAMES.H5, TAG_ID.H5],\r\n    [TAG_NAMES.H6, TAG_ID.H6],\r\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\r\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\r\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\r\n    [TAG_NAMES.HR, TAG_ID.HR],\r\n    [TAG_NAMES.HTML, TAG_ID.HTML],\r\n    [TAG_NAMES.I, TAG_ID.I],\r\n    [TAG_NAMES.IMG, TAG_ID.IMG],\r\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\r\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\r\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\r\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\r\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\r\n    [TAG_NAMES.LI, TAG_ID.LI],\r\n    [TAG_NAMES.LINK, TAG_ID.LINK],\r\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\r\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\r\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\r\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\r\n    [TAG_NAMES.MATH, TAG_ID.MATH],\r\n    [TAG_NAMES.MENU, TAG_ID.MENU],\r\n    [TAG_NAMES.META, TAG_ID.META],\r\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\r\n    [TAG_NAMES.MI, TAG_ID.MI],\r\n    [TAG_NAMES.MO, TAG_ID.MO],\r\n    [TAG_NAMES.MN, TAG_ID.MN],\r\n    [TAG_NAMES.MS, TAG_ID.MS],\r\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\r\n    [TAG_NAMES.NAV, TAG_ID.NAV],\r\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\r\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\r\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\r\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\r\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\r\n    [TAG_NAMES.OL, TAG_ID.OL],\r\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\r\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\r\n    [TAG_NAMES.P, TAG_ID.P],\r\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\r\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\r\n    [TAG_NAMES.PRE, TAG_ID.PRE],\r\n    [TAG_NAMES.RB, TAG_ID.RB],\r\n    [TAG_NAMES.RP, TAG_ID.RP],\r\n    [TAG_NAMES.RT, TAG_ID.RT],\r\n    [TAG_NAMES.RTC, TAG_ID.RTC],\r\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\r\n    [TAG_NAMES.S, TAG_ID.S],\r\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\r\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\r\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\r\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\r\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\r\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\r\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\r\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\r\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\r\n    [TAG_NAMES.SUB, TAG_ID.SUB],\r\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\r\n    [TAG_NAMES.SUP, TAG_ID.SUP],\r\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\r\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\r\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\r\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\r\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\r\n    [TAG_NAMES.TD, TAG_ID.TD],\r\n    [TAG_NAMES.TH, TAG_ID.TH],\r\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\r\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\r\n    [TAG_NAMES.TR, TAG_ID.TR],\r\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\r\n    [TAG_NAMES.TT, TAG_ID.TT],\r\n    [TAG_NAMES.U, TAG_ID.U],\r\n    [TAG_NAMES.UL, TAG_ID.UL],\r\n    [TAG_NAMES.SVG, TAG_ID.SVG],\r\n    [TAG_NAMES.VAR, TAG_ID.VAR],\r\n    [TAG_NAMES.WBR, TAG_ID.WBR],\r\n    [TAG_NAMES.XMP, TAG_ID.XMP],\r\n]);\r\nexport function getTagID(tagName) {\r\n    var _a;\r\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\r\n}\r\nconst $ = TAG_ID;\r\nexport const SPECIAL_ELEMENTS = {\r\n    [NS.HTML]: new Set([\r\n        $.ADDRESS,\r\n        $.APPLET,\r\n        $.AREA,\r\n        $.ARTICLE,\r\n        $.ASIDE,\r\n        $.BASE,\r\n        $.BASEFONT,\r\n        $.BGSOUND,\r\n        $.BLOCKQUOTE,\r\n        $.BODY,\r\n        $.BR,\r\n        $.BUTTON,\r\n        $.CAPTION,\r\n        $.CENTER,\r\n        $.COL,\r\n        $.COLGROUP,\r\n        $.DD,\r\n        $.DETAILS,\r\n        $.DIR,\r\n        $.DIV,\r\n        $.DL,\r\n        $.DT,\r\n        $.EMBED,\r\n        $.FIELDSET,\r\n        $.FIGCAPTION,\r\n        $.FIGURE,\r\n        $.FOOTER,\r\n        $.FORM,\r\n        $.FRAME,\r\n        $.FRAMESET,\r\n        $.H1,\r\n        $.H2,\r\n        $.H3,\r\n        $.H4,\r\n        $.H5,\r\n        $.H6,\r\n        $.HEAD,\r\n        $.HEADER,\r\n        $.HGROUP,\r\n        $.HR,\r\n        $.HTML,\r\n        $.IFRAME,\r\n        $.IMG,\r\n        $.INPUT,\r\n        $.LI,\r\n        $.LINK,\r\n        $.LISTING,\r\n        $.MAIN,\r\n        $.MARQUEE,\r\n        $.MENU,\r\n        $.META,\r\n        $.NAV,\r\n        $.NOEMBED,\r\n        $.NOFRAMES,\r\n        $.NOSCRIPT,\r\n        $.OBJECT,\r\n        $.OL,\r\n        $.P,\r\n        $.PARAM,\r\n        $.PLAINTEXT,\r\n        $.PRE,\r\n        $.SCRIPT,\r\n        $.SECTION,\r\n        $.SELECT,\r\n        $.SOURCE,\r\n        $.STYLE,\r\n        $.SUMMARY,\r\n        $.TABLE,\r\n        $.TBODY,\r\n        $.TD,\r\n        $.TEMPLATE,\r\n        $.TEXTAREA,\r\n        $.TFOOT,\r\n        $.TH,\r\n        $.THEAD,\r\n        $.TITLE,\r\n        $.TR,\r\n        $.TRACK,\r\n        $.UL,\r\n        $.WBR,\r\n        $.XMP,\r\n    ]),\r\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\r\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\r\n    [NS.XLINK]: new Set(),\r\n    [NS.XML]: new Set(),\r\n    [NS.XMLNS]: new Set(),\r\n};\r\nexport function isNumberedHeader(tn) {\r\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\r\n}\r\nconst UNESCAPED_TEXT = new Set([\r\n    TAG_NAMES.STYLE,\r\n    TAG_NAMES.SCRIPT,\r\n    TAG_NAMES.XMP,\r\n    TAG_NAMES.IFRAME,\r\n    TAG_NAMES.NOEMBED,\r\n    TAG_NAMES.NOFRAMES,\r\n    TAG_NAMES.PLAINTEXT,\r\n]);\r\nexport function hasUnescapedText(tn, scriptingEnabled) {\r\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\r\n}\r\n//# sourceMappingURL=html.js.map", "import { Preprocessor } from './preprocessor.js';\r\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\r\nimport { TokenType, getTokenAttr, } from '../common/token.js';\r\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\r\nimport { ERR } from '../common/error-codes.js';\r\nimport { TAG_ID, getTagID } from '../common/html.js';\r\n//C1 Unicode control character reference replacements\r\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\r\n    [0x80, 8364],\r\n    [0x82, 8218],\r\n    [0x83, 402],\r\n    [0x84, 8222],\r\n    [0x85, 8230],\r\n    [0x86, 8224],\r\n    [0x87, 8225],\r\n    [0x88, 710],\r\n    [0x89, 8240],\r\n    [0x8a, 352],\r\n    [0x8b, 8249],\r\n    [0x8c, 338],\r\n    [0x8e, 381],\r\n    [0x91, 8216],\r\n    [0x92, 8217],\r\n    [0x93, 8220],\r\n    [0x94, 8221],\r\n    [0x95, 8226],\r\n    [0x96, 8211],\r\n    [0x97, 8212],\r\n    [0x98, 732],\r\n    [0x99, 8482],\r\n    [0x9a, 353],\r\n    [0x9b, 8250],\r\n    [0x9c, 339],\r\n    [0x9e, 382],\r\n    [0x9f, 376],\r\n]);\r\n//States\r\nvar State;\r\n(function (State) {\r\n    State[State[\"DATA\"] = 0] = \"DATA\";\r\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\r\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\r\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\r\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\r\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\r\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\r\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\r\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\r\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\r\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\r\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\r\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\r\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\r\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\r\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\r\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\r\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\r\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\r\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\r\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\r\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\r\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\r\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\r\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\r\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\r\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\r\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\r\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\r\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\r\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\r\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\r\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\r\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\r\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\r\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\r\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\r\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\r\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\r\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\r\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\r\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\r\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\r\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\r\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\r\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\r\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\r\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\r\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\r\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\r\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\r\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\r\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\r\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\r\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\r\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\r\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\r\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\r\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\r\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\r\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\r\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\r\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\r\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\r\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\r\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\r\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\r\n})(State || (State = {}));\r\n//Tokenizer initial states for different modes\r\nexport const TokenizerMode = {\r\n    DATA: State.DATA,\r\n    RCDATA: State.RCDATA,\r\n    RAWTEXT: State.RAWTEXT,\r\n    SCRIPT_DATA: State.SCRIPT_DATA,\r\n    PLAINTEXT: State.PLAINTEXT,\r\n    CDATA_SECTION: State.CDATA_SECTION,\r\n};\r\n//Utils\r\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\r\n//this functions if they will be situated in another module due to context switch.\r\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\r\nfunction isAsciiDigit(cp) {\r\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\r\n}\r\nfunction isAsciiUpper(cp) {\r\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\r\n}\r\nfunction isAsciiLower(cp) {\r\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\r\n}\r\nfunction isAsciiLetter(cp) {\r\n    return isAsciiLower(cp) || isAsciiUpper(cp);\r\n}\r\nfunction isAsciiAlphaNumeric(cp) {\r\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\r\n}\r\nfunction isAsciiUpperHexDigit(cp) {\r\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\r\n}\r\nfunction isAsciiLowerHexDigit(cp) {\r\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\r\n}\r\nfunction isAsciiHexDigit(cp) {\r\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\r\n}\r\nfunction toAsciiLower(cp) {\r\n    return cp + 32;\r\n}\r\nfunction isWhitespace(cp) {\r\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\r\n}\r\nfunction isEntityInAttributeInvalidEnd(nextCp) {\r\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\r\n}\r\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\r\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\r\n}\r\n//Tokenizer\r\nexport class Tokenizer {\r\n    constructor(options, handler) {\r\n        this.options = options;\r\n        this.handler = handler;\r\n        this.paused = false;\r\n        /** Ensures that the parsing loop isn't run multiple times at once. */\r\n        this.inLoop = false;\r\n        /**\r\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\r\n         * and that it is not an integration point for either MathML or HTML.\r\n         *\r\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\r\n         */\r\n        this.inForeignNode = false;\r\n        this.lastStartTagName = '';\r\n        this.active = false;\r\n        this.state = State.DATA;\r\n        this.returnState = State.DATA;\r\n        this.charRefCode = -1;\r\n        this.consumedAfterSnapshot = -1;\r\n        this.currentCharacterToken = null;\r\n        this.currentToken = null;\r\n        this.currentAttr = { name: '', value: '' };\r\n        this.preprocessor = new Preprocessor(handler);\r\n        this.currentLocation = this.getCurrentLocation(-1);\r\n    }\r\n    //Errors\r\n    _err(code) {\r\n        var _a, _b;\r\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\r\n    }\r\n    // NOTE: `offset` may never run across line boundaries.\r\n    getCurrentLocation(offset) {\r\n        if (!this.options.sourceCodeLocationInfo) {\r\n            return null;\r\n        }\r\n        return {\r\n            startLine: this.preprocessor.line,\r\n            startCol: this.preprocessor.col - offset,\r\n            startOffset: this.preprocessor.offset - offset,\r\n            endLine: -1,\r\n            endCol: -1,\r\n            endOffset: -1,\r\n        };\r\n    }\r\n    _runParsingLoop() {\r\n        if (this.inLoop)\r\n            return;\r\n        this.inLoop = true;\r\n        while (this.active && !this.paused) {\r\n            this.consumedAfterSnapshot = 0;\r\n            const cp = this._consume();\r\n            if (!this._ensureHibernation()) {\r\n                this._callState(cp);\r\n            }\r\n        }\r\n        this.inLoop = false;\r\n    }\r\n    //API\r\n    pause() {\r\n        this.paused = true;\r\n    }\r\n    resume(writeCallback) {\r\n        if (!this.paused) {\r\n            throw new Error('Parser was already resumed');\r\n        }\r\n        this.paused = false;\r\n        // Necessary for synchronous resume.\r\n        if (this.inLoop)\r\n            return;\r\n        this._runParsingLoop();\r\n        if (!this.paused) {\r\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\r\n        }\r\n    }\r\n    write(chunk, isLastChunk, writeCallback) {\r\n        this.active = true;\r\n        this.preprocessor.write(chunk, isLastChunk);\r\n        this._runParsingLoop();\r\n        if (!this.paused) {\r\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\r\n        }\r\n    }\r\n    insertHtmlAtCurrentPos(chunk) {\r\n        this.active = true;\r\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\r\n        this._runParsingLoop();\r\n    }\r\n    //Hibernation\r\n    _ensureHibernation() {\r\n        if (this.preprocessor.endOfChunkHit) {\r\n            this._unconsume(this.consumedAfterSnapshot);\r\n            this.active = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    //Consumption\r\n    _consume() {\r\n        this.consumedAfterSnapshot++;\r\n        return this.preprocessor.advance();\r\n    }\r\n    _unconsume(count) {\r\n        this.consumedAfterSnapshot -= count;\r\n        this.preprocessor.retreat(count);\r\n    }\r\n    _reconsumeInState(state, cp) {\r\n        this.state = state;\r\n        this._callState(cp);\r\n    }\r\n    _advanceBy(count) {\r\n        this.consumedAfterSnapshot += count;\r\n        for (let i = 0; i < count; i++) {\r\n            this.preprocessor.advance();\r\n        }\r\n    }\r\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\r\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\r\n            // We will already have consumed one character before calling this method.\r\n            this._advanceBy(pattern.length - 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    //Token creation\r\n    _createStartTagToken() {\r\n        this.currentToken = {\r\n            type: TokenType.START_TAG,\r\n            tagName: '',\r\n            tagID: TAG_ID.UNKNOWN,\r\n            selfClosing: false,\r\n            ackSelfClosing: false,\r\n            attrs: [],\r\n            location: this.getCurrentLocation(1),\r\n        };\r\n    }\r\n    _createEndTagToken() {\r\n        this.currentToken = {\r\n            type: TokenType.END_TAG,\r\n            tagName: '',\r\n            tagID: TAG_ID.UNKNOWN,\r\n            selfClosing: false,\r\n            ackSelfClosing: false,\r\n            attrs: [],\r\n            location: this.getCurrentLocation(2),\r\n        };\r\n    }\r\n    _createCommentToken(offset) {\r\n        this.currentToken = {\r\n            type: TokenType.COMMENT,\r\n            data: '',\r\n            location: this.getCurrentLocation(offset),\r\n        };\r\n    }\r\n    _createDoctypeToken(initialName) {\r\n        this.currentToken = {\r\n            type: TokenType.DOCTYPE,\r\n            name: initialName,\r\n            forceQuirks: false,\r\n            publicId: null,\r\n            systemId: null,\r\n            location: this.currentLocation,\r\n        };\r\n    }\r\n    _createCharacterToken(type, chars) {\r\n        this.currentCharacterToken = {\r\n            type,\r\n            chars,\r\n            location: this.currentLocation,\r\n        };\r\n    }\r\n    //Tag attributes\r\n    _createAttr(attrNameFirstCh) {\r\n        this.currentAttr = {\r\n            name: attrNameFirstCh,\r\n            value: '',\r\n        };\r\n        this.currentLocation = this.getCurrentLocation(0);\r\n    }\r\n    _leaveAttrName() {\r\n        var _a;\r\n        var _b;\r\n        const token = this.currentToken;\r\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\r\n            token.attrs.push(this.currentAttr);\r\n            if (token.location && this.currentLocation) {\r\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\r\n                attrLocations[this.currentAttr.name] = this.currentLocation;\r\n                // Set end location\r\n                this._leaveAttrValue();\r\n            }\r\n        }\r\n        else {\r\n            this._err(ERR.duplicateAttribute);\r\n        }\r\n    }\r\n    _leaveAttrValue() {\r\n        if (this.currentLocation) {\r\n            this.currentLocation.endLine = this.preprocessor.line;\r\n            this.currentLocation.endCol = this.preprocessor.col;\r\n            this.currentLocation.endOffset = this.preprocessor.offset;\r\n        }\r\n    }\r\n    //Token emission\r\n    prepareToken(ct) {\r\n        this._emitCurrentCharacterToken(ct.location);\r\n        this.currentToken = null;\r\n        if (ct.location) {\r\n            ct.location.endLine = this.preprocessor.line;\r\n            ct.location.endCol = this.preprocessor.col + 1;\r\n            ct.location.endOffset = this.preprocessor.offset + 1;\r\n        }\r\n        this.currentLocation = this.getCurrentLocation(-1);\r\n    }\r\n    emitCurrentTagToken() {\r\n        const ct = this.currentToken;\r\n        this.prepareToken(ct);\r\n        ct.tagID = getTagID(ct.tagName);\r\n        if (ct.type === TokenType.START_TAG) {\r\n            this.lastStartTagName = ct.tagName;\r\n            this.handler.onStartTag(ct);\r\n        }\r\n        else {\r\n            if (ct.attrs.length > 0) {\r\n                this._err(ERR.endTagWithAttributes);\r\n            }\r\n            if (ct.selfClosing) {\r\n                this._err(ERR.endTagWithTrailingSolidus);\r\n            }\r\n            this.handler.onEndTag(ct);\r\n        }\r\n        this.preprocessor.dropParsedChunk();\r\n    }\r\n    emitCurrentComment(ct) {\r\n        this.prepareToken(ct);\r\n        this.handler.onComment(ct);\r\n        this.preprocessor.dropParsedChunk();\r\n    }\r\n    emitCurrentDoctype(ct) {\r\n        this.prepareToken(ct);\r\n        this.handler.onDoctype(ct);\r\n        this.preprocessor.dropParsedChunk();\r\n    }\r\n    _emitCurrentCharacterToken(nextLocation) {\r\n        if (this.currentCharacterToken) {\r\n            //NOTE: if we have a pending character token, make it's end location equal to the\r\n            //current token's start location.\r\n            if (nextLocation && this.currentCharacterToken.location) {\r\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\r\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\r\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\r\n            }\r\n            switch (this.currentCharacterToken.type) {\r\n                case TokenType.CHARACTER: {\r\n                    this.handler.onCharacter(this.currentCharacterToken);\r\n                    break;\r\n                }\r\n                case TokenType.NULL_CHARACTER: {\r\n                    this.handler.onNullCharacter(this.currentCharacterToken);\r\n                    break;\r\n                }\r\n                case TokenType.WHITESPACE_CHARACTER: {\r\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\r\n                    break;\r\n                }\r\n            }\r\n            this.currentCharacterToken = null;\r\n        }\r\n    }\r\n    _emitEOFToken() {\r\n        const location = this.getCurrentLocation(0);\r\n        if (location) {\r\n            location.endLine = location.startLine;\r\n            location.endCol = location.startCol;\r\n            location.endOffset = location.startOffset;\r\n        }\r\n        this._emitCurrentCharacterToken(location);\r\n        this.handler.onEof({ type: TokenType.EOF, location });\r\n        this.active = false;\r\n    }\r\n    //Characters emission\r\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\r\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\r\n    //If we have a sequence of characters that belong to the same group, the parser can process it\r\n    //as a single solid character token.\r\n    //So, there are 3 types of character tokens in parse5:\r\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\r\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\r\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\r\n    _appendCharToCurrentCharacterToken(type, ch) {\r\n        if (this.currentCharacterToken) {\r\n            if (this.currentCharacterToken.type !== type) {\r\n                this.currentLocation = this.getCurrentLocation(0);\r\n                this._emitCurrentCharacterToken(this.currentLocation);\r\n                this.preprocessor.dropParsedChunk();\r\n            }\r\n            else {\r\n                this.currentCharacterToken.chars += ch;\r\n                return;\r\n            }\r\n        }\r\n        this._createCharacterToken(type, ch);\r\n    }\r\n    _emitCodePoint(cp) {\r\n        const type = isWhitespace(cp)\r\n            ? TokenType.WHITESPACE_CHARACTER\r\n            : cp === $.NULL\r\n                ? TokenType.NULL_CHARACTER\r\n                : TokenType.CHARACTER;\r\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\r\n    }\r\n    //NOTE: used when we emit characters explicitly.\r\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\r\n    _emitChars(ch) {\r\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\r\n    }\r\n    // Character reference helpers\r\n    _matchNamedCharacterReference(cp) {\r\n        let result = null;\r\n        let excess = 0;\r\n        let withoutSemicolon = false;\r\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\r\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\r\n            if (i < 0)\r\n                break;\r\n            excess += 1;\r\n            current = htmlDecodeTree[i];\r\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\r\n            // If the branch is a value, store it and continue\r\n            if (masked) {\r\n                // The mask is the number of bytes of the value, including the current byte.\r\n                const valueLength = (masked >> 14) - 1;\r\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\r\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\r\n                if (cp !== $.SEMICOLON &&\r\n                    this._isCharacterReferenceInAttribute() &&\r\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\r\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\r\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\r\n                    result = [$.AMPERSAND];\r\n                    // Skip over the value.\r\n                    i += valueLength;\r\n                }\r\n                else {\r\n                    // If this is a surrogate pair, consume the next two bytes.\r\n                    result =\r\n                        valueLength === 0\r\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\r\n                            : valueLength === 1\r\n                                ? [htmlDecodeTree[++i]]\r\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\r\n                    excess = 0;\r\n                    withoutSemicolon = cp !== $.SEMICOLON;\r\n                }\r\n                if (valueLength === 0) {\r\n                    // If the value is zero-length, we're done.\r\n                    this._consume();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this._unconsume(excess);\r\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\r\n            this._err(ERR.missingSemicolonAfterCharacterReference);\r\n        }\r\n        // We want to emit the error above on the code point after the entity.\r\n        // We always consume one code point too many in the loop, and we wait to\r\n        // unconsume it until after the error is emitted.\r\n        this._unconsume(1);\r\n        return result;\r\n    }\r\n    _isCharacterReferenceInAttribute() {\r\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\r\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\r\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\r\n    }\r\n    _flushCodePointConsumedAsCharacterReference(cp) {\r\n        if (this._isCharacterReferenceInAttribute()) {\r\n            this.currentAttr.value += String.fromCodePoint(cp);\r\n        }\r\n        else {\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n    // Calling states this way turns out to be much faster than any other approach.\r\n    _callState(cp) {\r\n        switch (this.state) {\r\n            case State.DATA: {\r\n                this._stateData(cp);\r\n                break;\r\n            }\r\n            case State.RCDATA: {\r\n                this._stateRcdata(cp);\r\n                break;\r\n            }\r\n            case State.RAWTEXT: {\r\n                this._stateRawtext(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA: {\r\n                this._stateScriptData(cp);\r\n                break;\r\n            }\r\n            case State.PLAINTEXT: {\r\n                this._statePlaintext(cp);\r\n                break;\r\n            }\r\n            case State.TAG_OPEN: {\r\n                this._stateTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.END_TAG_OPEN: {\r\n                this._stateEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.TAG_NAME: {\r\n                this._stateTagName(cp);\r\n                break;\r\n            }\r\n            case State.RCDATA_LESS_THAN_SIGN: {\r\n                this._stateRcdataLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.RCDATA_END_TAG_OPEN: {\r\n                this._stateRcdataEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.RCDATA_END_TAG_NAME: {\r\n                this._stateRcdataEndTagName(cp);\r\n                break;\r\n            }\r\n            case State.RAWTEXT_LESS_THAN_SIGN: {\r\n                this._stateRawtextLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.RAWTEXT_END_TAG_OPEN: {\r\n                this._stateRawtextEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.RAWTEXT_END_TAG_NAME: {\r\n                this._stateRawtextEndTagName(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\r\n                this._stateScriptDataLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\r\n                this._stateScriptDataEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_END_TAG_NAME: {\r\n                this._stateScriptDataEndTagName(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPE_START: {\r\n                this._stateScriptDataEscapeStart(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\r\n                this._stateScriptDataEscapeStartDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED: {\r\n                this._stateScriptDataEscaped(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\r\n                this._stateScriptDataEscapedDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\r\n                this._stateScriptDataEscapedDashDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\r\n                this._stateScriptDataEscapedLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\r\n                this._stateScriptDataEscapedEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\r\n                this._stateScriptDataEscapedEndTagName(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\r\n                this._stateScriptDataDoubleEscapeStart(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\r\n                this._stateScriptDataDoubleEscaped(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\r\n                this._stateScriptDataDoubleEscapedDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\r\n                this._stateScriptDataDoubleEscapedDashDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\r\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\r\n                this._stateScriptDataDoubleEscapeEnd(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_ATTRIBUTE_NAME: {\r\n                this._stateBeforeAttributeName(cp);\r\n                break;\r\n            }\r\n            case State.ATTRIBUTE_NAME: {\r\n                this._stateAttributeName(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_ATTRIBUTE_NAME: {\r\n                this._stateAfterAttributeName(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_ATTRIBUTE_VALUE: {\r\n                this._stateBeforeAttributeValue(cp);\r\n                break;\r\n            }\r\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\r\n                this._stateAttributeValueDoubleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\r\n                this._stateAttributeValueSingleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\r\n                this._stateAttributeValueUnquoted(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\r\n                this._stateAfterAttributeValueQuoted(cp);\r\n                break;\r\n            }\r\n            case State.SELF_CLOSING_START_TAG: {\r\n                this._stateSelfClosingStartTag(cp);\r\n                break;\r\n            }\r\n            case State.BOGUS_COMMENT: {\r\n                this._stateBogusComment(cp);\r\n                break;\r\n            }\r\n            case State.MARKUP_DECLARATION_OPEN: {\r\n                this._stateMarkupDeclarationOpen(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_START: {\r\n                this._stateCommentStart(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_START_DASH: {\r\n                this._stateCommentStartDash(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT: {\r\n                this._stateComment(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_LESS_THAN_SIGN: {\r\n                this._stateCommentLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\r\n                this._stateCommentLessThanSignBang(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\r\n                this._stateCommentLessThanSignBangDash(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\r\n                this._stateCommentLessThanSignBangDashDash(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_END_DASH: {\r\n                this._stateCommentEndDash(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_END: {\r\n                this._stateCommentEnd(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_END_BANG: {\r\n                this._stateCommentEndBang(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE: {\r\n                this._stateDoctype(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_DOCTYPE_NAME: {\r\n                this._stateBeforeDoctypeName(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_NAME: {\r\n                this._stateDoctypeName(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_NAME: {\r\n                this._stateAfterDoctypeName(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\r\n                this._stateAfterDoctypePublicKeyword(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\r\n                this._stateBeforeDoctypePublicIdentifier(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\r\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\r\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\r\n                this._stateAfterDoctypePublicIdentifier(cp);\r\n                break;\r\n            }\r\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\r\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\r\n                this._stateAfterDoctypeSystemKeyword(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\r\n                this._stateBeforeDoctypeSystemIdentifier(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\r\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\r\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\r\n                this._stateAfterDoctypeSystemIdentifier(cp);\r\n                break;\r\n            }\r\n            case State.BOGUS_DOCTYPE: {\r\n                this._stateBogusDoctype(cp);\r\n                break;\r\n            }\r\n            case State.CDATA_SECTION: {\r\n                this._stateCdataSection(cp);\r\n                break;\r\n            }\r\n            case State.CDATA_SECTION_BRACKET: {\r\n                this._stateCdataSectionBracket(cp);\r\n                break;\r\n            }\r\n            case State.CDATA_SECTION_END: {\r\n                this._stateCdataSectionEnd(cp);\r\n                break;\r\n            }\r\n            case State.CHARACTER_REFERENCE: {\r\n                this._stateCharacterReference(cp);\r\n                break;\r\n            }\r\n            case State.NAMED_CHARACTER_REFERENCE: {\r\n                this._stateNamedCharacterReference(cp);\r\n                break;\r\n            }\r\n            case State.AMBIGUOUS_AMPERSAND: {\r\n                this._stateAmbiguousAmpersand(cp);\r\n                break;\r\n            }\r\n            case State.NUMERIC_CHARACTER_REFERENCE: {\r\n                this._stateNumericCharacterReference(cp);\r\n                break;\r\n            }\r\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\r\n                this._stateHexademicalCharacterReferenceStart(cp);\r\n                break;\r\n            }\r\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\r\n                this._stateHexademicalCharacterReference(cp);\r\n                break;\r\n            }\r\n            case State.DECIMAL_CHARACTER_REFERENCE: {\r\n                this._stateDecimalCharacterReference(cp);\r\n                break;\r\n            }\r\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\r\n                this._stateNumericCharacterReferenceEnd(cp);\r\n                break;\r\n            }\r\n            default: {\r\n                throw new Error('Unknown state');\r\n            }\r\n        }\r\n    }\r\n    // State machine\r\n    // Data state\r\n    //------------------------------------------------------------------\r\n    _stateData(cp) {\r\n        switch (cp) {\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.TAG_OPEN;\r\n                break;\r\n            }\r\n            case $.AMPERSAND: {\r\n                this.returnState = State.DATA;\r\n                this.state = State.CHARACTER_REFERENCE;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitCodePoint(cp);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    //  RCDATA state\r\n    //------------------------------------------------------------------\r\n    _stateRcdata(cp) {\r\n        switch (cp) {\r\n            case $.AMPERSAND: {\r\n                this.returnState = State.RCDATA;\r\n                this.state = State.CHARACTER_REFERENCE;\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.RCDATA_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // RAWTEXT state\r\n    //------------------------------------------------------------------\r\n    _stateRawtext(cp) {\r\n        switch (cp) {\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data state\r\n    //------------------------------------------------------------------\r\n    _stateScriptData(cp) {\r\n        switch (cp) {\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // PLAINTEXT state\r\n    //------------------------------------------------------------------\r\n    _statePlaintext(cp) {\r\n        switch (cp) {\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Tag open state\r\n    //------------------------------------------------------------------\r\n    _stateTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this._createStartTagToken();\r\n            this.state = State.TAG_NAME;\r\n            this._stateTagName(cp);\r\n        }\r\n        else\r\n            switch (cp) {\r\n                case $.EXCLAMATION_MARK: {\r\n                    this.state = State.MARKUP_DECLARATION_OPEN;\r\n                    break;\r\n                }\r\n                case $.SOLIDUS: {\r\n                    this.state = State.END_TAG_OPEN;\r\n                    break;\r\n                }\r\n                case $.QUESTION_MARK: {\r\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\r\n                    this._createCommentToken(1);\r\n                    this.state = State.BOGUS_COMMENT;\r\n                    this._stateBogusComment(cp);\r\n                    break;\r\n                }\r\n                case $.EOF: {\r\n                    this._err(ERR.eofBeforeTagName);\r\n                    this._emitChars('<');\r\n                    this._emitEOFToken();\r\n                    break;\r\n                }\r\n                default: {\r\n                    this._err(ERR.invalidFirstCharacterOfTagName);\r\n                    this._emitChars('<');\r\n                    this.state = State.DATA;\r\n                    this._stateData(cp);\r\n                }\r\n            }\r\n    }\r\n    // End tag open state\r\n    //------------------------------------------------------------------\r\n    _stateEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this._createEndTagToken();\r\n            this.state = State.TAG_NAME;\r\n            this._stateTagName(cp);\r\n        }\r\n        else\r\n            switch (cp) {\r\n                case $.GREATER_THAN_SIGN: {\r\n                    this._err(ERR.missingEndTagName);\r\n                    this.state = State.DATA;\r\n                    break;\r\n                }\r\n                case $.EOF: {\r\n                    this._err(ERR.eofBeforeTagName);\r\n                    this._emitChars('</');\r\n                    this._emitEOFToken();\r\n                    break;\r\n                }\r\n                default: {\r\n                    this._err(ERR.invalidFirstCharacterOfTagName);\r\n                    this._createCommentToken(2);\r\n                    this.state = State.BOGUS_COMMENT;\r\n                    this._stateBogusComment(cp);\r\n                }\r\n            }\r\n    }\r\n    // Tag name state\r\n    //------------------------------------------------------------------\r\n    _stateTagName(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                break;\r\n            }\r\n            case $.SOLIDUS: {\r\n                this.state = State.SELF_CLOSING_START_TAG;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.tagName += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\r\n            }\r\n        }\r\n    }\r\n    // RCDATA less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateRcdataLessThanSign(cp) {\r\n        if (cp === $.SOLIDUS) {\r\n            this.state = State.RCDATA_END_TAG_OPEN;\r\n        }\r\n        else {\r\n            this._emitChars('<');\r\n            this.state = State.RCDATA;\r\n            this._stateRcdata(cp);\r\n        }\r\n    }\r\n    // RCDATA end tag open state\r\n    //------------------------------------------------------------------\r\n    _stateRcdataEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this.state = State.RCDATA_END_TAG_NAME;\r\n            this._stateRcdataEndTagName(cp);\r\n        }\r\n        else {\r\n            this._emitChars('</');\r\n            this.state = State.RCDATA;\r\n            this._stateRcdata(cp);\r\n        }\r\n    }\r\n    handleSpecialEndTag(_cp) {\r\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\r\n            return !this._ensureHibernation();\r\n        }\r\n        this._createEndTagToken();\r\n        const token = this.currentToken;\r\n        token.tagName = this.lastStartTagName;\r\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this._advanceBy(this.lastStartTagName.length);\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                return false;\r\n            }\r\n            case $.SOLIDUS: {\r\n                this._advanceBy(this.lastStartTagName.length);\r\n                this.state = State.SELF_CLOSING_START_TAG;\r\n                return false;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._advanceBy(this.lastStartTagName.length);\r\n                this.emitCurrentTagToken();\r\n                this.state = State.DATA;\r\n                return false;\r\n            }\r\n            default: {\r\n                return !this._ensureHibernation();\r\n            }\r\n        }\r\n    }\r\n    // RCDATA end tag name state\r\n    //------------------------------------------------------------------\r\n    _stateRcdataEndTagName(cp) {\r\n        if (this.handleSpecialEndTag(cp)) {\r\n            this._emitChars('</');\r\n            this.state = State.RCDATA;\r\n            this._stateRcdata(cp);\r\n        }\r\n    }\r\n    // RAWTEXT less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateRawtextLessThanSign(cp) {\r\n        if (cp === $.SOLIDUS) {\r\n            this.state = State.RAWTEXT_END_TAG_OPEN;\r\n        }\r\n        else {\r\n            this._emitChars('<');\r\n            this.state = State.RAWTEXT;\r\n            this._stateRawtext(cp);\r\n        }\r\n    }\r\n    // RAWTEXT end tag open state\r\n    //------------------------------------------------------------------\r\n    _stateRawtextEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this.state = State.RAWTEXT_END_TAG_NAME;\r\n            this._stateRawtextEndTagName(cp);\r\n        }\r\n        else {\r\n            this._emitChars('</');\r\n            this.state = State.RAWTEXT;\r\n            this._stateRawtext(cp);\r\n        }\r\n    }\r\n    // RAWTEXT end tag name state\r\n    //------------------------------------------------------------------\r\n    _stateRawtextEndTagName(cp) {\r\n        if (this.handleSpecialEndTag(cp)) {\r\n            this._emitChars('</');\r\n            this.state = State.RAWTEXT;\r\n            this._stateRawtext(cp);\r\n        }\r\n    }\r\n    // Script data less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataLessThanSign(cp) {\r\n        switch (cp) {\r\n            case $.SOLIDUS: {\r\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\r\n                break;\r\n            }\r\n            case $.EXCLAMATION_MARK: {\r\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\r\n                this._emitChars('<!');\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitChars('<');\r\n                this.state = State.SCRIPT_DATA;\r\n                this._stateScriptData(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data end tag open state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\r\n            this._stateScriptDataEndTagName(cp);\r\n        }\r\n        else {\r\n            this._emitChars('</');\r\n            this.state = State.SCRIPT_DATA;\r\n            this._stateScriptData(cp);\r\n        }\r\n    }\r\n    // Script data end tag name state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEndTagName(cp) {\r\n        if (this.handleSpecialEndTag(cp)) {\r\n            this._emitChars('</');\r\n            this.state = State.SCRIPT_DATA;\r\n            this._stateScriptData(cp);\r\n        }\r\n    }\r\n    // Script data escape start state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapeStart(cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\r\n            this._emitChars('-');\r\n        }\r\n        else {\r\n            this.state = State.SCRIPT_DATA;\r\n            this._stateScriptData(cp);\r\n        }\r\n    }\r\n    // Script data escape start dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapeStartDash(cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\r\n            this._emitChars('-');\r\n        }\r\n        else {\r\n            this.state = State.SCRIPT_DATA;\r\n            this._stateScriptData(cp);\r\n        }\r\n    }\r\n    // Script data escaped state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscaped(cp) {\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data escaped dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedDash(cp) {\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.state = State.SCRIPT_DATA_ESCAPED;\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED;\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data escaped dash dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedDashDash(cp) {\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA;\r\n                this._emitChars('>');\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.state = State.SCRIPT_DATA_ESCAPED;\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED;\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data escaped less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedLessThanSign(cp) {\r\n        if (cp === $.SOLIDUS) {\r\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\r\n        }\r\n        else if (isAsciiLetter(cp)) {\r\n            this._emitChars('<');\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\r\n            this._stateScriptDataDoubleEscapeStart(cp);\r\n        }\r\n        else {\r\n            this._emitChars('<');\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n            this._stateScriptDataEscaped(cp);\r\n        }\r\n    }\r\n    // Script data escaped end tag open state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\r\n            this._stateScriptDataEscapedEndTagName(cp);\r\n        }\r\n        else {\r\n            this._emitChars('</');\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n            this._stateScriptDataEscaped(cp);\r\n        }\r\n    }\r\n    // Script data escaped end tag name state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedEndTagName(cp) {\r\n        if (this.handleSpecialEndTag(cp)) {\r\n            this._emitChars('</');\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n            this._stateScriptDataEscaped(cp);\r\n        }\r\n    }\r\n    // Script data double escape start state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapeStart(cp) {\r\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\r\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\r\n            this._emitCodePoint(cp);\r\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\r\n                this._emitCodePoint(this._consume());\r\n            }\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n        }\r\n        else if (!this._ensureHibernation()) {\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n            this._stateScriptDataEscaped(cp);\r\n        }\r\n    }\r\n    // Script data double escaped state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscaped(cp) {\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\r\n                this._emitChars('<');\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data double escaped dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapedDash(cp) {\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\r\n                this._emitChars('<');\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data double escaped dash dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapedDashDash(cp) {\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\r\n                this._emitChars('<');\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA;\r\n                this._emitChars('>');\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data double escaped less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\r\n        if (cp === $.SOLIDUS) {\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\r\n            this._emitChars('/');\r\n        }\r\n        else {\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n            this._stateScriptDataDoubleEscaped(cp);\r\n        }\r\n    }\r\n    // Script data double escape end state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapeEnd(cp) {\r\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\r\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\r\n            this._emitCodePoint(cp);\r\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\r\n                this._emitCodePoint(this._consume());\r\n            }\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n        }\r\n        else if (!this._ensureHibernation()) {\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n            this._stateScriptDataDoubleEscaped(cp);\r\n        }\r\n    }\r\n    // Before attribute name state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeAttributeName(cp) {\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.SOLIDUS:\r\n            case $.GREATER_THAN_SIGN:\r\n            case $.EOF: {\r\n                this.state = State.AFTER_ATTRIBUTE_NAME;\r\n                this._stateAfterAttributeName(cp);\r\n                break;\r\n            }\r\n            case $.EQUALS_SIGN: {\r\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\r\n                this._createAttr('=');\r\n                this.state = State.ATTRIBUTE_NAME;\r\n                break;\r\n            }\r\n            default: {\r\n                this._createAttr('');\r\n                this.state = State.ATTRIBUTE_NAME;\r\n                this._stateAttributeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Attribute name state\r\n    //------------------------------------------------------------------\r\n    _stateAttributeName(cp) {\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED:\r\n            case $.SOLIDUS:\r\n            case $.GREATER_THAN_SIGN:\r\n            case $.EOF: {\r\n                this._leaveAttrName();\r\n                this.state = State.AFTER_ATTRIBUTE_NAME;\r\n                this._stateAfterAttributeName(cp);\r\n                break;\r\n            }\r\n            case $.EQUALS_SIGN: {\r\n                this._leaveAttrName();\r\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK:\r\n            case $.APOSTROPHE:\r\n            case $.LESS_THAN_SIGN: {\r\n                this._err(ERR.unexpectedCharacterInAttributeName);\r\n                this.currentAttr.name += String.fromCodePoint(cp);\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            default: {\r\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\r\n            }\r\n        }\r\n    }\r\n    // After attribute name state\r\n    //------------------------------------------------------------------\r\n    _stateAfterAttributeName(cp) {\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.SOLIDUS: {\r\n                this.state = State.SELF_CLOSING_START_TAG;\r\n                break;\r\n            }\r\n            case $.EQUALS_SIGN: {\r\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._createAttr('');\r\n                this.state = State.ATTRIBUTE_NAME;\r\n                this._stateAttributeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Before attribute value state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeAttributeValue(cp) {\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK: {\r\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.APOSTROPHE: {\r\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingAttributeValue);\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\r\n                this._stateAttributeValueUnquoted(cp);\r\n            }\r\n        }\r\n    }\r\n    // Attribute value (double-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateAttributeValueDoubleQuoted(cp) {\r\n        switch (cp) {\r\n            case $.QUOTATION_MARK: {\r\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\r\n                break;\r\n            }\r\n            case $.AMPERSAND: {\r\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\r\n                this.state = State.CHARACTER_REFERENCE;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.currentAttr.value += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Attribute value (single-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateAttributeValueSingleQuoted(cp) {\r\n        switch (cp) {\r\n            case $.APOSTROPHE: {\r\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\r\n                break;\r\n            }\r\n            case $.AMPERSAND: {\r\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\r\n                this.state = State.CHARACTER_REFERENCE;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.currentAttr.value += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Attribute value (unquoted) state\r\n    //------------------------------------------------------------------\r\n    _stateAttributeValueUnquoted(cp) {\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this._leaveAttrValue();\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                break;\r\n            }\r\n            case $.AMPERSAND: {\r\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\r\n                this.state = State.CHARACTER_REFERENCE;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._leaveAttrValue();\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK:\r\n            case $.APOSTROPHE:\r\n            case $.LESS_THAN_SIGN:\r\n            case $.EQUALS_SIGN:\r\n            case $.GRAVE_ACCENT: {\r\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\r\n                this.currentAttr.value += String.fromCodePoint(cp);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.currentAttr.value += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // After attribute value (quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateAfterAttributeValueQuoted(cp) {\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this._leaveAttrValue();\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                break;\r\n            }\r\n            case $.SOLIDUS: {\r\n                this._leaveAttrValue();\r\n                this.state = State.SELF_CLOSING_START_TAG;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._leaveAttrValue();\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingWhitespaceBetweenAttributes);\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                this._stateBeforeAttributeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Self-closing start tag state\r\n    //------------------------------------------------------------------\r\n    _stateSelfClosingStartTag(cp) {\r\n        switch (cp) {\r\n            case $.GREATER_THAN_SIGN: {\r\n                const token = this.currentToken;\r\n                token.selfClosing = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.unexpectedSolidusInTag);\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                this._stateBeforeAttributeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Bogus comment state\r\n    //------------------------------------------------------------------\r\n    _stateBogusComment(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.data += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Markup declaration open state\r\n    //------------------------------------------------------------------\r\n    _stateMarkupDeclarationOpen(cp) {\r\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\r\n            this._createCommentToken($$.DASH_DASH.length + 1);\r\n            this.state = State.COMMENT_START;\r\n        }\r\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\r\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\r\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\r\n            this.state = State.DOCTYPE;\r\n        }\r\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\r\n            if (this.inForeignNode) {\r\n                this.state = State.CDATA_SECTION;\r\n            }\r\n            else {\r\n                this._err(ERR.cdataInHtmlContent);\r\n                this._createCommentToken($$.CDATA_START.length + 1);\r\n                this.currentToken.data = '[CDATA[';\r\n                this.state = State.BOGUS_COMMENT;\r\n            }\r\n        }\r\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\r\n        //results are no longer valid and we will need to start over.\r\n        else if (!this._ensureHibernation()) {\r\n            this._err(ERR.incorrectlyOpenedComment);\r\n            this._createCommentToken(2);\r\n            this.state = State.BOGUS_COMMENT;\r\n            this._stateBogusComment(cp);\r\n        }\r\n    }\r\n    // Comment start state\r\n    //------------------------------------------------------------------\r\n    _stateCommentStart(cp) {\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.COMMENT_START_DASH;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptClosingOfEmptyComment);\r\n                this.state = State.DATA;\r\n                const token = this.currentToken;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment start dash state\r\n    //------------------------------------------------------------------\r\n    _stateCommentStartDash(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.COMMENT_END;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptClosingOfEmptyComment);\r\n                this.state = State.DATA;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += '-';\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment state\r\n    //------------------------------------------------------------------\r\n    _stateComment(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.COMMENT_END_DASH;\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                token.data += '<';\r\n                this.state = State.COMMENT_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.data += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateCommentLessThanSign(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.EXCLAMATION_MARK: {\r\n                token.data += '!';\r\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                token.data += '<';\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment less-than sign bang state\r\n    //------------------------------------------------------------------\r\n    _stateCommentLessThanSignBang(cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\r\n        }\r\n        else {\r\n            this.state = State.COMMENT;\r\n            this._stateComment(cp);\r\n        }\r\n    }\r\n    // Comment less-than sign bang dash state\r\n    //------------------------------------------------------------------\r\n    _stateCommentLessThanSignBangDash(cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\r\n        }\r\n        else {\r\n            this.state = State.COMMENT_END_DASH;\r\n            this._stateCommentEndDash(cp);\r\n        }\r\n    }\r\n    // Comment less-than sign bang dash dash state\r\n    //------------------------------------------------------------------\r\n    _stateCommentLessThanSignBangDashDash(cp) {\r\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\r\n            this._err(ERR.nestedComment);\r\n        }\r\n        this.state = State.COMMENT_END;\r\n        this._stateCommentEnd(cp);\r\n    }\r\n    // Comment end dash state\r\n    //------------------------------------------------------------------\r\n    _stateCommentEndDash(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.COMMENT_END;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += '-';\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment end state\r\n    //------------------------------------------------------------------\r\n    _stateCommentEnd(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            case $.EXCLAMATION_MARK: {\r\n                this.state = State.COMMENT_END_BANG;\r\n                break;\r\n            }\r\n            case $.HYPHEN_MINUS: {\r\n                token.data += '-';\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += '--';\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment end bang state\r\n    //------------------------------------------------------------------\r\n    _stateCommentEndBang(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                token.data += '--!';\r\n                this.state = State.COMMENT_END_DASH;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.incorrectlyClosedComment);\r\n                this.state = State.DATA;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += '--!';\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE state\r\n    //------------------------------------------------------------------\r\n    _stateDoctype(cp) {\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this.state = State.BEFORE_DOCTYPE_NAME;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.BEFORE_DOCTYPE_NAME;\r\n                this._stateBeforeDoctypeName(cp);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                this._createDoctypeToken(null);\r\n                const token = this.currentToken;\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\r\n                this.state = State.BEFORE_DOCTYPE_NAME;\r\n                this._stateBeforeDoctypeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Before DOCTYPE name state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeDoctypeName(cp) {\r\n        if (isAsciiUpper(cp)) {\r\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\r\n            this.state = State.DOCTYPE_NAME;\r\n        }\r\n        else\r\n            switch (cp) {\r\n                case $.SPACE:\r\n                case $.LINE_FEED:\r\n                case $.TABULATION:\r\n                case $.FORM_FEED: {\r\n                    // Ignore whitespace\r\n                    break;\r\n                }\r\n                case $.NULL: {\r\n                    this._err(ERR.unexpectedNullCharacter);\r\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\r\n                    this.state = State.DOCTYPE_NAME;\r\n                    break;\r\n                }\r\n                case $.GREATER_THAN_SIGN: {\r\n                    this._err(ERR.missingDoctypeName);\r\n                    this._createDoctypeToken(null);\r\n                    const token = this.currentToken;\r\n                    token.forceQuirks = true;\r\n                    this.emitCurrentDoctype(token);\r\n                    this.state = State.DATA;\r\n                    break;\r\n                }\r\n                case $.EOF: {\r\n                    this._err(ERR.eofInDoctype);\r\n                    this._createDoctypeToken(null);\r\n                    const token = this.currentToken;\r\n                    token.forceQuirks = true;\r\n                    this.emitCurrentDoctype(token);\r\n                    this._emitEOFToken();\r\n                    break;\r\n                }\r\n                default: {\r\n                    this._createDoctypeToken(String.fromCodePoint(cp));\r\n                    this.state = State.DOCTYPE_NAME;\r\n                }\r\n            }\r\n    }\r\n    // DOCTYPE name state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypeName(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this.state = State.AFTER_DOCTYPE_NAME;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.name += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE name state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypeName(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\r\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\r\n                }\r\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\r\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\r\n                }\r\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\r\n                //results are no longer valid and we will need to start over.\r\n                else if (!this._ensureHibernation()) {\r\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\r\n                    token.forceQuirks = true;\r\n                    this.state = State.BOGUS_DOCTYPE;\r\n                    this._stateBogusDoctype(cp);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE public keyword state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypePublicKeyword(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK: {\r\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\r\n                token.publicId = '';\r\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.APOSTROPHE: {\r\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\r\n                token.publicId = '';\r\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // Before DOCTYPE public identifier state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeDoctypePublicIdentifier(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK: {\r\n                token.publicId = '';\r\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.APOSTROPHE: {\r\n                token.publicId = '';\r\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE public identifier (double-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.QUOTATION_MARK: {\r\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.publicId += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.publicId += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE public identifier (single-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.APOSTROPHE: {\r\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.publicId += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.publicId += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE public identifier state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypePublicIdentifier(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK: {\r\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.APOSTROPHE: {\r\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // Between DOCTYPE public and system identifiers state\r\n    //------------------------------------------------------------------\r\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK: {\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.APOSTROPHE: {\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE system keyword state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypeSystemKeyword(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK: {\r\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.APOSTROPHE: {\r\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // Before DOCTYPE system identifier state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeDoctypeSystemIdentifier(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK: {\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.APOSTROPHE: {\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE system identifier (double-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.QUOTATION_MARK: {\r\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.systemId += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.systemId += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE system identifier (single-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.APOSTROPHE: {\r\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.systemId += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.systemId += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE system identifier state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypeSystemIdentifier(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // Bogus DOCTYPE state\r\n    //------------------------------------------------------------------\r\n    _stateBogusDoctype(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    // CDATA section state\r\n    //------------------------------------------------------------------\r\n    _stateCdataSection(cp) {\r\n        switch (cp) {\r\n            case $.RIGHT_SQUARE_BRACKET: {\r\n                this.state = State.CDATA_SECTION_BRACKET;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInCdata);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // CDATA section bracket state\r\n    //------------------------------------------------------------------\r\n    _stateCdataSectionBracket(cp) {\r\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\r\n            this.state = State.CDATA_SECTION_END;\r\n        }\r\n        else {\r\n            this._emitChars(']');\r\n            this.state = State.CDATA_SECTION;\r\n            this._stateCdataSection(cp);\r\n        }\r\n    }\r\n    // CDATA section end state\r\n    //------------------------------------------------------------------\r\n    _stateCdataSectionEnd(cp) {\r\n        switch (cp) {\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.RIGHT_SQUARE_BRACKET: {\r\n                this._emitChars(']');\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitChars(']]');\r\n                this.state = State.CDATA_SECTION;\r\n                this._stateCdataSection(cp);\r\n            }\r\n        }\r\n    }\r\n    // Character reference state\r\n    //------------------------------------------------------------------\r\n    _stateCharacterReference(cp) {\r\n        if (cp === $.NUMBER_SIGN) {\r\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\r\n        }\r\n        else if (isAsciiAlphaNumeric(cp)) {\r\n            this.state = State.NAMED_CHARACTER_REFERENCE;\r\n            this._stateNamedCharacterReference(cp);\r\n        }\r\n        else {\r\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\r\n            this._reconsumeInState(this.returnState, cp);\r\n        }\r\n    }\r\n    // Named character reference state\r\n    //------------------------------------------------------------------\r\n    _stateNamedCharacterReference(cp) {\r\n        const matchResult = this._matchNamedCharacterReference(cp);\r\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\r\n        //results are no longer valid and we will need to start over.\r\n        if (this._ensureHibernation()) {\r\n            // Stay in the state, try again.\r\n        }\r\n        else if (matchResult) {\r\n            for (let i = 0; i < matchResult.length; i++) {\r\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\r\n            }\r\n            this.state = this.returnState;\r\n        }\r\n        else {\r\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\r\n            this.state = State.AMBIGUOUS_AMPERSAND;\r\n        }\r\n    }\r\n    // Ambiguos ampersand state\r\n    //------------------------------------------------------------------\r\n    _stateAmbiguousAmpersand(cp) {\r\n        if (isAsciiAlphaNumeric(cp)) {\r\n            this._flushCodePointConsumedAsCharacterReference(cp);\r\n        }\r\n        else {\r\n            if (cp === $.SEMICOLON) {\r\n                this._err(ERR.unknownNamedCharacterReference);\r\n            }\r\n            this._reconsumeInState(this.returnState, cp);\r\n        }\r\n    }\r\n    // Numeric character reference state\r\n    //------------------------------------------------------------------\r\n    _stateNumericCharacterReference(cp) {\r\n        this.charRefCode = 0;\r\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\r\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\r\n        }\r\n        // Inlined decimal character reference start state\r\n        else if (isAsciiDigit(cp)) {\r\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\r\n            this._stateDecimalCharacterReference(cp);\r\n        }\r\n        else {\r\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\r\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\r\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\r\n            this._reconsumeInState(this.returnState, cp);\r\n        }\r\n    }\r\n    // Hexademical character reference start state\r\n    //------------------------------------------------------------------\r\n    _stateHexademicalCharacterReferenceStart(cp) {\r\n        if (isAsciiHexDigit(cp)) {\r\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\r\n            this._stateHexademicalCharacterReference(cp);\r\n        }\r\n        else {\r\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\r\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\r\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\r\n            this._unconsume(2);\r\n            this.state = this.returnState;\r\n        }\r\n    }\r\n    // Hexademical character reference state\r\n    //------------------------------------------------------------------\r\n    _stateHexademicalCharacterReference(cp) {\r\n        if (isAsciiUpperHexDigit(cp)) {\r\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\r\n        }\r\n        else if (isAsciiLowerHexDigit(cp)) {\r\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\r\n        }\r\n        else if (isAsciiDigit(cp)) {\r\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\r\n        }\r\n        else if (cp === $.SEMICOLON) {\r\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\r\n        }\r\n        else {\r\n            this._err(ERR.missingSemicolonAfterCharacterReference);\r\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\r\n            this._stateNumericCharacterReferenceEnd(cp);\r\n        }\r\n    }\r\n    // Decimal character reference state\r\n    //------------------------------------------------------------------\r\n    _stateDecimalCharacterReference(cp) {\r\n        if (isAsciiDigit(cp)) {\r\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\r\n        }\r\n        else if (cp === $.SEMICOLON) {\r\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\r\n        }\r\n        else {\r\n            this._err(ERR.missingSemicolonAfterCharacterReference);\r\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\r\n            this._stateNumericCharacterReferenceEnd(cp);\r\n        }\r\n    }\r\n    // Numeric character reference end state\r\n    //------------------------------------------------------------------\r\n    _stateNumericCharacterReferenceEnd(cp) {\r\n        if (this.charRefCode === $.NULL) {\r\n            this._err(ERR.nullCharacterReference);\r\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\r\n        }\r\n        else if (this.charRefCode > 1114111) {\r\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\r\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\r\n        }\r\n        else if (isSurrogate(this.charRefCode)) {\r\n            this._err(ERR.surrogateCharacterReference);\r\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\r\n        }\r\n        else if (isUndefinedCodePoint(this.charRefCode)) {\r\n            this._err(ERR.noncharacterCharacterReference);\r\n        }\r\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\r\n            this._err(ERR.controlCharacterReference);\r\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\r\n            if (replacement !== undefined) {\r\n                this.charRefCode = replacement;\r\n            }\r\n        }\r\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\r\n        this._reconsumeInState(this.returnState, cp);\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map", "import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\r\n//Element utils\r\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\r\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\r\n    ...IMPLICIT_END_TAG_REQUIRED,\r\n    $.CAPTION,\r\n    $.COLGROUP,\r\n    $.TBODY,\r\n    $.TD,\r\n    $.TFOOT,\r\n    $.TH,\r\n    $.THEAD,\r\n    $.TR,\r\n]);\r\nconst SCOPING_ELEMENT_NS = new Map([\r\n    [$.APPLET, NS.HTML],\r\n    [$.CAPTION, NS.HTML],\r\n    [$.HTML, NS.HTML],\r\n    [$.MARQUEE, NS.HTML],\r\n    [$.OBJECT, NS.HTML],\r\n    [$.TABLE, NS.HTML],\r\n    [$.TD, NS.HTML],\r\n    [$.TEMPLATE, NS.HTML],\r\n    [$.TH, NS.HTML],\r\n    [$.ANNOTATION_XML, NS.MATHML],\r\n    [$.MI, NS.MATHML],\r\n    [$.MN, NS.MATHML],\r\n    [$.MO, NS.MATHML],\r\n    [$.MS, NS.MATHML],\r\n    [$.MTEXT, NS.MATHML],\r\n    [$.DESC, NS.SVG],\r\n    [$.FOREIGN_OBJECT, NS.SVG],\r\n    [$.TITLE, NS.SVG],\r\n]);\r\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\r\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\r\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\r\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\r\nconst TABLE_CELLS = [$.TD, $.TH];\r\n//Stack of open elements\r\nexport class OpenElementStack {\r\n    get currentTmplContentOrNode() {\r\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\r\n    }\r\n    constructor(document, treeAdapter, handler) {\r\n        this.treeAdapter = treeAdapter;\r\n        this.handler = handler;\r\n        this.items = [];\r\n        this.tagIDs = [];\r\n        this.stackTop = -1;\r\n        this.tmplCount = 0;\r\n        this.currentTagId = $.UNKNOWN;\r\n        this.current = document;\r\n    }\r\n    //Index of element\r\n    _indexOf(element) {\r\n        return this.items.lastIndexOf(element, this.stackTop);\r\n    }\r\n    //Update current element\r\n    _isInTemplate() {\r\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\r\n    }\r\n    _updateCurrentElement() {\r\n        this.current = this.items[this.stackTop];\r\n        this.currentTagId = this.tagIDs[this.stackTop];\r\n    }\r\n    //Mutations\r\n    push(element, tagID) {\r\n        this.stackTop++;\r\n        this.items[this.stackTop] = element;\r\n        this.current = element;\r\n        this.tagIDs[this.stackTop] = tagID;\r\n        this.currentTagId = tagID;\r\n        if (this._isInTemplate()) {\r\n            this.tmplCount++;\r\n        }\r\n        this.handler.onItemPush(element, tagID, true);\r\n    }\r\n    pop() {\r\n        const popped = this.current;\r\n        if (this.tmplCount > 0 && this._isInTemplate()) {\r\n            this.tmplCount--;\r\n        }\r\n        this.stackTop--;\r\n        this._updateCurrentElement();\r\n        this.handler.onItemPop(popped, true);\r\n    }\r\n    replace(oldElement, newElement) {\r\n        const idx = this._indexOf(oldElement);\r\n        this.items[idx] = newElement;\r\n        if (idx === this.stackTop) {\r\n            this.current = newElement;\r\n        }\r\n    }\r\n    insertAfter(referenceElement, newElement, newElementID) {\r\n        const insertionIdx = this._indexOf(referenceElement) + 1;\r\n        this.items.splice(insertionIdx, 0, newElement);\r\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\r\n        this.stackTop++;\r\n        if (insertionIdx === this.stackTop) {\r\n            this._updateCurrentElement();\r\n        }\r\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\r\n    }\r\n    popUntilTagNamePopped(tagName) {\r\n        let targetIdx = this.stackTop + 1;\r\n        do {\r\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\r\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\r\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\r\n    }\r\n    shortenToLength(idx) {\r\n        while (this.stackTop >= idx) {\r\n            const popped = this.current;\r\n            if (this.tmplCount > 0 && this._isInTemplate()) {\r\n                this.tmplCount -= 1;\r\n            }\r\n            this.stackTop--;\r\n            this._updateCurrentElement();\r\n            this.handler.onItemPop(popped, this.stackTop < idx);\r\n        }\r\n    }\r\n    popUntilElementPopped(element) {\r\n        const idx = this._indexOf(element);\r\n        this.shortenToLength(idx < 0 ? 0 : idx);\r\n    }\r\n    popUntilPopped(tagNames, targetNS) {\r\n        const idx = this._indexOfTagNames(tagNames, targetNS);\r\n        this.shortenToLength(idx < 0 ? 0 : idx);\r\n    }\r\n    popUntilNumberedHeaderPopped() {\r\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\r\n    }\r\n    popUntilTableCellPopped() {\r\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\r\n    }\r\n    popAllUpToHtmlElement() {\r\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\r\n        //we perform this fast stack clean up.\r\n        this.tmplCount = 0;\r\n        this.shortenToLength(1);\r\n    }\r\n    _indexOfTagNames(tagNames, namespace) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    clearBackTo(tagNames, targetNS) {\r\n        const idx = this._indexOfTagNames(tagNames, targetNS);\r\n        this.shortenToLength(idx + 1);\r\n    }\r\n    clearBackToTableContext() {\r\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\r\n    }\r\n    clearBackToTableBodyContext() {\r\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\r\n    }\r\n    clearBackToTableRowContext() {\r\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\r\n    }\r\n    remove(element) {\r\n        const idx = this._indexOf(element);\r\n        if (idx >= 0) {\r\n            if (idx === this.stackTop) {\r\n                this.pop();\r\n            }\r\n            else {\r\n                this.items.splice(idx, 1);\r\n                this.tagIDs.splice(idx, 1);\r\n                this.stackTop--;\r\n                this._updateCurrentElement();\r\n                this.handler.onItemPop(element, false);\r\n            }\r\n        }\r\n    }\r\n    //Search\r\n    tryPeekProperlyNestedBodyElement() {\r\n        //Properly nested <body> element (should be second element in stack).\r\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\r\n    }\r\n    contains(element) {\r\n        return this._indexOf(element) > -1;\r\n    }\r\n    getCommonAncestor(element) {\r\n        const elementIdx = this._indexOf(element) - 1;\r\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\r\n    }\r\n    isRootHtmlElementCurrent() {\r\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\r\n    }\r\n    //Element in scope\r\n    hasInScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n            if (tn === tagName && ns === NS.HTML) {\r\n                return true;\r\n            }\r\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasNumberedHeaderInScope() {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\r\n                return true;\r\n            }\r\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasInListItemScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n            if (tn === tagName && ns === NS.HTML) {\r\n                return true;\r\n            }\r\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasInButtonScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n            if (tn === tagName && ns === NS.HTML) {\r\n                return true;\r\n            }\r\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasInTableScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n            if (ns !== NS.HTML) {\r\n                continue;\r\n            }\r\n            if (tn === tagName) {\r\n                return true;\r\n            }\r\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasTableBodyContextInTableScope() {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n            if (ns !== NS.HTML) {\r\n                continue;\r\n            }\r\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\r\n                return true;\r\n            }\r\n            if (tn === $.TABLE || tn === $.HTML) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasInSelectScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n            if (ns !== NS.HTML) {\r\n                continue;\r\n            }\r\n            if (tn === tagName) {\r\n                return true;\r\n            }\r\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    //Implied end tags\r\n    generateImpliedEndTags() {\r\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\r\n            this.pop();\r\n        }\r\n    }\r\n    generateImpliedEndTagsThoroughly() {\r\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\r\n            this.pop();\r\n        }\r\n    }\r\n    generateImpliedEndTagsWithExclusion(exclusionId) {\r\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\r\n            this.pop();\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=open-element-stack.js.map", "//Const\r\nconst NOAH_ARK_CAPACITY = 3;\r\nexport var EntryType;\r\n(function (EntryType) {\r\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\r\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\r\n})(EntryType = EntryType || (EntryType = {}));\r\nconst MARKER = { type: EntryType.Marker };\r\n//List of formatting elements\r\nexport class FormattingElementList {\r\n    constructor(treeAdapter) {\r\n        this.treeAdapter = treeAdapter;\r\n        this.entries = [];\r\n        this.bookmark = null;\r\n    }\r\n    //Noah Ark's condition\r\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\r\n    //lightweight heuristics without thorough attributes check.\r\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\r\n        const candidates = [];\r\n        const neAttrsLength = neAttrs.length;\r\n        const neTagName = this.treeAdapter.getTagName(newElement);\r\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\r\n        for (let i = 0; i < this.entries.length; i++) {\r\n            const entry = this.entries[i];\r\n            if (entry.type === EntryType.Marker) {\r\n                break;\r\n            }\r\n            const { element } = entry;\r\n            if (this.treeAdapter.getTagName(element) === neTagName &&\r\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\r\n                const elementAttrs = this.treeAdapter.getAttrList(element);\r\n                if (elementAttrs.length === neAttrsLength) {\r\n                    candidates.push({ idx: i, attrs: elementAttrs });\r\n                }\r\n            }\r\n        }\r\n        return candidates;\r\n    }\r\n    _ensureNoahArkCondition(newElement) {\r\n        if (this.entries.length < NOAH_ARK_CAPACITY)\r\n            return;\r\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\r\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\r\n        if (candidates.length < NOAH_ARK_CAPACITY)\r\n            return;\r\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\r\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\r\n        let validCandidates = 0;\r\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\r\n        for (let i = 0; i < candidates.length; i++) {\r\n            const candidate = candidates[i];\r\n            // We know that `candidate.attrs.length === neAttrs.length`\r\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\r\n                validCandidates += 1;\r\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\r\n                    this.entries.splice(candidate.idx, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //Mutations\r\n    insertMarker() {\r\n        this.entries.unshift(MARKER);\r\n    }\r\n    pushElement(element, token) {\r\n        this._ensureNoahArkCondition(element);\r\n        this.entries.unshift({\r\n            type: EntryType.Element,\r\n            element,\r\n            token,\r\n        });\r\n    }\r\n    insertElementAfterBookmark(element, token) {\r\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\r\n        this.entries.splice(bookmarkIdx, 0, {\r\n            type: EntryType.Element,\r\n            element,\r\n            token,\r\n        });\r\n    }\r\n    removeEntry(entry) {\r\n        const entryIndex = this.entries.indexOf(entry);\r\n        if (entryIndex >= 0) {\r\n            this.entries.splice(entryIndex, 1);\r\n        }\r\n    }\r\n    /**\r\n     * Clears the list of formatting elements up to the last marker.\r\n     *\r\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\r\n     */\r\n    clearToLastMarker() {\r\n        const markerIdx = this.entries.indexOf(MARKER);\r\n        if (markerIdx >= 0) {\r\n            this.entries.splice(0, markerIdx + 1);\r\n        }\r\n        else {\r\n            this.entries.length = 0;\r\n        }\r\n    }\r\n    //Search\r\n    getElementEntryInScopeWithTagName(tagName) {\r\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\r\n        return entry && entry.type === EntryType.Element ? entry : null;\r\n    }\r\n    getElementEntry(element) {\r\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\r\n    }\r\n}\r\n//# sourceMappingURL=formatting-element-list.js.map", "import { DOCUMENT_MODE } from '../common/html.js';\r\nfunction createTextNode(value) {\r\n    return {\r\n        nodeName: '#text',\r\n        value,\r\n        parentNode: null,\r\n    };\r\n}\r\nexport const defaultTreeAdapter = {\r\n    //Node construction\r\n    createDocument() {\r\n        return {\r\n            nodeName: '#document',\r\n            mode: DOCUMENT_MODE.NO_QUIRKS,\r\n            childNodes: [],\r\n        };\r\n    },\r\n    createDocumentFragment() {\r\n        return {\r\n            nodeName: '#document-fragment',\r\n            childNodes: [],\r\n        };\r\n    },\r\n    createElement(tagName, namespaceURI, attrs) {\r\n        return {\r\n            nodeName: tagName,\r\n            tagName,\r\n            attrs,\r\n            namespaceURI,\r\n            childNodes: [],\r\n            parentNode: null,\r\n        };\r\n    },\r\n    createCommentNode(data) {\r\n        return {\r\n            nodeName: '#comment',\r\n            data,\r\n            parentNode: null,\r\n        };\r\n    },\r\n    //Tree mutation\r\n    appendChild(parentNode, newNode) {\r\n        parentNode.childNodes.push(newNode);\r\n        newNode.parentNode = parentNode;\r\n    },\r\n    insertBefore(parentNode, newNode, referenceNode) {\r\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\r\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\r\n        newNode.parentNode = parentNode;\r\n    },\r\n    setTemplateContent(templateElement, contentElement) {\r\n        templateElement.content = contentElement;\r\n    },\r\n    getTemplateContent(templateElement) {\r\n        return templateElement.content;\r\n    },\r\n    setDocumentType(document, name, publicId, systemId) {\r\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\r\n        if (doctypeNode) {\r\n            doctypeNode.name = name;\r\n            doctypeNode.publicId = publicId;\r\n            doctypeNode.systemId = systemId;\r\n        }\r\n        else {\r\n            const node = {\r\n                nodeName: '#documentType',\r\n                name,\r\n                publicId,\r\n                systemId,\r\n                parentNode: null,\r\n            };\r\n            defaultTreeAdapter.appendChild(document, node);\r\n        }\r\n    },\r\n    setDocumentMode(document, mode) {\r\n        document.mode = mode;\r\n    },\r\n    getDocumentMode(document) {\r\n        return document.mode;\r\n    },\r\n    detachNode(node) {\r\n        if (node.parentNode) {\r\n            const idx = node.parentNode.childNodes.indexOf(node);\r\n            node.parentNode.childNodes.splice(idx, 1);\r\n            node.parentNode = null;\r\n        }\r\n    },\r\n    insertText(parentNode, text) {\r\n        if (parentNode.childNodes.length > 0) {\r\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\r\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\r\n                prevNode.value += text;\r\n                return;\r\n            }\r\n        }\r\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\r\n    },\r\n    insertTextBefore(parentNode, text, referenceNode) {\r\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\r\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\r\n            prevNode.value += text;\r\n        }\r\n        else {\r\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\r\n        }\r\n    },\r\n    adoptAttributes(recipient, attrs) {\r\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\r\n        for (let j = 0; j < attrs.length; j++) {\r\n            if (!recipientAttrsMap.has(attrs[j].name)) {\r\n                recipient.attrs.push(attrs[j]);\r\n            }\r\n        }\r\n    },\r\n    //Tree traversing\r\n    getFirstChild(node) {\r\n        return node.childNodes[0];\r\n    },\r\n    getChildNodes(node) {\r\n        return node.childNodes;\r\n    },\r\n    getParentNode(node) {\r\n        return node.parentNode;\r\n    },\r\n    getAttrList(element) {\r\n        return element.attrs;\r\n    },\r\n    //Node data\r\n    getTagName(element) {\r\n        return element.tagName;\r\n    },\r\n    getNamespaceURI(element) {\r\n        return element.namespaceURI;\r\n    },\r\n    getTextNodeContent(textNode) {\r\n        return textNode.value;\r\n    },\r\n    getCommentNodeContent(commentNode) {\r\n        return commentNode.data;\r\n    },\r\n    getDocumentTypeNodeName(doctypeNode) {\r\n        return doctypeNode.name;\r\n    },\r\n    getDocumentTypeNodePublicId(doctypeNode) {\r\n        return doctypeNode.publicId;\r\n    },\r\n    getDocumentTypeNodeSystemId(doctypeNode) {\r\n        return doctypeNode.systemId;\r\n    },\r\n    //Node types\r\n    isTextNode(node) {\r\n        return node.nodeName === '#text';\r\n    },\r\n    isCommentNode(node) {\r\n        return node.nodeName === '#comment';\r\n    },\r\n    isDocumentTypeNode(node) {\r\n        return node.nodeName === '#documentType';\r\n    },\r\n    isElementNode(node) {\r\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\r\n    },\r\n    // Source code location\r\n    setNodeSourceCodeLocation(node, location) {\r\n        node.sourceCodeLocation = location;\r\n    },\r\n    getNodeSourceCodeLocation(node) {\r\n        return node.sourceCodeLocation;\r\n    },\r\n    updateNodeSourceCodeLocation(node, endLocation) {\r\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\r\n    },\r\n};\r\n//# sourceMappingURL=default.js.map", "import { DOCUMENT_MODE } from './html.js';\r\n//Const\r\nconst VALID_DOCTYPE_NAME = 'html';\r\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\r\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\r\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\r\n    '+//silmaril//dtd html pro v0r11 19970101//',\r\n    '-//as//dtd html 3.0 aswedit + extensions//',\r\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\r\n    '-//ietf//dtd html 2.0 level 1//',\r\n    '-//ietf//dtd html 2.0 level 2//',\r\n    '-//ietf//dtd html 2.0 strict level 1//',\r\n    '-//ietf//dtd html 2.0 strict level 2//',\r\n    '-//ietf//dtd html 2.0 strict//',\r\n    '-//ietf//dtd html 2.0//',\r\n    '-//ietf//dtd html 2.1e//',\r\n    '-//ietf//dtd html 3.0//',\r\n    '-//ietf//dtd html 3.2 final//',\r\n    '-//ietf//dtd html 3.2//',\r\n    '-//ietf//dtd html 3//',\r\n    '-//ietf//dtd html level 0//',\r\n    '-//ietf//dtd html level 1//',\r\n    '-//ietf//dtd html level 2//',\r\n    '-//ietf//dtd html level 3//',\r\n    '-//ietf//dtd html strict level 0//',\r\n    '-//ietf//dtd html strict level 1//',\r\n    '-//ietf//dtd html strict level 2//',\r\n    '-//ietf//dtd html strict level 3//',\r\n    '-//ietf//dtd html strict//',\r\n    '-//ietf//dtd html//',\r\n    '-//metrius//dtd metrius presentational//',\r\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\r\n    '-//microsoft//dtd internet explorer 2.0 html//',\r\n    '-//microsoft//dtd internet explorer 2.0 tables//',\r\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\r\n    '-//microsoft//dtd internet explorer 3.0 html//',\r\n    '-//microsoft//dtd internet explorer 3.0 tables//',\r\n    '-//netscape comm. corp.//dtd html//',\r\n    '-//netscape comm. corp.//dtd strict html//',\r\n    \"-//o'reilly and associates//dtd html 2.0//\",\r\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\r\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\r\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\r\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\r\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\r\n    '-//spyglass//dtd html 2.0 extended//',\r\n    '-//sun microsystems corp.//dtd hotjava html//',\r\n    '-//sun microsystems corp.//dtd hotjava strict html//',\r\n    '-//w3c//dtd html 3 1995-03-24//',\r\n    '-//w3c//dtd html 3.2 draft//',\r\n    '-//w3c//dtd html 3.2 final//',\r\n    '-//w3c//dtd html 3.2//',\r\n    '-//w3c//dtd html 3.2s draft//',\r\n    '-//w3c//dtd html 4.0 frameset//',\r\n    '-//w3c//dtd html 4.0 transitional//',\r\n    '-//w3c//dtd html experimental 19960712//',\r\n    '-//w3c//dtd html experimental 970421//',\r\n    '-//w3c//dtd w3 html//',\r\n    '-//w3o//dtd w3 html 3.0//',\r\n    '-//webtechs//dtd mozilla html 2.0//',\r\n    '-//webtechs//dtd mozilla html//',\r\n];\r\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\r\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\r\n    '-//w3c//dtd html 4.01 frameset//',\r\n    '-//w3c//dtd html 4.01 transitional//',\r\n];\r\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\r\n    '-//w3o//dtd w3 html strict 3.0//en//',\r\n    '-/w3c/dtd html 4.0 transitional/en',\r\n    'html',\r\n]);\r\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\r\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\r\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\r\n    '-//w3c//dtd html 4.01 frameset//',\r\n    '-//w3c//dtd html 4.01 transitional//',\r\n];\r\n//Utils\r\nfunction hasPrefix(publicId, prefixes) {\r\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\r\n}\r\n//API\r\nexport function isConforming(token) {\r\n    return (token.name === VALID_DOCTYPE_NAME &&\r\n        token.publicId === null &&\r\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\r\n}\r\nexport function getDocumentMode(token) {\r\n    if (token.name !== VALID_DOCTYPE_NAME) {\r\n        return DOCUMENT_MODE.QUIRKS;\r\n    }\r\n    const { systemId } = token;\r\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\r\n        return DOCUMENT_MODE.QUIRKS;\r\n    }\r\n    let { publicId } = token;\r\n    if (publicId !== null) {\r\n        publicId = publicId.toLowerCase();\r\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\r\n            return DOCUMENT_MODE.QUIRKS;\r\n        }\r\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\r\n        if (hasPrefix(publicId, prefixes)) {\r\n            return DOCUMENT_MODE.QUIRKS;\r\n        }\r\n        prefixes =\r\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\r\n        if (hasPrefix(publicId, prefixes)) {\r\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\r\n        }\r\n    }\r\n    return DOCUMENT_MODE.NO_QUIRKS;\r\n}\r\n//# sourceMappingURL=doctype.js.map", "import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\r\n//MIME types\r\nconst MIME_TYPES = {\r\n    TEXT_HTML: 'text/html',\r\n    APPLICATION_XML: 'application/xhtml+xml',\r\n};\r\n//Attributes\r\nconst DEFINITION_URL_ATTR = 'definitionurl';\r\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\r\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\r\n    'attributeName',\r\n    'attributeType',\r\n    'baseFrequency',\r\n    'baseProfile',\r\n    'calcMode',\r\n    'clipPathUnits',\r\n    'diffuseConstant',\r\n    'edgeMode',\r\n    'filterUnits',\r\n    'glyphRef',\r\n    'gradientTransform',\r\n    'gradientUnits',\r\n    'kernelMatrix',\r\n    'kernelUnitLength',\r\n    'keyPoints',\r\n    'keySplines',\r\n    'keyTimes',\r\n    'lengthAdjust',\r\n    'limitingConeAngle',\r\n    'markerHeight',\r\n    'markerUnits',\r\n    'markerWidth',\r\n    'maskContentUnits',\r\n    'maskUnits',\r\n    'numOctaves',\r\n    'pathLength',\r\n    'patternContentUnits',\r\n    'patternTransform',\r\n    'patternUnits',\r\n    'pointsAtX',\r\n    'pointsAtY',\r\n    'pointsAtZ',\r\n    'preserveAlpha',\r\n    'preserveAspectRatio',\r\n    'primitiveUnits',\r\n    'refX',\r\n    'refY',\r\n    'repeatCount',\r\n    'repeatDur',\r\n    'requiredExtensions',\r\n    'requiredFeatures',\r\n    'specularConstant',\r\n    'specularExponent',\r\n    'spreadMethod',\r\n    'startOffset',\r\n    'stdDeviation',\r\n    'stitchTiles',\r\n    'surfaceScale',\r\n    'systemLanguage',\r\n    'tableValues',\r\n    'targetX',\r\n    'targetY',\r\n    'textLength',\r\n    'viewBox',\r\n    'viewTarget',\r\n    'xChannelSelector',\r\n    'yChannelSelector',\r\n    'zoomAndPan',\r\n].map((attr) => [attr.toLowerCase(), attr]));\r\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\r\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\r\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\r\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\r\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\r\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\r\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\r\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\r\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\r\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\r\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\r\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\r\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\r\n]);\r\n//SVG tag names adjustment map\r\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\r\n    'altGlyph',\r\n    'altGlyphDef',\r\n    'altGlyphItem',\r\n    'animateColor',\r\n    'animateMotion',\r\n    'animateTransform',\r\n    'clipPath',\r\n    'feBlend',\r\n    'feColorMatrix',\r\n    'feComponentTransfer',\r\n    'feComposite',\r\n    'feConvolveMatrix',\r\n    'feDiffuseLighting',\r\n    'feDisplacementMap',\r\n    'feDistantLight',\r\n    'feFlood',\r\n    'feFuncA',\r\n    'feFuncB',\r\n    'feFuncG',\r\n    'feFuncR',\r\n    'feGaussianBlur',\r\n    'feImage',\r\n    'feMerge',\r\n    'feMergeNode',\r\n    'feMorphology',\r\n    'feOffset',\r\n    'fePointLight',\r\n    'feSpecularLighting',\r\n    'feSpotLight',\r\n    'feTile',\r\n    'feTurbulence',\r\n    'foreignObject',\r\n    'glyphRef',\r\n    'linearGradient',\r\n    'radialGradient',\r\n    'textPath',\r\n].map((tn) => [tn.toLowerCase(), tn]));\r\n//Tags that causes exit from foreign content\r\nconst EXITS_FOREIGN_CONTENT = new Set([\r\n    $.B,\r\n    $.BIG,\r\n    $.BLOCKQUOTE,\r\n    $.BODY,\r\n    $.BR,\r\n    $.CENTER,\r\n    $.CODE,\r\n    $.DD,\r\n    $.DIV,\r\n    $.DL,\r\n    $.DT,\r\n    $.EM,\r\n    $.EMBED,\r\n    $.H1,\r\n    $.H2,\r\n    $.H3,\r\n    $.H4,\r\n    $.H5,\r\n    $.H6,\r\n    $.HEAD,\r\n    $.HR,\r\n    $.I,\r\n    $.IMG,\r\n    $.LI,\r\n    $.LISTING,\r\n    $.MENU,\r\n    $.META,\r\n    $.NOBR,\r\n    $.OL,\r\n    $.P,\r\n    $.PRE,\r\n    $.RUBY,\r\n    $.S,\r\n    $.SMALL,\r\n    $.SPAN,\r\n    $.STRONG,\r\n    $.STRIKE,\r\n    $.SUB,\r\n    $.SUP,\r\n    $.TABLE,\r\n    $.TT,\r\n    $.U,\r\n    $.UL,\r\n    $.VAR,\r\n]);\r\n//Check exit from foreign content\r\nexport function causesExit(startTagToken) {\r\n    const tn = startTagToken.tagID;\r\n    const isFontWithAttrs = tn === $.FONT &&\r\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\r\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\r\n}\r\n//Token adjustments\r\nexport function adjustTokenMathMLAttrs(token) {\r\n    for (let i = 0; i < token.attrs.length; i++) {\r\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\r\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\r\n            break;\r\n        }\r\n    }\r\n}\r\nexport function adjustTokenSVGAttrs(token) {\r\n    for (let i = 0; i < token.attrs.length; i++) {\r\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\r\n        if (adjustedAttrName != null) {\r\n            token.attrs[i].name = adjustedAttrName;\r\n        }\r\n    }\r\n}\r\nexport function adjustTokenXMLAttrs(token) {\r\n    for (let i = 0; i < token.attrs.length; i++) {\r\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\r\n        if (adjustedAttrEntry) {\r\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\r\n            token.attrs[i].name = adjustedAttrEntry.name;\r\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\r\n        }\r\n    }\r\n}\r\nexport function adjustTokenSVGTagName(token) {\r\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\r\n    if (adjustedTagName != null) {\r\n        token.tagName = adjustedTagName;\r\n        token.tagID = getTagID(token.tagName);\r\n    }\r\n}\r\n//Integration points\r\nfunction isMathMLTextIntegrationPoint(tn, ns) {\r\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\r\n}\r\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\r\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\r\n        for (let i = 0; i < attrs.length; i++) {\r\n            if (attrs[i].name === ATTRS.ENCODING) {\r\n                const value = attrs[i].value.toLowerCase();\r\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\r\n            }\r\n        }\r\n    }\r\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\r\n}\r\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\r\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\r\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\r\n}\r\n//# sourceMappingURL=foreign-content.js.map", "import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\r\nimport { OpenElementStack } from './open-element-stack.js';\r\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\r\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\r\nimport * as doctype from '../common/doctype.js';\r\nimport * as foreignContent from '../common/foreign-content.js';\r\nimport { ERR } from '../common/error-codes.js';\r\nimport * as unicode from '../common/unicode.js';\r\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\r\nimport { TokenType, getTokenAttr, } from '../common/token.js';\r\n//Misc constants\r\nconst HIDDEN_INPUT_TYPE = 'hidden';\r\n//Adoption agency loops iteration count\r\nconst AA_OUTER_LOOP_ITER = 8;\r\nconst AA_INNER_LOOP_ITER = 3;\r\n//Insertion modes\r\nvar InsertionMode;\r\n(function (InsertionMode) {\r\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\r\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\r\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\r\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\r\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\r\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\r\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\r\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\r\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\r\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\r\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\r\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\r\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\r\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\r\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\r\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\r\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\r\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\r\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\r\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\r\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\r\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\r\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\r\n})(InsertionMode || (InsertionMode = {}));\r\nconst BASE_LOC = {\r\n    startLine: -1,\r\n    startCol: -1,\r\n    startOffset: -1,\r\n    endLine: -1,\r\n    endCol: -1,\r\n    endOffset: -1,\r\n};\r\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\r\nconst defaultParserOptions = {\r\n    scriptingEnabled: true,\r\n    sourceCodeLocationInfo: false,\r\n    treeAdapter: defaultTreeAdapter,\r\n    onParseError: null,\r\n};\r\n//Parser\r\nexport class Parser {\r\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\r\n        this.fragmentContext = fragmentContext;\r\n        this.scriptHandler = scriptHandler;\r\n        this.currentToken = null;\r\n        this.stopped = false;\r\n        this.insertionMode = InsertionMode.INITIAL;\r\n        this.originalInsertionMode = InsertionMode.INITIAL;\r\n        this.headElement = null;\r\n        this.formElement = null;\r\n        /** Indicates that the current node is not an element in the HTML namespace */\r\n        this.currentNotInHTML = false;\r\n        /**\r\n         * The template insertion mode stack is maintained from the left.\r\n         * Ie. the topmost element will always have index 0.\r\n         */\r\n        this.tmplInsertionModeStack = [];\r\n        this.pendingCharacterTokens = [];\r\n        this.hasNonWhitespacePendingCharacterToken = false;\r\n        this.framesetOk = true;\r\n        this.skipNextNewLine = false;\r\n        this.fosterParentingEnabled = false;\r\n        this.options = {\r\n            ...defaultParserOptions,\r\n            ...options,\r\n        };\r\n        this.treeAdapter = this.options.treeAdapter;\r\n        this.onParseError = this.options.onParseError;\r\n        // Always enable location info if we report parse errors.\r\n        if (this.onParseError) {\r\n            this.options.sourceCodeLocationInfo = true;\r\n        }\r\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\r\n        this.tokenizer = new Tokenizer(this.options, this);\r\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\r\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\r\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\r\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\r\n    }\r\n    // API\r\n    static parse(html, options) {\r\n        const parser = new this(options);\r\n        parser.tokenizer.write(html, true);\r\n        return parser.document;\r\n    }\r\n    static getFragmentParser(fragmentContext, options) {\r\n        const opts = {\r\n            ...defaultParserOptions,\r\n            ...options,\r\n        };\r\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\r\n        //so we will parse in a \"forgiving\" manner\r\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\r\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\r\n        //This is important for jsdom, where a new `document` cannot be created. This led to\r\n        //fragment parsing messing with the main `document`.\r\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\r\n        const parser = new this(opts, documentMock, fragmentContext);\r\n        if (parser.fragmentContextID === $.TEMPLATE) {\r\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\r\n        }\r\n        parser._initTokenizerForFragmentParsing();\r\n        parser._insertFakeRootElement();\r\n        parser._resetInsertionMode();\r\n        parser._findFormInFragmentContext();\r\n        return parser;\r\n    }\r\n    getFragment() {\r\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\r\n        const fragment = this.treeAdapter.createDocumentFragment();\r\n        this._adoptNodes(rootElement, fragment);\r\n        return fragment;\r\n    }\r\n    //Errors\r\n    _err(token, code, beforeToken) {\r\n        var _a;\r\n        if (!this.onParseError)\r\n            return;\r\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\r\n        const err = {\r\n            code,\r\n            startLine: loc.startLine,\r\n            startCol: loc.startCol,\r\n            startOffset: loc.startOffset,\r\n            endLine: beforeToken ? loc.startLine : loc.endLine,\r\n            endCol: beforeToken ? loc.startCol : loc.endCol,\r\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\r\n        };\r\n        this.onParseError(err);\r\n    }\r\n    //Stack events\r\n    onItemPush(node, tid, isTop) {\r\n        var _a, _b;\r\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\r\n        if (isTop && this.openElements.stackTop > 0)\r\n            this._setContextModes(node, tid);\r\n    }\r\n    onItemPop(node, isTop) {\r\n        var _a, _b;\r\n        if (this.options.sourceCodeLocationInfo) {\r\n            this._setEndLocation(node, this.currentToken);\r\n        }\r\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\r\n        if (isTop) {\r\n            let current;\r\n            let currentTagId;\r\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\r\n                current = this.fragmentContext;\r\n                currentTagId = this.fragmentContextID;\r\n            }\r\n            else {\r\n                ({ current, currentTagId } = this.openElements);\r\n            }\r\n            this._setContextModes(current, currentTagId);\r\n        }\r\n    }\r\n    _setContextModes(current, tid) {\r\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\r\n        this.currentNotInHTML = !isHTML;\r\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\r\n    }\r\n    _switchToTextParsing(currentToken, nextTokenizerState) {\r\n        this._insertElement(currentToken, NS.HTML);\r\n        this.tokenizer.state = nextTokenizerState;\r\n        this.originalInsertionMode = this.insertionMode;\r\n        this.insertionMode = InsertionMode.TEXT;\r\n    }\r\n    switchToPlaintextParsing() {\r\n        this.insertionMode = InsertionMode.TEXT;\r\n        this.originalInsertionMode = InsertionMode.IN_BODY;\r\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\r\n    }\r\n    //Fragment parsing\r\n    _getAdjustedCurrentElement() {\r\n        return this.openElements.stackTop === 0 && this.fragmentContext\r\n            ? this.fragmentContext\r\n            : this.openElements.current;\r\n    }\r\n    _findFormInFragmentContext() {\r\n        let node = this.fragmentContext;\r\n        while (node) {\r\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\r\n                this.formElement = node;\r\n                break;\r\n            }\r\n            node = this.treeAdapter.getParentNode(node);\r\n        }\r\n    }\r\n    _initTokenizerForFragmentParsing() {\r\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\r\n            return;\r\n        }\r\n        switch (this.fragmentContextID) {\r\n            case $.TITLE:\r\n            case $.TEXTAREA: {\r\n                this.tokenizer.state = TokenizerMode.RCDATA;\r\n                break;\r\n            }\r\n            case $.STYLE:\r\n            case $.XMP:\r\n            case $.IFRAME:\r\n            case $.NOEMBED:\r\n            case $.NOFRAMES:\r\n            case $.NOSCRIPT: {\r\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\r\n                break;\r\n            }\r\n            case $.SCRIPT: {\r\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\r\n                break;\r\n            }\r\n            case $.PLAINTEXT: {\r\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    //Tree mutation\r\n    _setDocumentType(token) {\r\n        const name = token.name || '';\r\n        const publicId = token.publicId || '';\r\n        const systemId = token.systemId || '';\r\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\r\n        if (token.location) {\r\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\r\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\r\n            if (docTypeNode) {\r\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\r\n            }\r\n        }\r\n    }\r\n    _attachElementToTree(element, location) {\r\n        if (this.options.sourceCodeLocationInfo) {\r\n            const loc = location && {\r\n                ...location,\r\n                startTag: location,\r\n            };\r\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\r\n        }\r\n        if (this._shouldFosterParentOnInsertion()) {\r\n            this._fosterParentElement(element);\r\n        }\r\n        else {\r\n            const parent = this.openElements.currentTmplContentOrNode;\r\n            this.treeAdapter.appendChild(parent, element);\r\n        }\r\n    }\r\n    _appendElement(token, namespaceURI) {\r\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\r\n        this._attachElementToTree(element, token.location);\r\n    }\r\n    _insertElement(token, namespaceURI) {\r\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\r\n        this._attachElementToTree(element, token.location);\r\n        this.openElements.push(element, token.tagID);\r\n    }\r\n    _insertFakeElement(tagName, tagID) {\r\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\r\n        this._attachElementToTree(element, null);\r\n        this.openElements.push(element, tagID);\r\n    }\r\n    _insertTemplate(token) {\r\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\r\n        const content = this.treeAdapter.createDocumentFragment();\r\n        this.treeAdapter.setTemplateContent(tmpl, content);\r\n        this._attachElementToTree(tmpl, token.location);\r\n        this.openElements.push(tmpl, token.tagID);\r\n        if (this.options.sourceCodeLocationInfo)\r\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\r\n    }\r\n    _insertFakeRootElement() {\r\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\r\n        if (this.options.sourceCodeLocationInfo)\r\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\r\n        this.treeAdapter.appendChild(this.openElements.current, element);\r\n        this.openElements.push(element, $.HTML);\r\n    }\r\n    _appendCommentNode(token, parent) {\r\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\r\n        this.treeAdapter.appendChild(parent, commentNode);\r\n        if (this.options.sourceCodeLocationInfo) {\r\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\r\n        }\r\n    }\r\n    _insertCharacters(token) {\r\n        let parent;\r\n        let beforeElement;\r\n        if (this._shouldFosterParentOnInsertion()) {\r\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\r\n            if (beforeElement) {\r\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\r\n            }\r\n            else {\r\n                this.treeAdapter.insertText(parent, token.chars);\r\n            }\r\n        }\r\n        else {\r\n            parent = this.openElements.currentTmplContentOrNode;\r\n            this.treeAdapter.insertText(parent, token.chars);\r\n        }\r\n        if (!token.location)\r\n            return;\r\n        const siblings = this.treeAdapter.getChildNodes(parent);\r\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\r\n        const textNode = siblings[textNodeIdx - 1];\r\n        //NOTE: if we have a location assigned by another token, then just update the end position\r\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\r\n        if (tnLoc) {\r\n            const { endLine, endCol, endOffset } = token.location;\r\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\r\n        }\r\n        else if (this.options.sourceCodeLocationInfo) {\r\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\r\n        }\r\n    }\r\n    _adoptNodes(donor, recipient) {\r\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\r\n            this.treeAdapter.detachNode(child);\r\n            this.treeAdapter.appendChild(recipient, child);\r\n        }\r\n    }\r\n    _setEndLocation(element, closingToken) {\r\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\r\n            const ctLoc = closingToken.location;\r\n            const tn = this.treeAdapter.getTagName(element);\r\n            const endLoc = \r\n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\r\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\r\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\r\n                ? {\r\n                    endTag: { ...ctLoc },\r\n                    endLine: ctLoc.endLine,\r\n                    endCol: ctLoc.endCol,\r\n                    endOffset: ctLoc.endOffset,\r\n                }\r\n                : {\r\n                    endLine: ctLoc.startLine,\r\n                    endCol: ctLoc.startCol,\r\n                    endOffset: ctLoc.startOffset,\r\n                };\r\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\r\n        }\r\n    }\r\n    //Token processing\r\n    shouldProcessStartTagTokenInForeignContent(token) {\r\n        // Check that neither current === document, or ns === NS.HTML\r\n        if (!this.currentNotInHTML)\r\n            return false;\r\n        let current;\r\n        let currentTagId;\r\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\r\n            current = this.fragmentContext;\r\n            currentTagId = this.fragmentContextID;\r\n        }\r\n        else {\r\n            ({ current, currentTagId } = this.openElements);\r\n        }\r\n        if (token.tagID === $.SVG &&\r\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\r\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\r\n            return false;\r\n        }\r\n        return (\r\n        // Check that `current` is not an integration point for HTML or MathML elements.\r\n        this.tokenizer.inForeignNode ||\r\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\r\n            // integration point.\r\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\r\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\r\n    }\r\n    _processToken(token) {\r\n        switch (token.type) {\r\n            case TokenType.CHARACTER: {\r\n                this.onCharacter(token);\r\n                break;\r\n            }\r\n            case TokenType.NULL_CHARACTER: {\r\n                this.onNullCharacter(token);\r\n                break;\r\n            }\r\n            case TokenType.COMMENT: {\r\n                this.onComment(token);\r\n                break;\r\n            }\r\n            case TokenType.DOCTYPE: {\r\n                this.onDoctype(token);\r\n                break;\r\n            }\r\n            case TokenType.START_TAG: {\r\n                this._processStartTag(token);\r\n                break;\r\n            }\r\n            case TokenType.END_TAG: {\r\n                this.onEndTag(token);\r\n                break;\r\n            }\r\n            case TokenType.EOF: {\r\n                this.onEof(token);\r\n                break;\r\n            }\r\n            case TokenType.WHITESPACE_CHARACTER: {\r\n                this.onWhitespaceCharacter(token);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    //Integration points\r\n    _isIntegrationPoint(tid, element, foreignNS) {\r\n        const ns = this.treeAdapter.getNamespaceURI(element);\r\n        const attrs = this.treeAdapter.getAttrList(element);\r\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\r\n    }\r\n    //Active formatting elements reconstruction\r\n    _reconstructActiveFormattingElements() {\r\n        const listLength = this.activeFormattingElements.entries.length;\r\n        if (listLength) {\r\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\r\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\r\n            for (let i = unopenIdx; i >= 0; i--) {\r\n                const entry = this.activeFormattingElements.entries[i];\r\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\r\n                entry.element = this.openElements.current;\r\n            }\r\n        }\r\n    }\r\n    //Close elements\r\n    _closeTableCell() {\r\n        this.openElements.generateImpliedEndTags();\r\n        this.openElements.popUntilTableCellPopped();\r\n        this.activeFormattingElements.clearToLastMarker();\r\n        this.insertionMode = InsertionMode.IN_ROW;\r\n    }\r\n    _closePElement() {\r\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\r\n        this.openElements.popUntilTagNamePopped($.P);\r\n    }\r\n    //Insertion modes\r\n    _resetInsertionMode() {\r\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\r\n            //Insertion mode reset map\r\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\r\n                case $.TR: {\r\n                    this.insertionMode = InsertionMode.IN_ROW;\r\n                    return;\r\n                }\r\n                case $.TBODY:\r\n                case $.THEAD:\r\n                case $.TFOOT: {\r\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                    return;\r\n                }\r\n                case $.CAPTION: {\r\n                    this.insertionMode = InsertionMode.IN_CAPTION;\r\n                    return;\r\n                }\r\n                case $.COLGROUP: {\r\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n                    return;\r\n                }\r\n                case $.TABLE: {\r\n                    this.insertionMode = InsertionMode.IN_TABLE;\r\n                    return;\r\n                }\r\n                case $.BODY: {\r\n                    this.insertionMode = InsertionMode.IN_BODY;\r\n                    return;\r\n                }\r\n                case $.FRAMESET: {\r\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\r\n                    return;\r\n                }\r\n                case $.SELECT: {\r\n                    this._resetInsertionModeForSelect(i);\r\n                    return;\r\n                }\r\n                case $.TEMPLATE: {\r\n                    this.insertionMode = this.tmplInsertionModeStack[0];\r\n                    return;\r\n                }\r\n                case $.HTML: {\r\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\r\n                    return;\r\n                }\r\n                case $.TD:\r\n                case $.TH: {\r\n                    if (i > 0) {\r\n                        this.insertionMode = InsertionMode.IN_CELL;\r\n                        return;\r\n                    }\r\n                    break;\r\n                }\r\n                case $.HEAD: {\r\n                    if (i > 0) {\r\n                        this.insertionMode = InsertionMode.IN_HEAD;\r\n                        return;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.insertionMode = InsertionMode.IN_BODY;\r\n    }\r\n    _resetInsertionModeForSelect(selectIdx) {\r\n        if (selectIdx > 0) {\r\n            for (let i = selectIdx - 1; i > 0; i--) {\r\n                const tn = this.openElements.tagIDs[i];\r\n                if (tn === $.TEMPLATE) {\r\n                    break;\r\n                }\r\n                else if (tn === $.TABLE) {\r\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.insertionMode = InsertionMode.IN_SELECT;\r\n    }\r\n    //Foster parenting\r\n    _isElementCausesFosterParenting(tn) {\r\n        return TABLE_STRUCTURE_TAGS.has(tn);\r\n    }\r\n    _shouldFosterParentOnInsertion() {\r\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\r\n    }\r\n    _findFosterParentingLocation() {\r\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\r\n            const openElement = this.openElements.items[i];\r\n            switch (this.openElements.tagIDs[i]) {\r\n                case $.TEMPLATE: {\r\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\r\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\r\n                    }\r\n                    break;\r\n                }\r\n                case $.TABLE: {\r\n                    const parent = this.treeAdapter.getParentNode(openElement);\r\n                    if (parent) {\r\n                        return { parent, beforeElement: openElement };\r\n                    }\r\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\r\n                }\r\n                default:\r\n                // Do nothing\r\n            }\r\n        }\r\n        return { parent: this.openElements.items[0], beforeElement: null };\r\n    }\r\n    _fosterParentElement(element) {\r\n        const location = this._findFosterParentingLocation();\r\n        if (location.beforeElement) {\r\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\r\n        }\r\n        else {\r\n            this.treeAdapter.appendChild(location.parent, element);\r\n        }\r\n    }\r\n    //Special elements\r\n    _isSpecialElement(element, id) {\r\n        const ns = this.treeAdapter.getNamespaceURI(element);\r\n        return SPECIAL_ELEMENTS[ns].has(id);\r\n    }\r\n    onCharacter(token) {\r\n        this.skipNextNewLine = false;\r\n        if (this.tokenizer.inForeignNode) {\r\n            characterInForeignContent(this, token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                tokenBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                tokenBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                tokenInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                tokenInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                tokenAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                characterInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                this._insertCharacters(token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW: {\r\n                characterInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                characterInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                tokenInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                tokenAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                tokenAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    onNullCharacter(token) {\r\n        this.skipNextNewLine = false;\r\n        if (this.tokenizer.inForeignNode) {\r\n            nullCharacterInForeignContent(this, token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                tokenBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                tokenBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                tokenInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                tokenInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                tokenAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT: {\r\n                this._insertCharacters(token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW: {\r\n                characterInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                tokenInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                tokenAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                tokenAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    onComment(token) {\r\n        this.skipNextNewLine = false;\r\n        if (this.currentNotInHTML) {\r\n            appendComment(this, token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL:\r\n            case InsertionMode.BEFORE_HTML:\r\n            case InsertionMode.BEFORE_HEAD:\r\n            case InsertionMode.IN_HEAD:\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\r\n            case InsertionMode.AFTER_HEAD:\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_COLUMN_GROUP:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE:\r\n            case InsertionMode.IN_TEMPLATE:\r\n            case InsertionMode.IN_FRAMESET:\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                appendComment(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                appendCommentToRootHtmlElement(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                appendCommentToDocument(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    onDoctype(token) {\r\n        this.skipNextNewLine = false;\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                doctypeInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD:\r\n            case InsertionMode.IN_HEAD:\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\r\n            case InsertionMode.AFTER_HEAD: {\r\n                this._err(token, ERR.misplacedDoctype);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    onStartTag(token) {\r\n        this.skipNextNewLine = false;\r\n        this.currentToken = token;\r\n        this._processStartTag(token);\r\n        if (token.selfClosing && !token.ackSelfClosing) {\r\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\r\n        }\r\n    }\r\n    /**\r\n     * Processes a given start tag.\r\n     *\r\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\r\n     * is moved inbetween multiple insertion modes, this check for self-closing\r\n     * could lead to false positives. To avoid this, `_processStartTag` is used\r\n     * for nested calls.\r\n     *\r\n     * @param token The token to process.\r\n     */\r\n    _processStartTag(token) {\r\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\r\n            startTagInForeignContent(this, token);\r\n        }\r\n        else {\r\n            this._startTagOutsideForeignContent(token);\r\n        }\r\n    }\r\n    _startTagOutsideForeignContent(token) {\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                startTagBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                startTagBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                startTagInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                startTagInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                startTagAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY: {\r\n                startTagInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE: {\r\n                startTagInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CAPTION: {\r\n                startTagInCaption(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                startTagInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_BODY: {\r\n                startTagInTableBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_ROW: {\r\n                startTagInRow(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CELL: {\r\n                startTagInCell(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT: {\r\n                startTagInSelect(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                startTagInSelectInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                startTagInTemplate(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                startTagAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_FRAMESET: {\r\n                startTagInFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                startTagAfterFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                startTagAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                startTagAfterAfterFrameset(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    onEndTag(token) {\r\n        this.skipNextNewLine = false;\r\n        this.currentToken = token;\r\n        if (this.currentNotInHTML) {\r\n            endTagInForeignContent(this, token);\r\n        }\r\n        else {\r\n            this._endTagOutsideForeignContent(token);\r\n        }\r\n    }\r\n    _endTagOutsideForeignContent(token) {\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                endTagBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                endTagBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                endTagInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                endTagInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                endTagAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY: {\r\n                endTagInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT: {\r\n                endTagInText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE: {\r\n                endTagInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CAPTION: {\r\n                endTagInCaption(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                endTagInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_BODY: {\r\n                endTagInTableBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_ROW: {\r\n                endTagInRow(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CELL: {\r\n                endTagInCell(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT: {\r\n                endTagInSelect(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                endTagInSelectInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                endTagInTemplate(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                endTagAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_FRAMESET: {\r\n                endTagInFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                endTagAfterFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                tokenAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    onEof(token) {\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                tokenBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                tokenBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                tokenInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                tokenInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                tokenAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_COLUMN_GROUP:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                eofInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT: {\r\n                eofInText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                eofInTemplate(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY:\r\n            case InsertionMode.IN_FRAMESET:\r\n            case InsertionMode.AFTER_FRAMESET:\r\n            case InsertionMode.AFTER_AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                stopParsing(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    onWhitespaceCharacter(token) {\r\n        if (this.skipNextNewLine) {\r\n            this.skipNextNewLine = false;\r\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\r\n                if (token.chars.length === 1) {\r\n                    return;\r\n                }\r\n                token.chars = token.chars.substr(1);\r\n            }\r\n        }\r\n        if (this.tokenizer.inForeignNode) {\r\n            this._insertCharacters(token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.IN_HEAD:\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\r\n            case InsertionMode.AFTER_HEAD:\r\n            case InsertionMode.TEXT:\r\n            case InsertionMode.IN_COLUMN_GROUP:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE:\r\n            case InsertionMode.IN_FRAMESET:\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                this._insertCharacters(token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_TEMPLATE:\r\n            case InsertionMode.AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                whitespaceCharacterInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW: {\r\n                characterInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                whitespaceCharacterInTableText(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n}\r\n//Adoption agency algorithm\r\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\r\n//------------------------------------------------------------------\r\n//Steps 5-8 of the algorithm\r\nfunction aaObtainFormattingElementEntry(p, token) {\r\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\r\n    if (formattingElementEntry) {\r\n        if (!p.openElements.contains(formattingElementEntry.element)) {\r\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n            formattingElementEntry = null;\r\n        }\r\n        else if (!p.openElements.hasInScope(token.tagID)) {\r\n            formattingElementEntry = null;\r\n        }\r\n    }\r\n    else {\r\n        genericEndTagInBody(p, token);\r\n    }\r\n    return formattingElementEntry;\r\n}\r\n//Steps 9 and 10 of the algorithm\r\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\r\n    let furthestBlock = null;\r\n    let idx = p.openElements.stackTop;\r\n    for (; idx >= 0; idx--) {\r\n        const element = p.openElements.items[idx];\r\n        if (element === formattingElementEntry.element) {\r\n            break;\r\n        }\r\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\r\n            furthestBlock = element;\r\n        }\r\n    }\r\n    if (!furthestBlock) {\r\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\r\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n    }\r\n    return furthestBlock;\r\n}\r\n//Step 13 of the algorithm\r\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\r\n    let lastElement = furthestBlock;\r\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\r\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\r\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\r\n        nextElement = p.openElements.getCommonAncestor(element);\r\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\r\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\r\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\r\n        if (shouldRemoveFromOpenElements) {\r\n            if (counterOverflow) {\r\n                p.activeFormattingElements.removeEntry(elementEntry);\r\n            }\r\n            p.openElements.remove(element);\r\n        }\r\n        else {\r\n            element = aaRecreateElementFromEntry(p, elementEntry);\r\n            if (lastElement === furthestBlock) {\r\n                p.activeFormattingElements.bookmark = elementEntry;\r\n            }\r\n            p.treeAdapter.detachNode(lastElement);\r\n            p.treeAdapter.appendChild(element, lastElement);\r\n            lastElement = element;\r\n        }\r\n    }\r\n    return lastElement;\r\n}\r\n//Step 13.7 of the algorithm\r\nfunction aaRecreateElementFromEntry(p, elementEntry) {\r\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\r\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\r\n    p.openElements.replace(elementEntry.element, newElement);\r\n    elementEntry.element = newElement;\r\n    return newElement;\r\n}\r\n//Step 14 of the algorithm\r\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\r\n    const tn = p.treeAdapter.getTagName(commonAncestor);\r\n    const tid = getTagID(tn);\r\n    if (p._isElementCausesFosterParenting(tid)) {\r\n        p._fosterParentElement(lastElement);\r\n    }\r\n    else {\r\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\r\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\r\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\r\n        }\r\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\r\n    }\r\n}\r\n//Steps 15-19 of the algorithm\r\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\r\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\r\n    const { token } = formattingElementEntry;\r\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\r\n    p._adoptNodes(furthestBlock, newElement);\r\n    p.treeAdapter.appendChild(furthestBlock, newElement);\r\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\r\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n    p.openElements.remove(formattingElementEntry.element);\r\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\r\n}\r\n//Algorithm entry point\r\nfunction callAdoptionAgency(p, token) {\r\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\r\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\r\n        if (!formattingElementEntry) {\r\n            break;\r\n        }\r\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\r\n        if (!furthestBlock) {\r\n            break;\r\n        }\r\n        p.activeFormattingElements.bookmark = formattingElementEntry;\r\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\r\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\r\n        p.treeAdapter.detachNode(lastElement);\r\n        if (commonAncestor)\r\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\r\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\r\n    }\r\n}\r\n//Generic token handlers\r\n//------------------------------------------------------------------\r\nfunction appendComment(p, token) {\r\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\r\n}\r\nfunction appendCommentToRootHtmlElement(p, token) {\r\n    p._appendCommentNode(token, p.openElements.items[0]);\r\n}\r\nfunction appendCommentToDocument(p, token) {\r\n    p._appendCommentNode(token, p.document);\r\n}\r\nfunction stopParsing(p, token) {\r\n    p.stopped = true;\r\n    // NOTE: Set end locations for elements that remain on the open element stack.\r\n    if (token.location) {\r\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\r\n        // This is a problem, as we might overwrite their end position here.\r\n        const target = p.fragmentContext ? 0 : 2;\r\n        for (let i = p.openElements.stackTop; i >= target; i--) {\r\n            p._setEndLocation(p.openElements.items[i], token);\r\n        }\r\n        // Handle `html` and `body`\r\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\r\n            const htmlElement = p.openElements.items[0];\r\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\r\n            if (htmlLocation && !htmlLocation.endTag) {\r\n                p._setEndLocation(htmlElement, token);\r\n                if (p.openElements.stackTop >= 1) {\r\n                    const bodyElement = p.openElements.items[1];\r\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\r\n                    if (bodyLocation && !bodyLocation.endTag) {\r\n                        p._setEndLocation(bodyElement, token);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// The \"initial\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction doctypeInInitialMode(p, token) {\r\n    p._setDocumentType(token);\r\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\r\n    if (!doctype.isConforming(token)) {\r\n        p._err(token, ERR.nonConformingDoctype);\r\n    }\r\n    p.treeAdapter.setDocumentMode(p.document, mode);\r\n    p.insertionMode = InsertionMode.BEFORE_HTML;\r\n}\r\nfunction tokenInInitialMode(p, token) {\r\n    p._err(token, ERR.missingDoctype, true);\r\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\r\n    p.insertionMode = InsertionMode.BEFORE_HTML;\r\n    p._processToken(token);\r\n}\r\n// The \"before html\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagBeforeHtml(p, token) {\r\n    if (token.tagID === $.HTML) {\r\n        p._insertElement(token, NS.HTML);\r\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\r\n    }\r\n    else {\r\n        tokenBeforeHtml(p, token);\r\n    }\r\n}\r\nfunction endTagBeforeHtml(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\r\n        tokenBeforeHtml(p, token);\r\n    }\r\n}\r\nfunction tokenBeforeHtml(p, token) {\r\n    p._insertFakeRootElement();\r\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"before head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagBeforeHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.HEAD: {\r\n            p._insertElement(token, NS.HTML);\r\n            p.headElement = p.openElements.current;\r\n            p.insertionMode = InsertionMode.IN_HEAD;\r\n            break;\r\n        }\r\n        default: {\r\n            tokenBeforeHead(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagBeforeHead(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\r\n        tokenBeforeHead(p, token);\r\n    }\r\n    else {\r\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n    }\r\n}\r\nfunction tokenBeforeHead(p, token) {\r\n    p._insertFakeElement(TN.HEAD, $.HEAD);\r\n    p.headElement = p.openElements.current;\r\n    p.insertionMode = InsertionMode.IN_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"in head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BASE:\r\n        case $.BASEFONT:\r\n        case $.BGSOUND:\r\n        case $.LINK:\r\n        case $.META: {\r\n            p._appendElement(token, NS.HTML);\r\n            token.ackSelfClosing = true;\r\n            break;\r\n        }\r\n        case $.TITLE: {\r\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\r\n            break;\r\n        }\r\n        case $.NOSCRIPT: {\r\n            if (p.options.scriptingEnabled) {\r\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n            }\r\n            else {\r\n                p._insertElement(token, NS.HTML);\r\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\r\n            }\r\n            break;\r\n        }\r\n        case $.NOFRAMES:\r\n        case $.STYLE: {\r\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n            break;\r\n        }\r\n        case $.SCRIPT: {\r\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            p._insertTemplate(token);\r\n            p.activeFormattingElements.insertMarker();\r\n            p.framesetOk = false;\r\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\r\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\r\n            break;\r\n        }\r\n        case $.HEAD: {\r\n            p._err(token, ERR.misplacedStartTagForHeadElement);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInHead(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HEAD: {\r\n            p.openElements.pop();\r\n            p.insertionMode = InsertionMode.AFTER_HEAD;\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.BR:\r\n        case $.HTML: {\r\n            tokenInHead(p, token);\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n        }\r\n    }\r\n}\r\nfunction templateEndTagInHead(p, token) {\r\n    if (p.openElements.tmplCount > 0) {\r\n        p.openElements.generateImpliedEndTagsThoroughly();\r\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\r\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\r\n        }\r\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\r\n        p.activeFormattingElements.clearToLastMarker();\r\n        p.tmplInsertionModeStack.shift();\r\n        p._resetInsertionMode();\r\n    }\r\n    else {\r\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n    }\r\n}\r\nfunction tokenInHead(p, token) {\r\n    p.openElements.pop();\r\n    p.insertionMode = InsertionMode.AFTER_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"in head no script\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInHeadNoScript(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BASEFONT:\r\n        case $.BGSOUND:\r\n        case $.HEAD:\r\n        case $.LINK:\r\n        case $.META:\r\n        case $.NOFRAMES:\r\n        case $.STYLE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.NOSCRIPT: {\r\n            p._err(token, ERR.nestedNoscriptInHead);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInHeadNoScript(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInHeadNoScript(p, token) {\r\n    switch (token.tagID) {\r\n        case $.NOSCRIPT: {\r\n            p.openElements.pop();\r\n            p.insertionMode = InsertionMode.IN_HEAD;\r\n            break;\r\n        }\r\n        case $.BR: {\r\n            tokenInHeadNoScript(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n        }\r\n    }\r\n}\r\nfunction tokenInHeadNoScript(p, token) {\r\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\r\n    p._err(token, errCode);\r\n    p.openElements.pop();\r\n    p.insertionMode = InsertionMode.IN_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"after head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BODY: {\r\n            p._insertElement(token, NS.HTML);\r\n            p.framesetOk = false;\r\n            p.insertionMode = InsertionMode.IN_BODY;\r\n            break;\r\n        }\r\n        case $.FRAMESET: {\r\n            p._insertElement(token, NS.HTML);\r\n            p.insertionMode = InsertionMode.IN_FRAMESET;\r\n            break;\r\n        }\r\n        case $.BASE:\r\n        case $.BASEFONT:\r\n        case $.BGSOUND:\r\n        case $.LINK:\r\n        case $.META:\r\n        case $.NOFRAMES:\r\n        case $.SCRIPT:\r\n        case $.STYLE:\r\n        case $.TEMPLATE:\r\n        case $.TITLE: {\r\n            p._err(token, ERR.abandonedHeadElementChild);\r\n            p.openElements.push(p.headElement, $.HEAD);\r\n            startTagInHead(p, token);\r\n            p.openElements.remove(p.headElement);\r\n            break;\r\n        }\r\n        case $.HEAD: {\r\n            p._err(token, ERR.misplacedStartTagForHeadElement);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenAfterHead(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagAfterHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.BODY:\r\n        case $.HTML:\r\n        case $.BR: {\r\n            tokenAfterHead(p, token);\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n        }\r\n    }\r\n}\r\nfunction tokenAfterHead(p, token) {\r\n    p._insertFakeElement(TN.BODY, $.BODY);\r\n    p.insertionMode = InsertionMode.IN_BODY;\r\n    modeInBody(p, token);\r\n}\r\n// The \"in body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction modeInBody(p, token) {\r\n    switch (token.type) {\r\n        case TokenType.CHARACTER: {\r\n            characterInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.WHITESPACE_CHARACTER: {\r\n            whitespaceCharacterInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.COMMENT: {\r\n            appendComment(p, token);\r\n            break;\r\n        }\r\n        case TokenType.START_TAG: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.END_TAG: {\r\n            endTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.EOF: {\r\n            eofInBody(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\nfunction whitespaceCharacterInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertCharacters(token);\r\n}\r\nfunction characterInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertCharacters(token);\r\n    p.framesetOk = false;\r\n}\r\nfunction htmlStartTagInBody(p, token) {\r\n    if (p.openElements.tmplCount === 0) {\r\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\r\n    }\r\n}\r\nfunction bodyStartTagInBody(p, token) {\r\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\r\n    if (bodyElement && p.openElements.tmplCount === 0) {\r\n        p.framesetOk = false;\r\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\r\n    }\r\n}\r\nfunction framesetStartTagInBody(p, token) {\r\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\r\n    if (p.framesetOk && bodyElement) {\r\n        p.treeAdapter.detachNode(bodyElement);\r\n        p.openElements.popAllUpToHtmlElement();\r\n        p._insertElement(token, NS.HTML);\r\n        p.insertionMode = InsertionMode.IN_FRAMESET;\r\n    }\r\n}\r\nfunction addressStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction numberedHeaderStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    if (isNumberedHeader(p.openElements.currentTagId)) {\r\n        p.openElements.pop();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction preStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\r\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\r\n    p.skipNextNewLine = true;\r\n    p.framesetOk = false;\r\n}\r\nfunction formStartTagInBody(p, token) {\r\n    const inTemplate = p.openElements.tmplCount > 0;\r\n    if (!p.formElement || inTemplate) {\r\n        if (p.openElements.hasInButtonScope($.P)) {\r\n            p._closePElement();\r\n        }\r\n        p._insertElement(token, NS.HTML);\r\n        if (!inTemplate) {\r\n            p.formElement = p.openElements.current;\r\n        }\r\n    }\r\n}\r\nfunction listItemStartTagInBody(p, token) {\r\n    p.framesetOk = false;\r\n    const tn = token.tagID;\r\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\r\n        const elementId = p.openElements.tagIDs[i];\r\n        if ((tn === $.LI && elementId === $.LI) ||\r\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\r\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\r\n            p.openElements.popUntilTagNamePopped(elementId);\r\n            break;\r\n        }\r\n        if (elementId !== $.ADDRESS &&\r\n            elementId !== $.DIV &&\r\n            elementId !== $.P &&\r\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\r\n            break;\r\n        }\r\n    }\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction plaintextStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\r\n}\r\nfunction buttonStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.BUTTON)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped($.BUTTON);\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n}\r\nfunction aStartTagInBody(p, token) {\r\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\r\n    if (activeElementEntry) {\r\n        callAdoptionAgency(p, token);\r\n        p.openElements.remove(activeElementEntry.element);\r\n        p.activeFormattingElements.removeEntry(activeElementEntry);\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\nfunction bStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\nfunction nobrStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    if (p.openElements.hasInScope($.NOBR)) {\r\n        callAdoptionAgency(p, token);\r\n        p._reconstructActiveFormattingElements();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\nfunction appletStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.insertMarker();\r\n    p.framesetOk = false;\r\n}\r\nfunction tableStartTagInBody(p, token) {\r\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    p.insertionMode = InsertionMode.IN_TABLE;\r\n}\r\nfunction areaStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._appendElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction isHiddenInput(token) {\r\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\r\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\r\n}\r\nfunction inputStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._appendElement(token, NS.HTML);\r\n    if (!isHiddenInput(token)) {\r\n        p.framesetOk = false;\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction paramStartTagInBody(p, token) {\r\n    p._appendElement(token, NS.HTML);\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction hrStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._appendElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction imageStartTagInBody(p, token) {\r\n    token.tagName = TN.IMG;\r\n    token.tagID = $.IMG;\r\n    areaStartTagInBody(p, token);\r\n}\r\nfunction textareaStartTagInBody(p, token) {\r\n    p._insertElement(token, NS.HTML);\r\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\r\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\r\n    p.skipNextNewLine = true;\r\n    p.tokenizer.state = TokenizerMode.RCDATA;\r\n    p.originalInsertionMode = p.insertionMode;\r\n    p.framesetOk = false;\r\n    p.insertionMode = InsertionMode.TEXT;\r\n}\r\nfunction xmpStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p.framesetOk = false;\r\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n}\r\nfunction iframeStartTagInBody(p, token) {\r\n    p.framesetOk = false;\r\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n}\r\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\r\n//<noembed> as rawtext.\r\nfunction noembedStartTagInBody(p, token) {\r\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n}\r\nfunction selectStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    p.insertionMode =\r\n        p.insertionMode === InsertionMode.IN_TABLE ||\r\n            p.insertionMode === InsertionMode.IN_CAPTION ||\r\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\r\n            p.insertionMode === InsertionMode.IN_ROW ||\r\n            p.insertionMode === InsertionMode.IN_CELL\r\n            ? InsertionMode.IN_SELECT_IN_TABLE\r\n            : InsertionMode.IN_SELECT;\r\n}\r\nfunction optgroupStartTagInBody(p, token) {\r\n    if (p.openElements.currentTagId === $.OPTION) {\r\n        p.openElements.pop();\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction rbStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.RUBY)) {\r\n        p.openElements.generateImpliedEndTags();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction rtStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.RUBY)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction mathStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    foreignContent.adjustTokenMathMLAttrs(token);\r\n    foreignContent.adjustTokenXMLAttrs(token);\r\n    if (token.selfClosing) {\r\n        p._appendElement(token, NS.MATHML);\r\n    }\r\n    else {\r\n        p._insertElement(token, NS.MATHML);\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction svgStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    foreignContent.adjustTokenSVGAttrs(token);\r\n    foreignContent.adjustTokenXMLAttrs(token);\r\n    if (token.selfClosing) {\r\n        p._appendElement(token, NS.SVG);\r\n    }\r\n    else {\r\n        p._insertElement(token, NS.SVG);\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction genericStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction startTagInBody(p, token) {\r\n    switch (token.tagID) {\r\n        case $.I:\r\n        case $.S:\r\n        case $.B:\r\n        case $.U:\r\n        case $.EM:\r\n        case $.TT:\r\n        case $.BIG:\r\n        case $.CODE:\r\n        case $.FONT:\r\n        case $.SMALL:\r\n        case $.STRIKE:\r\n        case $.STRONG: {\r\n            bStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.A: {\r\n            aStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.H1:\r\n        case $.H2:\r\n        case $.H3:\r\n        case $.H4:\r\n        case $.H5:\r\n        case $.H6: {\r\n            numberedHeaderStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.P:\r\n        case $.DL:\r\n        case $.OL:\r\n        case $.UL:\r\n        case $.DIV:\r\n        case $.DIR:\r\n        case $.NAV:\r\n        case $.MAIN:\r\n        case $.MENU:\r\n        case $.ASIDE:\r\n        case $.CENTER:\r\n        case $.FIGURE:\r\n        case $.FOOTER:\r\n        case $.HEADER:\r\n        case $.HGROUP:\r\n        case $.DIALOG:\r\n        case $.DETAILS:\r\n        case $.ADDRESS:\r\n        case $.ARTICLE:\r\n        case $.SECTION:\r\n        case $.SUMMARY:\r\n        case $.FIELDSET:\r\n        case $.BLOCKQUOTE:\r\n        case $.FIGCAPTION: {\r\n            addressStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.LI:\r\n        case $.DD:\r\n        case $.DT: {\r\n            listItemStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BR:\r\n        case $.IMG:\r\n        case $.WBR:\r\n        case $.AREA:\r\n        case $.EMBED:\r\n        case $.KEYGEN: {\r\n            areaStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.HR: {\r\n            hrStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.RB:\r\n        case $.RTC: {\r\n            rbStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.RT:\r\n        case $.RP: {\r\n            rtStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.PRE:\r\n        case $.LISTING: {\r\n            preStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.XMP: {\r\n            xmpStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.SVG: {\r\n            svgStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.HTML: {\r\n            htmlStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BASE:\r\n        case $.LINK:\r\n        case $.META:\r\n        case $.STYLE:\r\n        case $.TITLE:\r\n        case $.SCRIPT:\r\n        case $.BGSOUND:\r\n        case $.BASEFONT:\r\n        case $.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.BODY: {\r\n            bodyStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.FORM: {\r\n            formStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOBR: {\r\n            nobrStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.MATH: {\r\n            mathStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.TABLE: {\r\n            tableStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.INPUT: {\r\n            inputStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.PARAM:\r\n        case $.TRACK:\r\n        case $.SOURCE: {\r\n            paramStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.IMAGE: {\r\n            imageStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BUTTON: {\r\n            buttonStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.APPLET:\r\n        case $.OBJECT:\r\n        case $.MARQUEE: {\r\n            appletStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.IFRAME: {\r\n            iframeStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.SELECT: {\r\n            selectStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.OPTION:\r\n        case $.OPTGROUP: {\r\n            optgroupStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOEMBED: {\r\n            noembedStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.FRAMESET: {\r\n            framesetStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.TEXTAREA: {\r\n            textareaStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOSCRIPT: {\r\n            if (p.options.scriptingEnabled) {\r\n                noembedStartTagInBody(p, token);\r\n            }\r\n            else {\r\n                genericStartTagInBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.PLAINTEXT: {\r\n            plaintextStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.COL:\r\n        case $.TH:\r\n        case $.TD:\r\n        case $.TR:\r\n        case $.HEAD:\r\n        case $.FRAME:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD:\r\n        case $.CAPTION:\r\n        case $.COLGROUP: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            genericStartTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\nfunction bodyEndTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.BODY)) {\r\n        p.insertionMode = InsertionMode.AFTER_BODY;\r\n        //NOTE: <body> is never popped from the stack, so we need to updated\r\n        //the end location explicitly.\r\n        if (p.options.sourceCodeLocationInfo) {\r\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\r\n            if (bodyElement) {\r\n                p._setEndLocation(bodyElement, token);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction htmlEndTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.BODY)) {\r\n        p.insertionMode = InsertionMode.AFTER_BODY;\r\n        endTagAfterBody(p, token);\r\n    }\r\n}\r\nfunction addressEndTagInBody(p, token) {\r\n    const tn = token.tagID;\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n    }\r\n}\r\nfunction formEndTagInBody(p) {\r\n    const inTemplate = p.openElements.tmplCount > 0;\r\n    const { formElement } = p;\r\n    if (!inTemplate) {\r\n        p.formElement = null;\r\n    }\r\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        if (inTemplate) {\r\n            p.openElements.popUntilTagNamePopped($.FORM);\r\n        }\r\n        else if (formElement) {\r\n            p.openElements.remove(formElement);\r\n        }\r\n    }\r\n}\r\nfunction pEndTagInBody(p) {\r\n    if (!p.openElements.hasInButtonScope($.P)) {\r\n        p._insertFakeElement(TN.P, $.P);\r\n    }\r\n    p._closePElement();\r\n}\r\nfunction liEndTagInBody(p) {\r\n    if (p.openElements.hasInListItemScope($.LI)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\r\n        p.openElements.popUntilTagNamePopped($.LI);\r\n    }\r\n}\r\nfunction ddEndTagInBody(p, token) {\r\n    const tn = token.tagID;\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n    }\r\n}\r\nfunction numberedHeaderEndTagInBody(p) {\r\n    if (p.openElements.hasNumberedHeaderInScope()) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilNumberedHeaderPopped();\r\n    }\r\n}\r\nfunction appletEndTagInBody(p, token) {\r\n    const tn = token.tagID;\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n        p.activeFormattingElements.clearToLastMarker();\r\n    }\r\n}\r\nfunction brEndTagInBody(p) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertFakeElement(TN.BR, $.BR);\r\n    p.openElements.pop();\r\n    p.framesetOk = false;\r\n}\r\nfunction genericEndTagInBody(p, token) {\r\n    const tn = token.tagName;\r\n    const tid = token.tagID;\r\n    for (let i = p.openElements.stackTop; i > 0; i--) {\r\n        const element = p.openElements.items[i];\r\n        const elementId = p.openElements.tagIDs[i];\r\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\r\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\r\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\r\n            if (p.openElements.stackTop >= i)\r\n                p.openElements.shortenToLength(i);\r\n            break;\r\n        }\r\n        if (p._isSpecialElement(element, elementId)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction endTagInBody(p, token) {\r\n    switch (token.tagID) {\r\n        case $.A:\r\n        case $.B:\r\n        case $.I:\r\n        case $.S:\r\n        case $.U:\r\n        case $.EM:\r\n        case $.TT:\r\n        case $.BIG:\r\n        case $.CODE:\r\n        case $.FONT:\r\n        case $.NOBR:\r\n        case $.SMALL:\r\n        case $.STRIKE:\r\n        case $.STRONG: {\r\n            callAdoptionAgency(p, token);\r\n            break;\r\n        }\r\n        case $.P: {\r\n            pEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.DL:\r\n        case $.UL:\r\n        case $.OL:\r\n        case $.DIR:\r\n        case $.DIV:\r\n        case $.NAV:\r\n        case $.PRE:\r\n        case $.MAIN:\r\n        case $.MENU:\r\n        case $.ASIDE:\r\n        case $.BUTTON:\r\n        case $.CENTER:\r\n        case $.FIGURE:\r\n        case $.FOOTER:\r\n        case $.HEADER:\r\n        case $.HGROUP:\r\n        case $.DIALOG:\r\n        case $.ADDRESS:\r\n        case $.ARTICLE:\r\n        case $.DETAILS:\r\n        case $.SECTION:\r\n        case $.SUMMARY:\r\n        case $.LISTING:\r\n        case $.FIELDSET:\r\n        case $.BLOCKQUOTE:\r\n        case $.FIGCAPTION: {\r\n            addressEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.LI: {\r\n            liEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.DD:\r\n        case $.DT: {\r\n            ddEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.H1:\r\n        case $.H2:\r\n        case $.H3:\r\n        case $.H4:\r\n        case $.H5:\r\n        case $.H6: {\r\n            numberedHeaderEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.BR: {\r\n            brEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.BODY: {\r\n            bodyEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.HTML: {\r\n            htmlEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.FORM: {\r\n            formEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.APPLET:\r\n        case $.OBJECT:\r\n        case $.MARQUEE: {\r\n            appletEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            genericEndTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\nfunction eofInBody(p, token) {\r\n    if (p.tmplInsertionModeStack.length > 0) {\r\n        eofInTemplate(p, token);\r\n    }\r\n    else {\r\n        stopParsing(p, token);\r\n    }\r\n}\r\n// The \"text\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction endTagInText(p, token) {\r\n    var _a;\r\n    if (token.tagID === $.SCRIPT) {\r\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\r\n    }\r\n    p.openElements.pop();\r\n    p.insertionMode = p.originalInsertionMode;\r\n}\r\nfunction eofInText(p, token) {\r\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\r\n    p.openElements.pop();\r\n    p.insertionMode = p.originalInsertionMode;\r\n    p.onEof(token);\r\n}\r\n// The \"in table\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction characterInTable(p, token) {\r\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\r\n        p.pendingCharacterTokens.length = 0;\r\n        p.hasNonWhitespacePendingCharacterToken = false;\r\n        p.originalInsertionMode = p.insertionMode;\r\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\r\n        switch (token.type) {\r\n            case TokenType.CHARACTER: {\r\n                characterInTableText(p, token);\r\n                break;\r\n            }\r\n            case TokenType.WHITESPACE_CHARACTER: {\r\n                whitespaceCharacterInTableText(p, token);\r\n                break;\r\n            }\r\n            // Ignore null\r\n        }\r\n    }\r\n    else {\r\n        tokenInTable(p, token);\r\n    }\r\n}\r\nfunction captionStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p.activeFormattingElements.insertMarker();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = InsertionMode.IN_CAPTION;\r\n}\r\nfunction colgroupStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n}\r\nfunction colStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\r\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n    startTagInColumnGroup(p, token);\r\n}\r\nfunction tbodyStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n}\r\nfunction tdStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertFakeElement(TN.TBODY, $.TBODY);\r\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n    startTagInTableBody(p, token);\r\n}\r\nfunction tableStartTagInTable(p, token) {\r\n    if (p.openElements.hasInTableScope($.TABLE)) {\r\n        p.openElements.popUntilTagNamePopped($.TABLE);\r\n        p._resetInsertionMode();\r\n        p._processStartTag(token);\r\n    }\r\n}\r\nfunction inputStartTagInTable(p, token) {\r\n    if (isHiddenInput(token)) {\r\n        p._appendElement(token, NS.HTML);\r\n    }\r\n    else {\r\n        tokenInTable(p, token);\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction formStartTagInTable(p, token) {\r\n    if (!p.formElement && p.openElements.tmplCount === 0) {\r\n        p._insertElement(token, NS.HTML);\r\n        p.formElement = p.openElements.current;\r\n        p.openElements.pop();\r\n    }\r\n}\r\nfunction startTagInTable(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TD:\r\n        case $.TH:\r\n        case $.TR: {\r\n            tdStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.STYLE:\r\n        case $.SCRIPT:\r\n        case $.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.COL: {\r\n            colStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.FORM: {\r\n            formStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.TABLE: {\r\n            tableStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            tbodyStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.INPUT: {\r\n            inputStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.CAPTION: {\r\n            captionStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.COLGROUP: {\r\n            colgroupStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInTable(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TABLE: {\r\n            if (p.openElements.hasInTableScope($.TABLE)) {\r\n                p.openElements.popUntilTagNamePopped($.TABLE);\r\n                p._resetInsertionMode();\r\n            }\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML:\r\n        case $.TBODY:\r\n        case $.TD:\r\n        case $.TFOOT:\r\n        case $.TH:\r\n        case $.THEAD:\r\n        case $.TR: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction tokenInTable(p, token) {\r\n    const savedFosterParentingState = p.fosterParentingEnabled;\r\n    p.fosterParentingEnabled = true;\r\n    // Process token in `In Body` mode\r\n    modeInBody(p, token);\r\n    p.fosterParentingEnabled = savedFosterParentingState;\r\n}\r\n// The \"in table text\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction whitespaceCharacterInTableText(p, token) {\r\n    p.pendingCharacterTokens.push(token);\r\n}\r\nfunction characterInTableText(p, token) {\r\n    p.pendingCharacterTokens.push(token);\r\n    p.hasNonWhitespacePendingCharacterToken = true;\r\n}\r\nfunction tokenInTableText(p, token) {\r\n    let i = 0;\r\n    if (p.hasNonWhitespacePendingCharacterToken) {\r\n        for (; i < p.pendingCharacterTokens.length; i++) {\r\n            tokenInTable(p, p.pendingCharacterTokens[i]);\r\n        }\r\n    }\r\n    else {\r\n        for (; i < p.pendingCharacterTokens.length; i++) {\r\n            p._insertCharacters(p.pendingCharacterTokens[i]);\r\n        }\r\n    }\r\n    p.insertionMode = p.originalInsertionMode;\r\n    p._processToken(token);\r\n}\r\n// The \"in caption\" insertion mode\r\n//------------------------------------------------------------------\r\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\r\nfunction startTagInCaption(p, token) {\r\n    const tn = token.tagID;\r\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\r\n        if (p.openElements.hasInTableScope($.CAPTION)) {\r\n            p.openElements.generateImpliedEndTags();\r\n            p.openElements.popUntilTagNamePopped($.CAPTION);\r\n            p.activeFormattingElements.clearToLastMarker();\r\n            p.insertionMode = InsertionMode.IN_TABLE;\r\n            startTagInTable(p, token);\r\n        }\r\n    }\r\n    else {\r\n        startTagInBody(p, token);\r\n    }\r\n}\r\nfunction endTagInCaption(p, token) {\r\n    const tn = token.tagID;\r\n    switch (tn) {\r\n        case $.CAPTION:\r\n        case $.TABLE: {\r\n            if (p.openElements.hasInTableScope($.CAPTION)) {\r\n                p.openElements.generateImpliedEndTags();\r\n                p.openElements.popUntilTagNamePopped($.CAPTION);\r\n                p.activeFormattingElements.clearToLastMarker();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n                if (tn === $.TABLE) {\r\n                    endTagInTable(p, token);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML:\r\n        case $.TBODY:\r\n        case $.TD:\r\n        case $.TFOOT:\r\n        case $.TH:\r\n        case $.THEAD:\r\n        case $.TR: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in column group\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInColumnGroup(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.COL: {\r\n            p._appendElement(token, NS.HTML);\r\n            token.ackSelfClosing = true;\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInColumnGroup(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInColumnGroup(p, token) {\r\n    switch (token.tagID) {\r\n        case $.COLGROUP: {\r\n            if (p.openElements.currentTagId === $.COLGROUP) {\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n            }\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.COL: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInColumnGroup(p, token);\r\n        }\r\n    }\r\n}\r\nfunction tokenInColumnGroup(p, token) {\r\n    if (p.openElements.currentTagId === $.COLGROUP) {\r\n        p.openElements.pop();\r\n        p.insertionMode = InsertionMode.IN_TABLE;\r\n        p._processToken(token);\r\n    }\r\n}\r\n// The \"in table body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInTableBody(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TR: {\r\n            p.openElements.clearBackToTableBodyContext();\r\n            p._insertElement(token, NS.HTML);\r\n            p.insertionMode = InsertionMode.IN_ROW;\r\n            break;\r\n        }\r\n        case $.TH:\r\n        case $.TD: {\r\n            p.openElements.clearBackToTableBodyContext();\r\n            p._insertFakeElement(TN.TR, $.TR);\r\n            p.insertionMode = InsertionMode.IN_ROW;\r\n            startTagInRow(p, token);\r\n            break;\r\n        }\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            if (p.openElements.hasTableBodyContextInTableScope()) {\r\n                p.openElements.clearBackToTableBodyContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n                startTagInTable(p, token);\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n            startTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInTableBody(p, token) {\r\n    const tn = token.tagID;\r\n    switch (token.tagID) {\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            if (p.openElements.hasInTableScope(tn)) {\r\n                p.openElements.clearBackToTableBodyContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n            }\r\n            break;\r\n        }\r\n        case $.TABLE: {\r\n            if (p.openElements.hasTableBodyContextInTableScope()) {\r\n                p.openElements.clearBackToTableBodyContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n                endTagInTable(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML:\r\n        case $.TD:\r\n        case $.TH:\r\n        case $.TR: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in row\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInRow(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TH:\r\n        case $.TD: {\r\n            p.openElements.clearBackToTableRowContext();\r\n            p._insertElement(token, NS.HTML);\r\n            p.insertionMode = InsertionMode.IN_CELL;\r\n            p.activeFormattingElements.insertMarker();\r\n            break;\r\n        }\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD:\r\n        case $.TR: {\r\n            if (p.openElements.hasInTableScope($.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                startTagInTableBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n            startTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInRow(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TR: {\r\n            if (p.openElements.hasInTableScope($.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n            }\r\n            break;\r\n        }\r\n        case $.TABLE: {\r\n            if (p.openElements.hasInTableScope($.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                endTagInTableBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                endTagInTableBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML:\r\n        case $.TD:\r\n        case $.TH: {\r\n            // Ignore end tag\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in cell\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInCell(p, token) {\r\n    const tn = token.tagID;\r\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\r\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\r\n            p._closeTableCell();\r\n            startTagInRow(p, token);\r\n        }\r\n    }\r\n    else {\r\n        startTagInBody(p, token);\r\n    }\r\n}\r\nfunction endTagInCell(p, token) {\r\n    const tn = token.tagID;\r\n    switch (tn) {\r\n        case $.TD:\r\n        case $.TH: {\r\n            if (p.openElements.hasInTableScope(tn)) {\r\n                p.openElements.generateImpliedEndTags();\r\n                p.openElements.popUntilTagNamePopped(tn);\r\n                p.activeFormattingElements.clearToLastMarker();\r\n                p.insertionMode = InsertionMode.IN_ROW;\r\n            }\r\n            break;\r\n        }\r\n        case $.TABLE:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD:\r\n        case $.TR: {\r\n            if (p.openElements.hasInTableScope(tn)) {\r\n                p._closeTableCell();\r\n                endTagInRow(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in select\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInSelect(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.OPTION: {\r\n            if (p.openElements.currentTagId === $.OPTION) {\r\n                p.openElements.pop();\r\n            }\r\n            p._insertElement(token, NS.HTML);\r\n            break;\r\n        }\r\n        case $.OPTGROUP: {\r\n            if (p.openElements.currentTagId === $.OPTION) {\r\n                p.openElements.pop();\r\n            }\r\n            if (p.openElements.currentTagId === $.OPTGROUP) {\r\n                p.openElements.pop();\r\n            }\r\n            p._insertElement(token, NS.HTML);\r\n            break;\r\n        }\r\n        case $.INPUT:\r\n        case $.KEYGEN:\r\n        case $.TEXTAREA:\r\n        case $.SELECT: {\r\n            if (p.openElements.hasInSelectScope($.SELECT)) {\r\n                p.openElements.popUntilTagNamePopped($.SELECT);\r\n                p._resetInsertionMode();\r\n                if (token.tagID !== $.SELECT) {\r\n                    p._processStartTag(token);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case $.SCRIPT:\r\n        case $.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\nfunction endTagInSelect(p, token) {\r\n    switch (token.tagID) {\r\n        case $.OPTGROUP: {\r\n            if (p.openElements.stackTop > 0 &&\r\n                p.openElements.currentTagId === $.OPTION &&\r\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\r\n                p.openElements.pop();\r\n            }\r\n            if (p.openElements.currentTagId === $.OPTGROUP) {\r\n                p.openElements.pop();\r\n            }\r\n            break;\r\n        }\r\n        case $.OPTION: {\r\n            if (p.openElements.currentTagId === $.OPTION) {\r\n                p.openElements.pop();\r\n            }\r\n            break;\r\n        }\r\n        case $.SELECT: {\r\n            if (p.openElements.hasInSelectScope($.SELECT)) {\r\n                p.openElements.popUntilTagNamePopped($.SELECT);\r\n                p._resetInsertionMode();\r\n            }\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\n// The \"in select in table\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInSelectInTable(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === $.CAPTION ||\r\n        tn === $.TABLE ||\r\n        tn === $.TBODY ||\r\n        tn === $.TFOOT ||\r\n        tn === $.THEAD ||\r\n        tn === $.TR ||\r\n        tn === $.TD ||\r\n        tn === $.TH) {\r\n        p.openElements.popUntilTagNamePopped($.SELECT);\r\n        p._resetInsertionMode();\r\n        p._processStartTag(token);\r\n    }\r\n    else {\r\n        startTagInSelect(p, token);\r\n    }\r\n}\r\nfunction endTagInSelectInTable(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === $.CAPTION ||\r\n        tn === $.TABLE ||\r\n        tn === $.TBODY ||\r\n        tn === $.TFOOT ||\r\n        tn === $.THEAD ||\r\n        tn === $.TR ||\r\n        tn === $.TD ||\r\n        tn === $.TH) {\r\n        if (p.openElements.hasInTableScope(tn)) {\r\n            p.openElements.popUntilTagNamePopped($.SELECT);\r\n            p._resetInsertionMode();\r\n            p.onEndTag(token);\r\n        }\r\n    }\r\n    else {\r\n        endTagInSelect(p, token);\r\n    }\r\n}\r\n// The \"in template\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInTemplate(p, token) {\r\n    switch (token.tagID) {\r\n        // First, handle tags that can start without a mode change\r\n        case $.BASE:\r\n        case $.BASEFONT:\r\n        case $.BGSOUND:\r\n        case $.LINK:\r\n        case $.META:\r\n        case $.NOFRAMES:\r\n        case $.SCRIPT:\r\n        case $.STYLE:\r\n        case $.TEMPLATE:\r\n        case $.TITLE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        // Re-process the token in the appropriate mode\r\n        case $.CAPTION:\r\n        case $.COLGROUP:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\r\n            p.insertionMode = InsertionMode.IN_TABLE;\r\n            startTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.COL: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\r\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n            startTagInColumnGroup(p, token);\r\n            break;\r\n        }\r\n        case $.TR: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\r\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n            startTagInTableBody(p, token);\r\n            break;\r\n        }\r\n        case $.TD:\r\n        case $.TH: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\r\n            p.insertionMode = InsertionMode.IN_ROW;\r\n            startTagInRow(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\r\n            p.insertionMode = InsertionMode.IN_BODY;\r\n            startTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInTemplate(p, token) {\r\n    if (token.tagID === $.TEMPLATE) {\r\n        templateEndTagInHead(p, token);\r\n    }\r\n}\r\nfunction eofInTemplate(p, token) {\r\n    if (p.openElements.tmplCount > 0) {\r\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\r\n        p.activeFormattingElements.clearToLastMarker();\r\n        p.tmplInsertionModeStack.shift();\r\n        p._resetInsertionMode();\r\n        p.onEof(token);\r\n    }\r\n    else {\r\n        stopParsing(p, token);\r\n    }\r\n}\r\n// The \"after body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterBody(p, token) {\r\n    if (token.tagID === $.HTML) {\r\n        startTagInBody(p, token);\r\n    }\r\n    else {\r\n        tokenAfterBody(p, token);\r\n    }\r\n}\r\nfunction endTagAfterBody(p, token) {\r\n    var _a;\r\n    if (token.tagID === $.HTML) {\r\n        if (!p.fragmentContext) {\r\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\r\n        }\r\n        //NOTE: <html> is never popped from the stack, so we need to updated\r\n        //the end location explicitly.\r\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\r\n            p._setEndLocation(p.openElements.items[0], token);\r\n            // Update the body element, if it doesn't have an end tag\r\n            const bodyElement = p.openElements.items[1];\r\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\r\n                p._setEndLocation(bodyElement, token);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        tokenAfterBody(p, token);\r\n    }\r\n}\r\nfunction tokenAfterBody(p, token) {\r\n    p.insertionMode = InsertionMode.IN_BODY;\r\n    modeInBody(p, token);\r\n}\r\n// The \"in frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInFrameset(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.FRAMESET: {\r\n            p._insertElement(token, NS.HTML);\r\n            break;\r\n        }\r\n        case $.FRAME: {\r\n            p._appendElement(token, NS.HTML);\r\n            token.ackSelfClosing = true;\r\n            break;\r\n        }\r\n        case $.NOFRAMES: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\nfunction endTagInFrameset(p, token) {\r\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\r\n        p.openElements.pop();\r\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\r\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\r\n        }\r\n    }\r\n}\r\n// The \"after frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterFrameset(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOFRAMES: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\nfunction endTagAfterFrameset(p, token) {\r\n    if (token.tagID === $.HTML) {\r\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\r\n    }\r\n}\r\n// The \"after after body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterAfterBody(p, token) {\r\n    if (token.tagID === $.HTML) {\r\n        startTagInBody(p, token);\r\n    }\r\n    else {\r\n        tokenAfterAfterBody(p, token);\r\n    }\r\n}\r\nfunction tokenAfterAfterBody(p, token) {\r\n    p.insertionMode = InsertionMode.IN_BODY;\r\n    modeInBody(p, token);\r\n}\r\n// The \"after after frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterAfterFrameset(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOFRAMES: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\n// The rules for parsing tokens in foreign content\r\n//------------------------------------------------------------------\r\nfunction nullCharacterInForeignContent(p, token) {\r\n    token.chars = unicode.REPLACEMENT_CHARACTER;\r\n    p._insertCharacters(token);\r\n}\r\nfunction characterInForeignContent(p, token) {\r\n    p._insertCharacters(token);\r\n    p.framesetOk = false;\r\n}\r\nfunction popUntilHtmlOrIntegrationPoint(p) {\r\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\r\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\r\n        p.openElements.pop();\r\n    }\r\n}\r\nfunction startTagInForeignContent(p, token) {\r\n    if (foreignContent.causesExit(token)) {\r\n        popUntilHtmlOrIntegrationPoint(p);\r\n        p._startTagOutsideForeignContent(token);\r\n    }\r\n    else {\r\n        const current = p._getAdjustedCurrentElement();\r\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\r\n        if (currentNs === NS.MATHML) {\r\n            foreignContent.adjustTokenMathMLAttrs(token);\r\n        }\r\n        else if (currentNs === NS.SVG) {\r\n            foreignContent.adjustTokenSVGTagName(token);\r\n            foreignContent.adjustTokenSVGAttrs(token);\r\n        }\r\n        foreignContent.adjustTokenXMLAttrs(token);\r\n        if (token.selfClosing) {\r\n            p._appendElement(token, currentNs);\r\n        }\r\n        else {\r\n            p._insertElement(token, currentNs);\r\n        }\r\n        token.ackSelfClosing = true;\r\n    }\r\n}\r\nfunction endTagInForeignContent(p, token) {\r\n    if (token.tagID === $.P || token.tagID === $.BR) {\r\n        popUntilHtmlOrIntegrationPoint(p);\r\n        p._endTagOutsideForeignContent(token);\r\n        return;\r\n    }\r\n    for (let i = p.openElements.stackTop; i > 0; i--) {\r\n        const element = p.openElements.items[i];\r\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\r\n            p._endTagOutsideForeignContent(token);\r\n            break;\r\n        }\r\n        const tagName = p.treeAdapter.getTagName(element);\r\n        if (tagName.toLowerCase() === token.tagName) {\r\n            //NOTE: update the token tag name for `_setEndLocation`.\r\n            token.tagName = tagName;\r\n            p.openElements.shortenToLength(i);\r\n            break;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map", null, "import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\r\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\r\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\r\n// Sets\r\nconst VOID_ELEMENTS = new Set([\r\n    $.AREA,\r\n    $.BASE,\r\n    $.BASEFONT,\r\n    $.BGSOUND,\r\n    $.BR,\r\n    $.COL,\r\n    $.EMBED,\r\n    $.FRAME,\r\n    $.HR,\r\n    $.IMG,\r\n    $.INPUT,\r\n    $.KEYGEN,\r\n    $.LINK,\r\n    $.META,\r\n    $.PARAM,\r\n    $.SOURCE,\r\n    $.TRACK,\r\n    $.WBR,\r\n]);\r\nfunction isVoidElement(node, options) {\r\n    return (options.treeAdapter.isElementNode(node) &&\r\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\r\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\r\n}\r\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\r\n/**\r\n * Serializes an AST node to an HTML string.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * const parse5 = require('parse5');\r\n *\r\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\r\n *\r\n * // Serializes a document.\r\n * const html = parse5.serialize(document);\r\n *\r\n * // Serializes the <html> element content.\r\n * const str = parse5.serialize(document.childNodes[1]);\r\n *\r\n * console.log(str); //> '<head></head><body>Hi there!</body>'\r\n * ```\r\n *\r\n * @param node Node to serialize.\r\n * @param options Serialization options.\r\n */\r\nexport function serialize(node, options) {\r\n    const opts = { ...defaultOpts, ...options };\r\n    if (isVoidElement(node, opts)) {\r\n        return '';\r\n    }\r\n    return serializeChildNodes(node, opts);\r\n}\r\n/**\r\n * Serializes an AST element node to an HTML string, including the element node.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * const parse5 = require('parse5');\r\n *\r\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\r\n *\r\n * // Serializes the <div> element.\r\n * const html = parse5.serializeOuter(document.childNodes[0]);\r\n *\r\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\r\n * ```\r\n *\r\n * @param node Node to serialize.\r\n * @param options Serialization options.\r\n */\r\nexport function serializeOuter(node, options) {\r\n    const opts = { ...defaultOpts, ...options };\r\n    return serializeNode(node, opts);\r\n}\r\nfunction serializeChildNodes(parentNode, options) {\r\n    let html = '';\r\n    // Get container of the child nodes\r\n    const container = options.treeAdapter.isElementNode(parentNode) &&\r\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\r\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\r\n        ? options.treeAdapter.getTemplateContent(parentNode)\r\n        : parentNode;\r\n    const childNodes = options.treeAdapter.getChildNodes(container);\r\n    if (childNodes) {\r\n        for (const currentNode of childNodes) {\r\n            html += serializeNode(currentNode, options);\r\n        }\r\n    }\r\n    return html;\r\n}\r\nfunction serializeNode(node, options) {\r\n    if (options.treeAdapter.isElementNode(node)) {\r\n        return serializeElement(node, options);\r\n    }\r\n    if (options.treeAdapter.isTextNode(node)) {\r\n        return serializeTextNode(node, options);\r\n    }\r\n    if (options.treeAdapter.isCommentNode(node)) {\r\n        return serializeCommentNode(node, options);\r\n    }\r\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\r\n        return serializeDocumentTypeNode(node, options);\r\n    }\r\n    // Return an empty string for unknown nodes\r\n    return '';\r\n}\r\nfunction serializeElement(node, options) {\r\n    const tn = options.treeAdapter.getTagName(node);\r\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\r\n}\r\nfunction serializeAttributes(node, { treeAdapter }) {\r\n    let html = '';\r\n    for (const attr of treeAdapter.getAttrList(node)) {\r\n        html += ' ';\r\n        if (!attr.namespace) {\r\n            html += attr.name;\r\n        }\r\n        else\r\n            switch (attr.namespace) {\r\n                case NS.XML: {\r\n                    html += `xml:${attr.name}`;\r\n                    break;\r\n                }\r\n                case NS.XMLNS: {\r\n                    if (attr.name !== 'xmlns') {\r\n                        html += 'xmlns:';\r\n                    }\r\n                    html += attr.name;\r\n                    break;\r\n                }\r\n                case NS.XLINK: {\r\n                    html += `xlink:${attr.name}`;\r\n                    break;\r\n                }\r\n                default: {\r\n                    html += `${attr.prefix}:${attr.name}`;\r\n                }\r\n            }\r\n        html += `=\"${escapeAttribute(attr.value)}\"`;\r\n    }\r\n    return html;\r\n}\r\nfunction serializeTextNode(node, options) {\r\n    const { treeAdapter } = options;\r\n    const content = treeAdapter.getTextNodeContent(node);\r\n    const parent = treeAdapter.getParentNode(node);\r\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\r\n    return parentTn &&\r\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\r\n        hasUnescapedText(parentTn, options.scriptingEnabled)\r\n        ? content\r\n        : escapeText(content);\r\n}\r\nfunction serializeCommentNode(node, { treeAdapter }) {\r\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\r\n}\r\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\r\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\r\n}\r\n//# sourceMappingURL=index.js.map", "import { Parser } from './parser/index.js';\r\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\r\nexport { /** @internal */ Parser } from './parser/index.js';\r\nexport { serialize, serializeOuter } from './serializer/index.js';\r\nexport { ERR as ErrorCodes } from './common/error-codes.js';\r\n/** @internal */\r\nexport * as foreignContent from './common/foreign-content.js';\r\n/** @internal */\r\nexport * as html from './common/html.js';\r\n/** @internal */\r\nexport * as Token from './common/token.js';\r\n/** @internal */\r\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\r\n// Shorthands\r\n/**\r\n * Parses an HTML string.\r\n *\r\n * @param html Input HTML string.\r\n * @param options Parsing options.\r\n * @returns Document\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * const parse5 = require('parse5');\r\n *\r\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\r\n *\r\n * console.log(document.childNodes[1].tagName); //> 'html'\r\n *```\r\n */\r\nexport function parse(html, options) {\r\n    return Parser.parse(html, options);\r\n}\r\nexport function parseFragment(fragmentContext, html, options) {\r\n    if (typeof fragmentContext === 'string') {\r\n        options = html;\r\n        html = fragmentContext;\r\n        fragmentContext = null;\r\n    }\r\n    const parser = Parser.getFragmentParser(fragmentContext, options);\r\n    parser.tokenizer.write(html, true);\r\n    return parser.getFragment();\r\n}\r\n//# sourceMappingURL=index.js.map", "/**\r\n * @typedef {import('hast').Comment} Comment\r\n * @typedef {import('hast').Doctype} Doctype\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Nodes} Nodes\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').RootContent} RootContent\r\n * @typedef {import('hast').Text} Text\r\n *\r\n * @typedef {import('hast-util-raw').Options} Options\r\n *\r\n * @typedef {import('mdast-util-to-hast').Raw} Raw\r\n *\r\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\r\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\r\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\r\n * @typedef {import('parse5').Token.CommentToken} CommentToken\r\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\r\n * @typedef {import('parse5').Token.Location} Location\r\n * @typedef {import('parse5').Token.TagToken} TagToken\r\n *\r\n * @typedef {import('unist').Point} Point\r\n */\r\n\r\n/**\r\n * @typedef State\r\n *   Info passed around about the current state.\r\n * @property {(node: Nodes) => undefined} handle\r\n *   Add a hast node to the parser.\r\n * @property {Options} options\r\n *   User configuration.\r\n * @property {Parser<DefaultTreeAdapterMap>} parser\r\n *   Current parser.\r\n * @property {boolean} stitches\r\n *   Whether there are stitches.\r\n */\r\n\r\n/**\r\n * @typedef Stitch\r\n *   Custom comment-like value we pass through parse5, which contains a\r\n *   replacement node that we’ll swap back in afterwards.\r\n * @property {'comment'} type\r\n *   Node type.\r\n * @property {{stitch: Nodes}} value\r\n *   Replacement value.\r\n */\r\n\r\nimport structuredClone from '@ungap/structured-clone'\r\nimport {fromParse5} from 'hast-util-from-parse5'\r\nimport {toParse5} from 'hast-util-to-parse5'\r\nimport {htmlVoidElements} from 'html-void-elements'\r\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\r\nimport {pointEnd, pointStart} from 'unist-util-position'\r\nimport {visit} from 'unist-util-visit'\r\nimport {webNamespaces} from 'web-namespaces'\r\nimport {zwitch} from 'zwitch'\r\n\r\n// Node types associated with MDX.\r\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\r\nconst knownMdxNames = new Set([\r\n  'mdxFlowExpression',\r\n  'mdxJsxFlowElement',\r\n  'mdxJsxTextElement',\r\n  'mdxTextExpression',\r\n  'mdxjsEsm'\r\n])\r\n\r\n/** @type {ParserOptions} */\r\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\r\n\r\n/**\r\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\r\n * raw nodes into actual nodes.\r\n *\r\n * @param {Nodes} tree\r\n *   Original hast tree to transform.\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {Nodes}\r\n *   Parsed again tree.\r\n */\r\nexport function raw(tree, options) {\r\n  const document = documentMode(tree)\r\n  /** @type {(node: Nodes, state: State) => undefined} */\r\n  const one = zwitch('type', {\r\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\r\n    unknown\r\n  })\r\n\r\n  /** @type {State} */\r\n  const state = {\r\n    parser: document\r\n      ? new Parser(parseOptions)\r\n      : Parser.getFragmentParser(undefined, parseOptions),\r\n    handle(node) {\r\n      one(node, state)\r\n    },\r\n    stitches: false,\r\n    options: options || {}\r\n  }\r\n\r\n  one(tree, state)\r\n  resetTokenizer(state, pointStart())\r\n\r\n  const p5 = document ? state.parser.document : state.parser.getFragment()\r\n  const result = fromParse5(p5, {\r\n    // To do: support `space`?\r\n    file: state.options.file\r\n  })\r\n\r\n  if (state.stitches) {\r\n    visit(result, 'comment', function (node, index, parent) {\r\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\r\n      if (stitch.value.stitch && parent && index !== undefined) {\r\n        /** @type {Array<RootContent>} */\r\n        const siblings = parent.children\r\n        // @ts-expect-error: assume the stitch is allowed.\r\n        siblings[index] = stitch.value.stitch\r\n        return index\r\n      }\r\n    })\r\n  }\r\n\r\n  // Unpack if possible and when not given a `root`.\r\n  if (\r\n    result.type === 'root' &&\r\n    result.children.length === 1 &&\r\n    result.children[0].type === tree.type\r\n  ) {\r\n    return result.children[0]\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Transform all nodes\r\n *\r\n * @param {Array<RootContent>} nodes\r\n *   hast content.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction all(nodes, state) {\r\n  let index = -1\r\n\r\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\r\n  if (nodes) {\r\n    while (++index < nodes.length) {\r\n      state.handle(nodes[index])\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Transform a root.\r\n *\r\n * @param {Root} node\r\n *   hast root node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction root(node, state) {\r\n  all(node.children, state)\r\n}\r\n\r\n/**\r\n * Transform an element.\r\n *\r\n * @param {Element} node\r\n *   hast element node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction element(node, state) {\r\n  startTag(node, state)\r\n\r\n  all(node.children, state)\r\n\r\n  endTag(node, state)\r\n}\r\n\r\n/**\r\n * Transform a text.\r\n *\r\n * @param {Text} node\r\n *   hast text node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction text(node, state) {\r\n  // Allow `DATA` through `PLAINTEXT`,\r\n  // but when hanging in a tag for example,\r\n  // switch back to `DATA`.\r\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\r\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\r\n  if (state.parser.tokenizer.state > 4) {\r\n    state.parser.tokenizer.state = 0\r\n  }\r\n\r\n  /** @type {CharacterToken} */\r\n  const token = {\r\n    type: Token.TokenType.CHARACTER,\r\n    chars: node.value,\r\n    location: createParse5Location(node)\r\n  }\r\n\r\n  resetTokenizer(state, pointStart(node))\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.currentToken = token\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser._processToken(state.parser.currentToken)\r\n}\r\n\r\n/**\r\n * Transform a doctype.\r\n *\r\n * @param {Doctype} node\r\n *   hast doctype node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction doctype(node, state) {\r\n  /** @type {DoctypeToken} */\r\n  const token = {\r\n    type: Token.TokenType.DOCTYPE,\r\n    name: 'html',\r\n    forceQuirks: false,\r\n    publicId: '',\r\n    systemId: '',\r\n    location: createParse5Location(node)\r\n  }\r\n\r\n  resetTokenizer(state, pointStart(node))\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.currentToken = token\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser._processToken(state.parser.currentToken)\r\n}\r\n\r\n/**\r\n * Transform a stitch.\r\n *\r\n * @param {Nodes} node\r\n *   unknown node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction stitch(node, state) {\r\n  // Mark that there are stitches, so we need to walk the tree and revert them.\r\n  state.stitches = true\r\n\r\n  /** @type {Nodes} */\r\n  const clone = cloneWithoutChildren(node)\r\n\r\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\r\n  // passed through node).\r\n  if ('children' in node && 'children' in clone) {\r\n    // Root in root out.\r\n    const fakeRoot = /** @type {Root} */ (\r\n      raw({type: 'root', children: node.children}, state.options)\r\n    )\r\n    clone.children = fakeRoot.children\r\n  }\r\n\r\n  // Hack: `value` is supposed to be a string, but as none of the tools\r\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\r\n  // through.\r\n  comment({type: 'comment', value: {stitch: clone}}, state)\r\n}\r\n\r\n/**\r\n * Transform a comment (or stitch).\r\n *\r\n * @param {Comment | Stitch} node\r\n *   hast comment node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction comment(node, state) {\r\n  /** @type {string} */\r\n  // @ts-expect-error: we pass stitches through.\r\n  const data = node.value\r\n\r\n  /** @type {CommentToken} */\r\n  const token = {\r\n    type: Token.TokenType.COMMENT,\r\n    data,\r\n    location: createParse5Location(node)\r\n  }\r\n  resetTokenizer(state, pointStart(node))\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.currentToken = token\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser._processToken(state.parser.currentToken)\r\n}\r\n\r\n/**\r\n * Transform a raw node.\r\n *\r\n * @param {Raw} node\r\n *   hast raw node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction handleRaw(node, state) {\r\n  // Reset preprocessor:\r\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\r\n  state.parser.tokenizer.preprocessor.html = ''\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.preprocessor.pos = -1\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.preprocessor.gapStack = []\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\r\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.preprocessor.isEol = false\r\n\r\n  // Now pass `node.value`.\r\n  setPoint(state, pointStart(node))\r\n  state.parser.tokenizer.write(node.value, false)\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer._runParsingLoop()\r\n\r\n  // Character references hang, so if we ended there, we need to flush\r\n  // those too.\r\n  // We reset the preprocessor as if the document ends here.\r\n  // Then one single call to the relevant state does the trick, parse5\r\n  // consumes the whole token.\r\n\r\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\r\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\r\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\r\n  // Investigate when it is.\r\n  if (\r\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\r\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\r\n  ) {\r\n    // @ts-expect-error: private.\r\n    // type-coverage:ignore-next-line\r\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\r\n    /** @type {number} */\r\n    // @ts-expect-error: private.\r\n    // type-coverage:ignore-next-line\r\n    const cp = state.parser.tokenizer._consume()\r\n    // @ts-expect-error: private.\r\n    // type-coverage:ignore-next-line\r\n    state.parser.tokenizer._callState(cp)\r\n  }\r\n}\r\n\r\n/**\r\n * Crash on an unknown node.\r\n *\r\n * @param {unknown} node_\r\n *   unknown node.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Never.\r\n */\r\nfunction unknown(node_, state) {\r\n  const node = /** @type {Nodes} */ (node_)\r\n\r\n  if (\r\n    state.options.passThrough &&\r\n    state.options.passThrough.includes(node.type)\r\n  ) {\r\n    stitch(node, state)\r\n  } else {\r\n    let extra = ''\r\n\r\n    if (knownMdxNames.has(node.type)) {\r\n      extra =\r\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\r\n    }\r\n\r\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\r\n  }\r\n}\r\n\r\n/**\r\n * Reset the tokenizer of a parser.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {Point | undefined} point\r\n *   Point.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction resetTokenizer(state, point) {\r\n  setPoint(state, point)\r\n\r\n  // Process final characters if they’re still there after hibernating.\r\n  /** @type {CharacterToken} */\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  const token = state.parser.tokenizer.currentCharacterToken\r\n\r\n  if (token && token.location) {\r\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\r\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\r\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\r\n    // @ts-expect-error: private.\r\n    // type-coverage:ignore-next-line\r\n    state.parser.currentToken = token\r\n    // @ts-expect-error: private.\r\n    // type-coverage:ignore-next-line\r\n    state.parser._processToken(state.parser.currentToken)\r\n  }\r\n\r\n  // Reset tokenizer:\r\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\r\n  // Especially putting it back in the `data` state is useful: some elements,\r\n  // like textareas and iframes, change the state.\r\n  // See GH-7.\r\n  // But also if broken HTML is in `raw`, and then a correct element is given.\r\n  // See GH-11.\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.paused = false\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.inLoop = false\r\n\r\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\r\n  // manually update those when needed.\r\n  state.parser.tokenizer.active = false\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.charRefCode = -1\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.consumedAfterSnapshot = -1\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.currentLocation = null\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.currentCharacterToken = null\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.currentToken = null\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\r\n}\r\n\r\n/**\r\n * Set current location.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {Point | undefined} point\r\n *   Point.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction setPoint(state, point) {\r\n  if (point && point.offset !== undefined) {\r\n    /** @type {Location} */\r\n    const location = {\r\n      startLine: point.line,\r\n      startCol: point.column,\r\n      startOffset: point.offset,\r\n      endLine: -1,\r\n      endCol: -1,\r\n      endOffset: -1\r\n    }\r\n\r\n    // @ts-expect-error: private.\r\n    // type-coverage:ignore-next-line\r\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\r\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\r\n    state.parser.tokenizer.preprocessor.line = point.line\r\n    // @ts-expect-error: private.\r\n    // type-coverage:ignore-next-line\r\n    state.parser.tokenizer.currentLocation = location\r\n  }\r\n}\r\n\r\n/**\r\n * Emit a start tag.\r\n *\r\n * @param {Element} node\r\n *   Element.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction startTag(node, state) {\r\n  const tagName = node.tagName.toLowerCase()\r\n\r\n  // Ignore tags if we’re in plain text.\r\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\r\n\r\n  resetTokenizer(state, pointStart(node))\r\n\r\n  const current = state.parser.openElements.current\r\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\r\n\r\n  if (ns === webNamespaces.html && tagName === 'svg') {\r\n    ns = webNamespaces.svg\r\n  }\r\n\r\n  const result = toParse5(\r\n    // Shallow clone to not delve into `children`: we only need the attributes.\r\n    {...node, children: []},\r\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\r\n  )\r\n\r\n  /** @type {TagToken} */\r\n  const tag = {\r\n    type: Token.TokenType.START_TAG,\r\n    tagName,\r\n    tagID: html.getTagID(tagName),\r\n    // We always send start and end tags.\r\n    selfClosing: false,\r\n    ackSelfClosing: false,\r\n    // Always element.\r\n    /* c8 ignore next */\r\n    attrs: 'attrs' in result ? result.attrs : [],\r\n    location: createParse5Location(node)\r\n  }\r\n\r\n  // The HTML parsing algorithm works by doing half of the state management in\r\n  // the tokenizer and half in the parser.\r\n  // We can’t use the tokenizer here, as we don’t have strings.\r\n  // So we act *as if* the tokenizer emits tokens:\r\n\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.currentToken = tag\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser._processToken(state.parser.currentToken)\r\n\r\n  // …but then we still need a bunch of work that the tokenizer would normally\r\n  // do, such as:\r\n\r\n  // Set a tag name, similar to how the tokenizer would do it.\r\n  state.parser.tokenizer.lastStartTagName = tagName\r\n\r\n  // `inForeignNode` is correctly set by the parser.\r\n}\r\n\r\n/**\r\n * Emit an end tag.\r\n *\r\n * @param {Element} node\r\n *   Element.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction endTag(node, state) {\r\n  const tagName = node.tagName.toLowerCase()\r\n  // Do not emit closing tags for HTML void elements.\r\n  if (\r\n    !state.parser.tokenizer.inForeignNode &&\r\n    htmlVoidElements.includes(tagName)\r\n  ) {\r\n    return\r\n  }\r\n\r\n  // Ignore tags if we’re in plain text.\r\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\r\n\r\n  resetTokenizer(state, pointEnd(node))\r\n\r\n  /** @type {TagToken} */\r\n  const tag = {\r\n    type: Token.TokenType.END_TAG,\r\n    tagName,\r\n    tagID: html.getTagID(tagName),\r\n    selfClosing: false,\r\n    ackSelfClosing: false,\r\n    attrs: [],\r\n    location: createParse5Location(node)\r\n  }\r\n\r\n  // The HTML parsing algorithm works by doing half of the state management in\r\n  // the tokenizer and half in the parser.\r\n  // We can’t use the tokenizer here, as we don’t have strings.\r\n  // So we act *as if* the tokenizer emits tokens:\r\n\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser.currentToken = tag\r\n  // @ts-expect-error: private.\r\n  // type-coverage:ignore-next-line\r\n  state.parser._processToken(state.parser.currentToken)\r\n\r\n  // …but then we still need a bunch of work that the tokenizer would normally\r\n  // do, such as:\r\n\r\n  // Switch back to the data state after alternative states that don’t accept\r\n  // tags:\r\n  if (\r\n    // Current element is closed.\r\n    tagName === state.parser.tokenizer.lastStartTagName &&\r\n    // `<textarea>` and `<title>`\r\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\r\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\r\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\r\n      // `<script>`\r\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\r\n  ) {\r\n    state.parser.tokenizer.state = TokenizerMode.DATA\r\n  }\r\n}\r\n\r\n/**\r\n * Check if `node` represents a whole document or a fragment.\r\n *\r\n * @param {Nodes} node\r\n *   hast node.\r\n * @returns {boolean}\r\n *   Whether this represents a whole document or a fragment.\r\n */\r\nfunction documentMode(node) {\r\n  const head = node.type === 'root' ? node.children[0] : node\r\n  return Boolean(\r\n    head &&\r\n      (head.type === 'doctype' ||\r\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\r\n  )\r\n}\r\n\r\n/**\r\n * Get a `parse5` location from a node.\r\n *\r\n * @param {Nodes | Stitch} node\r\n *   hast node.\r\n * @returns {Location}\r\n *   `parse5` location.\r\n */\r\nfunction createParse5Location(node) {\r\n  const start = pointStart(node) || {\r\n    line: undefined,\r\n    column: undefined,\r\n    offset: undefined\r\n  }\r\n  const end = pointEnd(node) || {\r\n    line: undefined,\r\n    column: undefined,\r\n    offset: undefined\r\n  }\r\n\r\n  /** @type {Record<keyof Location, number | undefined>} */\r\n  const location = {\r\n    startLine: start.line,\r\n    startCol: start.column,\r\n    startOffset: start.offset,\r\n    endLine: end.line,\r\n    endCol: end.column,\r\n    endOffset: end.offset\r\n  }\r\n\r\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\r\n  // `parse5` types don’t want.\r\n  return location\r\n}\r\n\r\n/**\r\n * @template {Nodes} NodeType\r\n *   Node type.\r\n * @param {NodeType} node\r\n *   Node to clone.\r\n * @returns {NodeType}\r\n *   Cloned node, without children.\r\n */\r\nfunction cloneWithoutChildren(node) {\r\n  return 'children' in node\r\n    ? structuredClone({...node, children: []})\r\n    : structuredClone(node)\r\n}\r\n", "/**\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast-util-raw').Options} RawOptions\r\n * @typedef {import('vfile').VFile} VFile\r\n */\r\n\r\n/**\r\n * @typedef {Omit<RawOptions, 'file'>} Options\r\n *   Configuration.\r\n */\r\n\r\nimport {raw} from 'hast-util-raw'\r\n\r\n/**\r\n * Parse the tree (and raw nodes) again, keeping positional info okay.\r\n *\r\n * @param {Options | null | undefined}  [options]\r\n *   Configuration (optional).\r\n * @returns\r\n *   Transform.\r\n */\r\nexport default function rehypeRaw(options) {\r\n  /**\r\n   * @param {Root} tree\r\n   *   Tree.\r\n   * @param {VFile} file\r\n   *   File.\r\n   * @returns {Root}\r\n   *   New tree.\r\n   */\r\n  return function (tree, file) {\r\n    // Assume root in -> root out.\r\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\r\n    return result\r\n  }\r\n}\r\n", "import _extends from \"@babel/runtime/helpers/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"prefixCls\", \"className\", \"source\", \"style\", \"disableCopy\", \"skipHtml\", \"onScroll\", \"onMouseOver\", \"pluginsFilter\", \"rehypeRewrite\", \"wrapperElement\", \"warpperElement\", \"urlTransform\"];\r\nimport React, { useImperativeHandle } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\nimport raw from 'rehype-raw';\r\nimport { remarkAlert } from 'remark-github-blockquote-alert';\r\nimport { useCopied } from './plugins/useCopied';\r\nimport \"./styles/markdown.css\";\r\n\r\n/**\r\n * https://github.com/uiwjs/react-md-editor/issues/607\r\n */\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nvar defaultUrlTransform = url => url;\r\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\r\n  var {\r\n      prefixCls = 'wmde-markdown wmde-markdown-color',\r\n      className,\r\n      source,\r\n      style,\r\n      disableCopy = false,\r\n      skipHtml = true,\r\n      onScroll,\r\n      onMouseOver,\r\n      pluginsFilter,\r\n      wrapperElement = {},\r\n      warpperElement = {},\r\n      urlTransform\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  var mdp = React.useRef(null);\r\n  useImperativeHandle(ref, () => _extends({}, props, {\r\n    mdp\r\n  }), [mdp, props]);\r\n  var cls = (prefixCls || '') + \" \" + (className || '');\r\n  useCopied(mdp);\r\n  var rehypePlugins = [...(other.rehypePlugins || [])];\r\n  var customProps = {\r\n    allowElement: (element, index, parent) => {\r\n      if (other.allowElement) {\r\n        return other.allowElement(element, index, parent);\r\n      }\r\n      return /^[A-Za-z0-9]+$/.test(element.tagName);\r\n    }\r\n  };\r\n  if (skipHtml) {\r\n    rehypePlugins.push(raw);\r\n  }\r\n  var remarkPlugins = [remarkAlert, ...(other.remarkPlugins || []), gfm];\r\n  var wrapperProps = _extends({}, warpperElement, wrapperElement);\r\n  return /*#__PURE__*/_jsx(\"div\", _extends({\r\n    ref: mdp,\r\n    onScroll: onScroll,\r\n    onMouseOver: onMouseOver\r\n  }, wrapperProps, {\r\n    className: cls,\r\n    style: style,\r\n    children: /*#__PURE__*/_jsx(ReactMarkdown, _extends({}, customProps, other, {\r\n      skipHtml: skipHtml,\r\n      urlTransform: urlTransform || defaultUrlTransform,\r\n      rehypePlugins: pluginsFilter ? pluginsFilter('rehype', rehypePlugins) : rehypePlugins,\r\n      remarkPlugins: pluginsFilter ? pluginsFilter('remark', remarkPlugins) : remarkPlugins,\r\n      children: source || ''\r\n    }))\r\n  }));\r\n});", "import { visit } from 'unist-util-visit';\r\nimport type { Plugin } from 'unified';\r\nimport type { Root, PhrasingContent } from \"mdast\";\r\n\r\nconst alertRegex = /^\\[!(NOTE|TIP|IMPORTANT|WARNING|CAUTION)\\]/i;\r\nconst alertLegacyRegex = /^\\[!(NOTE|TIP|IMPORTANT|WARNING|CAUTION)(\\/.*)?\\]/i;\r\n\r\ntype Option = {\r\n  /**\r\n   * Use the legacy title format, which includes a slash and a title after the alert type.\r\n   * \r\n   * Enabling legacyTitle allows modifying the title, but this is not GitHub standard.\r\n   */\r\n  legacyTitle?: boolean\r\n}\r\n\r\n/**\r\n * Alerts are a Markdown extension based on the blockquote syntax that you can use to emphasize critical information.\r\n * On GitHub, they are displayed with distinctive colors and icons to indicate the significance of the content.\r\n * https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#alerts\r\n */\r\nexport const remarkAlert: Plugin<[Option?], Root> = ({ legacyTitle = false } = {}) => {\r\n  return (tree) => {\r\n    visit(tree, \"blockquote\", (node, index, parent) => {\r\n      let alertType = '';\r\n      let title = '';\r\n      let isNext = true;\r\n      let child = node.children.map((item) => {\r\n        if (isNext && item.type === \"paragraph\") {\r\n          const firstNode = item.children[0];\r\n          const text = firstNode.type === 'text' ? firstNode.value : '';\r\n          const reg = legacyTitle ? alertLegacyRegex : alertRegex;\r\n          const match = text.match(reg);\r\n          if (match) {\r\n            isNext = false;\r\n            alertType = match[1].toLocaleLowerCase();\r\n            title = legacyTitle ? match[2] || alertType.toLocaleUpperCase() : alertType.toLocaleUpperCase();\r\n            if (text.includes('\\n')) {\r\n              item.children[0] = {\r\n                type: 'text',\r\n                value: text.replace(reg, '').replace(/^\\n+/, ''),\r\n              };\r\n            }\r\n\r\n            if (!text.includes('\\n')) {\r\n              const itemChild: Array<PhrasingContent> = [];\r\n              item.children.forEach((item, idx) => {\r\n                if (idx == 0) return;\r\n                if (idx == 1 && item.type === 'break') {\r\n                  return;\r\n                }\r\n                itemChild.push(item);\r\n              });\r\n              item.children = [...itemChild];\r\n            }\r\n          }\r\n        }\r\n        return item;\r\n      })\r\n\r\n      if (!!alertType) {\r\n        node.data = {\r\n          hName: \"div\",\r\n          hProperties: {\r\n            class: `markdown-alert markdown-alert-${alertType}`,\r\n            dir: 'auto'\r\n          },\r\n        }\r\n        child.unshift({\r\n          type: \"paragraph\",\r\n          children: [\r\n            getAlertIcon(alertType as IconType),\r\n            {\r\n              type: \"text\",\r\n              value: title.replace(/^\\//, ''),\r\n            }\r\n          ],\r\n          data: {\r\n            hProperties: {\r\n              class: \"markdown-alert-title\",\r\n              dir: \"auto\"\r\n            }\r\n          }\r\n        })\r\n      }\r\n      node.children = [...child];\r\n    });\r\n  };\r\n};\r\n\r\nexport function getAlertIcon(type: IconType): PhrasingContent {\r\n  let pathD = pathData[type] ?? '';\r\n  return {\r\n    type: \"emphasis\",\r\n    data: {\r\n      hName: \"svg\",\r\n      hProperties: {\r\n        class: \"octicon\",\r\n        viewBox: '0 0 16 16',\r\n        width: '16',\r\n        height: '16',\r\n        ariaHidden: 'true',\r\n      },\r\n    },\r\n    children: [\r\n      {\r\n        type: \"emphasis\",\r\n        data: {\r\n          hName: \"path\",\r\n          hProperties: {\r\n            d: pathD\r\n          }\r\n        },\r\n        children: []\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\ntype IconType = 'note' | 'tip' | 'important' | 'warning' | 'caution';\r\n\r\nconst pathData: Record<IconType, string> = {\r\n  note: 'M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z',\r\n  tip: 'M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z',\r\n  important:\r\n    'M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v9.5A1.75 1.75 0 0 1 14.25 13H8.06l-2.573 2.573A1.458 1.458 0 0 1 3 14.543V13H1.75A1.75 1.75 0 0 1 0 11.25Zm1.75-.25a.25.25 0 0 0-.25.25v9.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-9.5a.25.25 0 0 0-.25-.25Zm7 2.25v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 9a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z',\r\n  warning:\r\n    'M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z',\r\n  caution:\r\n    'M4.47.22A.749.749 0 0 1 5 0h6c.199 0 .389.079.53.22l4.25 4.25c.141.14.22.331.22.53v6a.749.749 0 0 1-.22.53l-4.25 4.25A.749.749 0 0 1 11 16H5a.749.749 0 0 1-.53-.22L.22 11.53A.749.749 0 0 1 0 11V5c0-.199.079-.389.22-.53Zm.84 1.28L1.5 5.31v5.38l3.81 3.81h5.38l3.81-3.81V5.31L10.69 1.5ZM8 4a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0v-3.5A.75.75 0 0 1 8 4Zm0 8a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z',\r\n};\r\n", "/**! \r\n * @uiw/copy-to-clipboard v1.0.17 \r\n * Copy to clipboard. \r\n * \r\n * Copyright (c) 2024 Kenny Wang \r\n * https://github.com/uiwjs/copy-to-clipboard.git \r\n * \r\n * @website: https://uiwjs.github.io/copy-to-clipboard\r\n \r\n * Licensed under the MIT license \r\n */\r\n\r\n/**\r\n * *** This styling is an extra step which is likely not required. ***\r\n * https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard\r\n * \r\n * Why is it here? To ensure:\r\n * \r\n * 1. the element is able to have focus and selection.\r\n * 2. if element was to flash render it has minimal visual impact.\r\n * 3. less flakyness with selection and copying which **might** occur if\r\n *     the textarea element is not visible.\r\n *\r\n *   The likelihood is the element won't even render, not even a flash,\r\n *   so some of these are just precautions. However in IE the element\r\n *   is visible whilst the popup box asking the user for permission for\r\n *   the web page to copy to the clipboard.\r\n *  \r\n *   Place in top-left corner of screen regardless of scroll position.\r\n *\r\n * @typedef CopyTextToClipboard\r\n * @property {(text: string, method?: (isCopy: boolean) => void) => void} void\r\n * @returns {void}\r\n * \r\n * @param {string} text \r\n * @param {CopyTextToClipboard} cb \r\n */\r\nfunction copyTextToClipboard(text, cb) {\r\n  if (typeof document === \"undefined\") return;\r\n  const el = document.createElement('textarea');\r\n  el.value = text;\r\n  el.setAttribute('readonly', '');\r\n  el.style = {\r\n    position: 'absolute',\r\n    left: '-9999px',\r\n  };\r\n  document.body.appendChild(el);\r\n  const selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\r\n  el.select();\r\n  let isCopy = false;\r\n  try {\r\n    const successful = document.execCommand('copy');\r\n    isCopy = !!successful;\r\n  } catch (err) {\r\n    isCopy = false;\r\n  }\r\n  document.body.removeChild(el);\r\n  if (selected && document.getSelection) {\r\n    document.getSelection().removeAllRanges();\r\n    document.getSelection().addRange(selected);\r\n  }\r\n  cb && cb(isCopy);\r\n}\r\n\r\nexport { copyTextToClipboard as default };\r\n", "import copyTextToClipboard from '@uiw/copy-to-clipboard';\r\nimport { useEffect } from 'react';\r\nfunction getParentElement(target) {\r\n  if (!target) return null;\r\n  var dom = target;\r\n  if (dom.dataset.code && dom.classList.contains('copied')) {\r\n    return dom;\r\n  }\r\n  if (dom.parentElement) {\r\n    return getParentElement(dom.parentElement);\r\n  }\r\n  return null;\r\n}\r\nexport function useCopied(container) {\r\n  var handle = event => {\r\n    var target = getParentElement(event.target);\r\n    if (!target) return;\r\n    target.classList.add('active');\r\n    copyTextToClipboard(target.dataset.code, function () {\r\n      setTimeout(() => {\r\n        target.classList.remove('active');\r\n      }, 2000);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    var _container$current, _container$current2;\r\n    (_container$current = container.current) == null || _container$current.removeEventListener('click', handle, false);\r\n    (_container$current2 = container.current) == null || _container$current2.addEventListener('click', handle, false);\r\n    return () => {\r\n      var _container$current3;\r\n      (_container$current3 = container.current) == null || _container$current3.removeEventListener('click', handle, false);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [container]);\r\n}", "import _extends from \"@babel/runtime/helpers/extends\";\r\nimport { visit } from 'unist-util-visit';\r\nexport var reservedMeta = function reservedMeta(options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  return tree => {\r\n    visit(tree, node => {\r\n      if (node.type === 'element' && node.tagName === 'code' && node.data && node.data.meta) {\r\n        node.properties = _extends({}, node.properties, {\r\n          'data-meta': String(node.data.meta)\r\n        });\r\n      }\r\n    });\r\n  };\r\n};", "import { visit } from 'unist-util-visit';\r\nexport var retrieveMeta = function retrieveMeta(options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  return tree => {\r\n    visit(tree, node => {\r\n      if (node.type === 'element' && node.tagName === 'code' && node.properties && node.properties['dataMeta']) {\r\n        if (!node.data) {\r\n          node.data = {};\r\n        }\r\n        var metaString = node.properties['dataMeta'];\r\n        if (typeof metaString === 'string') {\r\n          node.data.meta = metaString;\r\n        }\r\n        delete node.properties['dataMeta'];\r\n      }\r\n    });\r\n  };\r\n};", "// This module is generated by `script/`.\r\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\r\nexport const regex = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\r\n", "import { regex } from './regex.js'\r\n\r\nconst own = Object.hasOwnProperty\r\n\r\n/**\r\n * Slugger.\r\n */\r\nexport default class BananaSlug {\r\n  /**\r\n   * Create a new slug class.\r\n   */\r\n  constructor () {\r\n    /** @type {Record<string, number>} */\r\n    // eslint-disable-next-line no-unused-expressions\r\n    this.occurrences\r\n\r\n    this.reset()\r\n  }\r\n\r\n  /**\r\n   * Generate a unique slug.\r\n  *\r\n  * Tracks previously generated slugs: repeated calls with the same value\r\n  * will result in different slugs.\r\n  * Use the `slug` function to get same slugs.\r\n   *\r\n   * @param  {string} value\r\n   *   String of text to slugify\r\n   * @param  {boolean} [maintainCase=false]\r\n   *   Keep the current case, otherwise make all lowercase\r\n   * @return {string}\r\n   *   A unique slug string\r\n   */\r\n  slug (value, maintainCase) {\r\n    const self = this\r\n    let result = slug(value, maintainCase === true)\r\n    const originalSlug = result\r\n\r\n    while (own.call(self.occurrences, result)) {\r\n      self.occurrences[originalSlug]++\r\n      result = originalSlug + '-' + self.occurrences[originalSlug]\r\n    }\r\n\r\n    self.occurrences[result] = 0\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Reset - Forget all previous slugs\r\n   *\r\n   * @return void\r\n   */\r\n  reset () {\r\n    this.occurrences = Object.create(null)\r\n  }\r\n}\r\n\r\n/**\r\n * Generate a slug.\r\n *\r\n * Does not track previously generated slugs: repeated calls with the same value\r\n * will result in the exact same slug.\r\n * Use the `GithubSlugger` class to get unique slugs.\r\n *\r\n * @param  {string} value\r\n *   String of text to slugify\r\n * @param  {boolean} [maintainCase=false]\r\n *   Keep the current case, otherwise make all lowercase\r\n * @return {string}\r\n *   A unique slug string\r\n */\r\nexport function slug (value, maintainCase) {\r\n  if (typeof value !== 'string') return ''\r\n  if (!maintainCase) value = value.toLowerCase()\r\n  return value.replace(regex, '').replace(/ /g, '-')\r\n}\r\n", "/**\r\n * @typedef {import('hast').Nodes} Nodes\r\n */\r\n\r\n/**\r\n * Get the rank (`1` to `6`) of headings (`h1` to `h6`).\r\n *\r\n * @param {Nodes} node\r\n *   Node to check.\r\n * @returns {number | undefined}\r\n *   Rank of the heading or `undefined` if not a heading.\r\n */\r\nexport function headingRank(node) {\r\n  const name = node.type === 'element' ? node.tagName.toLowerCase() : ''\r\n  const code =\r\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\r\n      ? name.charCodeAt(1)\r\n      : 0\r\n  return code > 48 /* `0` */ && code < 55 /* `7` */\r\n    ? code - 48 /* `0` */\r\n    : undefined\r\n}\r\n", "/**\r\n * @typedef {import('hast').Root} Root\r\n */\r\n\r\n/**\r\n * @typedef Options\r\n *   Configuration (optional).\r\n * @property {string} [prefix='']\r\n *   Prefix to add in front of `id`s (default: `''`).\r\n */\r\n\r\nimport GithubSlugger from 'github-slugger'\r\nimport {headingRank} from 'hast-util-heading-rank'\r\nimport {toString} from 'hast-util-to-string'\r\nimport {visit} from 'unist-util-visit'\r\n\r\n/** @type {Options} */\r\nconst emptyOptions = {}\r\nconst slugs = new GithubSlugger()\r\n\r\n/**\r\n * Add `id`s to headings.\r\n *\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns\r\n *   Transform.\r\n */\r\nexport default function rehypeSlug(options) {\r\n  const settings = options || emptyOptions\r\n  const prefix = settings.prefix || ''\r\n\r\n  /**\r\n   * @param {Root} tree\r\n   *   Tree.\r\n   * @returns {undefined}\r\n   *   Nothing.\r\n   */\r\n  return function (tree) {\r\n    slugs.reset()\r\n\r\n    visit(tree, 'element', function (node) {\r\n      if (headingRank(node) && !node.properties.id) {\r\n        node.properties.id = prefix + slugs.slug(toString(node))\r\n      }\r\n    })\r\n  }\r\n}\r\n", "/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Parents} Parents\r\n */\r\n\r\n/**\r\n * @template Fn\r\n * @template Fallback\r\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\r\n */\r\n\r\n/**\r\n * @callback Check\r\n *   Check that an arbitrary value is an element.\r\n * @param {unknown} this\r\n *   Context object (`this`) to call `test` with\r\n * @param {unknown} [element]\r\n *   Anything (typically a node).\r\n * @param {number | null | undefined} [index]\r\n *   Position of `element` in its parent.\r\n * @param {Parents | null | undefined} [parent]\r\n *   Parent of `element`.\r\n * @returns {boolean}\r\n *   Whether this is an element and passes a test.\r\n *\r\n * @typedef {Array<TestFunction | string> | TestFunction | string | null | undefined} Test\r\n *   Check for an arbitrary element.\r\n *\r\n *   * when `string`, checks that the element has that tag name\r\n *   * when `function`, see `TestFunction`\r\n *   * when `Array`, checks if one of the subtests pass\r\n *\r\n * @callback TestFunction\r\n *   Check if an element passes a test.\r\n * @param {unknown} this\r\n *   The given context.\r\n * @param {Element} element\r\n *   An element.\r\n * @param {number | undefined} [index]\r\n *   Position of `element` in its parent.\r\n * @param {Parents | undefined} [parent]\r\n *   Parent of `element`.\r\n * @returns {boolean | undefined | void}\r\n *   Whether this element passes the test.\r\n *\r\n *   Note: `void` is included until TS sees no return as `undefined`.\r\n */\r\n\r\n/**\r\n * Check if `element` is an `Element` and whether it passes the given test.\r\n *\r\n * @param element\r\n *   Thing to check, typically `element`.\r\n * @param test\r\n *   Check for a specific element.\r\n * @param index\r\n *   Position of `element` in its parent.\r\n * @param parent\r\n *   Parent of `element`.\r\n * @param context\r\n *   Context object (`this`) to call `test` with.\r\n * @returns\r\n *   Whether `element` is an `Element` and passes a test.\r\n * @throws\r\n *   When an incorrect `test`, `index`, or `parent` is given; there is no error\r\n *   thrown when `element` is not a node or not an element.\r\n */\r\nexport const isElement =\r\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\r\n  /**\r\n   * @type {(\r\n   *   (<Condition extends TestFunction>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\r\n   *   (<Condition extends string>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\r\n   *   ((element?: null | undefined) => false) &\r\n   *   ((element: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\r\n   *   ((element: unknown, test?: Test, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => boolean)\r\n   * )}\r\n   */\r\n  (\r\n    /**\r\n     * @param {unknown} [element]\r\n     * @param {Test | undefined} [test]\r\n     * @param {number | null | undefined} [index]\r\n     * @param {Parents | null | undefined} [parent]\r\n     * @param {unknown} [context]\r\n     * @returns {boolean}\r\n     */\r\n    // eslint-disable-next-line max-params\r\n    function (element, test, index, parent, context) {\r\n      const check = convertElement(test)\r\n\r\n      if (\r\n        index !== null &&\r\n        index !== undefined &&\r\n        (typeof index !== 'number' ||\r\n          index < 0 ||\r\n          index === Number.POSITIVE_INFINITY)\r\n      ) {\r\n        throw new Error('Expected positive finite `index`')\r\n      }\r\n\r\n      if (\r\n        parent !== null &&\r\n        parent !== undefined &&\r\n        (!parent.type || !parent.children)\r\n      ) {\r\n        throw new Error('Expected valid `parent`')\r\n      }\r\n\r\n      if (\r\n        (index === null || index === undefined) !==\r\n        (parent === null || parent === undefined)\r\n      ) {\r\n        throw new Error('Expected both `index` and `parent`')\r\n      }\r\n\r\n      return looksLikeAnElement(element)\r\n        ? check.call(context, element, index, parent)\r\n        : false\r\n    }\r\n  )\r\n\r\n/**\r\n * Generate a check from a test.\r\n *\r\n * Useful if you’re going to test many nodes, for example when creating a\r\n * utility where something else passes a compatible test.\r\n *\r\n * The created function is a bit faster because it expects valid input only:\r\n * an `element`, `index`, and `parent`.\r\n *\r\n * @param test\r\n *   A test for a specific element.\r\n * @returns\r\n *   A check.\r\n */\r\nexport const convertElement =\r\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\r\n  /**\r\n   * @type {(\r\n   *   (<Condition extends TestFunction>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\r\n   *   (<Condition extends string>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\r\n   *   ((test?: null | undefined) => (element?: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\r\n   *   ((test?: Test) => Check)\r\n   * )}\r\n   */\r\n  (\r\n    /**\r\n     * @param {Test | null | undefined} [test]\r\n     * @returns {Check}\r\n     */\r\n    function (test) {\r\n      if (test === null || test === undefined) {\r\n        return element\r\n      }\r\n\r\n      if (typeof test === 'string') {\r\n        return tagNameFactory(test)\r\n      }\r\n\r\n      // Assume array.\r\n      if (typeof test === 'object') {\r\n        return anyFactory(test)\r\n      }\r\n\r\n      if (typeof test === 'function') {\r\n        return castFactory(test)\r\n      }\r\n\r\n      throw new Error('Expected function, string, or array as `test`')\r\n    }\r\n  )\r\n\r\n/**\r\n * Handle multiple tests.\r\n *\r\n * @param {Array<TestFunction | string>} tests\r\n * @returns {Check}\r\n */\r\nfunction anyFactory(tests) {\r\n  /** @type {Array<Check>} */\r\n  const checks = []\r\n  let index = -1\r\n\r\n  while (++index < tests.length) {\r\n    checks[index] = convertElement(tests[index])\r\n  }\r\n\r\n  return castFactory(any)\r\n\r\n  /**\r\n   * @this {unknown}\r\n   * @type {TestFunction}\r\n   */\r\n  function any(...parameters) {\r\n    let index = -1\r\n\r\n    while (++index < checks.length) {\r\n      if (checks[index].apply(this, parameters)) return true\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Turn a string into a test for an element with a certain type.\r\n *\r\n * @param {string} check\r\n * @returns {Check}\r\n */\r\nfunction tagNameFactory(check) {\r\n  return castFactory(tagName)\r\n\r\n  /**\r\n   * @param {Element} element\r\n   * @returns {boolean}\r\n   */\r\n  function tagName(element) {\r\n    return element.tagName === check\r\n  }\r\n}\r\n\r\n/**\r\n * Turn a custom test into a test for an element that passes that test.\r\n *\r\n * @param {TestFunction} testFunction\r\n * @returns {Check}\r\n */\r\nfunction castFactory(testFunction) {\r\n  return check\r\n\r\n  /**\r\n   * @this {unknown}\r\n   * @type {Check}\r\n   */\r\n  function check(value, index, parent) {\r\n    return Boolean(\r\n      looksLikeAnElement(value) &&\r\n        testFunction.call(\r\n          this,\r\n          value,\r\n          typeof index === 'number' ? index : undefined,\r\n          parent || undefined\r\n        )\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Make sure something is an element.\r\n *\r\n * @param {unknown} element\r\n * @returns {element is Element}\r\n */\r\nfunction element(element) {\r\n  return Boolean(\r\n    element &&\r\n      typeof element === 'object' &&\r\n      'type' in element &&\r\n      element.type === 'element' &&\r\n      'tagName' in element &&\r\n      typeof element.tagName === 'string'\r\n  )\r\n}\r\n\r\n/**\r\n * @param {unknown} value\r\n * @returns {value is Element}\r\n */\r\nfunction looksLikeAnElement(value) {\r\n  return (\r\n    value !== null &&\r\n    typeof value === 'object' &&\r\n    'type' in value &&\r\n    'tagName' in value\r\n  )\r\n}\r\n", "/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').ElementContent} ElementContent\r\n * @typedef {import('hast').Properties} Properties\r\n * @typedef {import('hast').Root} Root\r\n *\r\n * @typedef {import('hast-util-is-element').Test} Test\r\n */\r\n\r\n/**\r\n * @typedef {'after' | 'append' | 'before' | 'prepend' | 'wrap'} Behavior\r\n *   Behavior.\r\n *\r\n * @callback Build\r\n *   Generate content.\r\n * @param {Readonly<Element>} element\r\n *   Current heading.\r\n * @returns {Array<ElementContent> | ElementContent}\r\n *   Content.\r\n *\r\n * @callback BuildProperties\r\n *   Generate properties.\r\n * @param {Readonly<Element>} element\r\n *   Current heading.\r\n * @returns {Properties}\r\n *   Properties.\r\n *\r\n * @typedef Options\r\n *   Configuration.\r\n * @property {Behavior | null | undefined} [behavior='prepend']\r\n *   How to create links (default: `'prepend'`).\r\n * @property {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build | null | undefined} [content]\r\n *   Content to insert in the link (default: if `'wrap'` then `undefined`,\r\n *   otherwise `<span class=\"icon icon-link\"></span>`);\r\n *   if `behavior` is `'wrap'` and `Build` is passed, its result replaces the\r\n *   existing content, otherwise the content is added after existing content.\r\n * @property {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build | null | undefined} [group]\r\n *   Content to wrap the heading and link with, if `behavior` is `'after'` or\r\n *   `'before'` (optional).\r\n * @property {Readonly<Properties> | BuildProperties | null | undefined} [headingProperties]\r\n *   Extra properties to set on the heading (optional).\r\n * @property {Readonly<Properties> | BuildProperties | null | undefined} [properties]\r\n *   Extra properties to set on the link when injecting (default:\r\n *   `{ariaHidden: true, tabIndex: -1}` if `'append'` or `'prepend'`, otherwise\r\n *   `undefined`).\r\n * @property {Test | null | undefined} [test]\r\n *   Extra test for which headings are linked (optional).\r\n */\r\n\r\n/**\r\n * @template T\r\n *   Kind.\r\n * @typedef {(\r\n *   T extends Record<any, any>\r\n *     ? {-readonly [k in keyof T]: Cloneable<T[k]>}\r\n *     : T\r\n * )} Cloneable\r\n *   Deep clone.\r\n *\r\n *   See: <https://github.com/microsoft/TypeScript-DOM-lib-generator/issues/1237#issuecomment-1345515448>\r\n */\r\n\r\nimport structuredClone from '@ungap/structured-clone'\r\nimport {headingRank} from 'hast-util-heading-rank'\r\nimport {convertElement} from 'hast-util-is-element'\r\nimport {SKIP, visit} from 'unist-util-visit'\r\n\r\n/** @type {Element} */\r\nconst contentDefaults = {\r\n  type: 'element',\r\n  tagName: 'span',\r\n  properties: {className: ['icon', 'icon-link']},\r\n  children: []\r\n}\r\n\r\n/** @type {Options} */\r\nconst emptyOptions = {}\r\n\r\n/**\r\n * Add links from headings back to themselves.\r\n *\r\n * ###### Notes\r\n *\r\n * This plugin only applies to headings with `id`s.\r\n * Use `rehype-slug` to generate `id`s for headings that don’t have them.\r\n *\r\n * Several behaviors are supported:\r\n *\r\n * *   `'prepend'` (default) — inject link before the heading text\r\n * *   `'append'` — inject link after the heading text\r\n * *   `'wrap'` — wrap the whole heading text with the link\r\n * *   `'before'` — insert link before the heading\r\n * *   `'after'` — insert link after the heading\r\n *\r\n * @param {Readonly<Options> | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns\r\n *   Transform.\r\n */\r\nexport default function rehypeAutolinkHeadings(options) {\r\n  const settings = options || emptyOptions\r\n  let properties = settings.properties\r\n  const headingOroperties = settings.headingProperties\r\n  const behavior = settings.behavior || 'prepend'\r\n  const content = settings.content\r\n  const group = settings.group\r\n  const is = convertElement(settings.test)\r\n\r\n  /** @type {import('unist-util-visit').Visitor<Element>} */\r\n  let method\r\n\r\n  if (behavior === 'after' || behavior === 'before') {\r\n    method = around\r\n  } else if (behavior === 'wrap') {\r\n    method = wrap\r\n  } else {\r\n    method = inject\r\n\r\n    if (!properties) {\r\n      properties = {ariaHidden: 'true', tabIndex: -1}\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transform.\r\n   *\r\n   * @param {Root} tree\r\n   *   Tree.\r\n   * @returns {undefined}\r\n   *   Nothing.\r\n   */\r\n  return function (tree) {\r\n    visit(tree, 'element', function (node, index, parent) {\r\n      if (headingRank(node) && node.properties.id && is(node, index, parent)) {\r\n        Object.assign(node.properties, toProperties(headingOroperties, node))\r\n        return method(node, index, parent)\r\n      }\r\n    })\r\n  }\r\n\r\n  /** @type {import('unist-util-visit').Visitor<Element>} */\r\n  function inject(node) {\r\n    const children = toChildren(content || contentDefaults, node)\r\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\r\n      create(node, toProperties(properties, node), children)\r\n    )\r\n\r\n    return [SKIP]\r\n  }\r\n\r\n  /** @type {import('unist-util-visit').Visitor<Element>} */\r\n  function around(node, index, parent) {\r\n    /* c8 ignore next -- uncommon */\r\n    if (typeof index !== 'number' || !parent) return\r\n\r\n    const children = toChildren(content || contentDefaults, node)\r\n    const link = create(node, toProperties(properties, node), children)\r\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\r\n\r\n    if (group) {\r\n      const grouping = toNode(group, node)\r\n\r\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\r\n        grouping.children = nodes\r\n        nodes = [grouping]\r\n      }\r\n    }\r\n\r\n    parent.children.splice(index, 1, ...nodes)\r\n\r\n    return [SKIP, index + nodes.length]\r\n  }\r\n\r\n  /** @type {import('unist-util-visit').Visitor<Element>} */\r\n  function wrap(node) {\r\n    /** @type {Array<ElementContent>} */\r\n    let before = node.children\r\n    /** @type {Array<ElementContent> | ElementContent} */\r\n    let after = []\r\n\r\n    if (typeof content === 'function') {\r\n      before = []\r\n      after = content(node)\r\n    } else if (content) {\r\n      after = clone(content)\r\n    }\r\n\r\n    node.children = [\r\n      create(\r\n        node,\r\n        toProperties(properties, node),\r\n        Array.isArray(after) ? [...before, ...after] : [...before, after]\r\n      )\r\n    ]\r\n\r\n    return [SKIP]\r\n  }\r\n}\r\n\r\n/**\r\n * Deep clone.\r\n *\r\n * @template T\r\n *   Kind.\r\n * @param {T} thing\r\n *   Thing to clone.\r\n * @returns {Cloneable<T>}\r\n *   Cloned thing.\r\n */\r\nfunction clone(thing) {\r\n  // Cast because it’s mutable now.\r\n  return /** @type {Cloneable<T>} */ (structuredClone(thing))\r\n}\r\n\r\n/**\r\n * Create an `a`.\r\n *\r\n * @param {Readonly<Element>} node\r\n *   Related heading.\r\n * @param {Properties | undefined} properties\r\n *   Properties to set on the link.\r\n * @param {Array<ElementContent>} children\r\n *   Content.\r\n * @returns {Element}\r\n *   Link.\r\n */\r\nfunction create(node, properties, children) {\r\n  return {\r\n    type: 'element',\r\n    tagName: 'a',\r\n    properties: {...properties, href: '#' + node.properties.id},\r\n    children\r\n  }\r\n}\r\n\r\n/**\r\n * Turn into children.\r\n *\r\n * @param {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build} value\r\n *   Content.\r\n * @param {Readonly<Element>} node\r\n *   Related heading.\r\n * @returns {Array<ElementContent>}\r\n *   Children.\r\n */\r\nfunction toChildren(value, node) {\r\n  const result = toNode(value, node)\r\n  return Array.isArray(result) ? result : [result]\r\n}\r\n\r\n/**\r\n * Turn into a node.\r\n *\r\n * @param {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build} value\r\n *   Content.\r\n * @param {Readonly<Element>} node\r\n *   Related heading.\r\n * @returns {Array<ElementContent> | ElementContent}\r\n *   Node.\r\n */\r\nfunction toNode(value, node) {\r\n  if (typeof value === 'function') return value(node)\r\n  return clone(value)\r\n}\r\n\r\n/**\r\n * Turn into properties.\r\n *\r\n * @param {Readonly<Properties> | BuildProperties | null | undefined} value\r\n *   Properties.\r\n * @param {Readonly<Element>} node\r\n *   Related heading.\r\n * @returns {Properties}\r\n *   Properties.\r\n */\r\nfunction toProperties(value, node) {\r\n  if (typeof value === 'function') return value(node)\r\n  return value ? clone(value) : {}\r\n}\r\n", "import type { Plugin, Pluggable } from 'unified';\r\nimport type { Root, RootContent, Literal } from 'hast';\r\nimport { visit } from 'unist-util-visit';\r\n\r\n/**\r\n * Raw string of HTML embedded into HTML AST.\r\n */\r\nexport interface Raw extends Literal {\r\n  /**\r\n   * Node type.\r\n   */\r\n  type: 'raw'\r\n}\r\n\r\n// Register nodes in content.\r\ndeclare module 'hast' {\r\n  interface RootContentMap {\r\n    /**\r\n     * Raw string of HTML embedded into HTML AST.\r\n     */\r\n    raw: Raw\r\n  }\r\n  interface ElementContentMap {\r\n    /**\r\n     * Raw string of HTML embedded into HTML AST.\r\n     */\r\n    raw: Raw\r\n  }\r\n}\r\n\r\n\r\nexport type RehypeIgnoreOptions = {\r\n  /**\r\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\r\n   */\r\n  openDelimiter?: string;\r\n  /**\r\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\r\n   */\r\n  closeDelimiter?: string;\r\n}\r\n\r\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\r\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\r\n  return (tree) => {\r\n    visit(tree, (node: Root | RootContent, index, parent) => {\r\n      if (node.type === 'element' || node.type === 'root') {\r\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\r\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\r\n        // if (start > -1 && end > -1) {\r\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\r\n        // }\r\n        let start = false;\r\n        node.children = node.children.filter((item) => {\r\n          if (item.type === 'raw' || item.type === 'comment') {\r\n            let str =  (item.value || '').trim();\r\n            str = str.replace(/^<!--(.*?)-->/, '$1')\r\n            if (str === openDelimiter) {\r\n                start = true;\r\n                return false;\r\n            }\r\n            if (str === closeDelimiter) {\r\n                start = false;\r\n                return false;\r\n            }\r\n          }\r\n          \r\n          return !start;\r\n        })\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default rehypeIgnore;\r\n", "export var octiconLink = {\r\n  type: 'element',\r\n  tagName: 'svg',\r\n  properties: {\r\n    className: 'octicon octicon-link',\r\n    viewBox: '0 0 16 16',\r\n    version: '1.1',\r\n    width: '16',\r\n    height: '16',\r\n    ariaHidden: 'true'\r\n  },\r\n  children: [{\r\n    type: 'element',\r\n    tagName: 'path',\r\n    children: [],\r\n    properties: {\r\n      fillRule: 'evenodd',\r\n      d: 'M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'\r\n    }\r\n  }]\r\n};", "export function copyElement(str) {\r\n  if (str === void 0) {\r\n    str = '';\r\n  }\r\n  return {\r\n    type: 'element',\r\n    tagName: 'div',\r\n    properties: {\r\n      class: 'copied',\r\n      'data-code': str\r\n    },\r\n    children: [{\r\n      type: 'element',\r\n      tagName: 'svg',\r\n      properties: {\r\n        className: 'octicon-copy',\r\n        ariaHidden: 'true',\r\n        viewBox: '0 0 16 16',\r\n        fill: 'currentColor',\r\n        height: 12,\r\n        width: 12\r\n      },\r\n      children: [{\r\n        type: 'element',\r\n        tagName: 'path',\r\n        properties: {\r\n          fillRule: 'evenodd',\r\n          d: 'M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z'\r\n        },\r\n        children: []\r\n      }, {\r\n        type: 'element',\r\n        tagName: 'path',\r\n        properties: {\r\n          fillRule: 'evenodd',\r\n          d: 'M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z'\r\n        },\r\n        children: []\r\n      }]\r\n    }, {\r\n      type: 'element',\r\n      tagName: 'svg',\r\n      properties: {\r\n        className: 'octicon-check',\r\n        ariaHidden: 'true',\r\n        viewBox: '0 0 16 16',\r\n        fill: 'currentColor',\r\n        height: 12,\r\n        width: 12\r\n      },\r\n      children: [{\r\n        type: 'element',\r\n        tagName: 'path',\r\n        properties: {\r\n          fillRule: 'evenodd',\r\n          d: 'M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z'\r\n        },\r\n        children: []\r\n      }]\r\n    }]\r\n  };\r\n}", "import _extends from \"@babel/runtime/helpers/extends\";\r\nimport slug from 'rehype-slug';\r\nimport headings from 'rehype-autolink-headings';\r\nimport rehypeIgnore from 'rehype-ignore';\r\nimport { getCodeString } from 'rehype-rewrite';\r\nimport { octiconLink } from './nodes/octiconLink';\r\nimport { copyElement } from './nodes/copy';\r\nexport var rehypeRewriteHandle = (disableCopy, rewrite) => (node, index, parent) => {\r\n  if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\r\n    var child = node.children && node.children[0];\r\n    if (child && child.properties && child.properties.ariaHidden === 'true') {\r\n      child.properties = _extends({\r\n        class: 'anchor'\r\n      }, child.properties);\r\n      child.children = [octiconLink];\r\n    }\r\n  }\r\n  if (node.type === 'element' && node.tagName === 'pre' && !disableCopy) {\r\n    var code = getCodeString(node.children);\r\n    node.children.push(copyElement(code));\r\n  }\r\n  rewrite && rewrite(node, index === null ? undefined : index, parent === null ? undefined : parent);\r\n};\r\nexport var defaultRehypePlugins = [slug, headings, rehypeIgnore];", "import _extends from \"@babel/runtime/helpers/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"prefixCls\", \"className\", \"onScroll\", \"renderTextarea\"];\r\nimport React, { useEffect, Fragment, useContext } from 'react';\r\nimport { EditorContext } from '../../Context';\r\nimport shortcuts from './shortcuts';\r\nimport Markdown from './Markdown';\r\nimport Textarea from './Textarea';\r\nimport { TextAreaCommandOrchestrator } from '../../commands';\r\nimport \"./index.css\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nexport default function TextArea(props) {\r\n  var _ref = props || {},\r\n    {\r\n      prefixCls,\r\n      className,\r\n      onScroll,\r\n      renderTextarea\r\n    } = _ref,\r\n    otherProps = _objectWithoutPropertiesLoose(_ref, _excluded);\r\n  var {\r\n    markdown,\r\n    scrollTop,\r\n    commands,\r\n    minHeight,\r\n    highlightEnable,\r\n    extraCommands,\r\n    dispatch\r\n  } = useContext(EditorContext);\r\n  var textRef = React.useRef(null);\r\n  var executeRef = React.useRef();\r\n  var warp = /*#__PURE__*/React.createRef();\r\n  useEffect(() => {\r\n    var state = {};\r\n    if (warp.current) {\r\n      state.textareaWarp = warp.current || undefined;\r\n      warp.current.scrollTop = scrollTop || 0;\r\n    }\r\n    if (dispatch) {\r\n      dispatch(_extends({}, state));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  useEffect(() => {\r\n    if (textRef.current && dispatch) {\r\n      var _commandOrchestrator = new TextAreaCommandOrchestrator(textRef.current);\r\n      executeRef.current = _commandOrchestrator;\r\n      dispatch({\r\n        textarea: textRef.current,\r\n        commandOrchestrator: _commandOrchestrator\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  var textStyle = highlightEnable ? {} : {\r\n    WebkitTextFillColor: 'initial',\r\n    overflow: 'auto'\r\n  };\r\n  return /*#__PURE__*/_jsx(\"div\", {\r\n    ref: warp,\r\n    className: prefixCls + \"-area \" + (className || ''),\r\n    onScroll: onScroll,\r\n    children: /*#__PURE__*/_jsx(\"div\", {\r\n      className: prefixCls + \"-text\",\r\n      style: {\r\n        minHeight\r\n      },\r\n      children: renderTextarea ? ( /*#__PURE__*/React.cloneElement(renderTextarea(_extends({}, otherProps, {\r\n        value: markdown,\r\n        autoComplete: 'off',\r\n        autoCorrect: 'off',\r\n        spellCheck: 'false',\r\n        autoCapitalize: 'off',\r\n        className: prefixCls + \"-text-input\",\r\n        style: {\r\n          WebkitTextFillColor: 'inherit',\r\n          overflow: 'auto'\r\n        }\r\n      }), {\r\n        dispatch,\r\n        onChange: otherProps.onChange,\r\n        shortcuts,\r\n        useContext: {\r\n          commands,\r\n          extraCommands,\r\n          commandOrchestrator: executeRef.current\r\n        }\r\n      }), {\r\n        ref: textRef\r\n      })) : /*#__PURE__*/_jsxs(Fragment, {\r\n        children: [highlightEnable && /*#__PURE__*/_jsx(Markdown, {\r\n          prefixCls: prefixCls\r\n        }), /*#__PURE__*/_jsx(Textarea, _extends({\r\n          prefixCls: prefixCls\r\n        }, otherProps, {\r\n          style: textStyle\r\n        }))]\r\n      })\r\n    })\r\n  });\r\n}", "import _extends from \"@babel/runtime/helpers/extends\";\r\nimport React from 'react';\r\nexport function reducer(state, action) {\r\n  return _extends({}, state, action);\r\n}\r\nexport var EditorContext = /*#__PURE__*/React.createContext({\r\n  markdown: ''\r\n});", "import _extends from \"@babel/runtime/helpers/extends\";\r\nfunction getCommands(data, resulte) {\r\n  if (data === void 0) {\r\n    data = [];\r\n  }\r\n  if (resulte === void 0) {\r\n    resulte = {};\r\n  }\r\n  data.forEach(item => {\r\n    if (item.children && Array.isArray(item.children)) {\r\n      resulte = _extends({}, resulte, getCommands(item.children || []));\r\n    } else if (item.keyCommand && item.shortcuts && item.execute) {\r\n      resulte[item.shortcuts.toLocaleLowerCase()] = item;\r\n    }\r\n  });\r\n  return resulte;\r\n}\r\nexport default function shortcutsHandle(e, commands, commandOrchestrator, dispatch, state) {\r\n  if (commands === void 0) {\r\n    commands = [];\r\n  }\r\n  var data = getCommands(commands || []);\r\n  var shortcuts = [];\r\n  if (e.altKey) {\r\n    shortcuts.push('alt');\r\n  }\r\n  if (e.shiftKey) {\r\n    shortcuts.push('shift');\r\n  }\r\n  if (e.metaKey) {\r\n    shortcuts.push('cmd');\r\n  }\r\n  if (e.ctrlKey) {\r\n    shortcuts.push('ctrl');\r\n  }\r\n  if (shortcuts.length > 0 && !/(control|alt|meta|shift)/.test(e.key.toLocaleLowerCase())) {\r\n    shortcuts.push(e.key.toLocaleLowerCase());\r\n  }\r\n  if (/escape/.test(e.key.toLocaleLowerCase())) {\r\n    shortcuts.push('escape');\r\n  }\r\n  if (shortcuts.length < 1) {\r\n    return;\r\n  }\r\n  var equal = !!data[shortcuts.join('+')];\r\n  var command = equal ? data[shortcuts.join('+')] : undefined;\r\n  Object.keys(data).forEach(item => {\r\n    var isequal = item.split('+').every(v => {\r\n      if (/ctrlcmd/.test(v)) {\r\n        return shortcuts.includes('ctrl') || shortcuts.includes('cmd');\r\n      }\r\n      return shortcuts.includes(v);\r\n    });\r\n    if (isequal) {\r\n      command = data[item];\r\n    }\r\n  });\r\n  if (command && commandOrchestrator) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    commandOrchestrator.executeCommand(command, dispatch, state, shortcuts);\r\n    return;\r\n  }\r\n}", "function _taggedTemplateLiteralLoose(e, t) {\r\n  return t || (t = e.slice(0)), e.raw = t, e;\r\n}\r\nexport { _taggedTemplateLiteralLoose as default };", "import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\r\nvar _templateObject;\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { rehype } from 'rehype';\r\nimport rehypePrism from 'rehype-prism-plus';\r\nimport { EditorContext } from '../../Context';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nfunction html2Escape(sHtml) {\r\n  return sHtml\r\n  // .replace(/```(\\w+)?([\\s\\S]*?)(\\s.+)?```/g, (str: string) => {\r\n  //   return str.replace(\r\n  //     /[<&\"]/g,\r\n  //     (c: string) => (({ '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' } as Record<string, string>)[c]),\r\n  //   );\r\n  // })\r\n  .replace(/[<&\"]/g, c => ({\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '&': '&amp;',\r\n    '\"': '&quot;'\r\n  })[c]);\r\n}\r\nexport default function Markdown(props) {\r\n  var {\r\n    prefixCls\r\n  } = props;\r\n  var {\r\n    markdown = '',\r\n    highlightEnable,\r\n    dispatch\r\n  } = useContext(EditorContext);\r\n  var preRef = /*#__PURE__*/React.createRef();\r\n  useEffect(() => {\r\n    if (preRef.current && dispatch) {\r\n      dispatch({\r\n        textareaPre: preRef.current\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  if (!markdown) {\r\n    return /*#__PURE__*/_jsx(\"pre\", {\r\n      ref: preRef,\r\n      className: prefixCls + \"-text-pre wmde-markdown-color\"\r\n    });\r\n  }\r\n  var mdStr = \"<pre class=\\\"language-markdown \" + prefixCls + \"-text-pre wmde-markdown-color\\\"><code class=\\\"language-markdown\\\">\" + html2Escape(String.raw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\", \"\"])), markdown)) + \"\\n</code></pre>\";\r\n  if (highlightEnable) {\r\n    try {\r\n      mdStr = rehype().data('settings', {\r\n        fragment: true\r\n      })\r\n      // https://github.com/uiwjs/react-md-editor/issues/593\r\n      // @ts-ignore\r\n      .use(rehypePrism, {\r\n        ignoreMissing: true\r\n      }).processSync(mdStr).toString();\r\n    } catch (error) {}\r\n  }\r\n  return /*#__PURE__*/React.createElement('div', {\r\n    className: 'wmde-markdown-color',\r\n    dangerouslySetInnerHTML: {\r\n      __html: mdStr || ''\r\n    }\r\n  });\r\n}", "/**\r\n * @typedef ErrorInfo\r\n *   Info on a `parse5` error.\r\n * @property {string} reason\r\n *   Reason of error.\r\n * @property {string} description\r\n *   More info on error.\r\n * @property {false} [url]\r\n *   Turn off if this is not documented in the html5 spec (optional).\r\n */\r\n\r\nexport const errors = {\r\n  /** @type {ErrorInfo} */\r\n  abandonedHeadElementChild: {\r\n    reason: 'Unexpected metadata element after head',\r\n    description:\r\n      'Unexpected element after head. Expected the element before `</head>`',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  abruptClosingOfEmptyComment: {\r\n    reason: 'Unexpected abruptly closed empty comment',\r\n    description: 'Unexpected `>` or `->`. Expected `-->` to close comments'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  abruptDoctypePublicIdentifier: {\r\n    reason: 'Unexpected abruptly closed public identifier',\r\n    description:\r\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the public identifier'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  abruptDoctypeSystemIdentifier: {\r\n    reason: 'Unexpected abruptly closed system identifier',\r\n    description:\r\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the identifier identifier'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  absenceOfDigitsInNumericCharacterReference: {\r\n    reason: 'Unexpected non-digit at start of numeric character reference',\r\n    description:\r\n      'Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  cdataInHtmlContent: {\r\n    reason: 'Unexpected CDATA section in HTML',\r\n    description:\r\n      'Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  characterReferenceOutsideUnicodeRange: {\r\n    reason: 'Unexpected too big numeric character reference',\r\n    description:\r\n      'Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  closingOfElementWithOpenChildElements: {\r\n    reason: 'Unexpected closing tag with open child elements',\r\n    description:\r\n      'Unexpectedly closing tag. Expected other tags to be closed first',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  controlCharacterInInputStream: {\r\n    reason: 'Unexpected control character',\r\n    description:\r\n      'Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  controlCharacterReference: {\r\n    reason: 'Unexpected control character reference',\r\n    description:\r\n      'Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  disallowedContentInNoscriptInHead: {\r\n    reason: 'Disallowed content inside `<noscript>` in `<head>`',\r\n    description:\r\n      'Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  duplicateAttribute: {\r\n    reason: 'Unexpected duplicate attribute',\r\n    description:\r\n      'Unexpectedly double attribute. Expected attributes to occur only once'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  endTagWithAttributes: {\r\n    reason: 'Unexpected attribute on closing tag',\r\n    description: 'Unexpected attribute. Expected `>` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  endTagWithTrailingSolidus: {\r\n    reason: 'Unexpected slash at end of closing tag',\r\n    description: 'Unexpected `%c-1`. Expected `>` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  endTagWithoutMatchingOpenElement: {\r\n    reason: 'Unexpected unopened end tag',\r\n    description: 'Unexpected end tag. Expected no end tag or another end tag',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  eofBeforeTagName: {\r\n    reason: 'Unexpected end of file',\r\n    description: 'Unexpected end of file. Expected tag name instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  eofInCdata: {\r\n    reason: 'Unexpected end of file in CDATA',\r\n    description: 'Unexpected end of file. Expected `]]>` to close the CDATA'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  eofInComment: {\r\n    reason: 'Unexpected end of file in comment',\r\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  eofInDoctype: {\r\n    reason: 'Unexpected end of file in doctype',\r\n    description:\r\n      'Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  eofInElementThatCanContainOnlyText: {\r\n    reason: 'Unexpected end of file in element that can only contain text',\r\n    description: 'Unexpected end of file. Expected text or a closing tag',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  eofInScriptHtmlCommentLikeText: {\r\n    reason: 'Unexpected end of file in comment inside script',\r\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  eofInTag: {\r\n    reason: 'Unexpected end of file in tag',\r\n    description: 'Unexpected end of file. Expected `>` to close the tag'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  incorrectlyClosedComment: {\r\n    reason: 'Incorrectly closed comment',\r\n    description: 'Unexpected `%c-1`. Expected `-->` to close the comment'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  incorrectlyOpenedComment: {\r\n    reason: 'Incorrectly opened comment',\r\n    description: 'Unexpected `%c`. Expected `<!--` to open the comment'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  invalidCharacterSequenceAfterDoctypeName: {\r\n    reason: 'Invalid sequence after doctype name',\r\n    description: 'Unexpected sequence at `%c`. Expected `public` or `system`'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  invalidFirstCharacterOfTagName: {\r\n    reason: 'Invalid first character in tag name',\r\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  misplacedDoctype: {\r\n    reason: 'Misplaced doctype',\r\n    description: 'Unexpected doctype. Expected doctype before head',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  misplacedStartTagForHeadElement: {\r\n    reason: 'Misplaced `<head>` start tag',\r\n    description:\r\n      'Unexpected start tag `<head>`. Expected `<head>` directly after doctype',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingAttributeValue: {\r\n    reason: 'Missing attribute value',\r\n    description:\r\n      'Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingDoctype: {\r\n    reason: 'Missing doctype before other content',\r\n    description: 'Expected a `<!doctype html>` before anything else',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingDoctypeName: {\r\n    reason: 'Missing doctype name',\r\n    description: 'Unexpected doctype end at `%c`. Expected `html` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingDoctypePublicIdentifier: {\r\n    reason: 'Missing public identifier in doctype',\r\n    description: 'Unexpected `%c`. Expected identifier for `public` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingDoctypeSystemIdentifier: {\r\n    reason: 'Missing system identifier in doctype',\r\n    description:\r\n      'Unexpected `%c`. Expected identifier for `system` instead (suggested: `\"about:legacy-compat\"`)'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingEndTagName: {\r\n    reason: 'Missing name in end tag',\r\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingQuoteBeforeDoctypePublicIdentifier: {\r\n    reason: 'Missing quote before public identifier in doctype',\r\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingQuoteBeforeDoctypeSystemIdentifier: {\r\n    reason: 'Missing quote before system identifier in doctype',\r\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingSemicolonAfterCharacterReference: {\r\n    reason: 'Missing semicolon after character reference',\r\n    description: 'Unexpected `%c`. Expected `;` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingWhitespaceAfterDoctypePublicKeyword: {\r\n    reason: 'Missing whitespace after public identifier in doctype',\r\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingWhitespaceAfterDoctypeSystemKeyword: {\r\n    reason: 'Missing whitespace after system identifier in doctype',\r\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingWhitespaceBeforeDoctypeName: {\r\n    reason: 'Missing whitespace before doctype name',\r\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingWhitespaceBetweenAttributes: {\r\n    reason: 'Missing whitespace between attributes',\r\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {\r\n    reason:\r\n      'Missing whitespace between public and system identifiers in doctype',\r\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  nestedComment: {\r\n    reason: 'Unexpected nested comment',\r\n    description: 'Unexpected `<!--`. Expected `-->`'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  nestedNoscriptInHead: {\r\n    reason: 'Unexpected nested `<noscript>` in `<head>`',\r\n    description:\r\n      'Unexpected `<noscript>`. Expected a closing tag or a meta element',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  nonConformingDoctype: {\r\n    reason: 'Unexpected non-conforming doctype declaration',\r\n    description:\r\n      'Expected `<!doctype html>` or `<!doctype html system \"about:legacy-compat\">`',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  nonVoidHtmlElementStartTagWithTrailingSolidus: {\r\n    reason: 'Unexpected trailing slash on start tag of non-void element',\r\n    description: 'Unexpected `/`. Expected `>` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  noncharacterCharacterReference: {\r\n    reason:\r\n      'Unexpected noncharacter code point referenced by character reference',\r\n    description: 'Unexpected code point. Do not use noncharacters in HTML'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  noncharacterInInputStream: {\r\n    reason: 'Unexpected noncharacter character',\r\n    description: 'Unexpected code point `%x`. Do not use noncharacters in HTML'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  nullCharacterReference: {\r\n    reason: 'Unexpected NULL character referenced by character reference',\r\n    description: 'Unexpected code point. Do not use NULL characters in HTML'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  openElementsLeftAfterEof: {\r\n    reason: 'Unexpected end of file',\r\n    description: 'Unexpected end of file. Expected closing tag instead',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  surrogateCharacterReference: {\r\n    reason: 'Unexpected surrogate character referenced by character reference',\r\n    description:\r\n      'Unexpected code point. Do not use lone surrogate characters in HTML'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  surrogateInInputStream: {\r\n    reason: 'Unexpected surrogate character',\r\n    description:\r\n      'Unexpected code point `%x`. Do not use lone surrogate characters in HTML'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unexpectedCharacterAfterDoctypeSystemIdentifier: {\r\n    reason: 'Invalid character after system identifier in doctype',\r\n    description: 'Unexpected character at `%c`. Expected `>`'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unexpectedCharacterInAttributeName: {\r\n    reason: 'Unexpected character in attribute name',\r\n    description:\r\n      'Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unexpectedCharacterInUnquotedAttributeValue: {\r\n    reason: 'Unexpected character in unquoted attribute value',\r\n    description: 'Unexpected `%c`. Quote the attribute value to include it'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unexpectedEqualsSignBeforeAttributeName: {\r\n    reason: 'Unexpected equals sign before attribute name',\r\n    description: 'Unexpected `%c`. Add an attribute name before it'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unexpectedNullCharacter: {\r\n    reason: 'Unexpected NULL character',\r\n    description:\r\n      'Unexpected code point `%x`. Do not use NULL characters in HTML'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unexpectedQuestionMarkInsteadOfTagName: {\r\n    reason: 'Unexpected question mark instead of tag name',\r\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unexpectedSolidusInTag: {\r\n    reason: 'Unexpected slash in tag',\r\n    description:\r\n      'Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unknownNamedCharacterReference: {\r\n    reason: 'Unexpected unknown named character reference',\r\n    description:\r\n      'Unexpected character reference. Expected known named character references'\r\n  }\r\n}\r\n", "/**\r\n * @import {Root} from 'hast'\r\n * @import {ParserError} from 'parse5'\r\n * @import {Value} from 'vfile'\r\n * @import {ErrorCode, Options} from './types.js'\r\n */\r\n\r\nimport {ok as assert} from 'devlop'\r\nimport {fromParse5} from 'hast-util-from-parse5'\r\nimport {parse, parseFragment} from 'parse5'\r\nimport {VFile} from 'vfile'\r\nimport {VFileMessage} from 'vfile-message'\r\nimport {errors} from './errors.js'\r\n\r\nconst base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-'\r\n\r\nconst dashToCamelRe = /-[a-z]/g\r\nconst formatCRe = /%c(?:([-+])(\\d+))?/g\r\nconst formatXRe = /%x/g\r\n\r\nconst fatalities = {2: true, 1: false, 0: null}\r\n\r\n/** @type {Readonly<Options>} */\r\nconst emptyOptions = {}\r\n\r\n/**\r\n * Turn serialized HTML into a hast tree.\r\n *\r\n * @param {VFile | Value} value\r\n *   Serialized HTML to parse.\r\n * @param {Readonly<Options> | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {Root}\r\n *   Tree.\r\n */\r\nexport function fromHtml(value, options) {\r\n  const settings = options || emptyOptions\r\n  const onerror = settings.onerror\r\n  const file = value instanceof VFile ? value : new VFile(value)\r\n  const parseFunction = settings.fragment ? parseFragment : parse\r\n  const document = String(file)\r\n  const p5Document = parseFunction(document, {\r\n    sourceCodeLocationInfo: true,\r\n    // Note `parse5` types currently do not allow `undefined`.\r\n    onParseError: settings.onerror ? internalOnerror : null,\r\n    scriptingEnabled: false\r\n  })\r\n\r\n  // `parse5` returns document which are always mapped to roots.\r\n  return /** @type {Root} */ (\r\n    fromParse5(p5Document, {\r\n      file,\r\n      space: settings.space,\r\n      verbose: settings.verbose\r\n    })\r\n  )\r\n\r\n  /**\r\n   * Handle a parse error.\r\n   *\r\n   * @param {ParserError} error\r\n   *   Parse5 error.\r\n   * @returns {undefined}\r\n   *   Nothing.\r\n   */\r\n  function internalOnerror(error) {\r\n    const code = error.code\r\n    const name = camelcase(code)\r\n    const setting = settings[name]\r\n    const config = setting === null || setting === undefined ? true : setting\r\n    const level = typeof config === 'number' ? config : config ? 1 : 0\r\n\r\n    if (level) {\r\n      const info = errors[name]\r\n      assert(info, 'expected known error from `parse5`')\r\n\r\n      const message = new VFileMessage(format(info.reason), {\r\n        place: {\r\n          start: {\r\n            line: error.startLine,\r\n            column: error.startCol,\r\n            offset: error.startOffset\r\n          },\r\n          end: {\r\n            line: error.endLine,\r\n            column: error.endCol,\r\n            offset: error.endOffset\r\n          }\r\n        },\r\n        ruleId: code,\r\n        source: 'hast-util-from-html'\r\n      })\r\n\r\n      if (file.path) {\r\n        message.file = file.path\r\n        message.name = file.path + ':' + message.name\r\n      }\r\n\r\n      message.fatal = fatalities[level]\r\n      message.note = format(info.description)\r\n      message.url = info.url === false ? undefined : base + code\r\n\r\n      assert(onerror, '`internalOnerror` is not passed if `onerror` is not set')\r\n      onerror(message)\r\n    }\r\n\r\n    /**\r\n     * Format a human readable string about an error.\r\n     *\r\n     * @param {string} value\r\n     *   Value to format.\r\n     * @returns {string}\r\n     *   Formatted.\r\n     */\r\n    function format(value) {\r\n      return value.replace(formatCRe, formatC).replace(formatXRe, formatX)\r\n\r\n      /**\r\n       * Format the character.\r\n       *\r\n       * @param {string} _\r\n       *   Match.\r\n       * @param {string} $1\r\n       *   Sign (`-` or `+`, optional).\r\n       * @param {string} $2\r\n       *   Offset.\r\n       * @returns {string}\r\n       *   Formatted.\r\n       */\r\n      function formatC(_, $1, $2) {\r\n        const offset =\r\n          ($2 ? Number.parseInt($2, 10) : 0) * ($1 === '-' ? -1 : 1)\r\n        const char = document.charAt(error.startOffset + offset)\r\n        return visualizeCharacter(char)\r\n      }\r\n\r\n      /**\r\n       * Format the character code.\r\n       *\r\n       * @returns {string}\r\n       *   Formatted.\r\n       */\r\n      function formatX() {\r\n        return visualizeCharacterCode(document.charCodeAt(error.startOffset))\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n *   Error code in dash case.\r\n * @returns {ErrorCode}\r\n *   Error code in camelcase.\r\n */\r\nfunction camelcase(value) {\r\n  // This should match an error code.\r\n  return /** @type {ErrorCode} */ (value.replace(dashToCamelRe, dashToCamel))\r\n}\r\n\r\n/**\r\n * @param {string} $0\r\n *   Match.\r\n * @returns {string}\r\n *   Camelcased.\r\n */\r\nfunction dashToCamel($0) {\r\n  return $0.charAt(1).toUpperCase()\r\n}\r\n\r\n/**\r\n * @param {string} char\r\n *   Character.\r\n * @returns {string}\r\n *   Formatted.\r\n */\r\nfunction visualizeCharacter(char) {\r\n  return char === '`' ? '` ` `' : char\r\n}\r\n\r\n/**\r\n * @param {number} charCode\r\n *   Character code.\r\n * @returns {string}\r\n *   Formatted.\r\n */\r\nfunction visualizeCharacterCode(charCode) {\r\n  return '0x' + charCode.toString(16).toUpperCase()\r\n}\r\n", "/**\r\n * @import {Root} from 'hast'\r\n * @import {Options as FromHtmlOptions} from 'hast-util-from-html'\r\n * @import {Parser, Processor} from 'unified'\r\n */\r\n\r\n/**\r\n * @typedef {Omit<FromHtmlOptions, 'onerror'> & RehypeParseFields} Options\r\n *   Configuration.\r\n *\r\n * @typedef RehypeParseFields\r\n *   Extra fields.\r\n * @property {boolean | null | undefined} [emitParseErrors=false]\r\n *   Whether to emit parse errors while parsing (default: `false`).\r\n *\r\n *   > 👉 **Note**: parse errors are currently being added to HTML.\r\n *   > Not all errors emitted by parse5 (or us) are specced yet.\r\n *   > Some documentation may still be missing.\r\n */\r\n\r\nimport {fromHtml} from 'hast-util-from-html'\r\n\r\n/**\r\n * Plugin to add support for parsing from HTML.\r\n *\r\n * > 👉 **Note**: this is not an XML parser.\r\n * > It supports SVG as embedded in HTML.\r\n * > It does not support the features available in XML.\r\n * > Passing SVG files might break but fragments of modern SVG should be fine.\r\n * > Use [`xast-util-from-xml`][xast-util-from-xml] to parse XML.\r\n *\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nexport default function rehypeParse(options) {\r\n  /** @type {Processor<Root>} */\r\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\r\n  const self = this\r\n  const {emitParseErrors, ...settings} = {...self.data('settings'), ...options}\r\n\r\n  self.parser = parser\r\n\r\n  /**\r\n   * @type {Parser<Root>}\r\n   */\r\n  function parser(document, file) {\r\n    return fromHtml(document, {\r\n      ...settings,\r\n      onerror: emitParseErrors\r\n        ? function (message) {\r\n            if (file.path) {\r\n              message.name = file.path + ':' + message.name\r\n              message.file = file.path\r\n            }\r\n\r\n            file.messages.push(message)\r\n          }\r\n        : undefined\r\n    })\r\n  }\r\n}\r\n", "/**\r\n * @typedef CoreOptions\r\n * @property {ReadonlyArray<string>} [subset=[]]\r\n *   Whether to only escape the given subset of characters.\r\n * @property {boolean} [escapeOnly=false]\r\n *   Whether to only escape possibly dangerous characters.\r\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\r\n *\r\n * @typedef FormatOptions\r\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\r\n *   Format strategy.\r\n *\r\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\r\n */\r\n\r\nconst defaultSubsetRegex = /[\"&'<>`]/g\r\nconst surrogatePairsRegex = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\r\nconst controlCharactersRegex =\r\n  // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\r\n  /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g\r\nconst regexEscapeRegex = /[|\\\\{}()[\\]^$+*?.]/g\r\n\r\n/** @type {WeakMap<ReadonlyArray<string>, RegExp>} */\r\nconst subsetToRegexCache = new WeakMap()\r\n\r\n/**\r\n * Encode certain characters in `value`.\r\n *\r\n * @param {string} value\r\n * @param {CoreWithFormatOptions} options\r\n * @returns {string}\r\n */\r\nexport function core(value, options) {\r\n  value = value.replace(\r\n    options.subset\r\n      ? charactersToExpressionCached(options.subset)\r\n      : defaultSubsetRegex,\r\n    basic\r\n  )\r\n\r\n  if (options.subset || options.escapeOnly) {\r\n    return value\r\n  }\r\n\r\n  return (\r\n    value\r\n      // Surrogate pairs.\r\n      .replace(surrogatePairsRegex, surrogate)\r\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\r\n      // non-ASCII ones).\r\n      .replace(controlCharactersRegex, basic)\r\n  )\r\n\r\n  /**\r\n   * @param {string} pair\r\n   * @param {number} index\r\n   * @param {string} all\r\n   */\r\n  function surrogate(pair, index, all) {\r\n    return options.format(\r\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\r\n        pair.charCodeAt(1) -\r\n        0xdc00 +\r\n        0x10000,\r\n      all.charCodeAt(index + 2),\r\n      options\r\n    )\r\n  }\r\n\r\n  /**\r\n   * @param {string} character\r\n   * @param {number} index\r\n   * @param {string} all\r\n   */\r\n  function basic(character, index, all) {\r\n    return options.format(\r\n      character.charCodeAt(0),\r\n      all.charCodeAt(index + 1),\r\n      options\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * A wrapper function that caches the result of `charactersToExpression` with a WeakMap.\r\n * This can improve performance when tooling calls `charactersToExpression` repeatedly\r\n * with the same subset.\r\n *\r\n * @param {ReadonlyArray<string>} subset\r\n * @returns {RegExp}\r\n */\r\nfunction charactersToExpressionCached(subset) {\r\n  let cached = subsetToRegexCache.get(subset)\r\n\r\n  if (!cached) {\r\n    cached = charactersToExpression(subset)\r\n    subsetToRegexCache.set(subset, cached)\r\n  }\r\n\r\n  return cached\r\n}\r\n\r\n/**\r\n * @param {ReadonlyArray<string>} subset\r\n * @returns {RegExp}\r\n */\r\nfunction charactersToExpression(subset) {\r\n  /** @type {Array<string>} */\r\n  const groups = []\r\n  let index = -1\r\n\r\n  while (++index < subset.length) {\r\n    groups.push(subset[index].replace(regexEscapeRegex, '\\\\$&'))\r\n  }\r\n\r\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\r\n}\r\n", "const hexadecimalRegex = /[\\dA-Fa-f]/\r\n\r\n/**\r\n * Configurable ways to encode characters as hexadecimal references.\r\n *\r\n * @param {number} code\r\n * @param {number} next\r\n * @param {boolean|undefined} omit\r\n * @returns {string}\r\n */\r\nexport function toHexadecimal(code, next, omit) {\r\n  const value = '&#x' + code.toString(16).toUpperCase()\r\n  return omit && next && !hexadecimalRegex.test(String.fromCharCode(next))\r\n    ? value\r\n    : value + ';'\r\n}\r\n", "const decimalRegex = /\\d/\r\n\r\n/**\r\n * Configurable ways to encode characters as decimal references.\r\n *\r\n * @param {number} code\r\n * @param {number} next\r\n * @param {boolean|undefined} omit\r\n * @returns {string}\r\n */\r\nexport function toDecimal(code, next, omit) {\r\n  const value = '&#' + String(code)\r\n  return omit && next && !decimalRegex.test(String.fromCharCode(next))\r\n    ? value\r\n    : value + ';'\r\n}\r\n", "/**\r\n * Map of named character references from HTML 4.\r\n *\r\n * @type {Record<string, string>}\r\n */\r\nexport const characterEntitiesHtml4 = {\r\n  nbsp: ' ',\r\n  iexcl: '¡',\r\n  cent: '¢',\r\n  pound: '£',\r\n  curren: '¤',\r\n  yen: '¥',\r\n  brvbar: '¦',\r\n  sect: '§',\r\n  uml: '¨',\r\n  copy: '©',\r\n  ordf: 'ª',\r\n  laquo: '«',\r\n  not: '¬',\r\n  shy: '­',\r\n  reg: '®',\r\n  macr: '¯',\r\n  deg: '°',\r\n  plusmn: '±',\r\n  sup2: '²',\r\n  sup3: '³',\r\n  acute: '´',\r\n  micro: 'µ',\r\n  para: '¶',\r\n  middot: '·',\r\n  cedil: '¸',\r\n  sup1: '¹',\r\n  ordm: 'º',\r\n  raquo: '»',\r\n  frac14: '¼',\r\n  frac12: '½',\r\n  frac34: '¾',\r\n  iquest: '¿',\r\n  Agrave: 'À',\r\n  Aacute: 'Á',\r\n  Acirc: 'Â',\r\n  Atilde: 'Ã',\r\n  Auml: 'Ä',\r\n  Aring: 'Å',\r\n  AElig: 'Æ',\r\n  Ccedil: 'Ç',\r\n  Egrave: 'È',\r\n  Eacute: 'É',\r\n  Ecirc: 'Ê',\r\n  Euml: 'Ë',\r\n  Igrave: 'Ì',\r\n  Iacute: 'Í',\r\n  Icirc: 'Î',\r\n  Iuml: 'Ï',\r\n  ETH: 'Ð',\r\n  Ntilde: 'Ñ',\r\n  Ograve: 'Ò',\r\n  Oacute: 'Ó',\r\n  Ocirc: 'Ô',\r\n  Otilde: 'Õ',\r\n  Ouml: 'Ö',\r\n  times: '×',\r\n  Oslash: 'Ø',\r\n  Ugrave: 'Ù',\r\n  Uacute: 'Ú',\r\n  Ucirc: 'Û',\r\n  Uuml: 'Ü',\r\n  Yacute: 'Ý',\r\n  THORN: 'Þ',\r\n  szlig: 'ß',\r\n  agrave: 'à',\r\n  aacute: 'á',\r\n  acirc: 'â',\r\n  atilde: 'ã',\r\n  auml: 'ä',\r\n  aring: 'å',\r\n  aelig: 'æ',\r\n  ccedil: 'ç',\r\n  egrave: 'è',\r\n  eacute: 'é',\r\n  ecirc: 'ê',\r\n  euml: 'ë',\r\n  igrave: 'ì',\r\n  iacute: 'í',\r\n  icirc: 'î',\r\n  iuml: 'ï',\r\n  eth: 'ð',\r\n  ntilde: 'ñ',\r\n  ograve: 'ò',\r\n  oacute: 'ó',\r\n  ocirc: 'ô',\r\n  otilde: 'õ',\r\n  ouml: 'ö',\r\n  divide: '÷',\r\n  oslash: 'ø',\r\n  ugrave: 'ù',\r\n  uacute: 'ú',\r\n  ucirc: 'û',\r\n  uuml: 'ü',\r\n  yacute: 'ý',\r\n  thorn: 'þ',\r\n  yuml: 'ÿ',\r\n  fnof: 'ƒ',\r\n  Alpha: 'Α',\r\n  Beta: 'Β',\r\n  Gamma: 'Γ',\r\n  Delta: 'Δ',\r\n  Epsilon: 'Ε',\r\n  Zeta: 'Ζ',\r\n  Eta: 'Η',\r\n  Theta: 'Θ',\r\n  Iota: 'Ι',\r\n  Kappa: 'Κ',\r\n  Lambda: 'Λ',\r\n  Mu: 'Μ',\r\n  Nu: 'Ν',\r\n  Xi: 'Ξ',\r\n  Omicron: 'Ο',\r\n  Pi: 'Π',\r\n  Rho: 'Ρ',\r\n  Sigma: 'Σ',\r\n  Tau: 'Τ',\r\n  Upsilon: 'Υ',\r\n  Phi: 'Φ',\r\n  Chi: 'Χ',\r\n  Psi: 'Ψ',\r\n  Omega: 'Ω',\r\n  alpha: 'α',\r\n  beta: 'β',\r\n  gamma: 'γ',\r\n  delta: 'δ',\r\n  epsilon: 'ε',\r\n  zeta: 'ζ',\r\n  eta: 'η',\r\n  theta: 'θ',\r\n  iota: 'ι',\r\n  kappa: 'κ',\r\n  lambda: 'λ',\r\n  mu: 'μ',\r\n  nu: 'ν',\r\n  xi: 'ξ',\r\n  omicron: 'ο',\r\n  pi: 'π',\r\n  rho: 'ρ',\r\n  sigmaf: 'ς',\r\n  sigma: 'σ',\r\n  tau: 'τ',\r\n  upsilon: 'υ',\r\n  phi: 'φ',\r\n  chi: 'χ',\r\n  psi: 'ψ',\r\n  omega: 'ω',\r\n  thetasym: 'ϑ',\r\n  upsih: 'ϒ',\r\n  piv: 'ϖ',\r\n  bull: '•',\r\n  hellip: '…',\r\n  prime: '′',\r\n  Prime: '″',\r\n  oline: '‾',\r\n  frasl: '⁄',\r\n  weierp: '℘',\r\n  image: 'ℑ',\r\n  real: 'ℜ',\r\n  trade: '™',\r\n  alefsym: 'ℵ',\r\n  larr: '←',\r\n  uarr: '↑',\r\n  rarr: '→',\r\n  darr: '↓',\r\n  harr: '↔',\r\n  crarr: '↵',\r\n  lArr: '⇐',\r\n  uArr: '⇑',\r\n  rArr: '⇒',\r\n  dArr: '⇓',\r\n  hArr: '⇔',\r\n  forall: '∀',\r\n  part: '∂',\r\n  exist: '∃',\r\n  empty: '∅',\r\n  nabla: '∇',\r\n  isin: '∈',\r\n  notin: '∉',\r\n  ni: '∋',\r\n  prod: '∏',\r\n  sum: '∑',\r\n  minus: '−',\r\n  lowast: '∗',\r\n  radic: '√',\r\n  prop: '∝',\r\n  infin: '∞',\r\n  ang: '∠',\r\n  and: '∧',\r\n  or: '∨',\r\n  cap: '∩',\r\n  cup: '∪',\r\n  int: '∫',\r\n  there4: '∴',\r\n  sim: '∼',\r\n  cong: '≅',\r\n  asymp: '≈',\r\n  ne: '≠',\r\n  equiv: '≡',\r\n  le: '≤',\r\n  ge: '≥',\r\n  sub: '⊂',\r\n  sup: '⊃',\r\n  nsub: '⊄',\r\n  sube: '⊆',\r\n  supe: '⊇',\r\n  oplus: '⊕',\r\n  otimes: '⊗',\r\n  perp: '⊥',\r\n  sdot: '⋅',\r\n  lceil: '⌈',\r\n  rceil: '⌉',\r\n  lfloor: '⌊',\r\n  rfloor: '⌋',\r\n  lang: '〈',\r\n  rang: '〉',\r\n  loz: '◊',\r\n  spades: '♠',\r\n  clubs: '♣',\r\n  hearts: '♥',\r\n  diams: '♦',\r\n  quot: '\"',\r\n  amp: '&',\r\n  lt: '<',\r\n  gt: '>',\r\n  OElig: 'Œ',\r\n  oelig: 'œ',\r\n  Scaron: 'Š',\r\n  scaron: 'š',\r\n  Yuml: 'Ÿ',\r\n  circ: 'ˆ',\r\n  tilde: '˜',\r\n  ensp: ' ',\r\n  emsp: ' ',\r\n  thinsp: ' ',\r\n  zwnj: '‌',\r\n  zwj: '‍',\r\n  lrm: '‎',\r\n  rlm: '‏',\r\n  ndash: '–',\r\n  mdash: '—',\r\n  lsquo: '‘',\r\n  rsquo: '’',\r\n  sbquo: '‚',\r\n  ldquo: '“',\r\n  rdquo: '”',\r\n  bdquo: '„',\r\n  dagger: '†',\r\n  Dagger: '‡',\r\n  permil: '‰',\r\n  lsaquo: '‹',\r\n  rsaquo: '›',\r\n  euro: '€'\r\n}\r\n", "/**\r\n * List of legacy (that don’t need a trailing `;`) named references which could,\r\n * depending on what follows them, turn into a different meaning\r\n *\r\n * @type {Array<string>}\r\n */\r\nexport const dangerous = [\r\n  'cent',\r\n  'copy',\r\n  'divide',\r\n  'gt',\r\n  'lt',\r\n  'not',\r\n  'para',\r\n  'times'\r\n]\r\n", "import {characterEntitiesLegacy} from 'character-entities-legacy'\r\nimport {characterEntitiesHtml4} from 'character-entities-html4'\r\nimport {dangerous} from '../constant/dangerous.js'\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * `characterEntitiesHtml4` but inverted.\r\n *\r\n * @type {Record<string, string>}\r\n */\r\nconst characters = {}\r\n\r\n/** @type {string} */\r\nlet key\r\n\r\nfor (key in characterEntitiesHtml4) {\r\n  if (own.call(characterEntitiesHtml4, key)) {\r\n    characters[characterEntitiesHtml4[key]] = key\r\n  }\r\n}\r\n\r\nconst notAlphanumericRegex = /[^\\dA-Za-z]/\r\n\r\n/**\r\n * Configurable ways to encode characters as named references.\r\n *\r\n * @param {number} code\r\n * @param {number} next\r\n * @param {boolean|undefined} omit\r\n * @param {boolean|undefined} attribute\r\n * @returns {string}\r\n */\r\nexport function toNamed(code, next, omit, attribute) {\r\n  const character = String.fromCharCode(code)\r\n\r\n  if (own.call(characters, character)) {\r\n    const name = characters[character]\r\n    const value = '&' + name\r\n\r\n    if (\r\n      omit &&\r\n      characterEntitiesLegacy.includes(name) &&\r\n      !dangerous.includes(name) &&\r\n      (!attribute ||\r\n        (next &&\r\n          next !== 61 /* `=` */ &&\r\n          notAlphanumericRegex.test(String.fromCharCode(next))))\r\n    ) {\r\n      return value\r\n    }\r\n\r\n    return value + ';'\r\n  }\r\n\r\n  return ''\r\n}\r\n", "/**\r\n * @typedef FormatSmartOptions\r\n * @property {boolean} [useNamedReferences=false]\r\n *   Prefer named character references (`&amp;`) where possible.\r\n * @property {boolean} [useShortestReferences=false]\r\n *   Prefer the shortest possible reference, if that results in less bytes.\r\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\r\n * @property {boolean} [omitOptionalSemicolons=false]\r\n *   Whether to omit semicolons when possible.\r\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\r\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\r\n * @property {boolean} [attribute=false]\r\n *   Create character references which don’t fail in attributes.\r\n *   **Note**: `attribute` only applies when operating dangerously with\r\n *   `omitOptionalSemicolons: true`.\r\n */\r\n\r\nimport {toHexadecimal} from './to-hexadecimal.js'\r\nimport {toDecimal} from './to-decimal.js'\r\nimport {toNamed} from './to-named.js'\r\n\r\n/**\r\n * Configurable ways to encode a character yielding pretty or small results.\r\n *\r\n * @param {number} code\r\n * @param {number} next\r\n * @param {FormatSmartOptions} options\r\n * @returns {string}\r\n */\r\nexport function formatSmart(code, next, options) {\r\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\r\n  /** @type {string|undefined} */\r\n  let named\r\n\r\n  if (options.useNamedReferences || options.useShortestReferences) {\r\n    named = toNamed(\r\n      code,\r\n      next,\r\n      options.omitOptionalSemicolons,\r\n      options.attribute\r\n    )\r\n  }\r\n\r\n  // Use the shortest numeric reference when requested.\r\n  // A simple algorithm would use decimal for all code points under 100, as\r\n  // those are shorter than hexadecimal:\r\n  //\r\n  // * `&#99;` vs `&#x63;` (decimal shorter)\r\n  // * `&#100;` vs `&#x64;` (equal)\r\n  //\r\n  // However, because we take `next` into consideration when `omit` is used,\r\n  // And it would be possible that decimals are shorter on bigger values as\r\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\r\n  if (\r\n    (options.useShortestReferences || !named) &&\r\n    options.useShortestReferences\r\n  ) {\r\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\r\n\r\n    if (decimal.length < numeric.length) {\r\n      numeric = decimal\r\n    }\r\n  }\r\n\r\n  return named &&\r\n    (!options.useShortestReferences || named.length < numeric.length)\r\n    ? named\r\n    : numeric\r\n}\r\n", "/**\r\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\r\n * @typedef {import('./core.js').CoreOptions} LightOptions\r\n */\r\n\r\nimport {core} from './core.js'\r\nimport {formatSmart} from './util/format-smart.js'\r\nimport {formatBasic} from './util/format-basic.js'\r\n\r\n/**\r\n * Encode special characters in `value`.\r\n *\r\n * @param {string} value\r\n *   Value to encode.\r\n * @param {Options} [options]\r\n *   Configuration.\r\n * @returns {string}\r\n *   Encoded value.\r\n */\r\nexport function stringifyEntities(value, options) {\r\n  return core(value, Object.assign({format: formatSmart}, options))\r\n}\r\n\r\n/**\r\n * Encode special characters in `value` as hexadecimals.\r\n *\r\n * @param {string} value\r\n *   Value to encode.\r\n * @param {LightOptions} [options]\r\n *   Configuration.\r\n * @returns {string}\r\n *   Encoded value.\r\n */\r\nexport function stringifyEntitiesLight(value, options) {\r\n  return core(value, Object.assign({format: formatBasic}, options))\r\n}\r\n", "/**\r\n * @import {Comment, Parents} from 'hast'\r\n * @import {State} from '../index.js'\r\n */\r\n\r\nimport {stringifyEntities} from 'stringify-entities'\r\n\r\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g\r\n\r\n// Declare arrays as variables so it can be cached by `stringifyEntities`\r\nconst bogusCommentEntitySubset = ['>']\r\nconst commentEntitySubset = ['<', '>']\r\n\r\n/**\r\n * Serialize a comment.\r\n *\r\n * @param {Comment} node\r\n *   Node to handle.\r\n * @param {number | undefined} _1\r\n *   Index of `node` in `parent.\r\n * @param {Parents | undefined} _2\r\n *   Parent of `node`.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {string}\r\n *   Serialized node.\r\n */\r\nexport function comment(node, _1, _2, state) {\r\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\r\n  return state.settings.bogusComments\r\n    ? '<?' +\r\n        stringifyEntities(\r\n          node.value,\r\n          Object.assign({}, state.settings.characterReferences, {\r\n            subset: bogusCommentEntitySubset\r\n          })\r\n        ) +\r\n        '>'\r\n    : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->'\r\n\r\n  /**\r\n   * @param {string} $0\r\n   */\r\n  function encode($0) {\r\n    return stringifyEntities(\r\n      $0,\r\n      Object.assign({}, state.settings.characterReferences, {\r\n        subset: commentEntitySubset\r\n      })\r\n    )\r\n  }\r\n}\r\n", "/**\r\n * @import {Doctype, Parents} from 'hast'\r\n * @import {State} from '../index.js'\r\n */\r\n\r\n/**\r\n * Serialize a doctype.\r\n *\r\n * @param {Doctype} _1\r\n *   Node to handle.\r\n * @param {number | undefined} _2\r\n *   Index of `node` in `parent.\r\n * @param {Parents | undefined} _3\r\n *   Parent of `node`.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {string}\r\n *   Serialized node.\r\n */\r\nexport function doctype(_1, _2, _3, state) {\r\n  return (\r\n    '<!' +\r\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\r\n    (state.settings.tightDoctype ? '' : ' ') +\r\n    'html>'\r\n  )\r\n}\r\n", "/**\r\n * @import {Parents, RootContent} from 'hast'\r\n */\r\n\r\nimport {whitespace} from 'hast-util-whitespace'\r\n\r\nexport const siblingAfter = siblings(1)\r\nexport const siblingBefore = siblings(-1)\r\n\r\n/** @type {Array<RootContent>} */\r\nconst emptyChildren = []\r\n\r\n/**\r\n * Factory to check siblings in a direction.\r\n *\r\n * @param {number} increment\r\n */\r\nfunction siblings(increment) {\r\n  return sibling\r\n\r\n  /**\r\n   * Find applicable siblings in a direction.\r\n   *\r\n   * @template {Parents} Parent\r\n   *   Parent type.\r\n   * @param {Parent | undefined} parent\r\n   *   Parent.\r\n   * @param {number | undefined} index\r\n   *   Index of child in `parent`.\r\n   * @param {boolean | undefined} [includeWhitespace=false]\r\n   *   Whether to include whitespace (default: `false`).\r\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\r\n   *   Child of parent.\r\n   */\r\n  function sibling(parent, index, includeWhitespace) {\r\n    const siblings = parent ? parent.children : emptyChildren\r\n    let offset = (index || 0) + increment\r\n    let next = siblings[offset]\r\n\r\n    if (!includeWhitespace) {\r\n      while (next && whitespace(next)) {\r\n        offset += increment\r\n        next = siblings[offset]\r\n      }\r\n    }\r\n\r\n    // @ts-expect-error: it’s a correct child.\r\n    return next\r\n  }\r\n}\r\n", "/**\r\n * @import {Element, Parents} from 'hast'\r\n */\r\n\r\n/**\r\n * @callback OmitHandle\r\n *   Check if a tag can be omitted.\r\n * @param {Element} element\r\n *   Element to check.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether to omit a tag.\r\n *\r\n */\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * Factory to check if a given node can have a tag omitted.\r\n *\r\n * @param {Record<string, OmitHandle>} handlers\r\n *   Omission handlers, where each key is a tag name, and each value is the\r\n *   corresponding handler.\r\n * @returns {OmitHandle}\r\n *   Whether to omit a tag of an element.\r\n */\r\nexport function omission(handlers) {\r\n  return omit\r\n\r\n  /**\r\n   * Check if a given node can have a tag omitted.\r\n   *\r\n   * @type {OmitHandle}\r\n   */\r\n  function omit(node, index, parent) {\r\n    return (\r\n      own.call(handlers, node.tagName) &&\r\n      handlers[node.tagName](node, index, parent)\r\n    )\r\n  }\r\n}\r\n", "/**\r\n * @import {Element, Parents} from 'hast'\r\n */\r\n\r\nimport {whitespace} from 'hast-util-whitespace'\r\nimport {siblingAfter} from './util/siblings.js'\r\nimport {omission} from './omission.js'\r\n\r\nexport const closing = omission({\r\n  body,\r\n  caption: headOrColgroupOrCaption,\r\n  colgroup: headOrColgroupOrCaption,\r\n  dd,\r\n  dt,\r\n  head: headOrColgroupOrCaption,\r\n  html,\r\n  li,\r\n  optgroup,\r\n  option,\r\n  p,\r\n  rp: rubyElement,\r\n  rt: rubyElement,\r\n  tbody,\r\n  td: cells,\r\n  tfoot,\r\n  th: cells,\r\n  thead,\r\n  tr\r\n})\r\n\r\n/**\r\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction headOrColgroupOrCaption(_, index, parent) {\r\n  const next = siblingAfter(parent, index, true)\r\n  return (\r\n    !next ||\r\n    (next.type !== 'comment' &&\r\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\r\n  )\r\n}\r\n\r\n/**\r\n * Whether to omit `</html>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction html(_, index, parent) {\r\n  const next = siblingAfter(parent, index)\r\n  return !next || next.type !== 'comment'\r\n}\r\n\r\n/**\r\n * Whether to omit `</body>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction body(_, index, parent) {\r\n  const next = siblingAfter(parent, index)\r\n  return !next || next.type !== 'comment'\r\n}\r\n\r\n/**\r\n * Whether to omit `</p>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction p(_, index, parent) {\r\n  const next = siblingAfter(parent, index)\r\n  return next\r\n    ? next.type === 'element' &&\r\n        (next.tagName === 'address' ||\r\n          next.tagName === 'article' ||\r\n          next.tagName === 'aside' ||\r\n          next.tagName === 'blockquote' ||\r\n          next.tagName === 'details' ||\r\n          next.tagName === 'div' ||\r\n          next.tagName === 'dl' ||\r\n          next.tagName === 'fieldset' ||\r\n          next.tagName === 'figcaption' ||\r\n          next.tagName === 'figure' ||\r\n          next.tagName === 'footer' ||\r\n          next.tagName === 'form' ||\r\n          next.tagName === 'h1' ||\r\n          next.tagName === 'h2' ||\r\n          next.tagName === 'h3' ||\r\n          next.tagName === 'h4' ||\r\n          next.tagName === 'h5' ||\r\n          next.tagName === 'h6' ||\r\n          next.tagName === 'header' ||\r\n          next.tagName === 'hgroup' ||\r\n          next.tagName === 'hr' ||\r\n          next.tagName === 'main' ||\r\n          next.tagName === 'menu' ||\r\n          next.tagName === 'nav' ||\r\n          next.tagName === 'ol' ||\r\n          next.tagName === 'p' ||\r\n          next.tagName === 'pre' ||\r\n          next.tagName === 'section' ||\r\n          next.tagName === 'table' ||\r\n          next.tagName === 'ul')\r\n    : !parent ||\r\n        // Confusing parent.\r\n        !(\r\n          parent.type === 'element' &&\r\n          (parent.tagName === 'a' ||\r\n            parent.tagName === 'audio' ||\r\n            parent.tagName === 'del' ||\r\n            parent.tagName === 'ins' ||\r\n            parent.tagName === 'map' ||\r\n            parent.tagName === 'noscript' ||\r\n            parent.tagName === 'video')\r\n        )\r\n}\r\n\r\n/**\r\n * Whether to omit `</li>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction li(_, index, parent) {\r\n  const next = siblingAfter(parent, index)\r\n  return !next || (next.type === 'element' && next.tagName === 'li')\r\n}\r\n\r\n/**\r\n * Whether to omit `</dt>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction dt(_, index, parent) {\r\n  const next = siblingAfter(parent, index)\r\n  return Boolean(\r\n    next &&\r\n      next.type === 'element' &&\r\n      (next.tagName === 'dt' || next.tagName === 'dd')\r\n  )\r\n}\r\n\r\n/**\r\n * Whether to omit `</dd>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction dd(_, index, parent) {\r\n  const next = siblingAfter(parent, index)\r\n  return (\r\n    !next ||\r\n    (next.type === 'element' &&\r\n      (next.tagName === 'dt' || next.tagName === 'dd'))\r\n  )\r\n}\r\n\r\n/**\r\n * Whether to omit `</rt>` or `</rp>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction rubyElement(_, index, parent) {\r\n  const next = siblingAfter(parent, index)\r\n  return (\r\n    !next ||\r\n    (next.type === 'element' &&\r\n      (next.tagName === 'rp' || next.tagName === 'rt'))\r\n  )\r\n}\r\n\r\n/**\r\n * Whether to omit `</optgroup>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction optgroup(_, index, parent) {\r\n  const next = siblingAfter(parent, index)\r\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\r\n}\r\n\r\n/**\r\n * Whether to omit `</option>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction option(_, index, parent) {\r\n  const next = siblingAfter(parent, index)\r\n  return (\r\n    !next ||\r\n    (next.type === 'element' &&\r\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\r\n  )\r\n}\r\n\r\n/**\r\n * Whether to omit `</thead>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction thead(_, index, parent) {\r\n  const next = siblingAfter(parent, index)\r\n  return Boolean(\r\n    next &&\r\n      next.type === 'element' &&\r\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\r\n  )\r\n}\r\n\r\n/**\r\n * Whether to omit `</tbody>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction tbody(_, index, parent) {\r\n  const next = siblingAfter(parent, index)\r\n  return (\r\n    !next ||\r\n    (next.type === 'element' &&\r\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\r\n  )\r\n}\r\n\r\n/**\r\n * Whether to omit `</tfoot>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction tfoot(_, index, parent) {\r\n  return !siblingAfter(parent, index)\r\n}\r\n\r\n/**\r\n * Whether to omit `</tr>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction tr(_, index, parent) {\r\n  const next = siblingAfter(parent, index)\r\n  return !next || (next.type === 'element' && next.tagName === 'tr')\r\n}\r\n\r\n/**\r\n * Whether to omit `</td>` or `</th>`.\r\n *\r\n * @param {Element} _\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the closing tag can be omitted.\r\n */\r\nfunction cells(_, index, parent) {\r\n  const next = siblingAfter(parent, index)\r\n  return (\r\n    !next ||\r\n    (next.type === 'element' &&\r\n      (next.tagName === 'td' || next.tagName === 'th'))\r\n  )\r\n}\r\n", "/**\r\n * @import {Element, Parents} from 'hast'\r\n */\r\n\r\nimport {whitespace} from 'hast-util-whitespace'\r\nimport {siblingAfter, siblingBefore} from './util/siblings.js'\r\nimport {closing} from './closing.js'\r\nimport {omission} from './omission.js'\r\n\r\nexport const opening = omission({\r\n  body,\r\n  colgroup,\r\n  head,\r\n  html,\r\n  tbody\r\n})\r\n\r\n/**\r\n * Whether to omit `<html>`.\r\n *\r\n * @param {Element} node\r\n *   Element.\r\n * @returns {boolean}\r\n *   Whether the opening tag can be omitted.\r\n */\r\nfunction html(node) {\r\n  const head = siblingAfter(node, -1)\r\n  return !head || head.type !== 'comment'\r\n}\r\n\r\n/**\r\n * Whether to omit `<head>`.\r\n *\r\n * @param {Element} node\r\n *   Element.\r\n * @returns {boolean}\r\n *   Whether the opening tag can be omitted.\r\n */\r\nfunction head(node) {\r\n  /** @type {Set<string>} */\r\n  const seen = new Set()\r\n\r\n  // Whether `srcdoc` or not,\r\n  // make sure the content model at least doesn’t have too many `base`s/`title`s.\r\n  for (const child of node.children) {\r\n    if (\r\n      child.type === 'element' &&\r\n      (child.tagName === 'base' || child.tagName === 'title')\r\n    ) {\r\n      if (seen.has(child.tagName)) return false\r\n      seen.add(child.tagName)\r\n    }\r\n  }\r\n\r\n  // “May be omitted if the element is empty,\r\n  // or if the first thing inside the head element is an element.”\r\n  const child = node.children[0]\r\n  return !child || child.type === 'element'\r\n}\r\n\r\n/**\r\n * Whether to omit `<body>`.\r\n *\r\n * @param {Element} node\r\n *   Element.\r\n * @returns {boolean}\r\n *   Whether the opening tag can be omitted.\r\n */\r\nfunction body(node) {\r\n  const head = siblingAfter(node, -1, true)\r\n\r\n  return (\r\n    !head ||\r\n    (head.type !== 'comment' &&\r\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\r\n      !(\r\n        head.type === 'element' &&\r\n        (head.tagName === 'meta' ||\r\n          head.tagName === 'link' ||\r\n          head.tagName === 'script' ||\r\n          head.tagName === 'style' ||\r\n          head.tagName === 'template')\r\n      ))\r\n  )\r\n}\r\n\r\n/**\r\n * Whether to omit `<colgroup>`.\r\n * The spec describes some logic for the opening tag, but it’s easier to\r\n * implement in the closing tag, to the same effect, so we handle it there\r\n * instead.\r\n *\r\n * @param {Element} node\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the opening tag can be omitted.\r\n */\r\nfunction colgroup(node, index, parent) {\r\n  const previous = siblingBefore(parent, index)\r\n  const head = siblingAfter(node, -1, true)\r\n\r\n  // Previous colgroup was already omitted.\r\n  if (\r\n    parent &&\r\n    previous &&\r\n    previous.type === 'element' &&\r\n    previous.tagName === 'colgroup' &&\r\n    closing(previous, parent.children.indexOf(previous), parent)\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\r\n}\r\n\r\n/**\r\n * Whether to omit `<tbody>`.\r\n *\r\n * @param {Element} node\r\n *   Element.\r\n * @param {number | undefined} index\r\n *   Index of element in parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of element.\r\n * @returns {boolean}\r\n *   Whether the opening tag can be omitted.\r\n */\r\nfunction tbody(node, index, parent) {\r\n  const previous = siblingBefore(parent, index)\r\n  const head = siblingAfter(node, -1)\r\n\r\n  // Previous table section was already omitted.\r\n  if (\r\n    parent &&\r\n    previous &&\r\n    previous.type === 'element' &&\r\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\r\n    closing(previous, parent.children.indexOf(previous), parent)\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\r\n}\r\n", "/**\r\n * @import {Element, Parents, Properties} from 'hast'\r\n * @import {State} from '../index.js'\r\n */\r\n\r\nimport {ccount} from 'ccount'\r\nimport {stringify as commas} from 'comma-separated-tokens'\r\nimport {find, svg} from 'property-information'\r\nimport {stringify as spaces} from 'space-separated-tokens'\r\nimport {stringifyEntities} from 'stringify-entities'\r\nimport {closing} from '../omission/closing.js'\r\nimport {opening} from '../omission/opening.js'\r\n\r\n/**\r\n * Maps of subsets.\r\n *\r\n * Each value is a matrix of tuples.\r\n * The value at `0` causes parse errors, the value at `1` is valid.\r\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\r\n *\r\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\r\n */\r\nconst constants = {\r\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\r\n  name: [\r\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\r\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\r\n  ],\r\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\r\n  unquoted: [\r\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\r\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\r\n  ],\r\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\r\n  single: [\r\n    [\"&'\".split(''), '\"&\\'`'.split('')],\r\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\r\n  ],\r\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\r\n  double: [\r\n    ['\"&'.split(''), '\"&\\'`'.split('')],\r\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\r\n  ]\r\n}\r\n\r\n/**\r\n * Serialize an element node.\r\n *\r\n * @param {Element} node\r\n *   Node to handle.\r\n * @param {number | undefined} index\r\n *   Index of `node` in `parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of `node`.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {string}\r\n *   Serialized node.\r\n */\r\nexport function element(node, index, parent, state) {\r\n  const schema = state.schema\r\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\r\n  let selfClosing =\r\n    schema.space === 'svg'\r\n      ? state.settings.closeEmptyElements\r\n      : state.settings.voids.includes(node.tagName.toLowerCase())\r\n  /** @type {Array<string>} */\r\n  const parts = []\r\n  /** @type {string} */\r\n  let last\r\n\r\n  if (schema.space === 'html' && node.tagName === 'svg') {\r\n    state.schema = svg\r\n  }\r\n\r\n  const attributes = serializeAttributes(state, node.properties)\r\n\r\n  const content = state.all(\r\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\r\n  )\r\n\r\n  state.schema = schema\r\n\r\n  // If the node is categorised as void, but it has children, remove the\r\n  // categorisation.\r\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\r\n  // void in WHATWG HTML, to be stringified properly.\r\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\r\n  // longer void.\r\n  if (content) selfClosing = false\r\n\r\n  if (attributes || !omit || !opening(node, index, parent)) {\r\n    parts.push('<', node.tagName, attributes ? ' ' + attributes : '')\r\n\r\n    if (\r\n      selfClosing &&\r\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\r\n    ) {\r\n      last = attributes.charAt(attributes.length - 1)\r\n      if (\r\n        !state.settings.tightSelfClosing ||\r\n        last === '/' ||\r\n        (last && last !== '\"' && last !== \"'\")\r\n      ) {\r\n        parts.push(' ')\r\n      }\r\n\r\n      parts.push('/')\r\n    }\r\n\r\n    parts.push('>')\r\n  }\r\n\r\n  parts.push(content)\r\n\r\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\r\n    parts.push('</' + node.tagName + '>')\r\n  }\r\n\r\n  return parts.join('')\r\n}\r\n\r\n/**\r\n * @param {State} state\r\n * @param {Properties | null | undefined} properties\r\n * @returns {string}\r\n */\r\nfunction serializeAttributes(state, properties) {\r\n  /** @type {Array<string>} */\r\n  const values = []\r\n  let index = -1\r\n  /** @type {string} */\r\n  let key\r\n\r\n  if (properties) {\r\n    for (key in properties) {\r\n      if (properties[key] !== null && properties[key] !== undefined) {\r\n        const value = serializeAttribute(state, key, properties[key])\r\n        if (value) values.push(value)\r\n      }\r\n    }\r\n  }\r\n\r\n  while (++index < values.length) {\r\n    const last = state.settings.tightAttributes\r\n      ? values[index].charAt(values[index].length - 1)\r\n      : undefined\r\n\r\n    // In tight mode, don’t add a space after quoted attributes.\r\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\r\n      values[index] += ' '\r\n    }\r\n  }\r\n\r\n  return values.join('')\r\n}\r\n\r\n/**\r\n * @param {State} state\r\n * @param {string} key\r\n * @param {Properties[keyof Properties]} value\r\n * @returns {string}\r\n */\r\nfunction serializeAttribute(state, key, value) {\r\n  const info = find(state.schema, key)\r\n  const x =\r\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\r\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\r\n  let quote = state.quote\r\n  /** @type {string | undefined} */\r\n  let result\r\n\r\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\r\n    value = true\r\n  } else if (\r\n    info.boolean ||\r\n    (info.overloadedBoolean && typeof value !== 'string')\r\n  ) {\r\n    value = Boolean(value)\r\n  }\r\n\r\n  if (\r\n    value === null ||\r\n    value === undefined ||\r\n    value === false ||\r\n    (typeof value === 'number' && Number.isNaN(value))\r\n  ) {\r\n    return ''\r\n  }\r\n\r\n  const name = stringifyEntities(\r\n    info.attribute,\r\n    Object.assign({}, state.settings.characterReferences, {\r\n      // Always encode without parse errors in non-HTML.\r\n      subset: constants.name[x][y]\r\n    })\r\n  )\r\n\r\n  // No value.\r\n  // There is currently only one boolean property in SVG: `[download]` on\r\n  // `<a>`.\r\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\r\n  // so I can’t test if dropping the value works.\r\n  // But I assume that it should:\r\n  //\r\n  // ```html\r\n  // <!doctype html>\r\n  // <svg viewBox=\"0 0 100 100\">\r\n  //   <a href=https://example.com download>\r\n  //     <circle cx=50 cy=40 r=35 />\r\n  //   </a>\r\n  // </svg>\r\n  // ```\r\n  //\r\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\r\n  if (value === true) return name\r\n\r\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\r\n  // keep the code cleaner.\r\n  value = Array.isArray(value)\r\n    ? (info.commaSeparated ? commas : spaces)(value, {\r\n        padLeft: !state.settings.tightCommaSeparatedLists\r\n      })\r\n    : String(value)\r\n\r\n  if (state.settings.collapseEmptyAttributes && !value) return name\r\n\r\n  // Check unquoted value.\r\n  if (state.settings.preferUnquoted) {\r\n    result = stringifyEntities(\r\n      value,\r\n      Object.assign({}, state.settings.characterReferences, {\r\n        attribute: true,\r\n        subset: constants.unquoted[x][y]\r\n      })\r\n    )\r\n  }\r\n\r\n  // If we don’t want unquoted, or if `value` contains character references when\r\n  // unquoted…\r\n  if (result !== value) {\r\n    // If the alternative is less common than `quote`, switch.\r\n    if (\r\n      state.settings.quoteSmart &&\r\n      ccount(value, quote) > ccount(value, state.alternative)\r\n    ) {\r\n      quote = state.alternative\r\n    }\r\n\r\n    result =\r\n      quote +\r\n      stringifyEntities(\r\n        value,\r\n        Object.assign({}, state.settings.characterReferences, {\r\n          // Always encode without parse errors in non-HTML.\r\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\r\n          attribute: true\r\n        })\r\n      ) +\r\n      quote\r\n  }\r\n\r\n  // Don’t add a `=` for unquoted empties.\r\n  return name + (result ? '=' + result : result)\r\n}\r\n", "/**\r\n * @import {Parents, Text} from 'hast'\r\n * @import {Raw} from 'mdast-util-to-hast'\r\n * @import {State} from '../index.js'\r\n */\r\n\r\nimport {stringifyEntities} from 'stringify-entities'\r\n\r\n// Declare array as variable so it can be cached by `stringifyEntities`\r\nconst textEntitySubset = ['<', '&']\r\n\r\n/**\r\n * Serialize a text node.\r\n *\r\n * @param {Raw | Text} node\r\n *   Node to handle.\r\n * @param {number | undefined} _\r\n *   Index of `node` in `parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of `node`.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {string}\r\n *   Serialized node.\r\n */\r\nexport function text(node, _, parent, state) {\r\n  // Check if content of `node` should be escaped.\r\n  return parent &&\r\n    parent.type === 'element' &&\r\n    (parent.tagName === 'script' || parent.tagName === 'style')\r\n    ? node.value\r\n    : stringifyEntities(\r\n        node.value,\r\n        Object.assign({}, state.settings.characterReferences, {\r\n          subset: textEntitySubset\r\n        })\r\n      )\r\n}\r\n", "/**\r\n * @import {Parents} from 'hast'\r\n * @import {Raw} from 'mdast-util-to-hast'\r\n * @import {State} from '../index.js'\r\n */\r\n\r\nimport {text} from './text.js'\r\n\r\n/**\r\n * Serialize a raw node.\r\n *\r\n * @param {Raw} node\r\n *   Node to handle.\r\n * @param {number | undefined} index\r\n *   Index of `node` in `parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of `node`.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {string}\r\n *   Serialized node.\r\n */\r\nexport function raw(node, index, parent, state) {\r\n  return state.settings.allowDangerousHtml\r\n    ? node.value\r\n    : text(node, index, parent, state)\r\n}\r\n", "/**\r\n * @import {Parents, Root} from 'hast'\r\n * @import {State} from '../index.js'\r\n */\r\n\r\n/**\r\n * Serialize a root.\r\n *\r\n * @param {Root} node\r\n *   Node to handle.\r\n * @param {number | undefined} _1\r\n *   Index of `node` in `parent.\r\n * @param {Parents | undefined} _2\r\n *   Parent of `node`.\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @returns {string}\r\n *   Serialized node.\r\n */\r\nexport function root(node, _1, _2, state) {\r\n  return state.all(node)\r\n}\r\n", "/**\r\n * @import {Nodes, Parents} from 'hast'\r\n * @import {State} from '../index.js'\r\n */\r\n\r\nimport {zwitch} from 'zwitch'\r\nimport {comment} from './comment.js'\r\nimport {doctype} from './doctype.js'\r\nimport {element} from './element.js'\r\nimport {raw} from './raw.js'\r\nimport {root} from './root.js'\r\nimport {text} from './text.js'\r\n\r\n/**\r\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\r\n */\r\nexport const handle = zwitch('type', {\r\n  invalid,\r\n  unknown,\r\n  handlers: {comment, doctype, element, raw, root, text}\r\n})\r\n\r\n/**\r\n * Fail when a non-node is found in the tree.\r\n *\r\n * @param {unknown} node\r\n *   Unknown value.\r\n * @returns {never}\r\n *   Never.\r\n */\r\nfunction invalid(node) {\r\n  throw new Error('Expected node, not `' + node + '`')\r\n}\r\n\r\n/**\r\n * Fail when a node with an unknown type is found in the tree.\r\n *\r\n * @param {unknown} node_\r\n *  Unknown node.\r\n * @returns {never}\r\n *   Never.\r\n */\r\nfunction unknown(node_) {\r\n  // `type` is guaranteed by runtime JS.\r\n  const node = /** @type {Nodes} */ (node_)\r\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\r\n}\r\n", "/**\r\n * @import {Nodes, Parents, RootContent} from 'hast'\r\n * @import {Schema} from 'property-information'\r\n * @import {Options as StringifyEntitiesOptions} from 'stringify-entities'\r\n */\r\n\r\n/**\r\n * @typedef {Omit<StringifyEntitiesOptions, 'attribute' | 'escapeOnly' | 'subset'>} CharacterReferences\r\n *\r\n * @typedef Options\r\n *   Configuration.\r\n * @property {boolean | null | undefined} [allowDangerousCharacters=false]\r\n *   Do not encode some characters which cause XSS vulnerabilities in older\r\n *   browsers (default: `false`).\r\n *\r\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\r\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\r\n *   Allow `raw` nodes and insert them as raw HTML (default: `false`).\r\n *\r\n *   When `false`, `Raw` nodes are encoded.\r\n *\r\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\r\n * @property {boolean | null | undefined} [allowParseErrors=false]\r\n *   Do not encode characters which cause parse errors (even though they work),\r\n *   to save bytes (default: `false`).\r\n *\r\n *   Not used in the SVG space.\r\n *\r\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\r\n *   > errors are handled is well defined, so this works but isn’t pretty).\r\n * @property {boolean | null | undefined} [bogusComments=false]\r\n *   Use “bogus comments” instead of comments to save byes: `<?charlie>`\r\n *   instead of `<!--charlie-->` (default: `false`).\r\n *\r\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\r\n *   > errors are handled is well defined, so this works but isn’t pretty).\r\n * @property {CharacterReferences | null | undefined} [characterReferences]\r\n *   Configure how to serialize character references (optional).\r\n * @property {boolean | null | undefined} [closeEmptyElements=false]\r\n *   Close SVG elements without any content with slash (`/`) on the opening tag\r\n *   instead of an end tag: `<circle />` instead of `<circle></circle>`\r\n *   (default: `false`).\r\n *\r\n *   See `tightSelfClosing` to control whether a space is used before the\r\n *   slash.\r\n *\r\n *   Not used in the HTML space.\r\n * @property {boolean | null | undefined} [closeSelfClosing=false]\r\n *   Close self-closing nodes with an extra slash (`/`): `<img />` instead of\r\n *   `<img>` (default: `false`).\r\n *\r\n *   See `tightSelfClosing` to control whether a space is used before the\r\n *   slash.\r\n *\r\n *   Not used in the SVG space.\r\n * @property {boolean | null | undefined} [collapseEmptyAttributes=false]\r\n *   Collapse empty attributes: get `class` instead of `class=\"\"` (default:\r\n *   `false`).\r\n *\r\n *   Not used in the SVG space.\r\n *\r\n *   > 👉 **Note**: boolean attributes (such as `hidden`) are always collapsed.\r\n * @property {boolean | null | undefined} [omitOptionalTags=false]\r\n *   Omit optional opening and closing tags (default: `false`).\r\n *\r\n *   For example, in `<ol><li>one</li><li>two</li></ol>`, both `</li>` closing\r\n *   tags can be omitted.\r\n *   The first because it’s followed by another `li`, the last because it’s\r\n *   followed by nothing.\r\n *\r\n *   Not used in the SVG space.\r\n * @property {boolean | null | undefined} [preferUnquoted=false]\r\n *   Leave attributes unquoted if that results in less bytes (default: `false`).\r\n *\r\n *   Not used in the SVG space.\r\n * @property {boolean | null | undefined} [quoteSmart=false]\r\n *   Use the other quote if that results in less bytes (default: `false`).\r\n * @property {Quote | null | undefined} [quote='\"']\r\n *   Preferred quote to use (default: `'\"'`).\r\n * @property {Space | null | undefined} [space='html']\r\n *   When an `<svg>` element is found in the HTML space, this package already\r\n *   automatically switches to and from the SVG space when entering and exiting\r\n *   it (default: `'html'`).\r\n *\r\n *   > 👉 **Note**: hast is not XML.\r\n *   > It supports SVG as embedded in HTML.\r\n *   > It does not support the features available in XML.\r\n *   > Passing SVG might break but fragments of modern SVG should be fine.\r\n *   > Use [`xast`][xast] if you need to support SVG as XML.\r\n * @property {boolean | null | undefined} [tightAttributes=false]\r\n *   Join attributes together, without whitespace, if possible: get\r\n *   `class=\"a b\"title=\"c d\"` instead of `class=\"a b\" title=\"c d\"` to save\r\n *   bytes (default: `false`).\r\n *\r\n *   Not used in the SVG space.\r\n *\r\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\r\n *   > errors are handled is well defined, so this works but isn’t pretty).\r\n * @property {boolean | null | undefined} [tightCommaSeparatedLists=false]\r\n *   Join known comma-separated attribute values with just a comma (`,`),\r\n *   instead of padding them on the right as well (`,␠`, where `␠` represents a\r\n *   space) (default: `false`).\r\n * @property {boolean | null | undefined} [tightDoctype=false]\r\n *   Drop unneeded spaces in doctypes: `<!doctypehtml>` instead of\r\n *   `<!doctype html>` to save bytes (default: `false`).\r\n *\r\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\r\n *   > errors are handled is well defined, so this works but isn’t pretty).\r\n * @property {boolean | null | undefined} [tightSelfClosing=false]\r\n *   Do not use an extra space when closing self-closing elements: `<img/>`\r\n *   instead of `<img />` (default: `false`).\r\n *\r\n *   > 👉 **Note**: only used if `closeSelfClosing: true` or\r\n *   > `closeEmptyElements: true`.\r\n * @property {boolean | null | undefined} [upperDoctype=false]\r\n *   Use a `<!DOCTYPE…` instead of `<!doctype…` (default: `false`).\r\n *\r\n *   Useless except for XHTML.\r\n * @property {ReadonlyArray<string> | null | undefined} [voids]\r\n *   Tag names of elements to serialize without closing tag (default: `html-void-elements`).\r\n *\r\n *   Not used in the SVG space.\r\n *\r\n *   > 👉 **Note**: It’s highly unlikely that you want to pass this, because\r\n *   > hast is not for XML, and HTML will not add more void elements.\r\n *\r\n * @typedef {'\"' | \"'\"} Quote\r\n *   HTML quotes for attribute values.\r\n *\r\n * @typedef {Omit<Required<{[key in keyof Options]: Exclude<Options[key], null | undefined>}>, 'space' | 'quote'>} Settings\r\n *\r\n * @typedef {'html' | 'svg'} Space\r\n *   Namespace.\r\n *\r\n * @typedef State\r\n *   Info passed around about the current state.\r\n * @property {(node: Parents | undefined) => string} all\r\n *   Serialize the children of a parent node.\r\n * @property {Quote} alternative\r\n *   Alternative quote.\r\n * @property {(node: Nodes, index: number | undefined, parent: Parents | undefined) => string} one\r\n *   Serialize one node.\r\n * @property {Quote} quote\r\n *   Preferred quote.\r\n * @property {Schema} schema\r\n *   Current schema.\r\n * @property {Settings} settings\r\n *   User configuration.\r\n */\r\n\r\nimport {htmlVoidElements} from 'html-void-elements'\r\nimport {html, svg} from 'property-information'\r\nimport {handle} from './handle/index.js'\r\n\r\n/** @type {Options} */\r\nconst emptyOptions = {}\r\n\r\n/** @type {CharacterReferences} */\r\nconst emptyCharacterReferences = {}\r\n\r\n/** @type {Array<never>} */\r\nconst emptyChildren = []\r\n\r\n/**\r\n * Serialize hast as HTML.\r\n *\r\n * @param {Array<RootContent> | Nodes} tree\r\n *   Tree to serialize.\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {string}\r\n *   Serialized HTML.\r\n */\r\nexport function toHtml(tree, options) {\r\n  const options_ = options || emptyOptions\r\n  const quote = options_.quote || '\"'\r\n  const alternative = quote === '\"' ? \"'\" : '\"'\r\n\r\n  if (quote !== '\"' && quote !== \"'\") {\r\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\r\n  }\r\n\r\n  /** @type {State} */\r\n  const state = {\r\n    one,\r\n    all,\r\n    settings: {\r\n      omitOptionalTags: options_.omitOptionalTags || false,\r\n      allowParseErrors: options_.allowParseErrors || false,\r\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\r\n      quoteSmart: options_.quoteSmart || false,\r\n      preferUnquoted: options_.preferUnquoted || false,\r\n      tightAttributes: options_.tightAttributes || false,\r\n      upperDoctype: options_.upperDoctype || false,\r\n      tightDoctype: options_.tightDoctype || false,\r\n      bogusComments: options_.bogusComments || false,\r\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\r\n      tightSelfClosing: options_.tightSelfClosing || false,\r\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\r\n      allowDangerousHtml: options_.allowDangerousHtml || false,\r\n      voids: options_.voids || htmlVoidElements,\r\n      characterReferences:\r\n        options_.characterReferences || emptyCharacterReferences,\r\n      closeSelfClosing: options_.closeSelfClosing || false,\r\n      closeEmptyElements: options_.closeEmptyElements || false\r\n    },\r\n    schema: options_.space === 'svg' ? svg : html,\r\n    quote,\r\n    alternative\r\n  }\r\n\r\n  return state.one(\r\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\r\n    undefined,\r\n    undefined\r\n  )\r\n}\r\n\r\n/**\r\n * Serialize a node.\r\n *\r\n * @this {State}\r\n *   Info passed around about the current state.\r\n * @param {Nodes} node\r\n *   Node to handle.\r\n * @param {number | undefined} index\r\n *   Index of `node` in `parent.\r\n * @param {Parents | undefined} parent\r\n *   Parent of `node`.\r\n * @returns {string}\r\n *   Serialized node.\r\n */\r\nfunction one(node, index, parent) {\r\n  return handle(node, index, parent, this)\r\n}\r\n\r\n/**\r\n * Serialize all children of `parent`.\r\n *\r\n * @this {State}\r\n *   Info passed around about the current state.\r\n * @param {Parents | undefined} parent\r\n *   Parent whose children to serialize.\r\n * @returns {string}\r\n */\r\nexport function all(parent) {\r\n  /** @type {Array<string>} */\r\n  const results = []\r\n  const children = (parent && parent.children) || emptyChildren\r\n  let index = -1\r\n\r\n  while (++index < children.length) {\r\n    results[index] = this.one(children[index], index, parent)\r\n  }\r\n\r\n  return results.join('')\r\n}\r\n", "/**\r\n * @import {Root} from 'hast'\r\n * @import {Options} from 'hast-util-to-html'\r\n * @import {Compiler, Processor} from 'unified'\r\n */\r\n\r\nimport {toHtml} from 'hast-util-to-html'\r\n\r\n/**\r\n * Plugin to add support for serializing as HTML.\r\n *\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nexport default function rehypeStringify(options) {\r\n  /** @type {Processor<undefined, undefined, undefined, Root, string>} */\r\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\r\n  const self = this\r\n  const settings = {...self.data('settings'), ...options}\r\n\r\n  self.compiler = compiler\r\n\r\n  /**\r\n   * @type {Compiler<Root, string>}\r\n   */\r\n  function compiler(tree) {\r\n    return toHtml(tree, settings)\r\n  }\r\n}\r\n", "// Note: types exposed from `index.d.ts`\r\nimport rehypeParse from 'rehype-parse'\r\nimport rehypeStringify from 'rehype-stringify'\r\nimport {unified} from 'unified'\r\n\r\n/**\r\n * Create a new unified processor that already uses `rehype-parse` and\r\n * `rehype-stringify`.\r\n */\r\nexport const rehype = unified().use(rehypeParse).use(rehypeStringify).freeze()\r\n", "import _extends from \"@babel/runtime/helpers/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"prefixCls\", \"onChange\"],\r\n  _excluded2 = [\"markdown\", \"commands\", \"fullscreen\", \"preview\", \"highlightEnable\", \"extraCommands\", \"tabSize\", \"defaultTabEnable\", \"dispatch\"];\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { EditorContext } from '../../Context';\r\nimport { TextAreaCommandOrchestrator } from '../../commands';\r\nimport handleKeyDown from './handleKeyDown';\r\nimport shortcuts from './shortcuts';\r\nimport \"./index.css\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport default function Textarea(props) {\r\n  var {\r\n      prefixCls,\r\n      onChange: _onChange\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  var _useContext = useContext(EditorContext),\r\n    {\r\n      markdown,\r\n      commands,\r\n      fullscreen,\r\n      preview,\r\n      highlightEnable,\r\n      extraCommands,\r\n      tabSize,\r\n      defaultTabEnable,\r\n      dispatch\r\n    } = _useContext,\r\n    otherStore = _objectWithoutPropertiesLoose(_useContext, _excluded2);\r\n  var textRef = React.useRef(null);\r\n  var executeRef = React.useRef();\r\n  var statesRef = React.useRef({\r\n    fullscreen,\r\n    preview\r\n  });\r\n  useEffect(() => {\r\n    statesRef.current = {\r\n      fullscreen,\r\n      preview,\r\n      highlightEnable\r\n    };\r\n  }, [fullscreen, preview, highlightEnable]);\r\n  useEffect(() => {\r\n    if (textRef.current && dispatch) {\r\n      var commandOrchestrator = new TextAreaCommandOrchestrator(textRef.current);\r\n      executeRef.current = commandOrchestrator;\r\n      dispatch({\r\n        textarea: textRef.current,\r\n        commandOrchestrator\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  var onKeyDown = e => {\r\n    handleKeyDown(e, tabSize, defaultTabEnable);\r\n    shortcuts(e, [...(commands || []), ...(extraCommands || [])], executeRef.current, dispatch, statesRef.current);\r\n  };\r\n  useEffect(() => {\r\n    if (textRef.current) {\r\n      textRef.current.addEventListener('keydown', onKeyDown);\r\n    }\r\n    return () => {\r\n      if (textRef.current) {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        textRef.current.removeEventListener('keydown', onKeyDown);\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return /*#__PURE__*/_jsx(\"textarea\", _extends({\r\n    autoComplete: \"off\",\r\n    autoCorrect: \"off\",\r\n    autoCapitalize: \"off\",\r\n    spellCheck: false\r\n  }, other, {\r\n    ref: textRef,\r\n    className: prefixCls + \"-text-input \" + (other.className ? other.className : ''),\r\n    value: markdown,\r\n    onChange: e => {\r\n      dispatch && dispatch({\r\n        markdown: e.target.value\r\n      });\r\n      _onChange && _onChange(e);\r\n    }\r\n  }));\r\n}", "import _extends from \"@babel/runtime/helpers/extends\";\r\nimport { insertTextAtPosition } from '../utils/InsertTextAtPosition';\r\nimport { bold } from './bold';\r\nimport { code, codeBlock } from './code';\r\nimport { comment } from './comment';\r\nimport { divider } from './divider';\r\nimport { fullscreen } from './fullscreen';\r\nimport { group } from './group';\r\nimport { hr } from './hr';\r\nimport { image } from './image';\r\nimport { italic } from './italic';\r\nimport { link } from './link';\r\nimport { checkedListCommand, orderedListCommand, unorderedListCommand } from './list';\r\nimport { codeEdit, codeLive, codePreview } from './preview';\r\nimport { quote } from './quote';\r\nimport { strikethrough } from './strikeThrough';\r\nimport { title } from './title';\r\nimport { title1 } from './title1';\r\nimport { title2 } from './title2';\r\nimport { title3 } from './title3';\r\nimport { title4 } from './title4';\r\nimport { title5 } from './title5';\r\nimport { title6 } from './title6';\r\nimport { table } from './table';\r\nimport { issue } from './issue';\r\nimport { help } from './help';\r\nvar getCommands = () => [bold, italic, strikethrough, hr, group([title1, title2, title3, title4, title5, title6], {\r\n  name: 'title',\r\n  groupName: 'title',\r\n  buttonProps: {\r\n    'aria-label': 'Insert title',\r\n    title: 'Insert title'\r\n  }\r\n}), divider, link, quote, code, codeBlock, comment, image, table, divider, unorderedListCommand, orderedListCommand, checkedListCommand, divider, help];\r\nvar getExtraCommands = () => [codeEdit, codeLive, codePreview, divider, fullscreen];\r\nfunction getStateFromTextArea(textArea) {\r\n  var _textArea$value;\r\n  return {\r\n    selection: {\r\n      start: textArea.selectionStart,\r\n      end: textArea.selectionEnd\r\n    },\r\n    text: textArea.value,\r\n    selectedText: (_textArea$value = textArea.value) == null ? void 0 : _textArea$value.slice(textArea.selectionStart, textArea.selectionEnd)\r\n  };\r\n}\r\nclass TextAreaTextApi {\r\n  constructor(textArea) {\r\n    this.textArea = void 0;\r\n    this.textArea = textArea;\r\n  }\r\n\r\n  /**\r\n   * Replaces the current selection with the new text. This will make the new selectedText to be empty, the\r\n   * selection start and selection end will be the same and will both point to the end\r\n   * @param text Text that should replace the current selection\r\n   */\r\n  replaceSelection(text) {\r\n    insertTextAtPosition(this.textArea, text);\r\n    return getStateFromTextArea(this.textArea);\r\n  }\r\n\r\n  /**\r\n   * Selects the specified text range\r\n   * @param selection\r\n   */\r\n  setSelectionRange(selection) {\r\n    this.textArea.focus();\r\n    this.textArea.selectionStart = selection.start;\r\n    this.textArea.selectionEnd = selection.end;\r\n    return getStateFromTextArea(this.textArea);\r\n  }\r\n}\r\nclass TextAreaCommandOrchestrator {\r\n  constructor(textArea) {\r\n    this.textArea = void 0;\r\n    this.textApi = void 0;\r\n    this.textArea = textArea;\r\n    this.textApi = new TextAreaTextApi(textArea);\r\n  }\r\n  getState() {\r\n    if (!this.textArea) return false;\r\n    return getStateFromTextArea(this.textArea);\r\n  }\r\n  executeCommand(command, dispatch, state, shortcuts) {\r\n    command.execute && command.execute(_extends({\r\n      command\r\n    }, getStateFromTextArea(this.textArea)), this.textApi, dispatch, state, shortcuts);\r\n  }\r\n}\r\nexport { title, title1, title2, title3, title4, title5, title6, bold, codeBlock, comment, italic, strikethrough, hr, group, divider, link, quote, code, image, unorderedListCommand, orderedListCommand, checkedListCommand, table, issue, help, codeEdit, codeLive, codePreview, fullscreen,\r\n// Tool method.\r\ngetCommands, getExtraCommands, getStateFromTextArea, TextAreaCommandOrchestrator, TextAreaTextApi };", "/**\r\n * The MIT License\r\n * Copyright (c) 2018 Dmitriy Kubyshkin\r\n * Copied from https://github.com/grassator/insert-text-at-cursor\r\n */\r\n\r\nvar browserSupportsTextareaTextNodes;\r\n\r\n/**\r\n * @param {HTMLElement} input\r\n * @return {boolean}\r\n */\r\nfunction canManipulateViaTextNodes(input) {\r\n  if (input.nodeName !== 'TEXTAREA') {\r\n    return false;\r\n  }\r\n  if (typeof browserSupportsTextareaTextNodes === 'undefined') {\r\n    var textarea = document.createElement('textarea');\r\n    textarea.value = '1';\r\n    browserSupportsTextareaTextNodes = !!textarea.firstChild;\r\n  }\r\n  return browserSupportsTextareaTextNodes;\r\n}\r\n\r\n/**\r\n * @param {HTMLTextAreaElement|HTMLInputElement} input\r\n * @param {string} text\r\n * @returns {void}\r\n */\r\nexport function insertTextAtPosition(input, text) {\r\n  // Most of the used APIs only work with the field selected\r\n  input.focus();\r\n\r\n  // IE 8-10\r\n  if (document.selection) {\r\n    var ieRange = document.selection.createRange();\r\n    ieRange.text = text;\r\n\r\n    // Move cursor after the inserted text\r\n    ieRange.collapse(false /* to the end */);\r\n    ieRange.select();\r\n    return;\r\n  }\r\n\r\n  // Webkit + Edge\r\n  var isSuccess = false;\r\n  if (text !== '') {\r\n    isSuccess = document.execCommand && document.execCommand('insertText', false, text);\r\n  } else {\r\n    isSuccess = document.execCommand && document.execCommand('delete', false);\r\n  }\r\n  if (!isSuccess) {\r\n    var start = input.selectionStart;\r\n    var end = input.selectionEnd;\r\n    // Firefox (non-standard method)\r\n    if (typeof input.setRangeText === 'function') {\r\n      input.setRangeText(text);\r\n    } else {\r\n      // To make a change we just need a Range, not a Selection\r\n      var range = document.createRange();\r\n      var textNode = document.createTextNode(text);\r\n      if (canManipulateViaTextNodes(input)) {\r\n        var node = input.firstChild;\r\n\r\n        // If textarea is empty, just insert the text\r\n        if (!node) {\r\n          input.appendChild(textNode);\r\n        } else {\r\n          // Otherwise we need to find a nodes for start and end\r\n          var offset = 0;\r\n          var startNode = null;\r\n          var endNode = null;\r\n          while (node && (startNode === null || endNode === null)) {\r\n            var nodeLength = node.nodeValue.length;\r\n\r\n            // if start of the selection falls into current node\r\n            if (start >= offset && start <= offset + nodeLength) {\r\n              range.setStart(startNode = node, start - offset);\r\n            }\r\n\r\n            // if end of the selection falls into current node\r\n            if (end >= offset && end <= offset + nodeLength) {\r\n              range.setEnd(endNode = node, end - offset);\r\n            }\r\n            offset += nodeLength;\r\n            node = node.nextSibling;\r\n          }\r\n\r\n          // If there is some text selected, remove it as we should replace it\r\n          if (start !== end) {\r\n            range.deleteContents();\r\n          }\r\n        }\r\n      }\r\n\r\n      // If the node is a textarea and the range doesn't span outside the element\r\n      //\r\n      // Get the commonAncestorContainer of the selected range and test its type\r\n      // If the node is of type `#text` it means that we're still working with text nodes within our textarea element\r\n      // otherwise, if it's of type `#document` for example it means our selection spans outside the textarea.\r\n      if (canManipulateViaTextNodes(input) && range.commonAncestorContainer.nodeName === '#text') {\r\n        // Finally insert a new node. The browser will automatically split start and end nodes into two if necessary\r\n        range.insertNode(textNode);\r\n      } else {\r\n        // If the node is not a textarea or the range spans outside a textarea the only way is to replace the whole value\r\n        var value = input.value;\r\n        input.value = value.slice(0, start) + text + value.slice(end);\r\n      }\r\n    }\r\n\r\n    // Correct the cursor position to be at the end of the insertion\r\n    input.setSelectionRange(start + text.length, start + text.length);\r\n\r\n    // Notify any possible listeners of the change\r\n    var e = document.createEvent('UIEvent');\r\n    e.initEvent('input', true, false);\r\n    input.dispatchEvent(e);\r\n  }\r\n}", "import React from 'react';\r\nimport { selectWord, executeCommand } from '../utils/markdownUtils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var bold = {\r\n  name: 'bold',\r\n  keyCommand: 'bold',\r\n  shortcuts: 'ctrlcmd+b',\r\n  prefix: '**',\r\n  buttonProps: {\r\n    'aria-label': 'Add bold text (ctrl + b)',\r\n    title: 'Add bold text (ctrl + b)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    role: \"img\",\r\n    width: \"12\",\r\n    height: \"12\",\r\n    viewBox: \"0 0 384 512\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M304.793 243.891c33.639-18.537 53.657-54.16 53.657-95.693 0-48.236-26.25-87.626-68.626-104.179C265.138 34.01 240.849 32 209.661 32H24c-8.837 0-16 7.163-16 16v33.049c0 8.837 7.163 16 16 16h33.113v318.53H24c-8.837 0-16 7.163-16 16V464c0 8.837 7.163 16 16 16h195.69c24.203 0 44.834-1.289 66.866-7.584C337.52 457.193 376 410.647 376 350.014c0-52.168-26.573-91.684-71.207-106.123zM142.217 100.809h67.444c16.294 0 27.536 2.019 37.525 6.717 15.828 8.479 24.906 26.502 24.906 49.446 0 35.029-20.32 56.79-53.029 56.79h-76.846V100.809zm112.642 305.475c-10.14 4.056-22.677 4.907-31.409 4.907h-81.233V281.943h84.367c39.645 0 63.057 25.38 63.057 63.057.001 28.425-13.66 52.483-34.782 61.284z\"\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    var newSelectionRange = selectWord({\r\n      text: state.text,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix\r\n    });\r\n    var state1 = api.setSelectionRange(newSelectionRange);\r\n    executeCommand({\r\n      api,\r\n      selectedText: state1.selectedText,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix\r\n    });\r\n  }\r\n};", "export function selectWord(_ref) {\r\n  var {\r\n    text,\r\n    selection,\r\n    prefix,\r\n    suffix = prefix\r\n  } = _ref;\r\n  var result = selection;\r\n  if (text && text.length && selection.start === selection.end) {\r\n    result = getSurroundingWord(text, selection.start);\r\n  }\r\n  if (result.start >= prefix.length && result.end <= text.length - suffix.length) {\r\n    var selectedTextContext = text.slice(result.start - prefix.length, result.end + suffix.length);\r\n    if (selectedTextContext.startsWith(prefix) && selectedTextContext.endsWith(suffix)) {\r\n      return {\r\n        start: result.start - prefix.length,\r\n        end: result.end + suffix.length\r\n      };\r\n    }\r\n  }\r\n  return result;\r\n}\r\nexport function selectLine(_ref2) {\r\n  var {\r\n    text,\r\n    selection\r\n  } = _ref2;\r\n  var start = text.slice(0, selection.start).lastIndexOf('\\n') + 1;\r\n  var end = text.slice(selection.end).indexOf('\\n') + selection.end;\r\n  if (end === selection.end - 1) {\r\n    end = text.length;\r\n  }\r\n  return {\r\n    start,\r\n    end\r\n  };\r\n}\r\n\r\n/**\r\n *  Gets the number of line-breaks that would have to be inserted before the given 'startPosition'\r\n *  to make sure there's an empty line between 'startPosition' and the previous text\r\n */\r\nexport function getBreaksNeededForEmptyLineBefore(text, startPosition) {\r\n  if (text === void 0) {\r\n    text = '';\r\n  }\r\n  if (startPosition === 0) return 0;\r\n\r\n  // rules:\r\n  // - If we're in the first line, no breaks are needed\r\n  // - Otherwise there must be 2 breaks before the previous character. Depending on how many breaks exist already, we\r\n  //      may need to insert 0, 1 or 2 breaks\r\n\r\n  var neededBreaks = 2;\r\n  var isInFirstLine = true;\r\n  for (var i = startPosition - 1; i >= 0 && neededBreaks >= 0; i--) {\r\n    switch (text.charCodeAt(i)) {\r\n      case 32:\r\n        // blank space\r\n        continue;\r\n      case 10:\r\n        // line break\r\n        neededBreaks--;\r\n        isInFirstLine = false;\r\n        break;\r\n      default:\r\n        return neededBreaks;\r\n    }\r\n  }\r\n  return isInFirstLine ? 0 : neededBreaks;\r\n}\r\n\r\n/**\r\n *  Gets the number of line-breaks that would have to be inserted after the given 'startPosition'\r\n *  to make sure there's an empty line between 'startPosition' and the next text\r\n */\r\nexport function getBreaksNeededForEmptyLineAfter(text, startPosition) {\r\n  if (text === void 0) {\r\n    text = '';\r\n  }\r\n  if (startPosition === text.length - 1) return 0;\r\n\r\n  // rules:\r\n  // - If we're in the first line, no breaks are needed\r\n  // - Otherwise there must be 2 breaks before the previous character. Depending on how many breaks exist already, we\r\n  //      may need to insert 0, 1 or 2 breaks\r\n\r\n  var neededBreaks = 2;\r\n  var isInLastLine = true;\r\n  for (var i = startPosition; i < text.length && neededBreaks >= 0; i++) {\r\n    switch (text.charCodeAt(i)) {\r\n      case 32:\r\n        continue;\r\n      case 10:\r\n        {\r\n          neededBreaks--;\r\n          isInLastLine = false;\r\n          break;\r\n        }\r\n      default:\r\n        return neededBreaks;\r\n    }\r\n  }\r\n  return isInLastLine ? 0 : neededBreaks;\r\n}\r\nexport function getSurroundingWord(text, position) {\r\n  if (!text) throw Error(\"Argument 'text' should be truthy\");\r\n  var isWordDelimiter = c => c === ' ' || c.charCodeAt(0) === 10;\r\n\r\n  // leftIndex is initialized to 0 because if selection is 0, it won't even enter the iteration\r\n  var start = 0;\r\n  // rightIndex is initialized to text.length because if selection is equal to text.length it won't even enter the interation\r\n  var end = text.length;\r\n\r\n  // iterate to the left\r\n  for (var i = position; i - 1 > -1; i--) {\r\n    if (isWordDelimiter(text[i - 1])) {\r\n      start = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  // iterate to the right\r\n  for (var _i = position; _i < text.length; _i++) {\r\n    if (isWordDelimiter(text[_i])) {\r\n      end = _i;\r\n      break;\r\n    }\r\n  }\r\n  return {\r\n    start,\r\n    end\r\n  };\r\n}\r\nexport function executeCommand(_ref3) {\r\n  var {\r\n    api,\r\n    selectedText,\r\n    selection,\r\n    prefix,\r\n    suffix = prefix\r\n  } = _ref3;\r\n  if (selectedText.length >= prefix.length + suffix.length && selectedText.startsWith(prefix) && selectedText.endsWith(suffix)) {\r\n    api.replaceSelection(selectedText.slice(prefix.length, suffix.length ? -suffix.length : undefined));\r\n    api.setSelectionRange({\r\n      start: selection.start - prefix.length,\r\n      end: selection.end - prefix.length\r\n    });\r\n  } else {\r\n    api.replaceSelection(\"\" + prefix + selectedText + suffix);\r\n    api.setSelectionRange({\r\n      start: selection.start + prefix.length,\r\n      end: selection.end + prefix.length\r\n    });\r\n  }\r\n}\r\n/**\r\n * Inserts insertionString before each line\r\n */\r\nexport function insertBeforeEachLine(selectedText, insertBefore) {\r\n  var lines = selectedText.split(/\\n/);\r\n  var insertionLength = 0;\r\n  var modifiedText = lines.map((item, index) => {\r\n    if (typeof insertBefore === 'string') {\r\n      if (item.startsWith(insertBefore)) {\r\n        insertionLength -= insertBefore.length;\r\n        return item.slice(insertBefore.length);\r\n      }\r\n      insertionLength += insertBefore.length;\r\n      return insertBefore + item;\r\n    }\r\n    if (typeof insertBefore === 'function') {\r\n      if (item.startsWith(insertBefore(item, index))) {\r\n        insertionLength -= insertBefore(item, index).length;\r\n        return item.slice(insertBefore(item, index).length);\r\n      }\r\n      var insertionResult = insertBefore(item, index);\r\n      insertionLength += insertionResult.length;\r\n      return insertBefore(item, index) + item;\r\n    }\r\n    throw Error('insertion is expected to be either a string or a function');\r\n  }).join('\\n');\r\n  return {\r\n    modifiedText,\r\n    insertionLength\r\n  };\r\n}", "import React from 'react';\r\nimport { selectWord, executeCommand } from '../utils/markdownUtils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var codeBlock = {\r\n  name: 'codeBlock',\r\n  keyCommand: 'codeBlock',\r\n  shortcuts: 'ctrlcmd+shift+j',\r\n  prefix: '```',\r\n  buttonProps: {\r\n    'aria-label': 'Insert Code Block (ctrl + shift + j)',\r\n    title: 'Insert Code Block (ctrl + shift +j)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    width: \"13\",\r\n    height: \"13\",\r\n    role: \"img\",\r\n    viewBox: \"0 0 156 156\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M110.85 120.575 43.7 120.483333 43.7083334 110.091667 110.85 110.191667 110.841667 120.583333 110.85 120.575ZM85.1333334 87.1916666 43.625 86.7083332 43.7083334 76.3166666 85.2083334 76.7916666 85.1333334 87.1916666 85.1333334 87.1916666ZM110.841667 53.4166666 43.7 53.3166666 43.7083334 42.925 110.85 43.025 110.841667 53.4166666ZM36 138C27.2916666 138 20.75 136.216667 16.4 132.666667 12.1333334 129.2 10 124.308333 10 118L10 95.3333332C10 91.0666666 9.25 88.1333332 7.7333334 86.5333332 6.3166668 84.8416666 3.7333334 84 0 84L0 72C3.7333334 72 6.3083334 71.2 7.7333334 69.6 9.2416668 67.9083334 10 64.9333334 10 60.6666666L10 38C10 31.775 12.1333334 26.8833334 16.4 23.3333332 20.7583334 19.7749998 27.2916666 18 36 18L40.6666668 18 40.6666668 30 36 30C34.0212222 29.9719277 32.1263151 30.7979128 30.8 32.2666666 29.3605875 33.8216362 28.5938182 35.8823287 28.6666668 38L28.6666668 60.6666666C28.6666668 67.5083332 26.6666668 72.4 22.6666668 75.3333332 20.9317416 76.7274684 18.8640675 77.6464347 16.6666668 78 18.8916668 78.35 20.8916668 79.2416666 22.6666668 80.6666666 26.6666668 83.95 28.6666668 88.8416666 28.6666668 95.3333332L28.6666668 118C28.6666668 120.308333 29.3750002 122.216667 30.8 123.733333 32.2166666 125.241667 33.9583334 126 36 126L40.6666668 126 40.6666668 138 36 138 36 138ZM114.116667 126 118.783333 126C120.833333 126 122.566667 125.241667 123.983333 123.733333 125.422746 122.178364 126.189515 120.117671 126.116667 118L126.116667 95.3333332C126.116667 88.8333332 128.116667 83.9499998 132.116667 80.6666666 133.9 79.2416666 135.9 78.35 138.116667 78 135.919156 77.6468047 133.851391 76.7277979 132.116667 75.3333332 128.116667 72.3999998 126.116667 67.5 126.116667 60.6666666L126.116667 38C126.189515 35.8823287 125.422746 33.8216361 123.983333 32.2666666 122.657018 30.7979128 120.762111 29.9719277 118.783333 30L114.116667 30 114.116667 18 118.783333 18C127.5 18 133.983333 19.775 138.25 23.3333332 142.608333 26.8833332 144.783333 31.7749998 144.783333 38L144.783333 60.6666666C144.783333 64.9333332 145.5 67.9083332 146.916667 69.6 148.433333 71.2 151.05 72 154.783333 72L154.783333 84C151.05 84 148.433333 84.8333334 146.916667 86.5333332 145.5 88.1333332 144.783333 91.0666666 144.783333 95.3333332L144.783333 118C144.783333 124.308333 142.616667 129.2 138.25 132.666667 133.983333 136.216667 127.5 138 118.783333 138L114.116667 138 114.116667 126 114.116667 126Z\"\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    var newSelectionRange = selectWord({\r\n      text: state.text,\r\n      selection: state.selection,\r\n      prefix: '```\\n',\r\n      suffix: '\\n```'\r\n    });\r\n    var state1 = api.setSelectionRange(newSelectionRange);\r\n\r\n    // Based on context determine if new line is needed or not\r\n    var prefix = '\\n```\\n';\r\n    var suffix = '\\n```\\n';\r\n    if (state1.selectedText.length >= prefix.length + suffix.length - 2 && state1.selectedText.startsWith(prefix) && state1.selectedText.endsWith(suffix)) {\r\n      // Remove code block\r\n      prefix = '```\\n';\r\n      suffix = '\\n```';\r\n    } else {\r\n      // Add code block\r\n      if (state1.selection.start >= 1 && state.text.slice(state1.selection.start - 1, state1.selection.start) === '\\n' || state1.selection.start === 0) {\r\n        prefix = '```\\n';\r\n      }\r\n      if (state1.selection.end <= state.text.length - 1 && state.text.slice(state1.selection.end, state1.selection.end + 1) === '\\n' || state1.selection.end === state.text.length) {\r\n        suffix = '\\n```';\r\n      }\r\n    }\r\n    var newSelectionRange2 = selectWord({\r\n      text: state.text,\r\n      selection: state.selection,\r\n      prefix,\r\n      suffix\r\n    });\r\n    var state2 = api.setSelectionRange(newSelectionRange2);\r\n    executeCommand({\r\n      api,\r\n      selectedText: state2.selectedText,\r\n      selection: state.selection,\r\n      prefix,\r\n      suffix\r\n    });\r\n  }\r\n};\r\nexport var code = {\r\n  name: 'code',\r\n  keyCommand: 'code',\r\n  shortcuts: 'ctrlcmd+j',\r\n  prefix: '`',\r\n  buttonProps: {\r\n    'aria-label': 'Insert code (ctrl + j)',\r\n    title: 'Insert code (ctrl + j)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    width: \"14\",\r\n    height: \"14\",\r\n    role: \"img\",\r\n    viewBox: \"0 0 640 512\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z\"\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    if (state.selectedText.indexOf('\\n') === -1) {\r\n      var newSelectionRange = selectWord({\r\n        text: state.text,\r\n        selection: state.selection,\r\n        prefix: state.command.prefix\r\n      });\r\n      var state1 = api.setSelectionRange(newSelectionRange);\r\n      executeCommand({\r\n        api,\r\n        selectedText: state1.selectedText,\r\n        selection: state.selection,\r\n        prefix: state.command.prefix\r\n      });\r\n    } else {\r\n      codeBlock.execute(state, api);\r\n    }\r\n  }\r\n};", "import React from 'react';\r\nimport { selectWord, executeCommand } from '../utils/markdownUtils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nexport var comment = {\r\n  name: 'comment',\r\n  keyCommand: 'comment',\r\n  shortcuts: 'ctrlcmd+/',\r\n  prefix: '<!-- ',\r\n  suffix: ' -->',\r\n  buttonProps: {\r\n    'aria-label': 'Insert comment (ctrl + /)',\r\n    title: 'Insert comment (ctrl + /)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    height: \"1em\",\r\n    width: \"1em\",\r\n    viewBox: \"0 0 25 25\",\r\n    children: /*#__PURE__*/_jsxs(\"g\", {\r\n      fill: \"none\",\r\n      fillRule: \"evenodd\",\r\n      children: [/*#__PURE__*/_jsx(\"polygon\", {\r\n        points: \".769 .727 24.981 .727 24.981 24.727 .769 24.727\"\r\n      }), /*#__PURE__*/_jsx(\"path\", {\r\n        stroke: \"currentColor\",\r\n        strokeLinecap: \"round\",\r\n        strokeLinejoin: \"round\",\r\n        strokeWidth: \"3\",\r\n        d: \"M12.625,23.8787879 L8.125,19.6969697 L5.125,19.6969697 C2.63971863,19.6969697 0.625,17.8247059 0.625,15.5151515 L0.625,7.15151515 C0.625,4.84196074 2.63971863,2.96969697 5.125,2.96969697 L20.125,2.96969697 C22.6102814,2.96969697 24.625,4.84196074 24.625,7.15151515 L24.625,15.5151515 C24.625,17.8247059 22.6102814,19.6969697 20.125,19.6969697 L17.125,19.6969697 L12.625,23.8787879\"\r\n      }), /*#__PURE__*/_jsx(\"path\", {\r\n        stroke: \"currentColor\",\r\n        strokeLinecap: \"round\",\r\n        strokeLinejoin: \"round\",\r\n        strokeWidth: \"3\",\r\n        d: \"M10.625,8.54545455 L7.25,11.3333333 L10.625,14.1212121 M15.6875,8.54545455 L19.0625,11.3333333 L15.6875,14.1212121\"\r\n      })]\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    var newSelectionRange = selectWord({\r\n      text: state.text,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix,\r\n      suffix: state.command.suffix\r\n    });\r\n    var state1 = api.setSelectionRange(newSelectionRange);\r\n    executeCommand({\r\n      api,\r\n      selectedText: state1.selectedText,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix,\r\n      suffix: state.command.suffix\r\n    });\r\n  }\r\n};", "export var divider = {\r\n  keyCommand: 'divider'\r\n};", "import React from 'react';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var fullscreen = {\r\n  name: 'fullscreen',\r\n  keyCommand: 'fullscreen',\r\n  shortcuts: 'ctrlcmd+0',\r\n  value: 'fullscreen',\r\n  buttonProps: {\r\n    'aria-label': 'Toggle fullscreen (ctrl + 0)',\r\n    title: 'Toggle fullscreen (ctrl+ 0)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    width: \"12\",\r\n    height: \"12\",\r\n    viewBox: \"0 0 520 520\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M118 171.133334L118 342.200271C118 353.766938 126.675 365.333605 141.133333 365.333605L382.634614 365.333605C394.201281 365.333605 405.767948 356.658605 405.767948 342.200271L405.767948 171.133334C405.767948 159.566667 397.092948 148 382.634614 148L141.133333 148C126.674999 148 117.999999 156.675 118 171.133334zM465.353591 413.444444L370 413.444444 370 471.222222 474.0221 471.222222C500.027624 471.222222 520.254143 451 520.254143 425L520.254143 321 462.464089 321 462.464089 413.444444 465.353591 413.444444zM471.0221 43L367 43 367 100.777778 462.353591 100.777778 462.353591 196.111111 520.143647 196.111111 520.143647 89.2222219C517.254144 63.2222219 497.027624 43 471.0221 43zM57.7900547 100.777778L153.143646 100.777778 153.143646 43 46.2320439 43C20.2265191 43 0 63.2222219 0 89.2222219L0 193.222222 57.7900547 193.222222 57.7900547 100.777778zM57.7900547 321L0 321 0 425C0 451 20.2265191 471.222222 46.2320439 471.222223L150.254143 471.222223 150.254143 413.444445 57.7900547 413.444445 57.7900547 321z\"\r\n    })\r\n  }),\r\n  execute: (state, api, dispatch, executeCommandState, shortcuts) => {\r\n    api.textArea.focus();\r\n    if (shortcuts && dispatch && executeCommandState) {\r\n      dispatch({\r\n        fullscreen: !executeCommandState.fullscreen\r\n      });\r\n    }\r\n  }\r\n};", "function _objectDestructuringEmpty(t) {\r\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\r\n}\r\nexport { _objectDestructuringEmpty as default };", "import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\r\nimport _extends from \"@babel/runtime/helpers/extends\";\r\nimport React from 'react';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var group = (arr, options) => {\r\n  var data = _extends({\r\n    children: arr,\r\n    icon: /*#__PURE__*/_jsx(\"svg\", {\r\n      width: \"12\",\r\n      height: \"12\",\r\n      viewBox: \"0 0 520 520\",\r\n      children: /*#__PURE__*/_jsx(\"path\", {\r\n        fill: \"currentColor\",\r\n        d: \"M15.7083333,468 C7.03242448,468 0,462.030833 0,454.666667 L0,421.333333 C0,413.969167 7.03242448,408 15.7083333,408 L361.291667,408 C369.967576,408 377,413.969167 377,421.333333 L377,454.666667 C377,462.030833 369.967576,468 361.291667,468 L15.7083333,468 Z M21.6666667,366 C9.69989583,366 0,359.831861 0,352.222222 L0,317.777778 C0,310.168139 9.69989583,304 21.6666667,304 L498.333333,304 C510.300104,304 520,310.168139 520,317.777778 L520,352.222222 C520,359.831861 510.300104,366 498.333333,366 L21.6666667,366 Z M136.835938,64 L136.835937,126 L107.25,126 L107.25,251 L40.75,251 L40.75,126 L-5.68434189e-14,126 L-5.68434189e-14,64 L136.835938,64 Z M212,64 L212,251 L161.648438,251 L161.648438,64 L212,64 Z M378,64 L378,126 L343.25,126 L343.25,251 L281.75,251 L281.75,126 L238,126 L238,64 L378,64 Z M449.047619,189.550781 L520,189.550781 L520,251 L405,251 L405,64 L449.047619,64 L449.047619,189.550781 Z\"\r\n      })\r\n    }),\r\n    execute: () => {}\r\n  }, options, {\r\n    keyCommand: 'group'\r\n  });\r\n  if (Array.isArray(data.children)) {\r\n    data.children = data.children.map(_ref => {\r\n      var item = _extends({}, (_objectDestructuringEmpty(_ref), _ref));\r\n      item.parent = data;\r\n      return _extends({}, item);\r\n    });\r\n  }\r\n  return data;\r\n};", "import React from 'react';\r\nimport { selectWord, executeCommand } from '../utils/markdownUtils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var hr = {\r\n  name: 'hr',\r\n  keyCommand: 'hr',\r\n  shortcuts: 'ctrlcmd+h',\r\n  prefix: '\\n\\n---\\n',\r\n  suffix: '',\r\n  buttonProps: {\r\n    'aria-label': 'Insert HR (ctrl + h)',\r\n    title: 'Insert HR (ctrl + h)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    width: \"12\",\r\n    height: \"12\",\r\n    viewBox: \"0 0 175 175\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M0,129 L175,129 L175,154 L0,154 L0,129 Z M3,9 L28.2158203,9 L28.2158203,47.9824219 L55.7695313,47.9824219 L55.7695313,9 L81.0966797,9 L81.0966797,107.185547 L55.7695313,107.185547 L55.7695313,68.0214844 L28.2158203,68.0214844 L28.2158203,107.185547 L3,107.185547 L3,9 Z M93.1855469,100.603516 L93.1855469,19 L135.211914,19 C143.004922,19 148.960917,19.6679621 153.080078,21.0039063 C157.199239,22.3398504 160.520495,24.8168764 163.043945,28.4350586 C165.567395,32.0532407 166.829102,36.459935 166.829102,41.6552734 C166.829102,46.1826398 165.864267,50.0883625 163.93457,53.3725586 C162.004873,56.6567547 159.351579,59.3193257 155.974609,61.3603516 C153.822255,62.6591862 150.872089,63.7353473 147.124023,64.5888672 C150.129898,65.5908253 152.319329,66.5927684 153.692383,67.5947266 C154.620122,68.2626987 155.965323,69.6913953 157.728027,71.8808594 C159.490731,74.0703234 160.668942,75.7587831 161.262695,76.9462891 L173,100.603516 L144.953125,100.603516 L131.482422,75.6660156 C129.775382,72.4374839 128.253913,70.3408251 126.917969,69.3759766 C125.0996,68.1142515 123.040051,67.4833984 120.739258,67.4833984 L118.512695,67.4833984 L118.512695,100.603516 L93.1855469,100.603516 Z M118.512695,52.0644531 L129.144531,52.0644531 C130.294928,52.0644531 132.521468,51.6933631 135.824219,50.9511719 C137.494149,50.6171858 138.857905,49.7636787 139.915527,48.390625 C140.97315,47.0175713 141.501953,45.4404386 141.501953,43.6591797 C141.501953,41.0244009 140.667001,39.0019602 138.99707,37.5917969 C137.32714,36.1816336 134.191429,35.4765625 129.589844,35.4765625 L117.512695,35.4765625 L118.512695,52.0644531 Z\",\r\n      transform: \"translate(0 9)\"\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    var newSelectionRange = selectWord({\r\n      text: state.text,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix,\r\n      suffix: state.command.suffix\r\n    });\r\n    var state1 = api.setSelectionRange(newSelectionRange);\r\n    if (state1.selectedText.length >= state.command.prefix.length && state1.selectedText.startsWith(state.command.prefix)) {\r\n      // Remove\r\n      executeCommand({\r\n        api,\r\n        selectedText: state1.selectedText,\r\n        selection: state.selection,\r\n        prefix: state.command.prefix,\r\n        suffix: state.command.suffix\r\n      });\r\n    } else {\r\n      // Add\r\n      state1 = api.setSelectionRange({\r\n        start: state.selection.start,\r\n        end: state.selection.start\r\n      });\r\n      executeCommand({\r\n        api,\r\n        selectedText: state1.selectedText,\r\n        selection: state.selection,\r\n        prefix: state.command.prefix,\r\n        suffix: state.command.suffix\r\n      });\r\n    }\r\n  }\r\n};", "import React from 'react';\r\nimport { selectWord, executeCommand } from '../utils/markdownUtils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var image = {\r\n  name: 'image',\r\n  keyCommand: 'image',\r\n  shortcuts: 'ctrlcmd+k',\r\n  prefix: '![image](',\r\n  suffix: ')',\r\n  buttonProps: {\r\n    'aria-label': 'Add image (ctrl + k)',\r\n    title: 'Add image (ctrl + k)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    width: \"13\",\r\n    height: \"13\",\r\n    viewBox: \"0 0 20 20\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M15 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-7H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 13l-6-5-2 2-4-5-4 8V4h16v11z\"\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    var newSelectionRange = selectWord({\r\n      text: state.text,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix,\r\n      suffix: state.command.suffix\r\n    });\r\n    var state1 = api.setSelectionRange(newSelectionRange);\r\n    if (state1.selectedText.includes('http') || state1.selectedText.includes('www')) {\r\n      executeCommand({\r\n        api,\r\n        selectedText: state1.selectedText,\r\n        selection: state.selection,\r\n        prefix: state.command.prefix,\r\n        suffix: state.command.suffix\r\n      });\r\n    } else {\r\n      newSelectionRange = selectWord({\r\n        text: state.text,\r\n        selection: state.selection,\r\n        prefix: '![',\r\n        suffix: ']()'\r\n      });\r\n      state1 = api.setSelectionRange(newSelectionRange);\r\n      if (state1.selectedText.length === 0) {\r\n        executeCommand({\r\n          api,\r\n          selectedText: state1.selectedText,\r\n          selection: state.selection,\r\n          prefix: '![image',\r\n          suffix: '](url)'\r\n        });\r\n      } else {\r\n        executeCommand({\r\n          api,\r\n          selectedText: state1.selectedText,\r\n          selection: state.selection,\r\n          prefix: '![',\r\n          suffix: ']()'\r\n        });\r\n      }\r\n    }\r\n  }\r\n};", "import React from 'react';\r\nimport { selectWord, executeCommand } from '../utils/markdownUtils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var italic = {\r\n  name: 'italic',\r\n  keyCommand: 'italic',\r\n  shortcuts: 'ctrlcmd+i',\r\n  prefix: '*',\r\n  buttonProps: {\r\n    'aria-label': 'Add italic text (ctrl + i)',\r\n    title: 'Add italic text (ctrl + i)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    \"data-name\": \"italic\",\r\n    width: \"12\",\r\n    height: \"12\",\r\n    role: \"img\",\r\n    viewBox: \"0 0 320 512\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z\"\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    var newSelectionRange = selectWord({\r\n      text: state.text,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix\r\n    });\r\n    var state1 = api.setSelectionRange(newSelectionRange);\r\n    executeCommand({\r\n      api,\r\n      selectedText: state1.selectedText,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix\r\n    });\r\n  }\r\n};", "import React from 'react';\r\nimport { selectWord, executeCommand } from '../utils/markdownUtils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var link = {\r\n  name: 'link',\r\n  keyCommand: 'link',\r\n  shortcuts: 'ctrlcmd+l',\r\n  prefix: '[',\r\n  suffix: '](url)',\r\n  buttonProps: {\r\n    'aria-label': 'Add a link (ctrl + l)',\r\n    title: 'Add a link (ctrl + l)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    \"data-name\": \"italic\",\r\n    width: \"12\",\r\n    height: \"12\",\r\n    role: \"img\",\r\n    viewBox: \"0 0 520 520\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M331.751196,182.121107 C392.438214,241.974735 391.605313,337.935283 332.11686,396.871226 C332.005129,396.991316 331.873084,397.121413 331.751196,397.241503 L263.493918,464.491645 C203.291404,523.80587 105.345257,523.797864 45.151885,464.491645 C-15.0506283,405.187427 -15.0506283,308.675467 45.151885,249.371249 L82.8416853,212.237562 C92.836501,202.39022 110.049118,208.9351 110.56511,222.851476 C111.223305,240.5867 114.451306,258.404985 120.407566,275.611815 C122.424812,281.438159 120.983487,287.882964 116.565047,292.23621 L103.272145,305.332975 C74.8052033,333.379887 73.9123737,379.047937 102.098973,407.369054 C130.563883,435.969378 177.350591,436.139505 206.033884,407.879434 L274.291163,340.6393 C302.9257,312.427264 302.805844,266.827265 274.291163,238.733318 C270.531934,235.036561 266.74528,232.16442 263.787465,230.157924 C259.544542,227.2873 256.928256,222.609848 256.731165,217.542518 C256.328935,206.967633 260.13184,196.070508 268.613213,187.714278 L289.998463,166.643567 C295.606326,161.118448 304.403592,160.439942 310.906317,164.911276 C318.353355,170.034591 325.328531,175.793397 331.751196,182.121107 Z M240.704978,55.4828366 L172.447607,122.733236 C172.325719,122.853326 172.193674,122.983423 172.081943,123.103513 C117.703294,179.334654 129.953294,261.569283 185.365841,328.828764 C191.044403,335.721376 198.762988,340.914712 206.209732,346.037661 C212.712465,350.509012 221.510759,349.829503 227.117615,344.305363 L248.502893,323.234572 C256.984277,314.87831 260.787188,303.981143 260.384957,293.406218 C260.187865,288.338869 257.571576,283.661398 253.328648,280.790763 C250.370829,278.78426 246.58417,275.912107 242.824936,272.215337 C214.310216,244.121282 206.209732,204.825874 229.906702,179.334654 L298.164073,112.094263 C326.847404,83.8340838 373.633159,84.0042113 402.099123,112.604645 C430.285761,140.92587 429.393946,186.594095 400.92595,214.641114 L387.63303,227.737929 C383.214584,232.091191 381.773257,238.536021 383.790506,244.362388 C389.746774,261.569283 392.974779,279.387637 393.632975,297.122928 C394.149984,311.039357 411.361608,317.584262 421.356437,307.736882 L459.046288,270.603053 C519.249898,211.29961 519.249898,114.787281 459.047304,55.4828366 C398.853851,-3.82360914 300.907572,-3.83161514 240.704978,55.4828366 Z\"\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    var newSelectionRange = selectWord({\r\n      text: state.text,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix,\r\n      suffix: state.command.suffix\r\n    });\r\n    var state1 = api.setSelectionRange(newSelectionRange);\r\n    if (state1.selectedText.includes('http') || state1.selectedText.includes('www')) {\r\n      newSelectionRange = selectWord({\r\n        text: state.text,\r\n        selection: state.selection,\r\n        prefix: '[](',\r\n        suffix: ')'\r\n      });\r\n      state1 = api.setSelectionRange(newSelectionRange);\r\n      executeCommand({\r\n        api,\r\n        selectedText: state1.selectedText,\r\n        selection: state.selection,\r\n        prefix: '[](',\r\n        suffix: ')'\r\n      });\r\n    } else {\r\n      if (state1.selectedText.length === 0) {\r\n        executeCommand({\r\n          api,\r\n          selectedText: state1.selectedText,\r\n          selection: state.selection,\r\n          prefix: '[title',\r\n          suffix: '](url)'\r\n        });\r\n      } else {\r\n        executeCommand({\r\n          api,\r\n          selectedText: state1.selectedText,\r\n          selection: state.selection,\r\n          prefix: state.command.prefix,\r\n          suffix: state.command.suffix\r\n        });\r\n      }\r\n    }\r\n  }\r\n};", "import React from 'react';\r\nimport { selectWord, getBreaksNeededForEmptyLineBefore, getBreaksNeededForEmptyLineAfter, insertBeforeEachLine } from '../utils/markdownUtils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var makeList = (state, api, insertBefore) => {\r\n  var newSelectionRange = selectWord({\r\n    text: state.text,\r\n    selection: state.selection,\r\n    prefix: state.command.prefix\r\n  });\r\n  var state1 = api.setSelectionRange(newSelectionRange);\r\n  var breaksBeforeCount = getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\r\n  var breaksBefore = Array(breaksBeforeCount + 1).join('\\n');\r\n  var breaksAfterCount = getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\r\n  var breaksAfter = Array(breaksAfterCount + 1).join('\\n');\r\n  var {\r\n    modifiedText,\r\n    insertionLength\r\n  } = insertBeforeEachLine(state1.selectedText, insertBefore);\r\n  if (insertionLength < 0) {\r\n    // Remove\r\n    var selectionStart = state1.selection.start;\r\n    var selectionEnd = state1.selection.end;\r\n    if (state1.selection.start > 0 && state.text.slice(state1.selection.start - 1, state1.selection.start) === '\\n') {\r\n      selectionStart -= 1;\r\n    }\r\n    if (state1.selection.end < state.text.length - 1 && state.text.slice(state1.selection.end, state1.selection.end + 1) === '\\n') {\r\n      selectionEnd += 1;\r\n    }\r\n    api.setSelectionRange({\r\n      start: selectionStart,\r\n      end: selectionEnd\r\n    });\r\n    api.replaceSelection(\"\" + modifiedText);\r\n    api.setSelectionRange({\r\n      start: selectionStart,\r\n      end: selectionStart + modifiedText.length\r\n    });\r\n  } else {\r\n    // Add\r\n    api.replaceSelection(\"\" + breaksBefore + modifiedText + breaksAfter);\r\n    var _selectionStart = state1.selection.start + breaksBeforeCount;\r\n    var _selectionEnd = _selectionStart + modifiedText.length;\r\n    api.setSelectionRange({\r\n      start: _selectionStart,\r\n      end: _selectionEnd\r\n    });\r\n  }\r\n};\r\nexport var unorderedListCommand = {\r\n  name: 'unordered-list',\r\n  keyCommand: 'list',\r\n  shortcuts: 'ctrl+shift+u',\r\n  prefix: '- ',\r\n  buttonProps: {\r\n    'aria-label': 'Add unordered list (ctrl + shift + u)',\r\n    title: 'Add unordered list (ctrl + shift + u)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    \"data-name\": \"unordered-list\",\r\n    width: \"12\",\r\n    height: \"12\",\r\n    viewBox: \"0 0 512 512\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M96 96c0 26.51-21.49 48-48 48S0 122.51 0 96s21.49-48 48-48 48 21.49 48 48zM48 208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm0 160c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm96-236h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    makeList(state, api, '- ');\r\n  }\r\n};\r\nexport var orderedListCommand = {\r\n  name: 'ordered-list',\r\n  keyCommand: 'list',\r\n  shortcuts: 'ctrl+shift+o',\r\n  prefix: '1. ',\r\n  buttonProps: {\r\n    'aria-label': 'Add ordered list (ctrl + shift + o)',\r\n    title: 'Add ordered list (ctrl + shift + o)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    \"data-name\": \"ordered-list\",\r\n    width: \"12\",\r\n    height: \"12\",\r\n    role: \"img\",\r\n    viewBox: \"0 0 512 512\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M3.263 139.527c0-7.477 3.917-11.572 11.573-11.572h15.131V88.078c0-5.163.534-10.503.534-10.503h-.356s-1.779 2.67-2.848 3.738c-4.451 4.273-10.504 4.451-15.666-1.068l-5.518-6.231c-5.342-5.341-4.984-11.216.534-16.379l21.72-19.938C32.815 33.602 36.732 32 42.785 32H54.89c7.656 0 11.749 3.916 11.749 11.572v84.384h15.488c7.655 0 11.572 4.094 11.572 11.572v8.901c0 7.477-3.917 11.572-11.572 11.572H14.836c-7.656 0-11.573-4.095-11.573-11.572v-8.902zM2.211 304.591c0-47.278 50.955-56.383 50.955-69.165 0-7.18-5.954-8.755-9.28-8.755-3.153 0-6.479 1.051-9.455 3.852-5.079 4.903-10.507 7.004-16.111 2.451l-8.579-6.829c-5.779-4.553-7.18-9.805-2.803-15.409C13.592 201.981 26.025 192 47.387 192c19.437 0 44.476 10.506 44.476 39.573 0 38.347-46.753 46.402-48.679 56.909h39.049c7.529 0 11.557 4.027 11.557 11.382v8.755c0 7.354-4.028 11.382-11.557 11.382h-67.94c-7.005 0-12.083-4.028-12.083-11.382v-4.028zM5.654 454.61l5.603-9.28c3.853-6.654 9.105-7.004 15.584-3.152 4.903 2.101 9.63 3.152 14.359 3.152 10.155 0 14.358-3.502 14.358-8.23 0-6.654-5.604-9.106-15.934-9.106h-4.728c-5.954 0-9.28-2.101-12.258-7.88l-1.05-1.926c-2.451-4.728-1.226-9.806 2.801-14.884l5.604-7.004c6.829-8.405 12.257-13.483 12.257-13.483v-.35s-4.203 1.051-12.608 1.051H16.685c-7.53 0-11.383-4.028-11.383-11.382v-8.755c0-7.53 3.853-11.382 11.383-11.382h58.484c7.529 0 11.382 4.027 11.382 11.382v3.327c0 5.778-1.401 9.806-5.079 14.183l-17.509 20.137c19.611 5.078 28.716 20.487 28.716 34.845 0 21.363-14.358 44.126-48.503 44.126-16.636 0-28.192-4.728-35.896-9.455-5.779-4.202-6.304-9.805-2.626-15.934zM144 132h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    makeList(state, api, (item, index) => index + 1 + \". \");\r\n  }\r\n};\r\nexport var checkedListCommand = {\r\n  name: 'checked-list',\r\n  keyCommand: 'list',\r\n  shortcuts: 'ctrl+shift+c',\r\n  prefix: '- [ ] ',\r\n  buttonProps: {\r\n    'aria-label': 'Add checked list (ctrl + shift + c)',\r\n    title: 'Add checked list (ctrl + shift + c)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    \"data-name\": \"checked-list\",\r\n    width: \"12\",\r\n    height: \"12\",\r\n    role: \"img\",\r\n    viewBox: \"0 0 512 512\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M208 132h288c8.8 0 16-7.2 16-16V76c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zM64 368c-26.5 0-48.6 21.5-48.6 48s22.1 48 48.6 48 48-21.5 48-48-21.5-48-48-48zm92.5-299l-72.2 72.2-15.6 15.6c-4.7 4.7-12.9 4.7-17.6 0L3.5 109.4c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.3c4.7-4.7 12.3-4.7 17 0l17 16.5c4.6 4.7 4.6 12.3-.1 17zm0 159.6l-72.2 72.2-15.7 15.7c-4.7 4.7-12.9 4.7-17.6 0L3.5 269c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.7c4.7-4.7 12.3-4.7 17 0l17 17c4.6 4.6 4.6 12.2-.1 16.9z\"\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    makeList(state, api, (item, index) => \"- [ ] \");\r\n  }\r\n};", "import React from 'react';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nexport var codePreview = {\r\n  name: 'preview',\r\n  keyCommand: 'preview',\r\n  value: 'preview',\r\n  shortcuts: 'ctrlcmd+9',\r\n  buttonProps: {\r\n    'aria-label': 'Preview code (ctrl + 9)',\r\n    title: 'Preview code (ctrl + 9)'\r\n  },\r\n  icon: /*#__PURE__*/_jsxs(\"svg\", {\r\n    width: \"12\",\r\n    height: \"12\",\r\n    viewBox: \"0 0 520 520\",\r\n    children: [/*#__PURE__*/_jsx(\"polygon\", {\r\n      fill: \"currentColor\",\r\n      points: \"0 71.293 0 122 38.023 123 38.023 398 0 397 0 449.707 91.023 450.413 91.023 72.293\"\r\n    }), /*#__PURE__*/_jsx(\"polygon\", {\r\n      fill: \"currentColor\",\r\n      points: \"148.023 72.293 520 71.293 520 122 200.023 124 200.023 397 520 396 520 449.707 148.023 450.413\"\r\n    })]\r\n  }),\r\n  execute: (state, api, dispatch, executeCommandState, shortcuts) => {\r\n    api.textArea.focus();\r\n    if (shortcuts && dispatch && executeCommandState) {\r\n      dispatch({\r\n        preview: 'preview'\r\n      });\r\n    }\r\n  }\r\n};\r\nexport var codeEdit = {\r\n  name: 'edit',\r\n  keyCommand: 'preview',\r\n  value: 'edit',\r\n  shortcuts: 'ctrlcmd+7',\r\n  buttonProps: {\r\n    'aria-label': 'Edit code (ctrl + 7)',\r\n    title: 'Edit code (ctrl + 7)'\r\n  },\r\n  icon: /*#__PURE__*/_jsxs(\"svg\", {\r\n    width: \"12\",\r\n    height: \"12\",\r\n    viewBox: \"0 0 520 520\",\r\n    children: [/*#__PURE__*/_jsx(\"polygon\", {\r\n      fill: \"currentColor\",\r\n      points: \"0 71.293 0 122 319 122 319 397 0 397 0 449.707 372 449.413 372 71.293\"\r\n    }), /*#__PURE__*/_jsx(\"polygon\", {\r\n      fill: \"currentColor\",\r\n      points: \"429 71.293 520 71.293 520 122 481 123 481 396 520 396 520 449.707 429 449.413\"\r\n    })]\r\n  }),\r\n  execute: (state, api, dispatch, executeCommandState, shortcuts) => {\r\n    api.textArea.focus();\r\n    if (shortcuts && dispatch && executeCommandState) {\r\n      dispatch({\r\n        preview: 'edit'\r\n      });\r\n    }\r\n  }\r\n};\r\nexport var codeLive = {\r\n  name: 'live',\r\n  keyCommand: 'preview',\r\n  value: 'live',\r\n  shortcuts: 'ctrlcmd+8',\r\n  buttonProps: {\r\n    'aria-label': 'Live code (ctrl + 8)',\r\n    title: 'Live code (ctrl + 8)'\r\n  },\r\n  icon: /*#__PURE__*/_jsxs(\"svg\", {\r\n    width: \"12\",\r\n    height: \"12\",\r\n    viewBox: \"0 0 520 520\",\r\n    children: [/*#__PURE__*/_jsx(\"polygon\", {\r\n      fill: \"currentColor\",\r\n      points: \"0 71.293 0 122 179 122 179 397 0 397 0 449.707 232 449.413 232 71.293\"\r\n    }), /*#__PURE__*/_jsx(\"polygon\", {\r\n      fill: \"currentColor\",\r\n      points: \"289 71.293 520 71.293 520 122 341 123 341 396 520 396 520 449.707 289 449.413\"\r\n    })]\r\n  }),\r\n  execute: (state, api, dispatch, executeCommandState, shortcuts) => {\r\n    api.textArea.focus();\r\n    if (shortcuts && dispatch && executeCommandState) {\r\n      dispatch({\r\n        preview: 'live'\r\n      });\r\n    }\r\n  }\r\n};", "import React from 'react';\r\nimport { getBreaksNeededForEmptyLineBefore, getBreaksNeededForEmptyLineAfter, selectWord, insertBeforeEachLine } from '../utils/markdownUtils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var quote = {\r\n  name: 'quote',\r\n  keyCommand: 'quote',\r\n  shortcuts: 'ctrlcmd+q',\r\n  prefix: '> ',\r\n  buttonProps: {\r\n    'aria-label': 'Insert a quote (ctrl + q)',\r\n    title: 'Insert a quote (ctrl + q)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    width: \"12\",\r\n    height: \"12\",\r\n    viewBox: \"0 0 520 520\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M520,95.75 L520,225.75 C520,364.908906 457.127578,437.050625 325.040469,472.443125 C309.577578,476.586875 294.396016,464.889922 294.396016,448.881641 L294.396016,414.457031 C294.396016,404.242891 300.721328,395.025078 310.328125,391.554687 C377.356328,367.342187 414.375,349.711094 414.375,274.5 L341.25,274.5 C314.325781,274.5 292.5,252.674219 292.5,225.75 L292.5,95.75 C292.5,68.8257812 314.325781,47 341.25,47 L471.25,47 C498.174219,47 520,68.8257812 520,95.75 Z M178.75,47 L48.75,47 C21.8257813,47 0,68.8257812 0,95.75 L0,225.75 C0,252.674219 21.8257813,274.5 48.75,274.5 L121.875,274.5 C121.875,349.711094 84.8563281,367.342187 17.828125,391.554687 C8.22132813,395.025078 1.89601563,404.242891 1.89601563,414.457031 L1.89601563,448.881641 C1.89601563,464.889922 17.0775781,476.586875 32.5404687,472.443125 C164.627578,437.050625 227.5,364.908906 227.5,225.75 L227.5,95.75 C227.5,68.8257812 205.674219,47 178.75,47 Z\"\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    var newSelectionRange = selectWord({\r\n      text: state.text,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix\r\n    });\r\n    var state1 = api.setSelectionRange(newSelectionRange);\r\n    var breaksBeforeCount = getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\r\n    var breaksBefore = Array(breaksBeforeCount + 1).join('\\n');\r\n    var breaksAfterCount = getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\r\n    var breaksAfter = Array(breaksAfterCount + 1).join('\\n');\r\n    var modifiedText = insertBeforeEachLine(state1.selectedText, state.command.prefix);\r\n    api.replaceSelection(\"\" + breaksBefore + modifiedText.modifiedText + breaksAfter);\r\n    var selectionStart = state1.selection.start + breaksBeforeCount;\r\n    var selectionEnd = selectionStart + modifiedText.modifiedText.length;\r\n    api.setSelectionRange({\r\n      start: selectionStart,\r\n      end: selectionEnd\r\n    });\r\n  }\r\n};", "import React from 'react';\r\nimport { selectWord, executeCommand } from '../utils/markdownUtils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var strikethrough = {\r\n  name: 'strikethrough',\r\n  keyCommand: 'strikethrough',\r\n  shortcuts: 'ctrl+shift+x',\r\n  buttonProps: {\r\n    'aria-label': 'Add strikethrough text (ctrl + shift + x)',\r\n    title: 'Add strikethrough text (ctrl + shift + x)'\r\n  },\r\n  prefix: '~~',\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    \"data-name\": \"strikethrough\",\r\n    width: \"12\",\r\n    height: \"12\",\r\n    role: \"img\",\r\n    viewBox: \"0 0 512 512\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M496 288H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h480c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16zm-214.666 16c27.258 12.937 46.524 28.683 46.524 56.243 0 33.108-28.977 53.676-75.621 53.676-32.325 0-76.874-12.08-76.874-44.271V368c0-8.837-7.164-16-16-16H113.75c-8.836 0-16 7.163-16 16v19.204c0 66.845 77.717 101.82 154.487 101.82 88.578 0 162.013-45.438 162.013-134.424 0-19.815-3.618-36.417-10.143-50.6H281.334zm-30.952-96c-32.422-13.505-56.836-28.946-56.836-59.683 0-33.92 30.901-47.406 64.962-47.406 42.647 0 64.962 16.593 64.962 32.985V136c0 8.837 7.164 16 16 16h45.613c8.836 0 16-7.163 16-16v-30.318c0-52.438-71.725-79.875-142.575-79.875-85.203 0-150.726 40.972-150.726 125.646 0 22.71 4.665 41.176 12.777 56.547h129.823z\"\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    var newSelectionRange = selectWord({\r\n      text: state.text,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix\r\n    });\r\n    var state1 = api.setSelectionRange(newSelectionRange);\r\n    executeCommand({\r\n      api,\r\n      selectedText: state1.selectedText,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix\r\n    });\r\n  }\r\n};", "import _extends from \"@babel/runtime/helpers/extends\";\r\nimport React from 'react';\r\nimport { title1 } from './title1';\r\nimport { selectLine, executeCommand } from '../utils/markdownUtils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport function titleExecute(_ref) {\r\n  var {\r\n    state,\r\n    api,\r\n    prefix,\r\n    suffix = prefix\r\n  } = _ref;\r\n  var newSelectionRange = selectLine({\r\n    text: state.text,\r\n    selection: state.selection\r\n  });\r\n  var state1 = api.setSelectionRange(newSelectionRange);\r\n  executeCommand({\r\n    api,\r\n    selectedText: state1.selectedText,\r\n    selection: state.selection,\r\n    prefix,\r\n    suffix\r\n  });\r\n}\r\nexport var title = _extends({}, title1, {\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    width: \"12\",\r\n    height: \"12\",\r\n    viewBox: \"0 0 520 520\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M15.7083333,468 C7.03242448,468 0,462.030833 0,454.666667 L0,421.333333 C0,413.969167 7.03242448,408 15.7083333,408 L361.291667,408 C369.967576,408 377,413.969167 377,421.333333 L377,454.666667 C377,462.030833 369.967576,468 361.291667,468 L15.7083333,468 Z M21.6666667,366 C9.69989583,366 0,359.831861 0,352.222222 L0,317.777778 C0,310.168139 9.69989583,304 21.6666667,304 L498.333333,304 C510.300104,304 520,310.168139 520,317.777778 L520,352.222222 C520,359.831861 510.300104,366 498.333333,366 L21.6666667,366 Z M136.835938,64 L136.835937,126 L107.25,126 L107.25,251 L40.75,251 L40.75,126 L-5.68434189e-14,126 L-5.68434189e-14,64 L136.835938,64 Z M212,64 L212,251 L161.648438,251 L161.648438,64 L212,64 Z M378,64 L378,126 L343.25,126 L343.25,251 L281.75,251 L281.75,126 L238,126 L238,64 L378,64 Z M449.047619,189.550781 L520,189.550781 L520,251 L405,251 L405,64 L449.047619,64 L449.047619,189.550781 Z\"\r\n    })\r\n  })\r\n});", "import React from 'react';\r\nimport { titleExecute } from '../commands/title';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var title1 = {\r\n  name: 'title1',\r\n  keyCommand: 'title1',\r\n  shortcuts: 'ctrlcmd+1',\r\n  prefix: '# ',\r\n  suffix: '',\r\n  buttonProps: {\r\n    'aria-label': 'Insert title1 (ctrl + 1)',\r\n    title: 'Insert title1 (ctrl + 1)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"div\", {\r\n    style: {\r\n      fontSize: 18,\r\n      textAlign: 'left'\r\n    },\r\n    children: \"Title 1\"\r\n  }),\r\n  execute: (state, api) => {\r\n    titleExecute({\r\n      state,\r\n      api,\r\n      prefix: state.command.prefix,\r\n      suffix: state.command.suffix\r\n    });\r\n  }\r\n};", "import React from 'react';\r\nimport { titleExecute } from '../commands/title';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var title2 = {\r\n  name: 'title2',\r\n  keyCommand: 'title2',\r\n  shortcuts: 'ctrlcmd+2',\r\n  prefix: '## ',\r\n  suffix: '',\r\n  buttonProps: {\r\n    'aria-label': 'Insert title2 (ctrl + 2)',\r\n    title: 'Insert title2 (ctrl + 2)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"div\", {\r\n    style: {\r\n      fontSize: 16,\r\n      textAlign: 'left'\r\n    },\r\n    children: \"Title 2\"\r\n  }),\r\n  execute: (state, api) => {\r\n    titleExecute({\r\n      state,\r\n      api,\r\n      prefix: state.command.prefix,\r\n      suffix: state.command.suffix\r\n    });\r\n  }\r\n};", "import React from 'react';\r\nimport { titleExecute } from '../commands/title';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var title3 = {\r\n  name: 'title3',\r\n  keyCommand: 'title3',\r\n  shortcuts: 'ctrlcmd+3',\r\n  prefix: '### ',\r\n  suffix: '',\r\n  buttonProps: {\r\n    'aria-label': 'Insert title3 (ctrl + 3)',\r\n    title: 'Insert title3 (ctrl + 3)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"div\", {\r\n    style: {\r\n      fontSize: 15,\r\n      textAlign: 'left'\r\n    },\r\n    children: \"Title 3\"\r\n  }),\r\n  execute: (state, api) => {\r\n    titleExecute({\r\n      state,\r\n      api,\r\n      prefix: state.command.prefix,\r\n      suffix: state.command.suffix\r\n    });\r\n  }\r\n};", "import React from 'react';\r\nimport { titleExecute } from '../commands/title';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var title4 = {\r\n  name: 'title4',\r\n  keyCommand: 'title4',\r\n  shortcuts: 'ctrlcmd+4',\r\n  prefix: '#### ',\r\n  suffix: '',\r\n  buttonProps: {\r\n    'aria-label': 'Insert title4 (ctrl + 4)',\r\n    title: 'Insert title4 (ctrl + 4)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"div\", {\r\n    style: {\r\n      fontSize: 14,\r\n      textAlign: 'left'\r\n    },\r\n    children: \"Title 4\"\r\n  }),\r\n  execute: (state, api) => {\r\n    titleExecute({\r\n      state,\r\n      api,\r\n      prefix: state.command.prefix,\r\n      suffix: state.command.suffix\r\n    });\r\n  }\r\n};", "import React from 'react';\r\nimport { titleExecute } from '../commands/title';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var title5 = {\r\n  name: 'title5',\r\n  keyCommand: 'title5',\r\n  shortcuts: 'ctrlcmd+5',\r\n  prefix: '##### ',\r\n  suffix: '',\r\n  buttonProps: {\r\n    'aria-label': 'Insert title5 (ctrl + 5)',\r\n    title: 'Insert title5 (ctrl + 5)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"div\", {\r\n    style: {\r\n      fontSize: 12,\r\n      textAlign: 'left'\r\n    },\r\n    children: \"Title 5\"\r\n  }),\r\n  execute: (state, api) => {\r\n    titleExecute({\r\n      state,\r\n      api,\r\n      prefix: state.command.prefix,\r\n      suffix: state.command.suffix\r\n    });\r\n  }\r\n};", "import React from 'react';\r\nimport { titleExecute } from '../commands/title';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var title6 = {\r\n  name: 'title6',\r\n  keyCommand: 'title6',\r\n  shortcuts: 'ctrlcmd+6',\r\n  prefix: '###### ',\r\n  suffix: '',\r\n  buttonProps: {\r\n    'aria-label': 'Insert title6 (ctrl + 6)',\r\n    title: 'Insert title6 (ctrl + 6)'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"div\", {\r\n    style: {\r\n      fontSize: 12,\r\n      textAlign: 'left'\r\n    },\r\n    children: \"Title 6\"\r\n  }),\r\n  execute: (state, api) => {\r\n    titleExecute({\r\n      state,\r\n      api,\r\n      prefix: state.command.prefix,\r\n      suffix: state.command.suffix\r\n    });\r\n  }\r\n};", "import React from 'react';\r\nimport { selectWord, executeCommand } from '../utils/markdownUtils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var table = {\r\n  name: 'table',\r\n  keyCommand: 'table',\r\n  prefix: '\\n| Header | Header |\\n|--------|--------|\\n| Cell | Cell |\\n| Cell | Cell |\\n| Cell | Cell |\\n\\n',\r\n  suffix: '',\r\n  buttonProps: {\r\n    'aria-label': 'Add table',\r\n    title: 'Add table'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    role: \"img\",\r\n    width: \"12\",\r\n    height: \"12\",\r\n    viewBox: \"0 0 512 512\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M64 256V160H224v96H64zm0 64H224v96H64V320zm224 96V320H448v96H288zM448 256H288V160H448v96zM64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64z\"\r\n      //Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    var newSelectionRange = selectWord({\r\n      text: state.text,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix,\r\n      suffix: state.command.suffix\r\n    });\r\n    var state1 = api.setSelectionRange(newSelectionRange);\r\n    if (state1.selectedText.length >= state.command.prefix.length + state.command.suffix.length && state1.selectedText.startsWith(state.command.prefix)) {\r\n      // Remove\r\n      executeCommand({\r\n        api,\r\n        selectedText: state1.selectedText,\r\n        selection: state.selection,\r\n        prefix: state.command.prefix,\r\n        suffix: state.command.suffix\r\n      });\r\n    } else {\r\n      // Add\r\n      state1 = api.setSelectionRange({\r\n        start: state.selection.start,\r\n        end: state.selection.start\r\n      });\r\n      executeCommand({\r\n        api,\r\n        selectedText: state1.selectedText,\r\n        selection: state.selection,\r\n        prefix: state.command.prefix,\r\n        suffix: state.command.suffix\r\n      });\r\n    }\r\n  }\r\n};", "import React from 'react';\r\nimport { selectWord, executeCommand } from '../utils/markdownUtils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var issue = {\r\n  name: 'issue',\r\n  keyCommand: 'issue',\r\n  prefix: '#',\r\n  suffix: '',\r\n  buttonProps: {\r\n    'aria-label': 'Add issue',\r\n    title: 'Add issue'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    role: \"img\",\r\n    width: \"12\",\r\n    height: \"12\",\r\n    viewBox: \"0 0 448 512\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M181.3 32.4c17.4 2.9 29.2 19.4 26.3 36.8L197.8 128h95.1l11.5-69.3c2.9-17.4 19.4-29.2 36.8-26.3s29.2 19.4 26.3 36.8L357.8 128H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H347.1L325.8 320H384c17.7 0 32 14.3 32 32s-14.3 32-32 32H315.1l-11.5 69.3c-2.9 17.4-19.4 29.2-36.826.3s-29.2-19.4-26.3-36.8l9.8-58.7H155.1l-11.5 69.3c-2.9 17.4-19.4 29.2-36.8 26.3s-29.2-19.4-26.3-36.8L90.2 384H32c-17.7 0-32-14.3-32-32s14.3-32 32-32h68.9l21.3-128H64c-17.7 0-32-14.3-32-32s14.3-32 32-32h68.9l11.5-69.3c2.9-17.4 19.4-29.2 36.8-26.3zM187.1 192L165.8320h95.1l21.3-128H187.1z\"\r\n      //Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com\r\n    })\r\n  }),\r\n  execute: (state, api) => {\r\n    var newSelectionRange = selectWord({\r\n      text: state.text,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix,\r\n      suffix: state.command.suffix\r\n    });\r\n    var state1 = api.setSelectionRange(newSelectionRange);\r\n    executeCommand({\r\n      api,\r\n      selectedText: state1.selectedText,\r\n      selection: state.selection,\r\n      prefix: state.command.prefix,\r\n      suffix: state.command.suffix\r\n    });\r\n  }\r\n};", "import React from 'react';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport var help = {\r\n  name: 'help',\r\n  keyCommand: 'help',\r\n  buttonProps: {\r\n    'aria-label': 'Open help',\r\n    title: 'Open help'\r\n  },\r\n  icon: /*#__PURE__*/_jsx(\"svg\", {\r\n    viewBox: \"0 0 16 16\",\r\n    width: \"12px\",\r\n    height: \"12px\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      d: \"M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8Zm.9 13H7v-1.8h1.9V13Zm-.1-3.6v.5H7.1v-.6c.2-2.1 2-1.9 1.9-3.2.1-.7-.3-1.1-1-1.1-.8 0-1.2.7-1.2 1.6H5c0-1.7 1.2-3 2.9-3 2.3 0 3 1.4 3 2.3.1 2.3-1.9 2-2.1 3.5Z\",\r\n      fill: \"currentColor\"\r\n    })\r\n  }),\r\n  execute: () => {\r\n    window.open('https://www.markdownguide.org/basic-syntax/', '_blank', 'noreferrer');\r\n  }\r\n};", "import { insertTextAtPosition } from '../../utils/InsertTextAtPosition';\r\nimport { insertBeforeEachLine, selectLine } from '../../utils/markdownUtils';\r\nimport { TextAreaTextApi } from '../../commands';\r\n\r\n/**\r\n * - `13` - `Enter`\r\n * - `9` - `Tab`\r\n */\r\nfunction stopPropagation(e) {\r\n  e.stopPropagation();\r\n  e.preventDefault();\r\n}\r\nfunction handleLineMove(e, direction) {\r\n  stopPropagation(e);\r\n  var target = e.target;\r\n  var textArea = new TextAreaTextApi(target);\r\n  var selection = {\r\n    start: target.selectionStart,\r\n    end: target.selectionEnd\r\n  };\r\n  selection = selectLine({\r\n    text: target.value,\r\n    selection\r\n  });\r\n  if (direction < 0 && selection.start <= 0 || direction > 0 && selection.end >= target.value.length) {\r\n    return;\r\n  }\r\n  var blockText = target.value.slice(selection.start, selection.end);\r\n  if (direction < 0) {\r\n    var prevLineSelection = selectLine({\r\n      text: target.value,\r\n      selection: {\r\n        start: selection.start - 1,\r\n        end: selection.start - 1\r\n      }\r\n    });\r\n    var prevLineText = target.value.slice(prevLineSelection.start, prevLineSelection.end);\r\n    textArea.setSelectionRange({\r\n      start: prevLineSelection.start,\r\n      end: selection.end\r\n    });\r\n    insertTextAtPosition(target, blockText + \"\\n\" + prevLineText);\r\n    textArea.setSelectionRange({\r\n      start: prevLineSelection.start,\r\n      end: prevLineSelection.start + blockText.length\r\n    });\r\n  } else {\r\n    var nextLineSelection = selectLine({\r\n      text: target.value,\r\n      selection: {\r\n        start: selection.end + 1,\r\n        end: selection.end + 1\r\n      }\r\n    });\r\n    var nextLineText = target.value.slice(nextLineSelection.start, nextLineSelection.end);\r\n    textArea.setSelectionRange({\r\n      start: selection.start,\r\n      end: nextLineSelection.end\r\n    });\r\n    insertTextAtPosition(target, nextLineText + \"\\n\" + blockText);\r\n    textArea.setSelectionRange({\r\n      start: nextLineSelection.end - blockText.length,\r\n      end: nextLineSelection.end\r\n    });\r\n  }\r\n}\r\nexport default function handleKeyDown(e, tabSize, defaultTabEnable) {\r\n  if (tabSize === void 0) {\r\n    tabSize = 2;\r\n  }\r\n  if (defaultTabEnable === void 0) {\r\n    defaultTabEnable = false;\r\n  }\r\n  var target = e.target;\r\n  var starVal = target.value.substr(0, target.selectionStart);\r\n  var valArr = starVal.split('\\n');\r\n  var currentLineStr = valArr[valArr.length - 1];\r\n  var textArea = new TextAreaTextApi(target);\r\n\r\n  /**\r\n   * `9` - `Tab`\r\n   */\r\n  if (!defaultTabEnable && e.code && e.code.toLowerCase() === 'tab') {\r\n    stopPropagation(e);\r\n    var space = new Array(tabSize + 1).join('  ');\r\n    if (target.selectionStart !== target.selectionEnd) {\r\n      var _star = target.value.substring(0, target.selectionStart).split('\\n');\r\n      var _end = target.value.substring(0, target.selectionEnd).split('\\n');\r\n      var modifiedTextLine = [];\r\n      _end.forEach((item, idx) => {\r\n        if (item !== _star[idx]) {\r\n          modifiedTextLine.push(item);\r\n        }\r\n      });\r\n      var modifiedText = modifiedTextLine.join('\\n');\r\n      var oldSelectText = target.value.substring(target.selectionStart, target.selectionEnd);\r\n      var newStarNum = target.value.substring(0, target.selectionStart).length;\r\n      textArea.setSelectionRange({\r\n        start: target.value.indexOf(modifiedText),\r\n        end: target.selectionEnd\r\n      });\r\n      var modifiedTextObj = insertBeforeEachLine(modifiedText, e.shiftKey ? '' : space);\r\n      var text = modifiedTextObj.modifiedText;\r\n      if (e.shiftKey) {\r\n        text = text.split('\\n').map(item => item.replace(new RegExp(\"^\" + space), '')).join('\\n');\r\n      }\r\n      textArea.replaceSelection(text);\r\n      var startTabSize = e.shiftKey ? -tabSize : tabSize;\r\n      var endTabSize = e.shiftKey ? -modifiedTextLine.length * tabSize : modifiedTextLine.length * tabSize;\r\n      textArea.setSelectionRange({\r\n        start: newStarNum + startTabSize,\r\n        end: newStarNum + oldSelectText.length + endTabSize\r\n      });\r\n    } else {\r\n      return insertTextAtPosition(target, space);\r\n    }\r\n  } else if (e.keyCode === 13 && e.code.toLowerCase() === 'enter' && (/^(-|\\*)\\s/.test(currentLineStr) || /^\\d+.\\s/.test(currentLineStr)) && !e.shiftKey) {\r\n    /**\r\n     * `13` - `Enter`\r\n     */\r\n    stopPropagation(e);\r\n    var startStr = '\\n- ';\r\n    if (currentLineStr.startsWith('*')) {\r\n      startStr = '\\n* ';\r\n    }\r\n    if (currentLineStr.startsWith('- [ ]') || currentLineStr.startsWith('- [X]') || currentLineStr.startsWith('- [x]')) {\r\n      startStr = '\\n- [ ] ';\r\n    }\r\n    if (/^\\d+.\\s/.test(currentLineStr)) {\r\n      startStr = \"\\n\" + (parseInt(currentLineStr) + 1) + \". \";\r\n    }\r\n    return insertTextAtPosition(target, startStr);\r\n  } else if (e.code && e.code.toLowerCase() === 'keyd' && e.ctrlKey) {\r\n    // Duplicate lines\r\n    stopPropagation(e);\r\n    var selection = {\r\n      start: target.selectionStart,\r\n      end: target.selectionEnd\r\n    };\r\n    var savedSelection = selection;\r\n    selection = selectLine({\r\n      text: target.value,\r\n      selection\r\n    });\r\n    var textToDuplicate = target.value.slice(selection.start, selection.end);\r\n    textArea.setSelectionRange({\r\n      start: selection.end,\r\n      end: selection.end\r\n    });\r\n    insertTextAtPosition(target, \"\\n\" + textToDuplicate);\r\n    textArea.setSelectionRange({\r\n      start: savedSelection.start,\r\n      end: savedSelection.end\r\n    });\r\n  } else if (e.code && e.code.toLowerCase() === 'arrowup' && e.altKey) {\r\n    handleLineMove(e, -1);\r\n  } else if (e.code && e.code.toLowerCase() === 'arrowdown' && e.altKey) {\r\n    handleLineMove(e, 1);\r\n  }\r\n}", "import _extends from \"@babel/runtime/helpers/extends\";\r\nimport React, { Fragment, useContext, useEffect, useRef } from 'react';\r\nimport { EditorContext } from '../../Context';\r\nimport Child from './Child';\r\nimport \"./index.css\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nexport function ToolbarItems(props) {\r\n  var {\r\n    prefixCls,\r\n    overflow\r\n  } = props;\r\n  var {\r\n    fullscreen,\r\n    preview,\r\n    barPopup = {},\r\n    components,\r\n    commandOrchestrator,\r\n    dispatch\r\n  } = useContext(EditorContext);\r\n  var originalOverflow = useRef('');\r\n  function handleClick(command, name) {\r\n    if (!dispatch) return;\r\n    var state = {\r\n      barPopup: _extends({}, barPopup)\r\n    };\r\n    if (command.keyCommand === 'preview') {\r\n      state.preview = command.value;\r\n    }\r\n    if (command.keyCommand === 'fullscreen') {\r\n      state.fullscreen = !fullscreen;\r\n    }\r\n    if (props.commands && command.keyCommand === 'group') {\r\n      props.commands.forEach(item => {\r\n        if (name === item.groupName) {\r\n          state.barPopup[name] = true;\r\n        } else if (item.keyCommand) {\r\n          state.barPopup[item.groupName] = false;\r\n        }\r\n      });\r\n    } else if (name || command.parent) {\r\n      Object.keys(state.barPopup || {}).forEach(keyName => {\r\n        state.barPopup[keyName] = false;\r\n      });\r\n    }\r\n    if (Object.keys(state).length) {\r\n      dispatch(_extends({}, state));\r\n    }\r\n    commandOrchestrator && commandOrchestrator.executeCommand(command);\r\n  }\r\n  useEffect(() => {\r\n    if (document && overflow) {\r\n      if (fullscreen) {\r\n        // prevent scroll on fullscreen\r\n        document.body.style.overflow = 'hidden';\r\n      } else {\r\n        // get the original overflow only the first time\r\n        if (!originalOverflow.current) {\r\n          originalOverflow.current = window.getComputedStyle(document.body, null).overflow;\r\n        }\r\n        // reset to the original overflow\r\n        document.body.style.overflow = originalOverflow.current;\r\n      }\r\n    }\r\n  }, [fullscreen, originalOverflow, overflow]);\r\n  return /*#__PURE__*/_jsx(\"ul\", {\r\n    children: (props.commands || []).map((item, idx) => {\r\n      if (item.keyCommand === 'divider') {\r\n        return /*#__PURE__*/_jsx(\"li\", _extends({}, item.liProps, {\r\n          className: prefixCls + \"-toolbar-divider\"\r\n        }), idx);\r\n      }\r\n      if (!item.keyCommand) return /*#__PURE__*/_jsx(Fragment, {}, idx);\r\n      var activeBtn = fullscreen && item.keyCommand === 'fullscreen' || item.keyCommand === 'preview' && preview === item.value;\r\n      var childNode = item.children && typeof item.children === 'function' ? item.children({\r\n        getState: () => commandOrchestrator.getState(),\r\n        textApi: commandOrchestrator ? commandOrchestrator.textApi : undefined,\r\n        close: () => handleClick({}, item.groupName),\r\n        execute: () => handleClick({\r\n          execute: item.execute\r\n        }),\r\n        dispatch\r\n      }) : undefined;\r\n      var disabled = barPopup && preview && preview === 'preview' && !/(preview|fullscreen)/.test(item.keyCommand);\r\n      var render = (components == null ? void 0 : components.toolbar) || item.render;\r\n      var com = render && typeof render === 'function' ? render(item, !!disabled, handleClick, idx) : null;\r\n      return /*#__PURE__*/_jsxs(\"li\", _extends({}, item.liProps, {\r\n        className: activeBtn ? \"active\" : '',\r\n        children: [com && /*#__PURE__*/React.isValidElement(com) && com, !com && !item.buttonProps && item.icon, !com && item.buttonProps && /*#__PURE__*/React.createElement('button', _extends({\r\n          type: 'button',\r\n          key: idx,\r\n          disabled,\r\n          'data-name': item.name\r\n        }, item.buttonProps, {\r\n          onClick: evn => {\r\n            evn.stopPropagation();\r\n            handleClick(item, item.groupName);\r\n          }\r\n        }), item.icon), item.children && /*#__PURE__*/_jsx(Child, {\r\n          overflow: overflow,\r\n          groupName: item.groupName,\r\n          prefixCls: prefixCls,\r\n          children: childNode,\r\n          commands: Array.isArray(item.children) ? item.children : undefined\r\n        })]\r\n      }), idx);\r\n    })\r\n  });\r\n}\r\nexport default function Toolbar(props) {\r\n  if (props === void 0) {\r\n    props = {};\r\n  }\r\n  var {\r\n    prefixCls,\r\n    isChild,\r\n    className\r\n  } = props;\r\n  var {\r\n    commands,\r\n    extraCommands\r\n  } = useContext(EditorContext);\r\n  return /*#__PURE__*/_jsxs(\"div\", {\r\n    className: prefixCls + \"-toolbar \" + className,\r\n    children: [/*#__PURE__*/_jsx(ToolbarItems, _extends({}, props, {\r\n      commands: props.commands || commands || []\r\n    })), !isChild && /*#__PURE__*/_jsx(ToolbarItems, _extends({}, props, {\r\n      commands: extraCommands || []\r\n    }))]\r\n  });\r\n}\r\nexport function ToolbarVisibility(props) {\r\n  var {\r\n    hideToolbar,\r\n    toolbarBottom,\r\n    placement,\r\n    overflow,\r\n    prefixCls\r\n  } = props;\r\n  if (hideToolbar || placement === 'bottom' && !toolbarBottom || placement === 'top' && toolbarBottom) {\r\n    return null;\r\n  }\r\n  var cls = toolbarBottom ? 'bottom' : '';\r\n  return /*#__PURE__*/_jsx(Toolbar, {\r\n    prefixCls: prefixCls,\r\n    overflow: overflow,\r\n    className: cls\r\n  });\r\n}", "import _extends from \"@babel/runtime/helpers/extends\";\r\nimport React, { useContext, useMemo } from 'react';\r\nimport \"./Child.css\";\r\nimport Toolbar from './';\r\nimport { EditorContext } from '../../Context';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport default function Child(props) {\r\n  var {\r\n    prefixCls,\r\n    groupName,\r\n    commands,\r\n    children\r\n  } = props || {};\r\n  var {\r\n    barPopup = {}\r\n  } = useContext(EditorContext);\r\n  return useMemo(() => /*#__PURE__*/_jsx(\"div\", {\r\n    className: prefixCls + \"-toolbar-child \" + (groupName && barPopup[groupName] ? 'active' : ''),\r\n    onClick: e => e.stopPropagation(),\r\n    children: Array.isArray(commands) ? /*#__PURE__*/_jsx(Toolbar, _extends({\r\n      commands: commands\r\n    }, props, {\r\n      isChild: true\r\n    })) : children\r\n  }),\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  [commands, barPopup, groupName, prefixCls]);\r\n}", "import React, { useEffect, useMemo, useRef } from 'react';\r\nimport \"./index.css\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nvar DragBar = props => {\r\n  var {\r\n    prefixCls,\r\n    onChange\r\n  } = props || {};\r\n  var $dom = useRef(null);\r\n  var dragRef = useRef();\r\n  var heightRef = useRef(props.height);\r\n  useEffect(() => {\r\n    if (heightRef.current !== props.height) {\r\n      heightRef.current = props.height;\r\n    }\r\n  }, [props.height]);\r\n  function handleMouseMove(event) {\r\n    if (dragRef.current) {\r\n      var _changedTouches$;\r\n      var clientY = event.clientY || ((_changedTouches$ = event.changedTouches[0]) == null ? void 0 : _changedTouches$.clientY);\r\n      var newHeight = dragRef.current.height + clientY - dragRef.current.dragY;\r\n      if (newHeight >= props.minHeight && newHeight <= props.maxHeight) {\r\n        onChange && onChange(dragRef.current.height + (clientY - dragRef.current.dragY));\r\n      }\r\n    }\r\n  }\r\n  function handleMouseUp() {\r\n    var _$dom$current, _$dom$current2;\r\n    dragRef.current = undefined;\r\n    document.removeEventListener('mousemove', handleMouseMove);\r\n    document.removeEventListener('mouseup', handleMouseUp);\r\n    (_$dom$current = $dom.current) == null || _$dom$current.removeEventListener('touchmove', handleMouseMove);\r\n    (_$dom$current2 = $dom.current) == null || _$dom$current2.removeEventListener('touchend', handleMouseUp);\r\n  }\r\n  function handleMouseDown(event) {\r\n    var _changedTouches$2, _$dom$current3, _$dom$current4;\r\n    event.preventDefault();\r\n    var clientY = event.clientY || ((_changedTouches$2 = event.changedTouches[0]) == null ? void 0 : _changedTouches$2.clientY);\r\n    dragRef.current = {\r\n      height: heightRef.current,\r\n      dragY: clientY\r\n    };\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n    (_$dom$current3 = $dom.current) == null || _$dom$current3.addEventListener('touchmove', handleMouseMove, {\r\n      passive: false\r\n    });\r\n    (_$dom$current4 = $dom.current) == null || _$dom$current4.addEventListener('touchend', handleMouseUp, {\r\n      passive: false\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    if (document) {\r\n      var _$dom$current5, _$dom$current6;\r\n      (_$dom$current5 = $dom.current) == null || _$dom$current5.addEventListener('touchstart', handleMouseDown, {\r\n        passive: false\r\n      });\r\n      (_$dom$current6 = $dom.current) == null || _$dom$current6.addEventListener('mousedown', handleMouseDown);\r\n    }\r\n    return () => {\r\n      if (document) {\r\n        var _$dom$current7;\r\n        (_$dom$current7 = $dom.current) == null || _$dom$current7.removeEventListener('touchstart', handleMouseDown);\r\n        document.removeEventListener('mousemove', handleMouseMove);\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  var svg = useMemo(() => /*#__PURE__*/_jsx(\"svg\", {\r\n    viewBox: \"0 0 512 512\",\r\n    height: \"100%\",\r\n    children: /*#__PURE__*/_jsx(\"path\", {\r\n      fill: \"currentColor\",\r\n      d: \"M304 256c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm120-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-336 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\"\r\n    })\r\n  }), []);\r\n  return /*#__PURE__*/_jsx(\"div\", {\r\n    className: prefixCls + \"-bar\",\r\n    ref: $dom,\r\n    children: svg\r\n  });\r\n};\r\nexport default DragBar;", "import MDEditor from './Editor';\r\nimport * as commands from './commands';\r\nimport * as MarkdownUtil from './utils/markdownUtils';\r\nimport \"./index.css\";\r\nexport * from './commands';\r\nexport * from './commands/group';\r\nexport * from './utils/markdownUtils';\r\nexport * from './utils/InsertTextAtPosition';\r\nexport * from './Editor';\r\nexport * from './Context';\r\nexport * from './Types';\r\nexport { MarkdownUtil, commands };\r\nexport default MDEditor;"],
  "mappings": "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",
  "names": ["str", "_", "n", "r", "r", "n", "import_react", "import_react", "test", "is", "next", "key", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "name", "Prism", "lang", "Prism", "markup", "Prism", "name", "alias", "Prism", "Prism", "Prism", "className", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "properties", "Prism", "l", "codeBlock", "lang", "alias", "id", "fromCodePoint", "html", "text", "code", "Prism", "Prism", "Prism", "j", "s", "Prism", "comment", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "own", "h", "properties", "key", "name", "parse", "code", "code", "code", "point", "following", "characters", "test", "diff", "reason", "next", "code", "position", "clone", "id", "key", "v", "lang", "root", "text", "rest", "name", "alias", "j", "p", "head", "next", "count", "own", "stringify", "name", "alias", "key", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "className", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "lang", "Prism", "attributes", "asciidoc", "l", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "properties", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "comment", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "className", "Prism", "Prism", "Prism", "Prism", "markupTemplating", "Prism", "Prism", "option", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "factor", "Prism", "Prism", "Prism", "Prism", "Prism", "ftl", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "i", "alias", "Prism", "Prism", "textile", "Prism", "l", "filter", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "name", "contentType", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "lang", "l", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "jq", "Prism", "code", "s", "l", "alias", "Prism", "javascript", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "key", "Prism", "lilypond", "Prism", "Prism", "name", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "attributes", "Prism", "Prism", "Prism", "Prism", "parser", "Prism", "Prism", "pascaligo", "key", "p", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "powershell", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "l", "filter", "Prism", "Prism", "lang", "alias", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "javascript", "Prism", "typescript", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "comment", "name", "Prism", "comment", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "comment", "Prism", "className", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "key", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "velocity", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "id", "key", "Prism", "Prism", "Prism", "Prism", "Prism", "Prism", "lang", "Prism", "Prism", "Prism", "Prism", "rehypePrismGenerator", "refractor", "options", "defaultLanguage", "registered", "Error", "tree", "visit", "visitor", "node", "index", "parent", "_node$data", "_node$properties", "tagName", "meta", "data", "properties", "metastring", "className", "Array", "isArray", "refractorRoot", "startLineNum", "lang", "_step", "_iterator", "_createForOfIteratorHelperLoose", "done", "classListItem", "value", "slice", "toLowerCase", "push", "_lang", "rootLang", "includes", "split", "highlight", "toString", "concat", "err", "ignoreMissing", "test", "message", "children", "addNodePosition", "ast", "reduce", "result", "type", "numLines", "match", "length", "position", "start", "line", "column", "end", "_step2", "lines", "_iterator2", "entries", "_step2$value", "i", "Object", "prototype", "hasOwnProperty", "call", "initialLineNum", "_step3", "shouldHighlightLine", "RE", "parsedMeta", "map", "str", "trim", "join", "strlineNumbers", "exec", "lineNumbers", "rangeParser", "startingLineNumber", "_wrapRegExp", "_RE$exec", "Number", "groups", "codeLineArray", "number", "a", "falseShowLineNumbersStr", "_loop", "_lang2", "_lang3", "_step3$value", "treeExtract", "filter", "showLineNumbers", "some", "substring", "_iterator3", "pop", "rehypePrismCommon", "refractorCommon", "rehypePrismAll", "refractorAll", "type", "_a", "s", "n", "p", "base", "_a", "key", "c", "_a", "l", "is", "next", "position", "count", "quote", "parseSelector", "a", "_b", "className", "__assign", "s", "n", "p", "_a", "parse", "lang", "dir", "element", "key", "stringify", "element", "element", "element", "filter", "matches", "next", "name", "own", "name", "whitespace", "parse", "a", "a", "boolbase", "parse", "nthCheck", "_", "element", "parse", "parent", "_2", "element", "parent", "empty", "one", "all", "name", "nest", "parent", "count", "d", "parse", "code", "parent", "a", "v", "element", "properties", "parent", "firstChild", "lib_default", "search", "parseSelector", "buttonTypes", "own", "createAdjustMap", "h", "properties", "parseSelector", "isProperties", "key", "addProperty", "addChild", "name", "parse", "parsePrimitive", "style", "value", "svgCaseSensitiveTagNames", "h", "s", "svgCaseSensitiveTagNames", "point", "own", "one", "all", "attribute", "name", "s", "h", "startTag", "endTag", "position", "location", "key", "opening", "closing", "point", "own", "one", "root", "element", "all", "patch", "result", "stringify", "attribute", "position", "CODE_POINTS", "ERR", "code", "count", "TokenType", "c", "c", "_a", "CharCodes", "BinTrieFlags", "code", "EntityDecoderState", "DecodingMode", "errors", "base", "_a", "NS", "ATTRS", "DOCUMENT_MODE", "TAG_NAMES", "TAG_ID", "_a", "State", "isAsciiAlphaNumeric", "isEntityInAttributeInvalidEnd", "code", "_a", "count", "location", "document", "element", "EntryType", "element", "entry", "document", "name", "text", "j", "element", "location", "name", "InsertionMode", "document", "html", "parser", "fragment", "code", "_a", "name", "element", "location", "parent", "siblings", "id", "p", "c", "regex", "parse", "html", "parser", "document", "one", "root", "element", "text", "comment", "doctype", "parent", "stitch", "siblings", "all", "clone", "point", "location", "head", "import_react", "parent", "title", "text", "item", "text", "handle", "React", "className", "style", "element", "parent", "_jsx", "reservedMeta", "retrieveMeta", "regex", "own", "regex", "name", "code", "emptyOptions", "test", "element", "index", "parent", "emptyOptions", "properties", "group", "is", "parent", "link", "parent", "lib_default", "parent", "code", "lib_default", "import_jsx_runtime", "esm_default", "React", "lib_default", "_jsx", "import_react", "import_react", "React", "v", "import_react", "emptyOptions", "parse", "document", "code", "name", "value", "_", "parser", "document", "core", "basic", "all", "code", "next", "code", "next", "own", "code", "next", "attribute", "name", "code", "next", "core", "comment", "encode", "doctype", "parent", "siblings", "next", "own", "parent", "html", "p", "_", "parent", "next", "body", "html", "tbody", "head", "child", "parent", "element", "parent", "attributes", "properties", "key", "quote", "name", "stringify", "text", "_", "parent", "raw", "parent", "text", "root", "unknown", "comment", "doctype", "element", "raw", "root", "text", "emptyOptions", "emptyChildren", "quote", "one", "all", "parent", "import_jsx_runtime", "c", "Markdown", "markdown", "React", "_jsx", "import_react", "comment", "getCommands", "text", "import_react", "text", "position", "c", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "comment", "_jsx", "_jsxs", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsxs", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_react", "import_jsx_runtime", "_jsx", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "import_react", "import_jsx_runtime", "_jsx", "getCommands", "comment", "text", "direction", "text", "import_jsx_runtime", "_excluded", "_excluded2", "markdown", "fullscreen", "React", "_jsx", "import_jsx_runtime", "_excluded", "className", "markdown", "React", "_jsx", "_jsxs", "Markdown", "import_react", "import_react", "import_jsx_runtime", "_jsx", "import_jsx_runtime", "fullscreen", "name", "_jsx", "disabled", "render", "_jsxs", "React", "className", "import_react", "import_jsx_runtime", "svg", "_jsx", "import_jsx_runtime", "_excluded", "React", "className", "getCommands", "direction", "fullscreen", "_jsx", "esm_default", "_jsxs", "esm_default"]
}
